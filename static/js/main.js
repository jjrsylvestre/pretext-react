/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 1506:
/***/ (function(module) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 4575:
/***/ (function(module) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 3913:
/***/ (function(module) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 9842:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(9754);

var isNativeReflectConstruct = __webpack_require__(7067);

var possibleConstructorReturn = __webpack_require__(8585);

function _createSuper(Derived) {
  var hasNativeReflectConstruct = isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return possibleConstructorReturn(this, result);
  };
}

module.exports = _createSuper, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 9713:
/***/ (function(module) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 6525:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var superPropBase = __webpack_require__(8331);

function _get() {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    module.exports = _get = Reflect.get, module.exports.__esModule = true, module.exports["default"] = module.exports;
  } else {
    module.exports = _get = function _get(target, property, receiver) {
      var base = superPropBase(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(arguments.length < 3 ? target : receiver);
      }

      return desc.value;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }

  return _get.apply(this, arguments);
}

module.exports = _get, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 9754:
/***/ (function(module) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 2205:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(9489);

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 7067:
/***/ (function(module) {

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

module.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 8585:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var _typeof = (__webpack_require__(8)["default"]);

var assertThisInitialized = __webpack_require__(1506);

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 9489:
/***/ (function(module) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 8331:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(9754);

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

module.exports = _superPropBase, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 8:
/***/ (function(module) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(obj);
}

module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 7757:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

module.exports = __webpack_require__(9727);


/***/ }),

/***/ 5800:
/***/ (function(module) {

module.exports = {
  trueFunc: function trueFunc() {
    return true;
  },
  falseFunc: function falseFunc() {
    return false;
  }
};

/***/ }),

/***/ 1694:
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/

/* global define */
(function () {
  'use strict';

  var hasOwn = {}.hasOwnProperty;

  function classNames() {
    var classes = [];

    for (var i = 0; i < arguments.length; i++) {
      var arg = arguments[i];
      if (!arg) continue;
      var argType = typeof arg;

      if (argType === 'string' || argType === 'number') {
        classes.push(arg);
      } else if (Array.isArray(arg)) {
        if (arg.length) {
          var inner = classNames.apply(null, arg);

          if (inner) {
            classes.push(inner);
          }
        }
      } else if (argType === 'object') {
        if (arg.toString === Object.prototype.toString) {
          for (var key in arg) {
            if (hasOwn.call(arg, key) && arg[key]) {
              classes.push(key);
            }
          }
        } else {
          classes.push(arg.toString());
        }
      }
    }

    return classes.join(' ');
  }

  if ( true && module.exports) {
    classNames.default = classNames;
    module.exports = classNames;
  } else if (true) {
    // register as 'classnames', consistent with npm package name
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return classNames;
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})();

/***/ }),

/***/ 6998:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var deselectCurrent = __webpack_require__(2458);

var clipboardToIE11Formatting = {
  "text/plain": "Text",
  "text/html": "Url",
  "default": "Text"
};
var defaultMessage = "Copy to clipboard: #{key}, Enter";

function format(message) {
  var copyKey = (/mac os x/i.test(navigator.userAgent) ? "⌘" : "Ctrl") + "+C";
  return message.replace(/#{\s*key\s*}/g, copyKey);
}

function copy(text, options) {
  var debug,
      message,
      reselectPrevious,
      range,
      selection,
      mark,
      success = false;

  if (!options) {
    options = {};
  }

  debug = options.debug || false;

  try {
    reselectPrevious = deselectCurrent();
    range = document.createRange();
    selection = document.getSelection();
    mark = document.createElement("span");
    mark.textContent = text; // reset user styles for span element

    mark.style.all = "unset"; // prevents scrolling to the end of the page

    mark.style.position = "fixed";
    mark.style.top = 0;
    mark.style.clip = "rect(0, 0, 0, 0)"; // used to preserve spaces and line breaks

    mark.style.whiteSpace = "pre"; // do not inherit user-select (it may be `none`)

    mark.style.webkitUserSelect = "text";
    mark.style.MozUserSelect = "text";
    mark.style.msUserSelect = "text";
    mark.style.userSelect = "text";
    mark.addEventListener("copy", function (e) {
      e.stopPropagation();

      if (options.format) {
        e.preventDefault();

        if (typeof e.clipboardData === "undefined") {
          // IE 11
          debug && console.warn("unable to use e.clipboardData");
          debug && console.warn("trying IE specific stuff");
          window.clipboardData.clearData();
          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting["default"];
          window.clipboardData.setData(format, text);
        } else {
          // all other browsers
          e.clipboardData.clearData();
          e.clipboardData.setData(options.format, text);
        }
      }

      if (options.onCopy) {
        e.preventDefault();
        options.onCopy(e.clipboardData);
      }
    });
    document.body.appendChild(mark);
    range.selectNodeContents(mark);
    selection.addRange(range);
    var successful = document.execCommand("copy");

    if (!successful) {
      throw new Error("copy command was unsuccessful");
    }

    success = true;
  } catch (err) {
    debug && console.error("unable to copy using execCommand: ", err);
    debug && console.warn("trying IE specific stuff");

    try {
      window.clipboardData.setData(options.format || "text", text);
      options.onCopy && options.onCopy(window.clipboardData);
      success = true;
    } catch (err) {
      debug && console.error("unable to copy using clipboardData: ", err);
      debug && console.error("falling back to prompt");
      message = format("message" in options ? options.message : defaultMessage);
      window.prompt(message, text);
    }
  } finally {
    if (selection) {
      if (typeof selection.removeRange == "function") {
        selection.removeRange(range);
      } else {
        selection.removeAllRanges();
      }
    }

    if (mark) {
      document.body.removeChild(mark);
    }

    reselectPrevious();
  }

  return success;
}

module.exports = copy;

/***/ }),

/***/ 8926:
/***/ (function(module, exports, __webpack_require__) {

;

(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory();
  } else {}
})(this, function () {
  /*globals window, global, require*/

  /**
   * CryptoJS core components.
   */
  var CryptoJS = CryptoJS || function (Math, undefined) {
    var crypto; // Native crypto from window (Browser)

    if (typeof window !== 'undefined' && window.crypto) {
      crypto = window.crypto;
    } // Native crypto in web worker (Browser)


    if (typeof self !== 'undefined' && self.crypto) {
      crypto = self.crypto;
    } // Native crypto from worker


    if (typeof globalThis !== 'undefined' && globalThis.crypto) {
      crypto = globalThis.crypto;
    } // Native (experimental IE 11) crypto from window (Browser)


    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {
      crypto = window.msCrypto;
    } // Native crypto from global (NodeJS)


    if (!crypto && typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g.crypto) {
      crypto = __webpack_require__.g.crypto;
    } // Native crypto import via require (NodeJS)


    if (!crypto && "function" === 'function') {
      try {
        crypto = __webpack_require__(2480);
      } catch (err) {}
    }
    /*
     * Cryptographically secure pseudorandom number generator
     *
     * As Math.random() is cryptographically not safe to use
     */


    var cryptoSecureRandomInt = function cryptoSecureRandomInt() {
      if (crypto) {
        // Use getRandomValues method (Browser)
        if (typeof crypto.getRandomValues === 'function') {
          try {
            return crypto.getRandomValues(new Uint32Array(1))[0];
          } catch (err) {}
        } // Use randomBytes method (NodeJS)


        if (typeof crypto.randomBytes === 'function') {
          try {
            return crypto.randomBytes(4).readInt32LE();
          } catch (err) {}
        }
      }

      throw new Error('Native crypto module could not be used to get secure random number.');
    };
    /*
     * Local polyfill of Object.create
      */


    var create = Object.create || function () {
      function F() {}

      return function (obj) {
        var subtype;
        F.prototype = obj;
        subtype = new F();
        F.prototype = null;
        return subtype;
      };
    }();
    /**
     * CryptoJS namespace.
     */


    var C = {};
    /**
     * Library namespace.
     */

    var C_lib = C.lib = {};
    /**
     * Base object for prototypal inheritance.
     */

    var Base = C_lib.Base = function () {
      return {
        /**
         * Creates a new object that inherits from this object.
         *
         * @param {Object} overrides Properties to copy into the new object.
         *
         * @return {Object} The new object.
         *
         * @static
         *
         * @example
         *
         *     var MyType = CryptoJS.lib.Base.extend({
         *         field: 'value',
         *
         *         method: function () {
         *         }
         *     });
         */
        extend: function extend(overrides) {
          // Spawn
          var subtype = create(this); // Augment

          if (overrides) {
            subtype.mixIn(overrides);
          } // Create default initializer


          if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {
            subtype.init = function () {
              subtype.$super.init.apply(this, arguments);
            };
          } // Initializer's prototype is the subtype object


          subtype.init.prototype = subtype; // Reference supertype

          subtype.$super = this;
          return subtype;
        },

        /**
         * Extends this object and runs the init method.
         * Arguments to create() will be passed to init().
         *
         * @return {Object} The new object.
         *
         * @static
         *
         * @example
         *
         *     var instance = MyType.create();
         */
        create: function create() {
          var instance = this.extend();
          instance.init.apply(instance, arguments);
          return instance;
        },

        /**
         * Initializes a newly created object.
         * Override this method to add some logic when your objects are created.
         *
         * @example
         *
         *     var MyType = CryptoJS.lib.Base.extend({
         *         init: function () {
         *             // ...
         *         }
         *     });
         */
        init: function init() {},

        /**
         * Copies properties into this object.
         *
         * @param {Object} properties The properties to mix in.
         *
         * @example
         *
         *     MyType.mixIn({
         *         field: 'value'
         *     });
         */
        mixIn: function mixIn(properties) {
          for (var propertyName in properties) {
            if (properties.hasOwnProperty(propertyName)) {
              this[propertyName] = properties[propertyName];
            }
          } // IE won't copy toString using the loop above


          if (properties.hasOwnProperty('toString')) {
            this.toString = properties.toString;
          }
        },

        /**
         * Creates a copy of this object.
         *
         * @return {Object} The clone.
         *
         * @example
         *
         *     var clone = instance.clone();
         */
        clone: function clone() {
          return this.init.prototype.extend(this);
        }
      };
    }();
    /**
     * An array of 32-bit words.
     *
     * @property {Array} words The array of 32-bit words.
     * @property {number} sigBytes The number of significant bytes in this word array.
     */


    var WordArray = C_lib.WordArray = Base.extend({
      /**
       * Initializes a newly created word array.
       *
       * @param {Array} words (Optional) An array of 32-bit words.
       * @param {number} sigBytes (Optional) The number of significant bytes in the words.
       *
       * @example
       *
       *     var wordArray = CryptoJS.lib.WordArray.create();
       *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
       *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
       */
      init: function init(words, sigBytes) {
        words = this.words = words || [];

        if (sigBytes != undefined) {
          this.sigBytes = sigBytes;
        } else {
          this.sigBytes = words.length * 4;
        }
      },

      /**
       * Converts this word array to a string.
       *
       * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
       *
       * @return {string} The stringified word array.
       *
       * @example
       *
       *     var string = wordArray + '';
       *     var string = wordArray.toString();
       *     var string = wordArray.toString(CryptoJS.enc.Utf8);
       */
      toString: function toString(encoder) {
        return (encoder || Hex).stringify(this);
      },

      /**
       * Concatenates a word array to this word array.
       *
       * @param {WordArray} wordArray The word array to append.
       *
       * @return {WordArray} This word array.
       *
       * @example
       *
       *     wordArray1.concat(wordArray2);
       */
      concat: function concat(wordArray) {
        // Shortcuts
        var thisWords = this.words;
        var thatWords = wordArray.words;
        var thisSigBytes = this.sigBytes;
        var thatSigBytes = wordArray.sigBytes; // Clamp excess bits

        this.clamp(); // Concat

        if (thisSigBytes % 4) {
          // Copy one byte at a time
          for (var i = 0; i < thatSigBytes; i++) {
            var thatByte = thatWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
            thisWords[thisSigBytes + i >>> 2] |= thatByte << 24 - (thisSigBytes + i) % 4 * 8;
          }
        } else {
          // Copy one word at a time
          for (var j = 0; j < thatSigBytes; j += 4) {
            thisWords[thisSigBytes + j >>> 2] = thatWords[j >>> 2];
          }
        }

        this.sigBytes += thatSigBytes; // Chainable

        return this;
      },

      /**
       * Removes insignificant bits.
       *
       * @example
       *
       *     wordArray.clamp();
       */
      clamp: function clamp() {
        // Shortcuts
        var words = this.words;
        var sigBytes = this.sigBytes; // Clamp

        words[sigBytes >>> 2] &= 0xffffffff << 32 - sigBytes % 4 * 8;
        words.length = Math.ceil(sigBytes / 4);
      },

      /**
       * Creates a copy of this word array.
       *
       * @return {WordArray} The clone.
       *
       * @example
       *
       *     var clone = wordArray.clone();
       */
      clone: function clone() {
        var clone = Base.clone.call(this);
        clone.words = this.words.slice(0);
        return clone;
      },

      /**
       * Creates a word array filled with random bytes.
       *
       * @param {number} nBytes The number of random bytes to generate.
       *
       * @return {WordArray} The random word array.
       *
       * @static
       *
       * @example
       *
       *     var wordArray = CryptoJS.lib.WordArray.random(16);
       */
      random: function random(nBytes) {
        var words = [];

        for (var i = 0; i < nBytes; i += 4) {
          words.push(cryptoSecureRandomInt());
        }

        return new WordArray.init(words, nBytes);
      }
    });
    /**
     * Encoder namespace.
     */

    var C_enc = C.enc = {};
    /**
     * Hex encoding strategy.
     */

    var Hex = C_enc.Hex = {
      /**
       * Converts a word array to a hex string.
       *
       * @param {WordArray} wordArray The word array.
       *
       * @return {string} The hex string.
       *
       * @static
       *
       * @example
       *
       *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
       */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes; // Convert

        var hexChars = [];

        for (var i = 0; i < sigBytes; i++) {
          var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
          hexChars.push((bite >>> 4).toString(16));
          hexChars.push((bite & 0x0f).toString(16));
        }

        return hexChars.join('');
      },

      /**
       * Converts a hex string to a word array.
       *
       * @param {string} hexStr The hex string.
       *
       * @return {WordArray} The word array.
       *
       * @static
       *
       * @example
       *
       *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
       */
      parse: function parse(hexStr) {
        // Shortcut
        var hexStrLength = hexStr.length; // Convert

        var words = [];

        for (var i = 0; i < hexStrLength; i += 2) {
          words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << 24 - i % 8 * 4;
        }

        return new WordArray.init(words, hexStrLength / 2);
      }
    };
    /**
     * Latin1 encoding strategy.
     */

    var Latin1 = C_enc.Latin1 = {
      /**
       * Converts a word array to a Latin1 string.
       *
       * @param {WordArray} wordArray The word array.
       *
       * @return {string} The Latin1 string.
       *
       * @static
       *
       * @example
       *
       *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
       */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes; // Convert

        var latin1Chars = [];

        for (var i = 0; i < sigBytes; i++) {
          var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
          latin1Chars.push(String.fromCharCode(bite));
        }

        return latin1Chars.join('');
      },

      /**
       * Converts a Latin1 string to a word array.
       *
       * @param {string} latin1Str The Latin1 string.
       *
       * @return {WordArray} The word array.
       *
       * @static
       *
       * @example
       *
       *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
       */
      parse: function parse(latin1Str) {
        // Shortcut
        var latin1StrLength = latin1Str.length; // Convert

        var words = [];

        for (var i = 0; i < latin1StrLength; i++) {
          words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << 24 - i % 4 * 8;
        }

        return new WordArray.init(words, latin1StrLength);
      }
    };
    /**
     * UTF-8 encoding strategy.
     */

    var Utf8 = C_enc.Utf8 = {
      /**
       * Converts a word array to a UTF-8 string.
       *
       * @param {WordArray} wordArray The word array.
       *
       * @return {string} The UTF-8 string.
       *
       * @static
       *
       * @example
       *
       *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
       */
      stringify: function stringify(wordArray) {
        try {
          return decodeURIComponent(escape(Latin1.stringify(wordArray)));
        } catch (e) {
          throw new Error('Malformed UTF-8 data');
        }
      },

      /**
       * Converts a UTF-8 string to a word array.
       *
       * @param {string} utf8Str The UTF-8 string.
       *
       * @return {WordArray} The word array.
       *
       * @static
       *
       * @example
       *
       *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
       */
      parse: function parse(utf8Str) {
        return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
      }
    };
    /**
     * Abstract buffered block algorithm template.
     *
     * The property blockSize must be implemented in a concrete subtype.
     *
     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0
     */

    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
      /**
       * Resets this block algorithm's data buffer to its initial state.
       *
       * @example
       *
       *     bufferedBlockAlgorithm.reset();
       */
      reset: function reset() {
        // Initial values
        this._data = new WordArray.init();
        this._nDataBytes = 0;
      },

      /**
       * Adds new data to this block algorithm's buffer.
       *
       * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
       *
       * @example
       *
       *     bufferedBlockAlgorithm._append('data');
       *     bufferedBlockAlgorithm._append(wordArray);
       */
      _append: function _append(data) {
        // Convert string to WordArray, else assume WordArray already
        if (typeof data == 'string') {
          data = Utf8.parse(data);
        } // Append


        this._data.concat(data);

        this._nDataBytes += data.sigBytes;
      },

      /**
       * Processes available data blocks.
       *
       * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
       *
       * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
       *
       * @return {WordArray} The processed data.
       *
       * @example
       *
       *     var processedData = bufferedBlockAlgorithm._process();
       *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
       */
      _process: function _process(doFlush) {
        var processedWords; // Shortcuts

        var data = this._data;
        var dataWords = data.words;
        var dataSigBytes = data.sigBytes;
        var blockSize = this.blockSize;
        var blockSizeBytes = blockSize * 4; // Count blocks ready

        var nBlocksReady = dataSigBytes / blockSizeBytes;

        if (doFlush) {
          // Round up to include partial blocks
          nBlocksReady = Math.ceil(nBlocksReady);
        } else {
          // Round down to include only full blocks,
          // less the number of blocks that must remain in the buffer
          nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
        } // Count words ready


        var nWordsReady = nBlocksReady * blockSize; // Count bytes ready

        var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes); // Process blocks

        if (nWordsReady) {
          for (var offset = 0; offset < nWordsReady; offset += blockSize) {
            // Perform concrete-algorithm logic
            this._doProcessBlock(dataWords, offset);
          } // Remove processed words


          processedWords = dataWords.splice(0, nWordsReady);
          data.sigBytes -= nBytesReady;
        } // Return processed words


        return new WordArray.init(processedWords, nBytesReady);
      },

      /**
       * Creates a copy of this object.
       *
       * @return {Object} The clone.
       *
       * @example
       *
       *     var clone = bufferedBlockAlgorithm.clone();
       */
      clone: function clone() {
        var clone = Base.clone.call(this);
        clone._data = this._data.clone();
        return clone;
      },
      _minBufferSize: 0
    });
    /**
     * Abstract hasher template.
     *
     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)
     */

    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({
      /**
       * Configuration options.
       */
      cfg: Base.extend(),

      /**
       * Initializes a newly created hasher.
       *
       * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
       *
       * @example
       *
       *     var hasher = CryptoJS.algo.SHA256.create();
       */
      init: function init(cfg) {
        // Apply config defaults
        this.cfg = this.cfg.extend(cfg); // Set initial values

        this.reset();
      },

      /**
       * Resets this hasher to its initial state.
       *
       * @example
       *
       *     hasher.reset();
       */
      reset: function reset() {
        // Reset data buffer
        BufferedBlockAlgorithm.reset.call(this); // Perform concrete-hasher logic

        this._doReset();
      },

      /**
       * Updates this hasher with a message.
       *
       * @param {WordArray|string} messageUpdate The message to append.
       *
       * @return {Hasher} This hasher.
       *
       * @example
       *
       *     hasher.update('message');
       *     hasher.update(wordArray);
       */
      update: function update(messageUpdate) {
        // Append
        this._append(messageUpdate); // Update the hash


        this._process(); // Chainable


        return this;
      },

      /**
       * Finalizes the hash computation.
       * Note that the finalize operation is effectively a destructive, read-once operation.
       *
       * @param {WordArray|string} messageUpdate (Optional) A final message update.
       *
       * @return {WordArray} The hash.
       *
       * @example
       *
       *     var hash = hasher.finalize();
       *     var hash = hasher.finalize('message');
       *     var hash = hasher.finalize(wordArray);
       */
      finalize: function finalize(messageUpdate) {
        // Final message update
        if (messageUpdate) {
          this._append(messageUpdate);
        } // Perform concrete-hasher logic


        var hash = this._doFinalize();

        return hash;
      },
      blockSize: 512 / 32,

      /**
       * Creates a shortcut function to a hasher's object interface.
       *
       * @param {Hasher} hasher The hasher to create a helper for.
       *
       * @return {Function} The shortcut function.
       *
       * @static
       *
       * @example
       *
       *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
       */
      _createHelper: function _createHelper(hasher) {
        return function (message, cfg) {
          return new hasher.init(cfg).finalize(message);
        };
      },

      /**
       * Creates a shortcut function to the HMAC's object interface.
       *
       * @param {Hasher} hasher The hasher to use in this HMAC helper.
       *
       * @return {Function} The shortcut function.
       *
       * @static
       *
       * @example
       *
       *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
       */
      _createHmacHelper: function _createHmacHelper(hasher) {
        return function (message, key) {
          return new C_algo.HMAC.init(hasher, key).finalize(message);
        };
      }
    });
    /**
     * Algorithm namespace.
     */

    var C_algo = C.algo = {};
    return C;
  }(Math);

  return CryptoJS;
});

/***/ }),

/***/ 3074:
/***/ (function(module, exports, __webpack_require__) {

;

(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(8926));
  } else {}
})(this, function (CryptoJS) {
  (function (Math) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_algo = C.algo; // Constants table

    var T = []; // Compute constants

    (function () {
      for (var i = 0; i < 64; i++) {
        T[i] = Math.abs(Math.sin(i + 1)) * 0x100000000 | 0;
      }
    })();
    /**
     * MD5 hash algorithm.
     */


    var MD5 = C_algo.MD5 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476]);
      },
      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Swap endian
        for (var i = 0; i < 16; i++) {
          // Shortcuts
          var offset_i = offset + i;
          var M_offset_i = M[offset_i];
          M[offset_i] = (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff | (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;
        } // Shortcuts


        var H = this._hash.words;
        var M_offset_0 = M[offset + 0];
        var M_offset_1 = M[offset + 1];
        var M_offset_2 = M[offset + 2];
        var M_offset_3 = M[offset + 3];
        var M_offset_4 = M[offset + 4];
        var M_offset_5 = M[offset + 5];
        var M_offset_6 = M[offset + 6];
        var M_offset_7 = M[offset + 7];
        var M_offset_8 = M[offset + 8];
        var M_offset_9 = M[offset + 9];
        var M_offset_10 = M[offset + 10];
        var M_offset_11 = M[offset + 11];
        var M_offset_12 = M[offset + 12];
        var M_offset_13 = M[offset + 13];
        var M_offset_14 = M[offset + 14];
        var M_offset_15 = M[offset + 15]; // Working varialbes

        var a = H[0];
        var b = H[1];
        var c = H[2];
        var d = H[3]; // Computation

        a = FF(a, b, c, d, M_offset_0, 7, T[0]);
        d = FF(d, a, b, c, M_offset_1, 12, T[1]);
        c = FF(c, d, a, b, M_offset_2, 17, T[2]);
        b = FF(b, c, d, a, M_offset_3, 22, T[3]);
        a = FF(a, b, c, d, M_offset_4, 7, T[4]);
        d = FF(d, a, b, c, M_offset_5, 12, T[5]);
        c = FF(c, d, a, b, M_offset_6, 17, T[6]);
        b = FF(b, c, d, a, M_offset_7, 22, T[7]);
        a = FF(a, b, c, d, M_offset_8, 7, T[8]);
        d = FF(d, a, b, c, M_offset_9, 12, T[9]);
        c = FF(c, d, a, b, M_offset_10, 17, T[10]);
        b = FF(b, c, d, a, M_offset_11, 22, T[11]);
        a = FF(a, b, c, d, M_offset_12, 7, T[12]);
        d = FF(d, a, b, c, M_offset_13, 12, T[13]);
        c = FF(c, d, a, b, M_offset_14, 17, T[14]);
        b = FF(b, c, d, a, M_offset_15, 22, T[15]);
        a = GG(a, b, c, d, M_offset_1, 5, T[16]);
        d = GG(d, a, b, c, M_offset_6, 9, T[17]);
        c = GG(c, d, a, b, M_offset_11, 14, T[18]);
        b = GG(b, c, d, a, M_offset_0, 20, T[19]);
        a = GG(a, b, c, d, M_offset_5, 5, T[20]);
        d = GG(d, a, b, c, M_offset_10, 9, T[21]);
        c = GG(c, d, a, b, M_offset_15, 14, T[22]);
        b = GG(b, c, d, a, M_offset_4, 20, T[23]);
        a = GG(a, b, c, d, M_offset_9, 5, T[24]);
        d = GG(d, a, b, c, M_offset_14, 9, T[25]);
        c = GG(c, d, a, b, M_offset_3, 14, T[26]);
        b = GG(b, c, d, a, M_offset_8, 20, T[27]);
        a = GG(a, b, c, d, M_offset_13, 5, T[28]);
        d = GG(d, a, b, c, M_offset_2, 9, T[29]);
        c = GG(c, d, a, b, M_offset_7, 14, T[30]);
        b = GG(b, c, d, a, M_offset_12, 20, T[31]);
        a = HH(a, b, c, d, M_offset_5, 4, T[32]);
        d = HH(d, a, b, c, M_offset_8, 11, T[33]);
        c = HH(c, d, a, b, M_offset_11, 16, T[34]);
        b = HH(b, c, d, a, M_offset_14, 23, T[35]);
        a = HH(a, b, c, d, M_offset_1, 4, T[36]);
        d = HH(d, a, b, c, M_offset_4, 11, T[37]);
        c = HH(c, d, a, b, M_offset_7, 16, T[38]);
        b = HH(b, c, d, a, M_offset_10, 23, T[39]);
        a = HH(a, b, c, d, M_offset_13, 4, T[40]);
        d = HH(d, a, b, c, M_offset_0, 11, T[41]);
        c = HH(c, d, a, b, M_offset_3, 16, T[42]);
        b = HH(b, c, d, a, M_offset_6, 23, T[43]);
        a = HH(a, b, c, d, M_offset_9, 4, T[44]);
        d = HH(d, a, b, c, M_offset_12, 11, T[45]);
        c = HH(c, d, a, b, M_offset_15, 16, T[46]);
        b = HH(b, c, d, a, M_offset_2, 23, T[47]);
        a = II(a, b, c, d, M_offset_0, 6, T[48]);
        d = II(d, a, b, c, M_offset_7, 10, T[49]);
        c = II(c, d, a, b, M_offset_14, 15, T[50]);
        b = II(b, c, d, a, M_offset_5, 21, T[51]);
        a = II(a, b, c, d, M_offset_12, 6, T[52]);
        d = II(d, a, b, c, M_offset_3, 10, T[53]);
        c = II(c, d, a, b, M_offset_10, 15, T[54]);
        b = II(b, c, d, a, M_offset_1, 21, T[55]);
        a = II(a, b, c, d, M_offset_8, 6, T[56]);
        d = II(d, a, b, c, M_offset_15, 10, T[57]);
        c = II(c, d, a, b, M_offset_6, 15, T[58]);
        b = II(b, c, d, a, M_offset_13, 21, T[59]);
        a = II(a, b, c, d, M_offset_4, 6, T[60]);
        d = II(d, a, b, c, M_offset_11, 10, T[61]);
        c = II(c, d, a, b, M_offset_2, 15, T[62]);
        b = II(b, c, d, a, M_offset_9, 21, T[63]); // Intermediate hash value

        H[0] = H[0] + a | 0;
        H[1] = H[1] + b | 0;
        H[2] = H[2] + c | 0;
        H[3] = H[3] + d | 0;
      },
      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;
        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8; // Add padding

        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
        var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);
        var nBitsTotalL = nBitsTotal;
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = (nBitsTotalH << 8 | nBitsTotalH >>> 24) & 0x00ff00ff | (nBitsTotalH << 24 | nBitsTotalH >>> 8) & 0xff00ff00;
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = (nBitsTotalL << 8 | nBitsTotalL >>> 24) & 0x00ff00ff | (nBitsTotalL << 24 | nBitsTotalL >>> 8) & 0xff00ff00;
        data.sigBytes = (dataWords.length + 1) * 4; // Hash final blocks

        this._process(); // Shortcuts


        var hash = this._hash;
        var H = hash.words; // Swap endian

        for (var i = 0; i < 4; i++) {
          // Shortcut
          var H_i = H[i];
          H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff | (H_i << 24 | H_i >>> 8) & 0xff00ff00;
        } // Return final computed hash


        return hash;
      },
      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();
        return clone;
      }
    });

    function FF(a, b, c, d, x, s, t) {
      var n = a + (b & c | ~b & d) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }

    function GG(a, b, c, d, x, s, t) {
      var n = a + (b & d | c & ~d) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }

    function HH(a, b, c, d, x, s, t) {
      var n = a + (b ^ c ^ d) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }

    function II(a, b, c, d, x, s, t) {
      var n = a + (c ^ (b | ~d)) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }
    /**
     * Shortcut function to the hasher's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     *
     * @return {WordArray} The hash.
     *
     * @static
     *
     * @example
     *
     *     var hash = CryptoJS.MD5('message');
     *     var hash = CryptoJS.MD5(wordArray);
     */


    C.MD5 = Hasher._createHelper(MD5);
    /**
     * Shortcut function to the HMAC's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     * @param {WordArray|string} key The secret key.
     *
     * @return {WordArray} The HMAC.
     *
     * @static
     *
     * @example
     *
     *     var hmac = CryptoJS.HmacMD5(message, key);
     */

    C.HmacMD5 = Hasher._createHmacHelper(MD5);
  })(Math);

  return CryptoJS.MD5;
});

/***/ }),

/***/ 2181:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});

var parser_context_1 = __webpack_require__(7640);

var render_1 = __webpack_require__(5872);

var CssSelectorParser =
/** @class */
function () {
  function CssSelectorParser() {
    this.pseudos = {};
    this.attrEqualityMods = {};
    this.ruleNestingOperators = {};
    this.substitutesEnabled = false;
  }

  CssSelectorParser.prototype.registerSelectorPseudos = function () {
    var pseudos = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      pseudos[_i] = arguments[_i];
    }

    for (var _a = 0, pseudos_1 = pseudos; _a < pseudos_1.length; _a++) {
      var pseudo = pseudos_1[_a];
      this.pseudos[pseudo] = 'selector';
    }

    return this;
  };

  CssSelectorParser.prototype.unregisterSelectorPseudos = function () {
    var pseudos = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      pseudos[_i] = arguments[_i];
    }

    for (var _a = 0, pseudos_2 = pseudos; _a < pseudos_2.length; _a++) {
      var pseudo = pseudos_2[_a];
      delete this.pseudos[pseudo];
    }

    return this;
  };

  CssSelectorParser.prototype.registerNumericPseudos = function () {
    var pseudos = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      pseudos[_i] = arguments[_i];
    }

    for (var _a = 0, pseudos_3 = pseudos; _a < pseudos_3.length; _a++) {
      var pseudo = pseudos_3[_a];
      this.pseudos[pseudo] = 'numeric';
    }

    return this;
  };

  CssSelectorParser.prototype.unregisterNumericPseudos = function () {
    var pseudos = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      pseudos[_i] = arguments[_i];
    }

    for (var _a = 0, pseudos_4 = pseudos; _a < pseudos_4.length; _a++) {
      var pseudo = pseudos_4[_a];
      delete this.pseudos[pseudo];
    }

    return this;
  };

  CssSelectorParser.prototype.registerNestingOperators = function () {
    var operators = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      operators[_i] = arguments[_i];
    }

    for (var _a = 0, operators_1 = operators; _a < operators_1.length; _a++) {
      var operator = operators_1[_a];
      this.ruleNestingOperators[operator] = true;
    }

    return this;
  };

  CssSelectorParser.prototype.unregisterNestingOperators = function () {
    var operators = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      operators[_i] = arguments[_i];
    }

    for (var _a = 0, operators_2 = operators; _a < operators_2.length; _a++) {
      var operator = operators_2[_a];
      delete this.ruleNestingOperators[operator];
    }

    return this;
  };

  CssSelectorParser.prototype.registerAttrEqualityMods = function () {
    var mods = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      mods[_i] = arguments[_i];
    }

    for (var _a = 0, mods_1 = mods; _a < mods_1.length; _a++) {
      var mod = mods_1[_a];
      this.attrEqualityMods[mod] = true;
    }

    return this;
  };

  CssSelectorParser.prototype.unregisterAttrEqualityMods = function () {
    var mods = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      mods[_i] = arguments[_i];
    }

    for (var _a = 0, mods_2 = mods; _a < mods_2.length; _a++) {
      var mod = mods_2[_a];
      delete this.attrEqualityMods[mod];
    }

    return this;
  };

  CssSelectorParser.prototype.enableSubstitutes = function () {
    this.substitutesEnabled = true;
    return this;
  };

  CssSelectorParser.prototype.disableSubstitutes = function () {
    this.substitutesEnabled = false;
    return this;
  };

  CssSelectorParser.prototype.parse = function (str) {
    return parser_context_1.parseCssSelector(str, 0, this.pseudos, this.attrEqualityMods, this.ruleNestingOperators, this.substitutesEnabled);
  };

  CssSelectorParser.prototype.render = function (path) {
    return render_1.renderEntity(path).trim();
  };

  return CssSelectorParser;
}();

exports.N = CssSelectorParser;

/***/ }),

/***/ 7640:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var utils_1 = __webpack_require__(7124);

function parseCssSelector(str, pos, pseudos, attrEqualityMods, ruleNestingOperators, substitutesEnabled) {
  var l = str.length;
  var chr = '';

  function getStr(quote, escapeTable) {
    var result = '';
    pos++;
    chr = str.charAt(pos);

    while (pos < l) {
      if (chr === quote) {
        pos++;
        return result;
      } else if (chr === '\\') {
        pos++;
        chr = str.charAt(pos);
        var esc = void 0;

        if (chr === quote) {
          result += quote;
        } else if ((esc = escapeTable[chr]) !== undefined) {
          result += esc;
        } else if (utils_1.isHex(chr)) {
          var hex = chr;
          pos++;
          chr = str.charAt(pos);

          while (utils_1.isHex(chr)) {
            hex += chr;
            pos++;
            chr = str.charAt(pos);
          }

          if (chr === ' ') {
            pos++;
            chr = str.charAt(pos);
          }

          result += String.fromCharCode(parseInt(hex, 16));
          continue;
        } else {
          result += chr;
        }
      } else {
        result += chr;
      }

      pos++;
      chr = str.charAt(pos);
    }

    return result;
  }

  function getIdent() {
    var result = '';
    chr = str.charAt(pos);

    while (pos < l) {
      if (utils_1.isIdent(chr)) {
        result += chr;
      } else if (chr === '\\') {
        pos++;

        if (pos >= l) {
          throw Error('Expected symbol but end of file reached.');
        }

        chr = str.charAt(pos);

        if (utils_1.identSpecialChars[chr]) {
          result += chr;
        } else if (utils_1.isHex(chr)) {
          var hex = chr;
          pos++;
          chr = str.charAt(pos);

          while (utils_1.isHex(chr)) {
            hex += chr;
            pos++;
            chr = str.charAt(pos);
          }

          if (chr === ' ') {
            pos++;
            chr = str.charAt(pos);
          }

          result += String.fromCharCode(parseInt(hex, 16));
          continue;
        } else {
          result += chr;
        }
      } else {
        return result;
      }

      pos++;
      chr = str.charAt(pos);
    }

    return result;
  }

  function skipWhitespace() {
    chr = str.charAt(pos);
    var result = false;

    while (chr === ' ' || chr === "\t" || chr === "\n" || chr === "\r" || chr === "\f") {
      result = true;
      pos++;
      chr = str.charAt(pos);
    }

    return result;
  }

  function parse() {
    var res = parseSelector();

    if (pos < l) {
      throw Error('Rule expected but "' + str.charAt(pos) + '" found.');
    }

    return res;
  }

  function parseSelector() {
    var selector = parseSingleSelector();

    if (!selector) {
      return null;
    }

    var res = selector;
    chr = str.charAt(pos);

    while (chr === ',') {
      pos++;
      skipWhitespace();

      if (res.type !== 'selectors') {
        res = {
          type: 'selectors',
          selectors: [selector]
        };
      }

      selector = parseSingleSelector();

      if (!selector) {
        throw Error('Rule expected after ",".');
      }

      res.selectors.push(selector);
    }

    return res;
  }

  function parseSingleSelector() {
    skipWhitespace();
    var selector = {
      type: 'ruleSet'
    };
    var rule = parseRule();

    if (!rule) {
      return null;
    }

    var currentRule = selector;

    while (rule) {
      rule.type = 'rule';
      currentRule.rule = rule;
      currentRule = rule;
      skipWhitespace();
      chr = str.charAt(pos);

      if (pos >= l || chr === ',' || chr === ')') {
        break;
      }

      if (ruleNestingOperators[chr]) {
        var op = chr;
        pos++;
        skipWhitespace();
        rule = parseRule();

        if (!rule) {
          throw Error('Rule expected after "' + op + '".');
        }

        rule.nestingOperator = op;
      } else {
        rule = parseRule();

        if (rule) {
          rule.nestingOperator = null;
        }
      }
    }

    return selector;
  } // @ts-ignore no-overlap


  function parseRule() {
    var rule = null;

    while (pos < l) {
      chr = str.charAt(pos);

      if (chr === '*') {
        pos++;
        (rule = rule || {}).tagName = '*';
      } else if (utils_1.isIdentStart(chr) || chr === '\\') {
        (rule = rule || {}).tagName = getIdent();
      } else if (chr === '.') {
        pos++;
        rule = rule || {};
        (rule.classNames = rule.classNames || []).push(getIdent());
      } else if (chr === '#') {
        pos++;
        (rule = rule || {}).id = getIdent();
      } else if (chr === '[') {
        pos++;
        skipWhitespace();
        var attr = {
          name: getIdent()
        };
        skipWhitespace(); // @ts-ignore

        if (chr === ']') {
          pos++;
        } else {
          var operator = '';

          if (attrEqualityMods[chr]) {
            operator = chr;
            pos++;
            chr = str.charAt(pos);
          }

          if (pos >= l) {
            throw Error('Expected "=" but end of file reached.');
          }

          if (chr !== '=') {
            throw Error('Expected "=" but "' + chr + '" found.');
          }

          attr.operator = operator + '=';
          pos++;
          skipWhitespace();
          var attrValue = '';
          attr.valueType = 'string'; // @ts-ignore

          if (chr === '"') {
            attrValue = getStr('"', utils_1.doubleQuotesEscapeChars); // @ts-ignore
          } else if (chr === '\'') {
            attrValue = getStr('\'', utils_1.singleQuoteEscapeChars); // @ts-ignore
          } else if (substitutesEnabled && chr === '$') {
            pos++;
            attrValue = getIdent();
            attr.valueType = 'substitute';
          } else {
            while (pos < l) {
              if (chr === ']') {
                break;
              }

              attrValue += chr;
              pos++;
              chr = str.charAt(pos);
            }

            attrValue = attrValue.trim();
          }

          skipWhitespace();

          if (pos >= l) {
            throw Error('Expected "]" but end of file reached.');
          }

          if (chr !== ']') {
            throw Error('Expected "]" but "' + chr + '" found.');
          }

          pos++;
          attr.value = attrValue;
        }

        rule = rule || {};
        (rule.attrs = rule.attrs || []).push(attr);
      } else if (chr === ':') {
        pos++;
        var pseudoName = getIdent();
        var pseudo = {
          name: pseudoName
        }; // @ts-ignore

        if (chr === '(') {
          pos++;
          var value = '';
          skipWhitespace();

          if (pseudos[pseudoName] === 'selector') {
            pseudo.valueType = 'selector';
            value = parseSelector();
          } else {
            pseudo.valueType = pseudos[pseudoName] || 'string'; // @ts-ignore

            if (chr === '"') {
              value = getStr('"', utils_1.doubleQuotesEscapeChars); // @ts-ignore
            } else if (chr === '\'') {
              value = getStr('\'', utils_1.singleQuoteEscapeChars); // @ts-ignore
            } else if (substitutesEnabled && chr === '$') {
              pos++;
              value = getIdent();
              pseudo.valueType = 'substitute';
            } else {
              while (pos < l) {
                if (chr === ')') {
                  break;
                }

                value += chr;
                pos++;
                chr = str.charAt(pos);
              }

              value = value.trim();
            }

            skipWhitespace();
          }

          if (pos >= l) {
            throw Error('Expected ")" but end of file reached.');
          }

          if (chr !== ')') {
            throw Error('Expected ")" but "' + chr + '" found.');
          }

          pos++;
          pseudo.value = value;
        }

        rule = rule || {};
        (rule.pseudos = rule.pseudos || []).push(pseudo);
      } else {
        break;
      }
    }

    return rule;
  }

  return parse();
}

exports.parseCssSelector = parseCssSelector;

/***/ }),

/***/ 5872:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var utils_1 = __webpack_require__(7124);

function renderEntity(entity) {
  var res = '';

  switch (entity.type) {
    case 'ruleSet':
      var currentEntity = entity.rule;
      var parts = [];

      while (currentEntity) {
        if (currentEntity.nestingOperator) {
          parts.push(currentEntity.nestingOperator);
        }

        parts.push(renderEntity(currentEntity));
        currentEntity = currentEntity.rule;
      }

      res = parts.join(' ');
      break;

    case 'selectors':
      res = entity.selectors.map(renderEntity).join(', ');
      break;

    case 'rule':
      if (entity.tagName) {
        if (entity.tagName === '*') {
          res = '*';
        } else {
          res = utils_1.escapeIdentifier(entity.tagName);
        }
      }

      if (entity.id) {
        res += "#" + utils_1.escapeIdentifier(entity.id);
      }

      if (entity.classNames) {
        res += entity.classNames.map(function (cn) {
          return "." + utils_1.escapeIdentifier(cn);
        }).join('');
      }

      if (entity.attrs) {
        res += entity.attrs.map(function (attr) {
          if ('operator' in attr) {
            if (attr.valueType === 'substitute') {
              return "[" + utils_1.escapeIdentifier(attr.name) + attr.operator + "$" + attr.value + "]";
            } else {
              return "[" + utils_1.escapeIdentifier(attr.name) + attr.operator + utils_1.escapeStr(attr.value) + "]";
            }
          } else {
            return "[" + utils_1.escapeIdentifier(attr.name) + "]";
          }
        }).join('');
      }

      if (entity.pseudos) {
        res += entity.pseudos.map(function (pseudo) {
          if (pseudo.valueType) {
            if (pseudo.valueType === 'selector') {
              return ":" + utils_1.escapeIdentifier(pseudo.name) + "(" + renderEntity(pseudo.value) + ")";
            } else if (pseudo.valueType === 'substitute') {
              return ":" + utils_1.escapeIdentifier(pseudo.name) + "($" + pseudo.value + ")";
            } else if (pseudo.valueType === 'numeric') {
              return ":" + utils_1.escapeIdentifier(pseudo.name) + "(" + pseudo.value + ")";
            } else {
              return ":" + utils_1.escapeIdentifier(pseudo.name) + "(" + utils_1.escapeIdentifier(pseudo.value) + ")";
            }
          } else {
            return ":" + utils_1.escapeIdentifier(pseudo.name);
          }
        }).join('');
      }

      break;

    default:
      throw Error('Unknown entity type: "' + entity.type + '".');
  }

  return res;
}

exports.renderEntity = renderEntity;

/***/ }),

/***/ 7124:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

function isIdentStart(c) {
  return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c === '-' || c === '_';
}

exports.isIdentStart = isIdentStart;

function isIdent(c) {
  return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c >= '0' && c <= '9' || c === '-' || c === '_';
}

exports.isIdent = isIdent;

function isHex(c) {
  return c >= 'a' && c <= 'f' || c >= 'A' && c <= 'F' || c >= '0' && c <= '9';
}

exports.isHex = isHex;

function escapeIdentifier(s) {
  var len = s.length;
  var result = '';
  var i = 0;

  while (i < len) {
    var chr = s.charAt(i);

    if (exports.identSpecialChars[chr]) {
      result += '\\' + chr;
    } else {
      if (!(chr === '_' || chr === '-' || chr >= 'A' && chr <= 'Z' || chr >= 'a' && chr <= 'z' || i !== 0 && chr >= '0' && chr <= '9')) {
        var charCode = chr.charCodeAt(0);

        if ((charCode & 0xF800) === 0xD800) {
          var extraCharCode = s.charCodeAt(i++);

          if ((charCode & 0xFC00) !== 0xD800 || (extraCharCode & 0xFC00) !== 0xDC00) {
            throw Error('UCS-2(decode): illegal sequence');
          }

          charCode = ((charCode & 0x3FF) << 10) + (extraCharCode & 0x3FF) + 0x10000;
        }

        result += '\\' + charCode.toString(16) + ' ';
      } else {
        result += chr;
      }
    }

    i++;
  }

  return result;
}

exports.escapeIdentifier = escapeIdentifier;

function escapeStr(s) {
  var len = s.length;
  var result = '';
  var i = 0;
  var replacement;

  while (i < len) {
    var chr = s.charAt(i);

    if (chr === '"') {
      chr = '\\"';
    } else if (chr === '\\') {
      chr = '\\\\';
    } else if ((replacement = exports.strReplacementsRev[chr]) !== undefined) {
      chr = replacement;
    }

    result += chr;
    i++;
  }

  return "\"" + result + "\"";
}

exports.escapeStr = escapeStr;
exports.identSpecialChars = {
  '!': true,
  '"': true,
  '#': true,
  '$': true,
  '%': true,
  '&': true,
  '\'': true,
  '(': true,
  ')': true,
  '*': true,
  '+': true,
  ',': true,
  '.': true,
  '/': true,
  ';': true,
  '<': true,
  '=': true,
  '>': true,
  '?': true,
  '@': true,
  '[': true,
  '\\': true,
  ']': true,
  '^': true,
  '`': true,
  '{': true,
  '|': true,
  '}': true,
  '~': true
};
exports.strReplacementsRev = {
  '\n': '\\n',
  '\r': '\\r',
  '\t': '\\t',
  '\f': '\\f',
  '\v': '\\v'
};
exports.singleQuoteEscapeChars = {
  n: '\n',
  r: '\r',
  t: '\t',
  f: '\f',
  '\\': '\\',
  '\'': '\''
};
exports.doubleQuotesEscapeChars = {
  n: '\n',
  r: '\r',
  t: '\t',
  f: '\f',
  '\\': '\\',
  '"': '"'
};

/***/ }),

/***/ 7143:
/***/ (function(module) {

"use strict";


var has = Object.prototype.hasOwnProperty,
    prefix = '~';
/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */

function Events() {} //
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//


if (Object.create) {
  Events.prototype = Object.create(null); //
  // This hack is needed because the `__proto__` property is still inherited in
  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
  //

  if (!new Events().__proto__) prefix = false;
}
/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */


function EE(fn, context, once) {
  this.fn = fn;
  this.context = context;
  this.once = once || false;
}
/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */


function addListener(emitter, event, fn, context, once) {
  if (typeof fn !== 'function') {
    throw new TypeError('The listener must be a function');
  }

  var listener = new EE(fn, context || emitter, once),
      evt = prefix ? prefix + event : event;
  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);else emitter._events[evt] = [emitter._events[evt], listener];
  return emitter;
}
/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */


function clearEvent(emitter, evt) {
  if (--emitter._eventsCount === 0) emitter._events = new Events();else delete emitter._events[evt];
}
/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */


function EventEmitter() {
  this._events = new Events();
  this._eventsCount = 0;
}
/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */


EventEmitter.prototype.eventNames = function eventNames() {
  var names = [],
      events,
      name;
  if (this._eventsCount === 0) return names;

  for (name in events = this._events) {
    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
  }

  if (Object.getOwnPropertySymbols) {
    return names.concat(Object.getOwnPropertySymbols(events));
  }

  return names;
};
/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */


EventEmitter.prototype.listeners = function listeners(event) {
  var evt = prefix ? prefix + event : event,
      handlers = this._events[evt];
  if (!handlers) return [];
  if (handlers.fn) return [handlers.fn];

  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
    ee[i] = handlers[i].fn;
  }

  return ee;
};
/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */


EventEmitter.prototype.listenerCount = function listenerCount(event) {
  var evt = prefix ? prefix + event : event,
      listeners = this._events[evt];
  if (!listeners) return 0;
  if (listeners.fn) return 1;
  return listeners.length;
};
/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */


EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
  var evt = prefix ? prefix + event : event;
  if (!this._events[evt]) return false;
  var listeners = this._events[evt],
      len = arguments.length,
      args,
      i;

  if (listeners.fn) {
    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

    switch (len) {
      case 1:
        return listeners.fn.call(listeners.context), true;

      case 2:
        return listeners.fn.call(listeners.context, a1), true;

      case 3:
        return listeners.fn.call(listeners.context, a1, a2), true;

      case 4:
        return listeners.fn.call(listeners.context, a1, a2, a3), true;

      case 5:
        return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;

      case 6:
        return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
    }

    for (i = 1, args = new Array(len - 1); i < len; i++) {
      args[i - 1] = arguments[i];
    }

    listeners.fn.apply(listeners.context, args);
  } else {
    var length = listeners.length,
        j;

    for (i = 0; i < length; i++) {
      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

      switch (len) {
        case 1:
          listeners[i].fn.call(listeners[i].context);
          break;

        case 2:
          listeners[i].fn.call(listeners[i].context, a1);
          break;

        case 3:
          listeners[i].fn.call(listeners[i].context, a1, a2);
          break;

        case 4:
          listeners[i].fn.call(listeners[i].context, a1, a2, a3);
          break;

        default:
          if (!args) for (j = 1, args = new Array(len - 1); j < len; j++) {
            args[j - 1] = arguments[j];
          }
          listeners[i].fn.apply(listeners[i].context, args);
      }
    }
  }

  return true;
};
/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */


EventEmitter.prototype.on = function on(event, fn, context) {
  return addListener(this, event, fn, context, false);
};
/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */


EventEmitter.prototype.once = function once(event, fn, context) {
  return addListener(this, event, fn, context, true);
};
/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */


EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
  var evt = prefix ? prefix + event : event;
  if (!this._events[evt]) return this;

  if (!fn) {
    clearEvent(this, evt);
    return this;
  }

  var listeners = this._events[evt];

  if (listeners.fn) {
    if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {
      clearEvent(this, evt);
    }
  } else {
    for (var i = 0, events = [], length = listeners.length; i < length; i++) {
      if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {
        events.push(listeners[i]);
      }
    } //
    // Reset the array, or remove it completely if we have no more listeners.
    //


    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;else clearEvent(this, evt);
  }

  return this;
};
/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */


EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
  var evt;

  if (event) {
    evt = prefix ? prefix + event : event;
    if (this._events[evt]) clearEvent(this, evt);
  } else {
    this._events = new Events();
    this._eventsCount = 0;
  }

  return this;
}; //
// Alias methods names because people roll like that.
//


EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on; //
// Expose the prefix.
//

EventEmitter.prefixed = prefix; //
// Allow `EventEmitter` to be imported as module namespace.
//

EventEmitter.EventEmitter = EventEmitter; //
// Expose the module.
//

if (true) {
  module.exports = EventEmitter;
}

/***/ }),

/***/ 1132:
/***/ (function(module) {

"use strict";


var hasOwn = Object.prototype.hasOwnProperty;
var toStr = Object.prototype.toString;
var defineProperty = Object.defineProperty;
var gOPD = Object.getOwnPropertyDescriptor;

var isArray = function isArray(arr) {
  if (typeof Array.isArray === 'function') {
    return Array.isArray(arr);
  }

  return toStr.call(arr) === '[object Array]';
};

var isPlainObject = function isPlainObject(obj) {
  if (!obj || toStr.call(obj) !== '[object Object]') {
    return false;
  }

  var hasOwnConstructor = hasOwn.call(obj, 'constructor');
  var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf'); // Not own constructor property must be Object

  if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
    return false;
  } // Own properties are enumerated firstly, so to speed up,
  // if last one is own, then all properties are own.


  var key;

  for (key in obj) {
    /**/
  }

  return typeof key === 'undefined' || hasOwn.call(obj, key);
}; // If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target


var setProperty = function setProperty(target, options) {
  if (defineProperty && options.name === '__proto__') {
    defineProperty(target, options.name, {
      enumerable: true,
      configurable: true,
      value: options.newValue,
      writable: true
    });
  } else {
    target[options.name] = options.newValue;
  }
}; // Return undefined instead of __proto__ if '__proto__' is not an own property


var getProperty = function getProperty(obj, name) {
  if (name === '__proto__') {
    if (!hasOwn.call(obj, name)) {
      return void 0;
    } else if (gOPD) {
      // In early versions of node, obj['__proto__'] is buggy when obj has
      // __proto__ as an own property. Object.getOwnPropertyDescriptor() works.
      return gOPD(obj, name).value;
    }
  }

  return obj[name];
};

module.exports = function extend() {
  var options, name, src, copy, copyIsArray, clone;
  var target = arguments[0];
  var i = 1;
  var length = arguments.length;
  var deep = false; // Handle a deep copy situation

  if (typeof target === 'boolean') {
    deep = target;
    target = arguments[1] || {}; // skip the boolean and the target

    i = 2;
  }

  if (target == null || typeof target !== 'object' && typeof target !== 'function') {
    target = {};
  }

  for (; i < length; ++i) {
    options = arguments[i]; // Only deal with non-null/undefined values

    if (options != null) {
      // Extend the base object
      for (name in options) {
        src = getProperty(target, name);
        copy = getProperty(options, name); // Prevent never-ending loop

        if (target !== copy) {
          // Recurse if we're merging plain objects or arrays
          if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
            if (copyIsArray) {
              copyIsArray = false;
              clone = src && isArray(src) ? src : [];
            } else {
              clone = src && isPlainObject(src) ? src : {};
            } // Never move original objects, clone them


            setProperty(target, {
              name: name,
              newValue: extend(deep, clone, copy)
            }); // Don't bring in undefined values
          } else if (typeof copy !== 'undefined') {
            setProperty(target, {
              name: name,
              newValue: copy
            });
          }
        }
      }
    }
  } // Return the modified object


  return target;
};

/***/ }),

/***/ 1570:
/***/ (function() {

// focus - focusOptions - preventScroll polyfill
(function () {
  if (typeof window === "undefined" || typeof document === "undefined" || typeof HTMLElement === "undefined") {
    return;
  }

  var supportsPreventScrollOption = false;

  try {
    var focusElem = document.createElement("div");
    focusElem.addEventListener("focus", function (event) {
      event.preventDefault();
      event.stopPropagation();
    }, true);
    focusElem.focus(Object.defineProperty({}, "preventScroll", {
      get: function get() {
        supportsPreventScrollOption = true;
      }
    }));
  } catch (e) {}

  if (HTMLElement.prototype.nativeFocus === undefined && !supportsPreventScrollOption) {
    HTMLElement.prototype.nativeFocus = HTMLElement.prototype.focus;

    var patchedFocus = function patchedFocus(args) {
      var actualPosition = window.scrollY || window.pageYOffset;
      this.nativeFocus();

      if (args && args.preventScroll) {
        // Hijacking the event loop order, since the focus() will trigger
        // internally an scroll that goes to the event loop
        setTimeout(function () {
          window.scroll(window.scrollX || window.pageXOffset, actualPosition);
        }, 0);
      }
    };

    HTMLElement.prototype.focus = patchedFocus;
  }
})();

/***/ }),

/***/ 6249:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var regex = __webpack_require__(79);

module.exports = BananaSlug;
var own = Object.hasOwnProperty;

function BananaSlug() {
  var self = this;
  if (!(self instanceof BananaSlug)) return new BananaSlug();
  self.reset();
}
/**
 * Generate a unique slug.
 * @param  {string} value String of text to slugify
 * @param  {boolean} [false] Keep the current case, otherwise make all lowercase
 * @return {string}       A unique slug string
 */


BananaSlug.prototype.slug = function (value, maintainCase) {
  var self = this;
  var slug = slugger(value, maintainCase === true);
  var originalSlug = slug;

  while (own.call(self.occurrences, slug)) {
    self.occurrences[originalSlug]++;
    slug = originalSlug + '-' + self.occurrences[originalSlug];
  }

  self.occurrences[slug] = 0;
  return slug;
};
/**
 * Reset - Forget all previous slugs
 * @return void
 */


BananaSlug.prototype.reset = function () {
  this.occurrences = Object.create(null);
};

function slugger(string, maintainCase) {
  if (typeof string !== 'string') return '';
  if (!maintainCase) string = string.toLowerCase();
  return string.replace(regex, '').replace(/ /g, '-');
}

BananaSlug.slug = slugger;

/***/ }),

/***/ 79:
/***/ (function(module) {

// This module is generated by `script/`.

/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */
module.exports = /[\0-\x1F!-,\.\/:-@\[-\^`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482\u0530\u0557\u0558\u055A-\u055F\u0589-\u0590\u05BE\u05C0\u05C3\u05C6\u05C8-\u05CF\u05EB-\u05EE\u05F3-\u060F\u061B-\u061F\u066A-\u066D\u06D4\u06DD\u06DE\u06E9\u06FD\u06FE\u0700-\u070F\u074B\u074C\u07B2-\u07BF\u07F6-\u07F9\u07FB\u07FC\u07FE\u07FF\u082E-\u083F\u085C-\u085F\u086B-\u089F\u08B5\u08BE-\u08D2\u08E2\u0964\u0965\u0970\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA\u09BB\u09C5\u09C6\u09C9\u09CA\u09CF-\u09D6\u09D8-\u09DB\u09DE\u09E4\u09E5\u09F2-\u09FB\u09FD\u09FF\u0A00\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A\u0A3B\u0A3D\u0A43-\u0A46\u0A49\u0A4A\u0A4E-\u0A50\u0A52-\u0A58\u0A5D\u0A5F-\u0A65\u0A76-\u0A80\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA\u0ABB\u0AC6\u0ACA\u0ACE\u0ACF\u0AD1-\u0ADF\u0AE4\u0AE5\u0AF0-\u0AF8\u0B00\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A\u0B3B\u0B45\u0B46\u0B49\u0B4A\u0B4E-\u0B55\u0B58-\u0B5B\u0B5E\u0B64\u0B65\u0B70\u0B72-\u0B81\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BBD\u0BC3-\u0BC5\u0BC9\u0BCE\u0BCF\u0BD1-\u0BD6\u0BD8-\u0BE5\u0BF0-\u0BFF\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C45\u0C49\u0C4E-\u0C54\u0C57\u0C5B-\u0C5F\u0C64\u0C65\u0C70-\u0C7F\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA\u0CBB\u0CC5\u0CC9\u0CCE-\u0CD4\u0CD7-\u0CDD\u0CDF\u0CE4\u0CE5\u0CF0\u0CF3-\u0CFF\u0D04\u0D0D\u0D11\u0D45\u0D49\u0D4F-\u0D53\u0D58-\u0D5E\u0D64\u0D65\u0D70-\u0D79\u0D80\u0D81\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0DC9\u0DCB-\u0DCE\u0DD5\u0DD7\u0DE0-\u0DE5\u0DF0\u0DF1\u0DF4-\u0E00\u0E3B-\u0E3F\u0E4F\u0E5A-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EBE\u0EBF\u0EC5\u0EC7\u0ECE\u0ECF\u0EDA\u0EDB\u0EE0-\u0EFF\u0F01-\u0F17\u0F1A-\u0F1F\u0F2A-\u0F34\u0F36\u0F38\u0F3A-\u0F3D\u0F48\u0F6D-\u0F70\u0F85\u0F98\u0FBD-\u0FC5\u0FC7-\u0FFF\u104A-\u104F\u109E\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B\u135C\u1360-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16ED\u16F9-\u16FF\u170D\u1715-\u171F\u1735-\u173F\u1754-\u175F\u176D\u1771\u1774-\u177F\u17D4-\u17D6\u17D8-\u17DB\u17DE\u17DF\u17EA-\u180A\u180E\u180F\u181A-\u181F\u1879-\u187F\u18AB-\u18AF\u18F6-\u18FF\u191F\u192C-\u192F\u193C-\u1945\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19CF\u19DA-\u19FF\u1A1C-\u1A1F\u1A5F\u1A7D\u1A7E\u1A8A-\u1A8F\u1A9A-\u1AA6\u1AA8-\u1AAF\u1ABF-\u1AFF\u1B4C-\u1B4F\u1B5A-\u1B6A\u1B74-\u1B7F\u1BF4-\u1BFF\u1C38-\u1C3F\u1C4A-\u1C4C\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CCF\u1CD3\u1CFB-\u1CFF\u1DFA\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u203E\u2041-\u2053\u2055-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u20CF\u20F1-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u215F\u2189-\u24B5\u24EA-\u2BFF\u2C2F\u2C5F\u2CE5-\u2CEA\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7E\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF\u2E00-\u2E2E\u2E30-\u3004\u3008-\u3020\u3030\u3036\u3037\u303D-\u3040\u3097\u3098\u309B\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31BB-\u31EF\u3200-\u33FF\u4DB6-\u4DFF\u9FF0-\u9FFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA62C-\uA63F\uA673\uA67E\uA6F2-\uA716\uA720\uA721\uA789\uA78A\uA7C0\uA7C1\uA7C7-\uA7F6\uA828-\uA83F\uA874-\uA87F\uA8C6-\uA8CF\uA8DA-\uA8DF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA954-\uA95F\uA97D-\uA97F\uA9C1-\uA9CE\uA9DA-\uA9DF\uA9FF\uAA37-\uAA3F\uAA4E\uAA4F\uAA5A-\uAA5F\uAA77-\uAA79\uAAC3-\uAADA\uAADE\uAADF\uAAF0\uAAF1\uAAF7-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB68-\uAB6F\uABEB\uABEE\uABEF\uABFA-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uD7FF\uE000-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFDFF\uFE10-\uFE1F\uFE30-\uFE32\uFE35-\uFE4C\uFE50-\uFE6F\uFE75\uFEFD-\uFF0F\uFF1A-\uFF20\uFF3B-\uFF3E\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDD3F\uDD75-\uDDFC\uDDFE-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEDF\uDEE1-\uDEFF\uDF20-\uDF2C\uDF4B-\uDF4F\uDF7B-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0\uDFD6-\uDFFF]|\uD801[\uDC9E\uDC9F\uDCAA-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE04\uDE07-\uDE0B\uDE14\uDE18\uDE36\uDE37\uDE3B-\uDE3E\uDE40-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE7-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD28-\uDD2F\uDD3A-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF51-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC47-\uDC65\uDC70-\uDC7E\uDCBB-\uDCCF\uDCE9-\uDCEF\uDCFA-\uDCFF\uDD35\uDD40-\uDD43\uDD47-\uDD4F\uDD74\uDD75\uDD77-\uDD7F\uDDC5-\uDDC8\uDDCD-\uDDCF\uDDDB\uDDDD-\uDDFF\uDE12\uDE38-\uDE3D\uDE3F-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEEB-\uDEEF\uDEFA-\uDEFF\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A\uDF45\uDF46\uDF49\uDF4A\uDF4E\uDF4F\uDF51-\uDF56\uDF58-\uDF5C\uDF64\uDF65\uDF6D-\uDF6F\uDF75-\uDFFF]|\uD805[\uDC4B-\uDC4F\uDC5A-\uDC5D\uDC60-\uDC7F\uDCC6\uDCC8-\uDCCF\uDCDA-\uDD7F\uDDB6\uDDB7\uDDC1-\uDDD7\uDDDE-\uDDFF\uDE41-\uDE43\uDE45-\uDE4F\uDE5A-\uDE7F\uDEB9-\uDEBF\uDECA-\uDEFF\uDF1B\uDF1C\uDF2C-\uDF2F\uDF3A-\uDFFF]|\uD806[\uDC3B-\uDC9F\uDCEA-\uDCFE\uDD00-\uDD9F\uDDA8\uDDA9\uDDD8\uDDD9\uDDE2\uDDE5-\uDDFF\uDE3F-\uDE46\uDE48-\uDE4F\uDE9A-\uDE9C\uDE9E-\uDEBF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC37\uDC41-\uDC4F\uDC5A-\uDC71\uDC90\uDC91\uDCA8\uDCB7-\uDCFF\uDD07\uDD0A\uDD37-\uDD39\uDD3B\uDD3E\uDD48-\uDD4F\uDD5A-\uDD5F\uDD66\uDD69\uDD8F\uDD92\uDD99-\uDD9F\uDDAA-\uDEDF\uDEF7-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC6F-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80B\uD80E-\uD810\uD812-\uD819\uD823-\uD82B\uD82D\uD82E\uD830-\uD833\uD837\uD839\uD83D-\uD83F\uD87B-\uD87D\uD87F-\uDB3F\uDB41-\uDBFF][\uDC00-\uDFFF]|\uD80D[\uDC2F-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F\uDE6A-\uDECF\uDEEE\uDEEF\uDEF5-\uDEFF\uDF37-\uDF3F\uDF44-\uDF4F\uDF5A-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4E\uDF88-\uDF8E\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD822[\uDEF3-\uDFFF]|\uD82C[\uDD1F-\uDD4F\uDD53-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDC9C\uDC9F-\uDFFF]|\uD834[\uDC00-\uDD64\uDD6A-\uDD6C\uDD73-\uDD7A\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDE41\uDE45-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC\uDFCD]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85-\uDE9A\uDEA0\uDEB0-\uDFFF]|\uD838[\uDC07\uDC19\uDC1A\uDC22\uDC25\uDC2B-\uDCFF\uDD2D-\uDD2F\uDD3E\uDD3F\uDD4A-\uDD4D\uDD4F-\uDEBF\uDEFA-\uDFFF]|\uD83A[\uDCC5-\uDCCF\uDCD7-\uDCFF\uDD4C-\uDD4F\uDD5A-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD83C[\uDC00-\uDD2F\uDD4A-\uDD4F\uDD6A-\uDD6F\uDD8A-\uDFFF]|\uD869[\uDED7-\uDEFF]|\uD86D[\uDF35-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uDB40[\uDC00-\uDCFF\uDDF0-\uDFFF]/g;

/***/ }),

/***/ 2110:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var reactIs = __webpack_require__(8309);
/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */


var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;

function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;

/***/ }),

/***/ 746:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var b = "function" === typeof Symbol && Symbol.for,
    c = b ? Symbol.for("react.element") : 60103,
    d = b ? Symbol.for("react.portal") : 60106,
    e = b ? Symbol.for("react.fragment") : 60107,
    f = b ? Symbol.for("react.strict_mode") : 60108,
    g = b ? Symbol.for("react.profiler") : 60114,
    h = b ? Symbol.for("react.provider") : 60109,
    k = b ? Symbol.for("react.context") : 60110,
    l = b ? Symbol.for("react.async_mode") : 60111,
    m = b ? Symbol.for("react.concurrent_mode") : 60111,
    n = b ? Symbol.for("react.forward_ref") : 60112,
    p = b ? Symbol.for("react.suspense") : 60113,
    q = b ? Symbol.for("react.suspense_list") : 60120,
    r = b ? Symbol.for("react.memo") : 60115,
    t = b ? Symbol.for("react.lazy") : 60116,
    v = b ? Symbol.for("react.block") : 60121,
    w = b ? Symbol.for("react.fundamental") : 60117,
    x = b ? Symbol.for("react.responder") : 60118,
    y = b ? Symbol.for("react.scope") : 60119;

function z(a) {
  if ("object" === typeof a && null !== a) {
    var u = a.$$typeof;

    switch (u) {
      case c:
        switch (a = a.type, a) {
          case l:
          case m:
          case e:
          case g:
          case f:
          case p:
            return a;

          default:
            switch (a = a && a.$$typeof, a) {
              case k:
              case n:
              case t:
              case r:
              case h:
                return a;

              default:
                return u;
            }

        }

      case d:
        return u;
    }
  }
}

function A(a) {
  return z(a) === m;
}

exports.AsyncMode = l;
exports.ConcurrentMode = m;
exports.ContextConsumer = k;
exports.ContextProvider = h;
exports.Element = c;
exports.ForwardRef = n;
exports.Fragment = e;
exports.Lazy = t;
exports.Memo = r;
exports.Portal = d;
exports.Profiler = g;
exports.StrictMode = f;
exports.Suspense = p;

exports.isAsyncMode = function (a) {
  return A(a) || z(a) === l;
};

exports.isConcurrentMode = A;

exports.isContextConsumer = function (a) {
  return z(a) === k;
};

exports.isContextProvider = function (a) {
  return z(a) === h;
};

exports.isElement = function (a) {
  return "object" === typeof a && null !== a && a.$$typeof === c;
};

exports.isForwardRef = function (a) {
  return z(a) === n;
};

exports.isFragment = function (a) {
  return z(a) === e;
};

exports.isLazy = function (a) {
  return z(a) === t;
};

exports.isMemo = function (a) {
  return z(a) === r;
};

exports.isPortal = function (a) {
  return z(a) === d;
};

exports.isProfiler = function (a) {
  return z(a) === g;
};

exports.isStrictMode = function (a) {
  return z(a) === f;
};

exports.isSuspense = function (a) {
  return z(a) === p;
};

exports.isValidElementType = function (a) {
  return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
};

exports.typeOf = z;

/***/ }),

/***/ 8309:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(746);
} else {}

/***/ }),

/***/ 1065:
/***/ (function(module) {

// http://www.w3.org/TR/CSS21/grammar.html
// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027
var COMMENT_REGEX = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g;
var NEWLINE_REGEX = /\n/g;
var WHITESPACE_REGEX = /^\s*/; // declaration

var PROPERTY_REGEX = /^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/;
var COLON_REGEX = /^:\s*/;
var VALUE_REGEX = /^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/;
var SEMICOLON_REGEX = /^[;\s]*/; // https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill

var TRIM_REGEX = /^\s+|\s+$/g; // strings

var NEWLINE = '\n';
var FORWARD_SLASH = '/';
var ASTERISK = '*';
var EMPTY_STRING = ''; // types

var TYPE_COMMENT = 'comment';
var TYPE_DECLARATION = 'declaration';
/**
 * @param {String} style
 * @param {Object} [options]
 * @return {Object[]}
 * @throws {TypeError}
 * @throws {Error}
 */

module.exports = function (style, options) {
  if (typeof style !== 'string') {
    throw new TypeError('First argument must be a string');
  }

  if (!style) return [];
  options = options || {};
  /**
   * Positional.
   */

  var lineno = 1;
  var column = 1;
  /**
   * Update lineno and column based on `str`.
   *
   * @param {String} str
   */

  function updatePosition(str) {
    var lines = str.match(NEWLINE_REGEX);
    if (lines) lineno += lines.length;
    var i = str.lastIndexOf(NEWLINE);
    column = ~i ? str.length - i : column + str.length;
  }
  /**
   * Mark position and patch `node.position`.
   *
   * @return {Function}
   */


  function position() {
    var start = {
      line: lineno,
      column: column
    };
    return function (node) {
      node.position = new Position(start);
      whitespace();
      return node;
    };
  }
  /**
   * Store position information for a node.
   *
   * @constructor
   * @property {Object} start
   * @property {Object} end
   * @property {undefined|String} source
   */


  function Position(start) {
    this.start = start;
    this.end = {
      line: lineno,
      column: column
    };
    this.source = options.source;
  }
  /**
   * Non-enumerable source string.
   */


  Position.prototype.content = style;
  var errorsList = [];
  /**
   * Error `msg`.
   *
   * @param {String} msg
   * @throws {Error}
   */

  function error(msg) {
    var err = new Error(options.source + ':' + lineno + ':' + column + ': ' + msg);
    err.reason = msg;
    err.filename = options.source;
    err.line = lineno;
    err.column = column;
    err.source = style;

    if (options.silent) {
      errorsList.push(err);
    } else {
      throw err;
    }
  }
  /**
   * Match `re` and return captures.
   *
   * @param {RegExp} re
   * @return {undefined|Array}
   */


  function match(re) {
    var m = re.exec(style);
    if (!m) return;
    var str = m[0];
    updatePosition(str);
    style = style.slice(str.length);
    return m;
  }
  /**
   * Parse whitespace.
   */


  function whitespace() {
    match(WHITESPACE_REGEX);
  }
  /**
   * Parse comments.
   *
   * @param {Object[]} [rules]
   * @return {Object[]}
   */


  function comments(rules) {
    var c;
    rules = rules || [];

    while (c = comment()) {
      if (c !== false) {
        rules.push(c);
      }
    }

    return rules;
  }
  /**
   * Parse comment.
   *
   * @return {Object}
   * @throws {Error}
   */


  function comment() {
    var pos = position();
    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;
    var i = 2;

    while (EMPTY_STRING != style.charAt(i) && (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))) {
      ++i;
    }

    i += 2;

    if (EMPTY_STRING === style.charAt(i - 1)) {
      return error('End of comment missing');
    }

    var str = style.slice(2, i - 2);
    column += 2;
    updatePosition(str);
    style = style.slice(i);
    column += 2;
    return pos({
      type: TYPE_COMMENT,
      comment: str
    });
  }
  /**
   * Parse declaration.
   *
   * @return {Object}
   * @throws {Error}
   */


  function declaration() {
    var pos = position(); // prop

    var prop = match(PROPERTY_REGEX);
    if (!prop) return;
    comment(); // :

    if (!match(COLON_REGEX)) return error("property missing ':'"); // val

    var val = match(VALUE_REGEX);
    var ret = pos({
      type: TYPE_DECLARATION,
      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),
      value: val ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING)) : EMPTY_STRING
    }); // ;

    match(SEMICOLON_REGEX);
    return ret;
  }
  /**
   * Parse declarations.
   *
   * @return {Object[]}
   */


  function declarations() {
    var decls = [];
    comments(decls); // declarations

    var decl;

    while (decl = declaration()) {
      if (decl !== false) {
        decls.push(decl);
        comments(decls);
      }
    }

    return decls;
  }

  whitespace();
  return declarations();
};
/**
 * Trim `str`.
 *
 * @param {String} str
 * @return {String}
 */


function trim(str) {
  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;
}

/***/ }),

/***/ 5586:
/***/ (function(module) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
module.exports = function isBuffer(obj) {
  return obj != null && obj.constructor != null && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);
};

/***/ }),

/***/ 5942:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.HTMLAdaptor = void 0;

var DOMAdaptor_js_1 = __webpack_require__(8702);

var HTMLAdaptor = function (_super) {
  __extends(HTMLAdaptor, _super);

  function HTMLAdaptor(window) {
    var _this = _super.call(this, window.document) || this;

    _this.window = window;
    _this.parser = new window.DOMParser();
    return _this;
  }

  HTMLAdaptor.prototype.parse = function (text, format) {
    if (format === void 0) {
      format = 'text/html';
    }

    return this.parser.parseFromString(text, format);
  };

  HTMLAdaptor.prototype.create = function (kind, ns) {
    return ns ? this.document.createElementNS(ns, kind) : this.document.createElement(kind);
  };

  HTMLAdaptor.prototype.text = function (text) {
    return this.document.createTextNode(text);
  };

  HTMLAdaptor.prototype.head = function (doc) {
    return doc.head;
  };

  HTMLAdaptor.prototype.body = function (doc) {
    return doc.body;
  };

  HTMLAdaptor.prototype.root = function (doc) {
    return doc.documentElement;
  };

  HTMLAdaptor.prototype.doctype = function (doc) {
    return doc.doctype ? "<!DOCTYPE " + doc.doctype.name + ">" : '';
  };

  HTMLAdaptor.prototype.tags = function (node, name, ns) {
    if (ns === void 0) {
      ns = null;
    }

    var nodes = ns ? node.getElementsByTagNameNS(ns, name) : node.getElementsByTagName(name);
    return Array.from(nodes);
  };

  HTMLAdaptor.prototype.getElements = function (nodes, _document) {
    var e_1, _a;

    var containers = [];

    try {
      for (var nodes_1 = __values(nodes), nodes_1_1 = nodes_1.next(); !nodes_1_1.done; nodes_1_1 = nodes_1.next()) {
        var node = nodes_1_1.value;

        if (typeof node === 'string') {
          containers = containers.concat(Array.from(this.document.querySelectorAll(node)));
        } else if (Array.isArray(node)) {
          containers = containers.concat(Array.from(node));
        } else if (node instanceof this.window.NodeList || node instanceof this.window.HTMLCollection) {
          containers = containers.concat(Array.from(node));
        } else {
          containers.push(node);
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (nodes_1_1 && !nodes_1_1.done && (_a = nodes_1.return)) _a.call(nodes_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return containers;
  };

  HTMLAdaptor.prototype.contains = function (container, node) {
    return container.contains(node);
  };

  HTMLAdaptor.prototype.parent = function (node) {
    return node.parentNode;
  };

  HTMLAdaptor.prototype.append = function (node, child) {
    return node.appendChild(child);
  };

  HTMLAdaptor.prototype.insert = function (nchild, ochild) {
    return this.parent(ochild).insertBefore(nchild, ochild);
  };

  HTMLAdaptor.prototype.remove = function (child) {
    return this.parent(child).removeChild(child);
  };

  HTMLAdaptor.prototype.replace = function (nnode, onode) {
    return this.parent(onode).replaceChild(nnode, onode);
  };

  HTMLAdaptor.prototype.clone = function (node) {
    return node.cloneNode(true);
  };

  HTMLAdaptor.prototype.split = function (node, n) {
    return node.splitText(n);
  };

  HTMLAdaptor.prototype.next = function (node) {
    return node.nextSibling;
  };

  HTMLAdaptor.prototype.previous = function (node) {
    return node.previousSibling;
  };

  HTMLAdaptor.prototype.firstChild = function (node) {
    return node.firstChild;
  };

  HTMLAdaptor.prototype.lastChild = function (node) {
    return node.lastChild;
  };

  HTMLAdaptor.prototype.childNodes = function (node) {
    return Array.from(node.childNodes);
  };

  HTMLAdaptor.prototype.childNode = function (node, i) {
    return node.childNodes[i];
  };

  HTMLAdaptor.prototype.kind = function (node) {
    var n = node.nodeType;
    return n === 1 || n === 3 || n === 8 ? node.nodeName.toLowerCase() : '';
  };

  HTMLAdaptor.prototype.value = function (node) {
    return node.nodeValue || '';
  };

  HTMLAdaptor.prototype.textContent = function (node) {
    return node.textContent;
  };

  HTMLAdaptor.prototype.innerHTML = function (node) {
    return node.innerHTML;
  };

  HTMLAdaptor.prototype.outerHTML = function (node) {
    return node.outerHTML;
  };

  HTMLAdaptor.prototype.serializeXML = function (node) {
    var serializer = new this.window.XMLSerializer();
    return serializer.serializeToString(node);
  };

  HTMLAdaptor.prototype.setAttribute = function (node, name, value, ns) {
    if (ns === void 0) {
      ns = null;
    }

    if (!ns) {
      return node.setAttribute(name, value);
    }

    name = ns.replace(/.*\//, '') + ':' + name.replace(/^.*:/, '');
    return node.setAttributeNS(ns, name, value);
  };

  HTMLAdaptor.prototype.getAttribute = function (node, name) {
    return node.getAttribute(name);
  };

  HTMLAdaptor.prototype.removeAttribute = function (node, name) {
    return node.removeAttribute(name);
  };

  HTMLAdaptor.prototype.hasAttribute = function (node, name) {
    return node.hasAttribute(name);
  };

  HTMLAdaptor.prototype.allAttributes = function (node) {
    return Array.from(node.attributes).map(function (x) {
      return {
        name: x.name,
        value: x.value
      };
    });
  };

  HTMLAdaptor.prototype.addClass = function (node, name) {
    if (node.classList) {
      node.classList.add(name);
    } else {
      node.className = (node.className + ' ' + name).trim();
    }
  };

  HTMLAdaptor.prototype.removeClass = function (node, name) {
    if (node.classList) {
      node.classList.remove(name);
    } else {
      node.className = node.className.split(/ /).filter(function (c) {
        return c !== name;
      }).join(' ');
    }
  };

  HTMLAdaptor.prototype.hasClass = function (node, name) {
    if (node.classList) {
      return node.classList.contains(name);
    }

    return node.className.split(/ /).indexOf(name) >= 0;
  };

  HTMLAdaptor.prototype.setStyle = function (node, name, value) {
    node.style[name] = value;
  };

  HTMLAdaptor.prototype.getStyle = function (node, name) {
    return node.style[name];
  };

  HTMLAdaptor.prototype.allStyles = function (node) {
    return node.style.cssText;
  };

  HTMLAdaptor.prototype.insertRules = function (node, rules) {
    var e_2, _a;

    try {
      for (var _b = __values(rules.reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {
        var rule = _c.value;

        try {
          node.sheet.insertRule(rule, 0);
        } catch (e) {
          console.warn("MathJax: can't insert css rule '" + rule + "': " + e.message);
        }
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }
  };

  HTMLAdaptor.prototype.fontSize = function (node) {
    var style = this.window.getComputedStyle(node);
    return parseFloat(style.fontSize);
  };

  HTMLAdaptor.prototype.fontFamily = function (node) {
    var style = this.window.getComputedStyle(node);
    return style.fontFamily || '';
  };

  HTMLAdaptor.prototype.nodeSize = function (node, em, local) {
    if (em === void 0) {
      em = 1;
    }

    if (local === void 0) {
      local = false;
    }

    if (local && node.getBBox) {
      var _a = node.getBBox(),
          width = _a.width,
          height = _a.height;

      return [width / em, height / em];
    }

    return [node.offsetWidth / em, node.offsetHeight / em];
  };

  HTMLAdaptor.prototype.nodeBBox = function (node) {
    var _a = node.getBoundingClientRect(),
        left = _a.left,
        right = _a.right,
        top = _a.top,
        bottom = _a.bottom;

    return {
      left: left,
      right: right,
      top: top,
      bottom: bottom
    };
  };

  return HTMLAdaptor;
}(DOMAdaptor_js_1.AbstractDOMAdaptor);

exports.HTMLAdaptor = HTMLAdaptor;

/***/ }),

/***/ 6788:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
exports.x = void 0;

var HTMLAdaptor_js_1 = __webpack_require__(5942);

function browserAdaptor() {
  return new HTMLAdaptor_js_1.HTMLAdaptor(window);
}

exports.x = browserAdaptor;

/***/ }),

/***/ 8702:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AbstractDOMAdaptor = void 0;

var AbstractDOMAdaptor = function () {
  function AbstractDOMAdaptor(document) {
    if (document === void 0) {
      document = null;
    }

    this.document = document;
  }

  AbstractDOMAdaptor.prototype.node = function (kind, def, children, ns) {
    var e_1, _a;

    if (def === void 0) {
      def = {};
    }

    if (children === void 0) {
      children = [];
    }

    var node = this.create(kind, ns);
    this.setAttributes(node, def);

    try {
      for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
        var child = children_1_1.value;
        this.append(node, child);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return node;
  };

  AbstractDOMAdaptor.prototype.setAttributes = function (node, def) {
    var e_2, _a, e_3, _b, e_4, _c;

    if (def.style && typeof def.style !== 'string') {
      try {
        for (var _d = __values(Object.keys(def.style)), _e = _d.next(); !_e.done; _e = _d.next()) {
          var key = _e.value;
          this.setStyle(node, key.replace(/-([a-z])/g, function (_m, c) {
            return c.toUpperCase();
          }), def.style[key]);
        }
      } catch (e_2_1) {
        e_2 = {
          error: e_2_1
        };
      } finally {
        try {
          if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
        } finally {
          if (e_2) throw e_2.error;
        }
      }
    }

    if (def.properties) {
      try {
        for (var _f = __values(Object.keys(def.properties)), _g = _f.next(); !_g.done; _g = _f.next()) {
          var key = _g.value;
          node[key] = def.properties[key];
        }
      } catch (e_3_1) {
        e_3 = {
          error: e_3_1
        };
      } finally {
        try {
          if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
        } finally {
          if (e_3) throw e_3.error;
        }
      }
    }

    try {
      for (var _h = __values(Object.keys(def)), _j = _h.next(); !_j.done; _j = _h.next()) {
        var key = _j.value;

        if ((key !== 'style' || typeof def.style === 'string') && key !== 'properties') {
          this.setAttribute(node, key, def[key]);
        }
      }
    } catch (e_4_1) {
      e_4 = {
        error: e_4_1
      };
    } finally {
      try {
        if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
      } finally {
        if (e_4) throw e_4.error;
      }
    }
  };

  AbstractDOMAdaptor.prototype.replace = function (nnode, onode) {
    this.insert(nnode, onode);
    this.remove(onode);
    return onode;
  };

  AbstractDOMAdaptor.prototype.childNode = function (node, i) {
    return this.childNodes(node)[i];
  };

  AbstractDOMAdaptor.prototype.allClasses = function (node) {
    var classes = this.getAttribute(node, 'class');
    return !classes ? [] : classes.replace(/  +/g, ' ').replace(/^ /, '').replace(/ $/, '').split(/ /);
  };

  return AbstractDOMAdaptor;
}();

exports.AbstractDOMAdaptor = AbstractDOMAdaptor;

/***/ }),

/***/ 6418:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AbstractFindMath = void 0;

var Options_js_1 = __webpack_require__(5698);

var AbstractFindMath = function () {
  function AbstractFindMath(options) {
    var CLASS = this.constructor;
    this.options = Options_js_1.userOptions(Options_js_1.defaultOptions({}, CLASS.OPTIONS), options);
  }

  AbstractFindMath.OPTIONS = {};
  return AbstractFindMath;
}();

exports.AbstractFindMath = AbstractFindMath;

/***/ }),

/***/ 2139:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AbstractHandler = void 0;

var MathDocument_js_1 = __webpack_require__(3213);

var DefaultMathDocument = function (_super) {
  __extends(DefaultMathDocument, _super);

  function DefaultMathDocument() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  return DefaultMathDocument;
}(MathDocument_js_1.AbstractMathDocument);

var AbstractHandler = function () {
  function AbstractHandler(adaptor, priority) {
    if (priority === void 0) {
      priority = 5;
    }

    this.documentClass = DefaultMathDocument;
    this.adaptor = adaptor;
    this.priority = priority;
  }

  Object.defineProperty(AbstractHandler.prototype, "name", {
    get: function get() {
      return this.constructor.NAME;
    },
    enumerable: false,
    configurable: true
  });

  AbstractHandler.prototype.handlesDocument = function (_document) {
    return false;
  };

  AbstractHandler.prototype.create = function (document, options) {
    return new this.documentClass(document, this.adaptor, options);
  };

  AbstractHandler.NAME = 'generic';
  return AbstractHandler;
}();

exports.AbstractHandler = AbstractHandler;

/***/ }),

/***/ 3820:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.HandlerList = void 0;

var PrioritizedList_js_1 = __webpack_require__(5882);

var HandlerList = function (_super) {
  __extends(HandlerList, _super);

  function HandlerList() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  HandlerList.prototype.register = function (handler) {
    return this.add(handler, handler.priority);
  };

  HandlerList.prototype.unregister = function (handler) {
    this.remove(handler);
  };

  HandlerList.prototype.handlesDocument = function (document) {
    var e_1, _a;

    try {
      for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {
        var item = _c.value;
        var handler = item.item;

        if (handler.handlesDocument(document)) {
          return handler;
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    throw new Error("Can't find handler for document");
  };

  HandlerList.prototype.document = function (document, options) {
    if (options === void 0) {
      options = null;
    }

    return this.handlesDocument(document).create(document, options);
  };

  return HandlerList;
}(PrioritizedList_js_1.PrioritizedList);

exports.HandlerList = HandlerList;

/***/ }),

/***/ 5690:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AbstractInputJax = void 0;

var Options_js_1 = __webpack_require__(5698);

var FunctionList_js_1 = __webpack_require__(438);

var AbstractInputJax = function () {
  function AbstractInputJax(options) {
    if (options === void 0) {
      options = {};
    }

    this.adaptor = null;
    this.mmlFactory = null;
    var CLASS = this.constructor;
    this.options = Options_js_1.userOptions(Options_js_1.defaultOptions({}, CLASS.OPTIONS), options);
    this.preFilters = new FunctionList_js_1.FunctionList();
    this.postFilters = new FunctionList_js_1.FunctionList();
  }

  Object.defineProperty(AbstractInputJax.prototype, "name", {
    get: function get() {
      return this.constructor.NAME;
    },
    enumerable: false,
    configurable: true
  });

  AbstractInputJax.prototype.setAdaptor = function (adaptor) {
    this.adaptor = adaptor;
  };

  AbstractInputJax.prototype.setMmlFactory = function (mmlFactory) {
    this.mmlFactory = mmlFactory;
  };

  AbstractInputJax.prototype.initialize = function () {};

  AbstractInputJax.prototype.reset = function () {
    var _args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      _args[_i] = arguments[_i];
    }
  };

  Object.defineProperty(AbstractInputJax.prototype, "processStrings", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  AbstractInputJax.prototype.findMath = function (_node, _options) {
    return [];
  };

  AbstractInputJax.prototype.executeFilters = function (filters, math, document, data) {
    var args = {
      math: math,
      document: document,
      data: data
    };
    filters.execute(args);
    return args.data;
  };

  AbstractInputJax.NAME = 'generic';
  AbstractInputJax.OPTIONS = {};
  return AbstractInputJax;
}();

exports.AbstractInputJax = AbstractInputJax;

/***/ }),

/***/ 3213:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AbstractMathDocument = exports.resetAllOptions = exports.resetOptions = exports.RenderList = void 0;

var Options_js_1 = __webpack_require__(5698);

var InputJax_js_1 = __webpack_require__(5690);

var OutputJax_js_1 = __webpack_require__(1556);

var MathList_js_1 = __webpack_require__(8229);

var MathItem_js_1 = __webpack_require__(6712);

var MmlFactory_js_1 = __webpack_require__(7021);

var BitField_js_1 = __webpack_require__(4954);

var PrioritizedList_js_1 = __webpack_require__(5882);

var RenderList = function (_super) {
  __extends(RenderList, _super);

  function RenderList() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  RenderList.create = function (actions) {
    var e_1, _a;

    var list = new this();

    try {
      for (var _b = __values(Object.keys(actions)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var id = _c.value;

        var _d = __read(this.action(id, actions[id]), 2),
            action = _d[0],
            priority = _d[1];

        if (priority) {
          list.add(action, priority);
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return list;
  };

  RenderList.action = function (id, action) {
    var _a, _b, _c, _d;

    var renderDoc, renderMath;
    var convert = true;
    var priority = action[0];

    if (action.length === 1 || typeof action[1] === 'boolean') {
      action.length === 2 && (convert = action[1]);
      _a = __read(this.methodActions(id), 2), renderDoc = _a[0], renderMath = _a[1];
    } else if (typeof action[1] === 'string') {
      if (typeof action[2] === 'string') {
        action.length === 4 && (convert = action[3]);

        var _e = __read(action.slice(1), 2),
            method1 = _e[0],
            method2 = _e[1];

        _b = __read(this.methodActions(method1, method2), 2), renderDoc = _b[0], renderMath = _b[1];
      } else {
        action.length === 3 && (convert = action[2]);
        _c = __read(this.methodActions(action[1]), 2), renderDoc = _c[0], renderMath = _c[1];
      }
    } else {
      action.length === 4 && (convert = action[3]);
      _d = __read(action.slice(1), 2), renderDoc = _d[0], renderMath = _d[1];
    }

    return [{
      id: id,
      renderDoc: renderDoc,
      renderMath: renderMath,
      convert: convert
    }, priority];
  };

  RenderList.methodActions = function (method1, method2) {
    if (method2 === void 0) {
      method2 = method1;
    }

    return [function (document) {
      method1 && document[method1]();
      return false;
    }, function (math, document) {
      method2 && math[method2](document);
      return false;
    }];
  };

  RenderList.prototype.renderDoc = function (document, start) {
    var e_2, _a;

    if (start === void 0) {
      start = MathItem_js_1.STATE.UNPROCESSED;
    }

    try {
      for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
        var item = _c.value;

        if (item.priority >= start) {
          if (item.item.renderDoc(document)) return;
        }
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }
  };

  RenderList.prototype.renderMath = function (math, document, start) {
    var e_3, _a;

    if (start === void 0) {
      start = MathItem_js_1.STATE.UNPROCESSED;
    }

    try {
      for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
        var item = _c.value;

        if (item.priority >= start) {
          if (item.item.renderMath(math, document)) return;
        }
      }
    } catch (e_3_1) {
      e_3 = {
        error: e_3_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_3) throw e_3.error;
      }
    }
  };

  RenderList.prototype.renderConvert = function (math, document, end) {
    var e_4, _a;

    if (end === void 0) {
      end = MathItem_js_1.STATE.LAST;
    }

    try {
      for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
        var item = _c.value;
        if (item.priority > end) return;

        if (item.item.convert) {
          if (item.item.renderMath(math, document)) return;
        }
      }
    } catch (e_4_1) {
      e_4 = {
        error: e_4_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_4) throw e_4.error;
      }
    }
  };

  RenderList.prototype.findID = function (id) {
    var e_5, _a;

    try {
      for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
        var item = _c.value;

        if (item.item.id === id) {
          return item.item;
        }
      }
    } catch (e_5_1) {
      e_5 = {
        error: e_5_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_5) throw e_5.error;
      }
    }

    return null;
  };

  return RenderList;
}(PrioritizedList_js_1.PrioritizedList);

exports.RenderList = RenderList;
exports.resetOptions = {
  all: false,
  processed: false,
  inputJax: null,
  outputJax: null
};
exports.resetAllOptions = {
  all: true,
  processed: true,
  inputJax: [],
  outputJax: []
};

var DefaultInputJax = function (_super) {
  __extends(DefaultInputJax, _super);

  function DefaultInputJax() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  DefaultInputJax.prototype.compile = function (_math) {
    return null;
  };

  return DefaultInputJax;
}(InputJax_js_1.AbstractInputJax);

var DefaultOutputJax = function (_super) {
  __extends(DefaultOutputJax, _super);

  function DefaultOutputJax() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  DefaultOutputJax.prototype.typeset = function (_math, _document) {
    if (_document === void 0) {
      _document = null;
    }

    return null;
  };

  DefaultOutputJax.prototype.escaped = function (_math, _document) {
    return null;
  };

  return DefaultOutputJax;
}(OutputJax_js_1.AbstractOutputJax);

var DefaultMathList = function (_super) {
  __extends(DefaultMathList, _super);

  function DefaultMathList() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  return DefaultMathList;
}(MathList_js_1.AbstractMathList);

var DefaultMathItem = function (_super) {
  __extends(DefaultMathItem, _super);

  function DefaultMathItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  return DefaultMathItem;
}(MathItem_js_1.AbstractMathItem);

var AbstractMathDocument = function () {
  function AbstractMathDocument(document, adaptor, options) {
    var _this = this;

    var CLASS = this.constructor;
    this.document = document;
    this.options = Options_js_1.userOptions(Options_js_1.defaultOptions({}, CLASS.OPTIONS), options);
    this.math = new (this.options['MathList'] || DefaultMathList)();
    this.renderActions = RenderList.create(this.options['renderActions']);
    this.processed = new AbstractMathDocument.ProcessBits();
    this.outputJax = this.options['OutputJax'] || new DefaultOutputJax();
    var inputJax = this.options['InputJax'] || [new DefaultInputJax()];

    if (!Array.isArray(inputJax)) {
      inputJax = [inputJax];
    }

    this.inputJax = inputJax;
    this.adaptor = adaptor;
    this.outputJax.setAdaptor(adaptor);
    this.inputJax.map(function (jax) {
      return jax.setAdaptor(adaptor);
    });
    this.mmlFactory = this.options['MmlFactory'] || new MmlFactory_js_1.MmlFactory();
    this.inputJax.map(function (jax) {
      return jax.setMmlFactory(_this.mmlFactory);
    });
    this.outputJax.initialize();
    this.inputJax.map(function (jax) {
      return jax.initialize();
    });
  }

  Object.defineProperty(AbstractMathDocument.prototype, "kind", {
    get: function get() {
      return this.constructor.KIND;
    },
    enumerable: false,
    configurable: true
  });

  AbstractMathDocument.prototype.addRenderAction = function (id) {
    var action = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      action[_i - 1] = arguments[_i];
    }

    var _a = __read(RenderList.action(id, action), 2),
        fn = _a[0],
        p = _a[1];

    this.renderActions.add(fn, p);
  };

  AbstractMathDocument.prototype.removeRenderAction = function (id) {
    var action = this.renderActions.findID(id);

    if (action) {
      this.renderActions.remove(action);
    }
  };

  AbstractMathDocument.prototype.render = function () {
    this.renderActions.renderDoc(this);
    return this;
  };

  AbstractMathDocument.prototype.rerender = function (start) {
    if (start === void 0) {
      start = MathItem_js_1.STATE.RERENDER;
    }

    this.state(start - 1);
    this.render();
    return this;
  };

  AbstractMathDocument.prototype.convert = function (math, options) {
    if (options === void 0) {
      options = {};
    }

    var _a = Options_js_1.userOptions({
      format: this.inputJax[0].name,
      display: true,
      end: MathItem_js_1.STATE.LAST,
      em: 16,
      ex: 8,
      containerWidth: null,
      lineWidth: 1000000,
      scale: 1,
      family: ''
    }, options),
        format = _a.format,
        display = _a.display,
        end = _a.end,
        ex = _a.ex,
        em = _a.em,
        containerWidth = _a.containerWidth,
        lineWidth = _a.lineWidth,
        scale = _a.scale,
        family = _a.family;

    if (containerWidth === null) {
      containerWidth = 80 * ex;
    }

    var jax = this.inputJax.reduce(function (jax, ijax) {
      return ijax.name === format ? ijax : jax;
    }, null);
    var mitem = new this.options.MathItem(math, jax, display);
    mitem.start.node = this.adaptor.body(this.document);
    mitem.setMetrics(em, ex, containerWidth, lineWidth, scale);

    if (this.outputJax.options.mtextInheritFont) {
      mitem.outputData.mtextFamily = family;
    }

    if (this.outputJax.options.merrorInheritFont) {
      mitem.outputData.merrorFamily = family;
    }

    mitem.convert(this, end);
    return mitem.typesetRoot || mitem.root;
  };

  AbstractMathDocument.prototype.findMath = function (_options) {
    if (_options === void 0) {
      _options = null;
    }

    this.processed.set('findMath');
    return this;
  };

  AbstractMathDocument.prototype.compile = function () {
    var e_6, _a, e_7, _b;

    if (!this.processed.isSet('compile')) {
      var recompile = [];

      try {
        for (var _c = __values(this.math), _d = _c.next(); !_d.done; _d = _c.next()) {
          var math = _d.value;
          this.compileMath(math);

          if (math.inputData.recompile !== undefined) {
            recompile.push(math);
          }
        }
      } catch (e_6_1) {
        e_6 = {
          error: e_6_1
        };
      } finally {
        try {
          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
        } finally {
          if (e_6) throw e_6.error;
        }
      }

      try {
        for (var recompile_1 = __values(recompile), recompile_1_1 = recompile_1.next(); !recompile_1_1.done; recompile_1_1 = recompile_1.next()) {
          var math = recompile_1_1.value;
          var data = math.inputData.recompile;
          math.state(data.state);
          math.inputData.recompile = data;
          this.compileMath(math);
        }
      } catch (e_7_1) {
        e_7 = {
          error: e_7_1
        };
      } finally {
        try {
          if (recompile_1_1 && !recompile_1_1.done && (_b = recompile_1.return)) _b.call(recompile_1);
        } finally {
          if (e_7) throw e_7.error;
        }
      }

      this.processed.set('compile');
    }

    return this;
  };

  AbstractMathDocument.prototype.compileMath = function (math) {
    try {
      math.compile(this);
    } catch (err) {
      if (err.retry || err.restart) {
        throw err;
      }

      this.options['compileError'](this, math, err);
      math.inputData['error'] = err;
    }
  };

  AbstractMathDocument.prototype.compileError = function (math, err) {
    math.root = this.mmlFactory.create('math', null, [this.mmlFactory.create('merror', {
      'data-mjx-error': err.message,
      title: err.message
    }, [this.mmlFactory.create('mtext', null, [this.mmlFactory.create('text').setText('Math input error')])])]);

    if (math.display) {
      math.root.attributes.set('display', 'block');
    }

    math.inputData.error = err.message;
  };

  AbstractMathDocument.prototype.typeset = function () {
    var e_8, _a;

    if (!this.processed.isSet('typeset')) {
      try {
        for (var _b = __values(this.math), _c = _b.next(); !_c.done; _c = _b.next()) {
          var math = _c.value;

          try {
            math.typeset(this);
          } catch (err) {
            if (err.retry || err.restart) {
              throw err;
            }

            this.options['typesetError'](this, math, err);
            math.outputData['error'] = err;
          }
        }
      } catch (e_8_1) {
        e_8 = {
          error: e_8_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_8) throw e_8.error;
        }
      }

      this.processed.set('typeset');
    }

    return this;
  };

  AbstractMathDocument.prototype.typesetError = function (math, err) {
    math.typesetRoot = this.adaptor.node('mjx-container', {
      class: 'MathJax mjx-output-error',
      jax: this.outputJax.name
    }, [this.adaptor.node('span', {
      'data-mjx-error': err.message,
      title: err.message,
      style: {
        color: 'red',
        'background-color': 'yellow',
        'line-height': 'normal'
      }
    }, [this.adaptor.text('Math output error')])]);

    if (math.display) {
      this.adaptor.setAttributes(math.typesetRoot, {
        style: {
          display: 'block',
          margin: '1em 0',
          'text-align': 'center'
        }
      });
    }

    math.outputData.error = err.message;
  };

  AbstractMathDocument.prototype.getMetrics = function () {
    if (!this.processed.isSet('getMetrics')) {
      this.outputJax.getMetrics(this);
      this.processed.set('getMetrics');
    }

    return this;
  };

  AbstractMathDocument.prototype.updateDocument = function () {
    var e_9, _a;

    if (!this.processed.isSet('updateDocument')) {
      try {
        for (var _b = __values(this.math.reversed()), _c = _b.next(); !_c.done; _c = _b.next()) {
          var math = _c.value;
          math.updateDocument(this);
        }
      } catch (e_9_1) {
        e_9 = {
          error: e_9_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_9) throw e_9.error;
        }
      }

      this.processed.set('updateDocument');
    }

    return this;
  };

  AbstractMathDocument.prototype.removeFromDocument = function (_restore) {
    if (_restore === void 0) {
      _restore = false;
    }

    return this;
  };

  AbstractMathDocument.prototype.state = function (state, restore) {
    var e_10, _a;

    if (restore === void 0) {
      restore = false;
    }

    try {
      for (var _b = __values(this.math), _c = _b.next(); !_c.done; _c = _b.next()) {
        var math = _c.value;
        math.state(state, restore);
      }
    } catch (e_10_1) {
      e_10 = {
        error: e_10_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_10) throw e_10.error;
      }
    }

    if (state < MathItem_js_1.STATE.INSERTED) {
      this.processed.clear('updateDocument');
    }

    if (state < MathItem_js_1.STATE.TYPESET) {
      this.processed.clear('typeset');
      this.processed.clear('getMetrics');
    }

    if (state < MathItem_js_1.STATE.COMPILED) {
      this.processed.clear('compile');
    }

    return this;
  };

  AbstractMathDocument.prototype.reset = function (options) {
    var _a;

    if (options === void 0) {
      options = {
        processed: true
      };
    }

    options = Options_js_1.userOptions(Object.assign({}, exports.resetOptions), options);
    options.all && Object.assign(options, exports.resetAllOptions);
    options.processed && this.processed.reset();
    options.inputJax && this.inputJax.forEach(function (jax) {
      return jax.reset.apply(jax, __spreadArray([], __read(options.inputJax)));
    });
    options.outputJax && (_a = this.outputJax).reset.apply(_a, __spreadArray([], __read(options.outputJax)));
    return this;
  };

  AbstractMathDocument.prototype.clear = function () {
    this.reset();
    this.math.clear();
    return this;
  };

  AbstractMathDocument.prototype.concat = function (list) {
    this.math.merge(list);
    return this;
  };

  AbstractMathDocument.prototype.clearMathItemsWithin = function (containers) {
    var _a;

    var items = this.getMathItemsWithin(containers);

    (_a = this.math).remove.apply(_a, __spreadArray([], __read(items)));

    return items;
  };

  AbstractMathDocument.prototype.getMathItemsWithin = function (elements) {
    var e_11, _a, e_12, _b;

    if (!Array.isArray(elements)) {
      elements = [elements];
    }

    var adaptor = this.adaptor;
    var items = [];
    var containers = adaptor.getElements(elements, this.document);

    try {
      ITEMS: for (var _c = __values(this.math), _d = _c.next(); !_d.done; _d = _c.next()) {
        var item = _d.value;

        try {
          for (var containers_1 = (e_12 = void 0, __values(containers)), containers_1_1 = containers_1.next(); !containers_1_1.done; containers_1_1 = containers_1.next()) {
            var container = containers_1_1.value;

            if (item.start.node && adaptor.contains(container, item.start.node)) {
              items.push(item);
              continue ITEMS;
            }
          }
        } catch (e_12_1) {
          e_12 = {
            error: e_12_1
          };
        } finally {
          try {
            if (containers_1_1 && !containers_1_1.done && (_b = containers_1.return)) _b.call(containers_1);
          } finally {
            if (e_12) throw e_12.error;
          }
        }
      }
    } catch (e_11_1) {
      e_11 = {
        error: e_11_1
      };
    } finally {
      try {
        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_11) throw e_11.error;
      }
    }

    return items;
  };

  AbstractMathDocument.KIND = 'MathDocument';
  AbstractMathDocument.OPTIONS = {
    OutputJax: null,
    InputJax: null,
    MmlFactory: null,
    MathList: DefaultMathList,
    MathItem: DefaultMathItem,
    compileError: function compileError(doc, math, err) {
      doc.compileError(math, err);
    },
    typesetError: function typesetError(doc, math, err) {
      doc.typesetError(math, err);
    },
    renderActions: Options_js_1.expandable({
      find: [MathItem_js_1.STATE.FINDMATH, 'findMath', '', false],
      compile: [MathItem_js_1.STATE.COMPILED],
      metrics: [MathItem_js_1.STATE.METRICS, 'getMetrics', '', false],
      typeset: [MathItem_js_1.STATE.TYPESET],
      update: [MathItem_js_1.STATE.INSERTED, 'updateDocument', false]
    })
  };
  AbstractMathDocument.ProcessBits = BitField_js_1.BitFieldClass('findMath', 'compile', 'getMetrics', 'typeset', 'updateDocument');
  return AbstractMathDocument;
}();

exports.AbstractMathDocument = AbstractMathDocument;

/***/ }),

/***/ 6712:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.newState = exports.STATE = exports.AbstractMathItem = exports.protoItem = void 0;

function protoItem(open, math, close, n, start, end, display) {
  if (display === void 0) {
    display = null;
  }

  var item = {
    open: open,
    math: math,
    close: close,
    n: n,
    start: {
      n: start
    },
    end: {
      n: end
    },
    display: display
  };
  return item;
}

exports.protoItem = protoItem;

var AbstractMathItem = function () {
  function AbstractMathItem(math, jax, display, start, end) {
    if (display === void 0) {
      display = true;
    }

    if (start === void 0) {
      start = {
        i: 0,
        n: 0,
        delim: ''
      };
    }

    if (end === void 0) {
      end = {
        i: 0,
        n: 0,
        delim: ''
      };
    }

    this.root = null;
    this.typesetRoot = null;
    this.metrics = {};
    this.inputData = {};
    this.outputData = {};
    this._state = exports.STATE.UNPROCESSED;
    this.math = math;
    this.inputJax = jax;
    this.display = display;
    this.start = start;
    this.end = end;
    this.root = null;
    this.typesetRoot = null;
    this.metrics = {};
    this.inputData = {};
    this.outputData = {};
  }

  Object.defineProperty(AbstractMathItem.prototype, "isEscaped", {
    get: function get() {
      return this.display === null;
    },
    enumerable: false,
    configurable: true
  });

  AbstractMathItem.prototype.render = function (document) {
    document.renderActions.renderMath(this, document);
  };

  AbstractMathItem.prototype.rerender = function (document, start) {
    if (start === void 0) {
      start = exports.STATE.RERENDER;
    }

    if (this.state() >= start) {
      this.state(start - 1);
    }

    document.renderActions.renderMath(this, document, start);
  };

  AbstractMathItem.prototype.convert = function (document, end) {
    if (end === void 0) {
      end = exports.STATE.LAST;
    }

    document.renderActions.renderConvert(this, document, end);
  };

  AbstractMathItem.prototype.compile = function (document) {
    if (this.state() < exports.STATE.COMPILED) {
      this.root = this.inputJax.compile(this, document);
      this.state(exports.STATE.COMPILED);
    }
  };

  AbstractMathItem.prototype.typeset = function (document) {
    if (this.state() < exports.STATE.TYPESET) {
      this.typesetRoot = document.outputJax[this.isEscaped ? 'escaped' : 'typeset'](this, document);
      this.state(exports.STATE.TYPESET);
    }
  };

  AbstractMathItem.prototype.updateDocument = function (_document) {};

  AbstractMathItem.prototype.removeFromDocument = function (_restore) {
    if (_restore === void 0) {
      _restore = false;
    }
  };

  AbstractMathItem.prototype.setMetrics = function (em, ex, cwidth, lwidth, scale) {
    this.metrics = {
      em: em,
      ex: ex,
      containerWidth: cwidth,
      lineWidth: lwidth,
      scale: scale
    };
  };

  AbstractMathItem.prototype.state = function (state, restore) {
    if (state === void 0) {
      state = null;
    }

    if (restore === void 0) {
      restore = false;
    }

    if (state != null) {
      if (state < exports.STATE.INSERTED && this._state >= exports.STATE.INSERTED) {
        this.removeFromDocument(restore);
      }

      if (state < exports.STATE.TYPESET && this._state >= exports.STATE.TYPESET) {
        this.outputData = {};
      }

      if (state < exports.STATE.COMPILED && this._state >= exports.STATE.COMPILED) {
        this.inputData = {};
      }

      this._state = state;
    }

    return this._state;
  };

  AbstractMathItem.prototype.reset = function (restore) {
    if (restore === void 0) {
      restore = false;
    }

    this.state(exports.STATE.UNPROCESSED, restore);
  };

  return AbstractMathItem;
}();

exports.AbstractMathItem = AbstractMathItem;
exports.STATE = {
  UNPROCESSED: 0,
  FINDMATH: 10,
  COMPILED: 20,
  CONVERT: 100,
  METRICS: 110,
  RERENDER: 125,
  TYPESET: 150,
  INSERTED: 200,
  LAST: 10000
};

function newState(name, state) {
  if (name in exports.STATE) {
    throw Error('State ' + name + ' already exists');
  }

  exports.STATE[name] = state;
}

exports.newState = newState;

/***/ }),

/***/ 8229:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AbstractMathList = void 0;

var LinkedList_js_1 = __webpack_require__(5705);

var AbstractMathList = function (_super) {
  __extends(AbstractMathList, _super);

  function AbstractMathList() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  AbstractMathList.prototype.isBefore = function (a, b) {
    return a.start.i < b.start.i || a.start.i === b.start.i && a.start.n < b.start.n;
  };

  return AbstractMathList;
}(LinkedList_js_1.LinkedList);

exports.AbstractMathList = AbstractMathList;

/***/ }),

/***/ 9936:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Attributes = exports.INHERIT = void 0;
exports.INHERIT = '_inherit_';

var Attributes = function () {
  function Attributes(defaults, global) {
    this.global = global;
    this.defaults = Object.create(global);
    this.inherited = Object.create(this.defaults);
    this.attributes = Object.create(this.inherited);
    Object.assign(this.defaults, defaults);
  }

  Attributes.prototype.set = function (name, value) {
    this.attributes[name] = value;
  };

  Attributes.prototype.setList = function (list) {
    Object.assign(this.attributes, list);
  };

  Attributes.prototype.get = function (name) {
    var value = this.attributes[name];

    if (value === exports.INHERIT) {
      value = this.global[name];
    }

    return value;
  };

  Attributes.prototype.getExplicit = function (name) {
    if (!this.attributes.hasOwnProperty(name)) {
      return undefined;
    }

    return this.attributes[name];
  };

  Attributes.prototype.getList = function () {
    var e_1, _a;

    var names = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      names[_i] = arguments[_i];
    }

    var values = {};

    try {
      for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
        var name_1 = names_1_1.value;
        values[name_1] = this.get(name_1);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return values;
  };

  Attributes.prototype.setInherited = function (name, value) {
    this.inherited[name] = value;
  };

  Attributes.prototype.getInherited = function (name) {
    return this.inherited[name];
  };

  Attributes.prototype.getDefault = function (name) {
    return this.defaults[name];
  };

  Attributes.prototype.isSet = function (name) {
    return this.attributes.hasOwnProperty(name) || this.inherited.hasOwnProperty(name);
  };

  Attributes.prototype.hasDefault = function (name) {
    return name in this.defaults;
  };

  Attributes.prototype.getExplicitNames = function () {
    return Object.keys(this.attributes);
  };

  Attributes.prototype.getInheritedNames = function () {
    return Object.keys(this.inherited);
  };

  Attributes.prototype.getDefaultNames = function () {
    return Object.keys(this.defaults);
  };

  Attributes.prototype.getGlobalNames = function () {
    return Object.keys(this.global);
  };

  Attributes.prototype.getAllAttributes = function () {
    return this.attributes;
  };

  Attributes.prototype.getAllInherited = function () {
    return this.inherited;
  };

  Attributes.prototype.getAllDefaults = function () {
    return this.defaults;
  };

  Attributes.prototype.getAllGlobals = function () {
    return this.global;
  };

  return Attributes;
}();

exports.Attributes = Attributes;

/***/ }),

/***/ 3809:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MML = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var math_js_1 = __webpack_require__(7312);

var mi_js_1 = __webpack_require__(219);

var mn_js_1 = __webpack_require__(1843);

var mo_js_1 = __webpack_require__(5);

var mtext_js_1 = __webpack_require__(3006);

var mspace_js_1 = __webpack_require__(4073);

var ms_js_1 = __webpack_require__(2147);

var mrow_js_1 = __webpack_require__(7931);

var mfrac_js_1 = __webpack_require__(487);

var msqrt_js_1 = __webpack_require__(9926);

var mroot_js_1 = __webpack_require__(7400);

var mstyle_js_1 = __webpack_require__(5270);

var merror_js_1 = __webpack_require__(4901);

var mpadded_js_1 = __webpack_require__(3063);

var mphantom_js_1 = __webpack_require__(4547);

var mfenced_js_1 = __webpack_require__(5356);

var menclose_js_1 = __webpack_require__(2895);

var maction_js_1 = __webpack_require__(6482);

var msubsup_js_1 = __webpack_require__(1432);

var munderover_js_1 = __webpack_require__(4389);

var mmultiscripts_js_1 = __webpack_require__(5114);

var mtable_js_1 = __webpack_require__(2444);

var mtr_js_1 = __webpack_require__(3640);

var mtd_js_1 = __webpack_require__(6195);

var maligngroup_js_1 = __webpack_require__(7144);

var malignmark_js_1 = __webpack_require__(9876);

var mglyph_js_1 = __webpack_require__(6912);

var semantics_js_1 = __webpack_require__(176);

var TeXAtom_js_1 = __webpack_require__(5500);

var mathchoice_js_1 = __webpack_require__(5573);

exports.MML = (_a = {}, _a[math_js_1.MmlMath.prototype.kind] = math_js_1.MmlMath, _a[mi_js_1.MmlMi.prototype.kind] = mi_js_1.MmlMi, _a[mn_js_1.MmlMn.prototype.kind] = mn_js_1.MmlMn, _a[mo_js_1.MmlMo.prototype.kind] = mo_js_1.MmlMo, _a[mtext_js_1.MmlMtext.prototype.kind] = mtext_js_1.MmlMtext, _a[mspace_js_1.MmlMspace.prototype.kind] = mspace_js_1.MmlMspace, _a[ms_js_1.MmlMs.prototype.kind] = ms_js_1.MmlMs, _a[mrow_js_1.MmlMrow.prototype.kind] = mrow_js_1.MmlMrow, _a[mrow_js_1.MmlInferredMrow.prototype.kind] = mrow_js_1.MmlInferredMrow, _a[mfrac_js_1.MmlMfrac.prototype.kind] = mfrac_js_1.MmlMfrac, _a[msqrt_js_1.MmlMsqrt.prototype.kind] = msqrt_js_1.MmlMsqrt, _a[mroot_js_1.MmlMroot.prototype.kind] = mroot_js_1.MmlMroot, _a[mstyle_js_1.MmlMstyle.prototype.kind] = mstyle_js_1.MmlMstyle, _a[merror_js_1.MmlMerror.prototype.kind] = merror_js_1.MmlMerror, _a[mpadded_js_1.MmlMpadded.prototype.kind] = mpadded_js_1.MmlMpadded, _a[mphantom_js_1.MmlMphantom.prototype.kind] = mphantom_js_1.MmlMphantom, _a[mfenced_js_1.MmlMfenced.prototype.kind] = mfenced_js_1.MmlMfenced, _a[menclose_js_1.MmlMenclose.prototype.kind] = menclose_js_1.MmlMenclose, _a[maction_js_1.MmlMaction.prototype.kind] = maction_js_1.MmlMaction, _a[msubsup_js_1.MmlMsub.prototype.kind] = msubsup_js_1.MmlMsub, _a[msubsup_js_1.MmlMsup.prototype.kind] = msubsup_js_1.MmlMsup, _a[msubsup_js_1.MmlMsubsup.prototype.kind] = msubsup_js_1.MmlMsubsup, _a[munderover_js_1.MmlMunder.prototype.kind] = munderover_js_1.MmlMunder, _a[munderover_js_1.MmlMover.prototype.kind] = munderover_js_1.MmlMover, _a[munderover_js_1.MmlMunderover.prototype.kind] = munderover_js_1.MmlMunderover, _a[mmultiscripts_js_1.MmlMmultiscripts.prototype.kind] = mmultiscripts_js_1.MmlMmultiscripts, _a[mmultiscripts_js_1.MmlMprescripts.prototype.kind] = mmultiscripts_js_1.MmlMprescripts, _a[mmultiscripts_js_1.MmlNone.prototype.kind] = mmultiscripts_js_1.MmlNone, _a[mtable_js_1.MmlMtable.prototype.kind] = mtable_js_1.MmlMtable, _a[mtr_js_1.MmlMlabeledtr.prototype.kind] = mtr_js_1.MmlMlabeledtr, _a[mtr_js_1.MmlMtr.prototype.kind] = mtr_js_1.MmlMtr, _a[mtd_js_1.MmlMtd.prototype.kind] = mtd_js_1.MmlMtd, _a[maligngroup_js_1.MmlMaligngroup.prototype.kind] = maligngroup_js_1.MmlMaligngroup, _a[malignmark_js_1.MmlMalignmark.prototype.kind] = malignmark_js_1.MmlMalignmark, _a[mglyph_js_1.MmlMglyph.prototype.kind] = mglyph_js_1.MmlMglyph, _a[semantics_js_1.MmlSemantics.prototype.kind] = semantics_js_1.MmlSemantics, _a[semantics_js_1.MmlAnnotation.prototype.kind] = semantics_js_1.MmlAnnotation, _a[semantics_js_1.MmlAnnotationXML.prototype.kind] = semantics_js_1.MmlAnnotationXML, _a[TeXAtom_js_1.TeXAtom.prototype.kind] = TeXAtom_js_1.TeXAtom, _a[mathchoice_js_1.MathChoice.prototype.kind] = mathchoice_js_1.MathChoice, _a[MmlNode_js_1.TextNode.prototype.kind] = MmlNode_js_1.TextNode, _a[MmlNode_js_1.XMLNode.prototype.kind] = MmlNode_js_1.XMLNode, _a);

/***/ }),

/***/ 7021:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlFactory = void 0;

var NodeFactory_js_1 = __webpack_require__(7365);

var MML_js_1 = __webpack_require__(3809);

var MmlFactory = function (_super) {
  __extends(MmlFactory, _super);

  function MmlFactory() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlFactory.prototype, "MML", {
    get: function get() {
      return this.node;
    },
    enumerable: false,
    configurable: true
  });
  MmlFactory.defaultNodes = MML_js_1.MML;
  return MmlFactory;
}(NodeFactory_js_1.AbstractNodeFactory);

exports.MmlFactory = MmlFactory;

/***/ }),

/***/ 4653:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.XMLNode = exports.TextNode = exports.AbstractMmlEmptyNode = exports.AbstractMmlBaseNode = exports.AbstractMmlLayoutNode = exports.AbstractMmlTokenNode = exports.AbstractMmlNode = exports.indentAttributes = exports.TEXCLASSNAMES = exports.TEXCLASS = void 0;

var Attributes_js_1 = __webpack_require__(9936);

var Node_js_1 = __webpack_require__(4411);

exports.TEXCLASS = {
  ORD: 0,
  OP: 1,
  BIN: 2,
  REL: 3,
  OPEN: 4,
  CLOSE: 5,
  PUNCT: 6,
  INNER: 7,
  VCENTER: 8,
  NONE: -1
};
exports.TEXCLASSNAMES = ['ORD', 'OP', 'BIN', 'REL', 'OPEN', 'CLOSE', 'PUNCT', 'INNER', 'VCENTER'];
var TEXSPACELENGTH = ['', 'thinmathspace', 'mediummathspace', 'thickmathspace'];
var TEXSPACE = [[0, -1, 2, 3, 0, 0, 0, 1], [-1, -1, 0, 3, 0, 0, 0, 1], [2, 2, 0, 0, 2, 0, 0, 2], [3, 3, 0, 0, 3, 0, 0, 3], [0, 0, 0, 0, 0, 0, 0, 0], [0, -1, 2, 3, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1], [1, -1, 2, 3, 1, 0, 1, 1]];
exports.indentAttributes = ['indentalign', 'indentalignfirst', 'indentshift', 'indentshiftfirst'];

var AbstractMmlNode = function (_super) {
  __extends(AbstractMmlNode, _super);

  function AbstractMmlNode(factory, attributes, children) {
    if (attributes === void 0) {
      attributes = {};
    }

    if (children === void 0) {
      children = [];
    }

    var _this = _super.call(this, factory) || this;

    _this.prevClass = null;
    _this.prevLevel = null;
    _this.texclass = null;

    if (_this.arity < 0) {
      _this.childNodes = [factory.create('inferredMrow')];
      _this.childNodes[0].parent = _this;
    }

    _this.setChildren(children);

    _this.attributes = new Attributes_js_1.Attributes(factory.getNodeClass(_this.kind).defaults, factory.getNodeClass('math').defaults);

    _this.attributes.setList(attributes);

    return _this;
  }

  AbstractMmlNode.prototype.copy = function (keepIds) {
    var e_1, _a, e_2, _b;

    if (keepIds === void 0) {
      keepIds = false;
    }

    var node = this.factory.create(this.kind);
    node.properties = __assign({}, this.properties);

    if (this.attributes) {
      var attributes = this.attributes.getAllAttributes();

      try {
        for (var _c = __values(Object.keys(attributes)), _d = _c.next(); !_d.done; _d = _c.next()) {
          var name_1 = _d.value;

          if (name_1 !== 'id' || keepIds) {
            node.attributes.set(name_1, attributes[name_1]);
          }
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
        } finally {
          if (e_1) throw e_1.error;
        }
      }
    }

    if (this.childNodes && this.childNodes.length) {
      var children = this.childNodes;

      if (children.length === 1 && children[0].isInferred) {
        children = children[0].childNodes;
      }

      try {
        for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
          var child = children_1_1.value;

          if (child) {
            node.appendChild(child.copy());
          } else {
            node.childNodes.push(null);
          }
        }
      } catch (e_2_1) {
        e_2 = {
          error: e_2_1
        };
      } finally {
        try {
          if (children_1_1 && !children_1_1.done && (_b = children_1.return)) _b.call(children_1);
        } finally {
          if (e_2) throw e_2.error;
        }
      }
    }

    return node;
  };

  Object.defineProperty(AbstractMmlNode.prototype, "texClass", {
    get: function get() {
      return this.texclass;
    },
    set: function set(texClass) {
      this.texclass = texClass;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlNode.prototype, "isToken", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlNode.prototype, "isEmbellished", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlNode.prototype, "isSpacelike", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlNode.prototype, "linebreakContainer", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlNode.prototype, "hasNewLine", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlNode.prototype, "arity", {
    get: function get() {
      return Infinity;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlNode.prototype, "isInferred", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlNode.prototype, "Parent", {
    get: function get() {
      var parent = this.parent;

      while (parent && parent.notParent) {
        parent = parent.Parent;
      }

      return parent;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlNode.prototype, "notParent", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });

  AbstractMmlNode.prototype.setChildren = function (children) {
    if (this.arity < 0) {
      return this.childNodes[0].setChildren(children);
    }

    return _super.prototype.setChildren.call(this, children);
  };

  AbstractMmlNode.prototype.appendChild = function (child) {
    var e_3, _a;

    var _this = this;

    if (this.arity < 0) {
      this.childNodes[0].appendChild(child);
      return child;
    }

    if (child.isInferred) {
      if (this.arity === Infinity) {
        child.childNodes.forEach(function (node) {
          return _super.prototype.appendChild.call(_this, node);
        });
        return child;
      }

      var original = child;
      child = this.factory.create('mrow');
      child.setChildren(original.childNodes);
      child.attributes = original.attributes;

      try {
        for (var _b = __values(original.getPropertyNames()), _c = _b.next(); !_c.done; _c = _b.next()) {
          var name_2 = _c.value;
          child.setProperty(name_2, original.getProperty(name_2));
        }
      } catch (e_3_1) {
        e_3 = {
          error: e_3_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_3) throw e_3.error;
        }
      }
    }

    return _super.prototype.appendChild.call(this, child);
  };

  AbstractMmlNode.prototype.replaceChild = function (newChild, oldChild) {
    if (this.arity < 0) {
      this.childNodes[0].replaceChild(newChild, oldChild);
      return newChild;
    }

    return _super.prototype.replaceChild.call(this, newChild, oldChild);
  };

  AbstractMmlNode.prototype.core = function () {
    return this;
  };

  AbstractMmlNode.prototype.coreMO = function () {
    return this;
  };

  AbstractMmlNode.prototype.coreIndex = function () {
    return 0;
  };

  AbstractMmlNode.prototype.childPosition = function () {
    var e_4, _a;

    var child = this;
    var parent = child.parent;

    while (parent && parent.notParent) {
      child = parent;
      parent = parent.parent;
    }

    if (parent) {
      var i = 0;

      try {
        for (var _b = __values(parent.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
          var node = _c.value;

          if (node === child) {
            return i;
          }

          i++;
        }
      } catch (e_4_1) {
        e_4 = {
          error: e_4_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_4) throw e_4.error;
        }
      }
    }

    return null;
  };

  AbstractMmlNode.prototype.setTeXclass = function (prev) {
    this.getPrevClass(prev);
    return this.texClass != null ? this : prev;
  };

  AbstractMmlNode.prototype.updateTeXclass = function (core) {
    if (core) {
      this.prevClass = core.prevClass;
      this.prevLevel = core.prevLevel;
      core.prevClass = core.prevLevel = null;
      this.texClass = core.texClass;
    }
  };

  AbstractMmlNode.prototype.getPrevClass = function (prev) {
    if (prev) {
      this.prevClass = prev.texClass;
      this.prevLevel = prev.attributes.get('scriptlevel');
    }
  };

  AbstractMmlNode.prototype.texSpacing = function () {
    var prevClass = this.prevClass != null ? this.prevClass : exports.TEXCLASS.NONE;
    var texClass = this.texClass || exports.TEXCLASS.ORD;

    if (prevClass === exports.TEXCLASS.NONE || texClass === exports.TEXCLASS.NONE) {
      return '';
    }

    if (prevClass === exports.TEXCLASS.VCENTER) {
      prevClass = exports.TEXCLASS.ORD;
    }

    if (texClass === exports.TEXCLASS.VCENTER) {
      texClass = exports.TEXCLASS.ORD;
    }

    var space = TEXSPACE[prevClass][texClass];

    if ((this.prevLevel > 0 || this.attributes.get('scriptlevel') > 0) && space >= 0) {
      return '';
    }

    return TEXSPACELENGTH[Math.abs(space)];
  };

  AbstractMmlNode.prototype.hasSpacingAttributes = function () {
    return this.isEmbellished && this.coreMO().hasSpacingAttributes();
  };

  AbstractMmlNode.prototype.setInheritedAttributes = function (attributes, display, level, prime) {
    var e_5, _a;

    if (attributes === void 0) {
      attributes = {};
    }

    if (display === void 0) {
      display = false;
    }

    if (level === void 0) {
      level = 0;
    }

    if (prime === void 0) {
      prime = false;
    }

    var defaults = this.attributes.getAllDefaults();

    try {
      for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var key = _c.value;

        if (defaults.hasOwnProperty(key) || AbstractMmlNode.alwaysInherit.hasOwnProperty(key)) {
          var _d = __read(attributes[key], 2),
              node = _d[0],
              value = _d[1];

          var noinherit = (AbstractMmlNode.noInherit[node] || {})[this.kind] || {};

          if (!noinherit[key]) {
            this.attributes.setInherited(key, value);
          }
        }
      }
    } catch (e_5_1) {
      e_5 = {
        error: e_5_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_5) throw e_5.error;
      }
    }

    var displaystyle = this.attributes.getExplicit('displaystyle');

    if (displaystyle === undefined) {
      this.attributes.setInherited('displaystyle', display);
    }

    var scriptlevel = this.attributes.getExplicit('scriptlevel');

    if (scriptlevel === undefined) {
      this.attributes.setInherited('scriptlevel', level);
    }

    if (prime) {
      this.setProperty('texprimestyle', prime);
    }

    var arity = this.arity;

    if (arity >= 0 && arity !== Infinity && (arity === 1 && this.childNodes.length === 0 || arity !== 1 && this.childNodes.length !== arity)) {
      if (arity < this.childNodes.length) {
        this.childNodes = this.childNodes.slice(0, arity);
      } else {
        while (this.childNodes.length < arity) {
          this.appendChild(this.factory.create('mrow'));
        }
      }
    }

    this.setChildInheritedAttributes(attributes, display, level, prime);
  };

  AbstractMmlNode.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
    var e_6, _a;

    try {
      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;
        child.setInheritedAttributes(attributes, display, level, prime);
      }
    } catch (e_6_1) {
      e_6 = {
        error: e_6_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_6) throw e_6.error;
      }
    }
  };

  AbstractMmlNode.prototype.addInheritedAttributes = function (current, attributes) {
    var e_7, _a;

    var updated = __assign({}, current);

    try {
      for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var name_3 = _c.value;

        if (name_3 !== 'displaystyle' && name_3 !== 'scriptlevel' && name_3 !== 'style') {
          updated[name_3] = [this.kind, attributes[name_3]];
        }
      }
    } catch (e_7_1) {
      e_7 = {
        error: e_7_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_7) throw e_7.error;
      }
    }

    return updated;
  };

  AbstractMmlNode.prototype.inheritAttributesFrom = function (node) {
    var attributes = node.attributes;
    var display = attributes.get('displaystyle');
    var scriptlevel = attributes.get('scriptlevel');
    var defaults = !attributes.isSet('mathsize') ? {} : {
      mathsize: ['math', attributes.get('mathsize')]
    };
    var prime = node.getProperty('texprimestyle') || false;
    this.setInheritedAttributes(defaults, display, scriptlevel, prime);
  };

  AbstractMmlNode.prototype.verifyTree = function (options) {
    if (options === void 0) {
      options = null;
    }

    if (options === null) {
      return;
    }

    this.verifyAttributes(options);
    var arity = this.arity;

    if (options['checkArity']) {
      if (arity >= 0 && arity !== Infinity && (arity === 1 && this.childNodes.length === 0 || arity !== 1 && this.childNodes.length !== arity)) {
        this.mError('Wrong number of children for "' + this.kind + '" node', options, true);
      }
    }

    this.verifyChildren(options);
  };

  AbstractMmlNode.prototype.verifyAttributes = function (options) {
    var e_8, _a;

    if (options['checkAttributes']) {
      var attributes = this.attributes;
      var bad = [];

      try {
        for (var _b = __values(attributes.getExplicitNames()), _c = _b.next(); !_c.done; _c = _b.next()) {
          var name_4 = _c.value;

          if (name_4.substr(0, 5) !== 'data-' && attributes.getDefault(name_4) === undefined && !name_4.match(/^(?:class|style|id|(?:xlink:)?href)$/)) {
            bad.push(name_4);
          }
        }
      } catch (e_8_1) {
        e_8 = {
          error: e_8_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_8) throw e_8.error;
        }
      }

      if (bad.length) {
        this.mError('Unknown attributes for ' + this.kind + ' node: ' + bad.join(', '), options);
      }
    }
  };

  AbstractMmlNode.prototype.verifyChildren = function (options) {
    var e_9, _a;

    try {
      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;
        child.verifyTree(options);
      }
    } catch (e_9_1) {
      e_9 = {
        error: e_9_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_9) throw e_9.error;
      }
    }
  };

  AbstractMmlNode.prototype.mError = function (message, options, short) {
    if (short === void 0) {
      short = false;
    }

    if (this.parent && this.parent.isKind('merror')) {
      return null;
    }

    var merror = this.factory.create('merror');

    if (options['fullErrors'] || short) {
      var mtext = this.factory.create('mtext');
      var text = this.factory.create('text');
      text.setText(options['fullErrors'] ? message : this.kind);
      mtext.appendChild(text);
      merror.appendChild(mtext);
      this.parent.replaceChild(merror, this);
    } else {
      this.parent.replaceChild(merror, this);
      merror.appendChild(this);
    }

    return merror;
  };

  AbstractMmlNode.defaults = {
    mathbackground: Attributes_js_1.INHERIT,
    mathcolor: Attributes_js_1.INHERIT,
    mathsize: Attributes_js_1.INHERIT,
    dir: Attributes_js_1.INHERIT
  };
  AbstractMmlNode.noInherit = {
    mstyle: {
      mpadded: {
        width: true,
        height: true,
        depth: true,
        lspace: true,
        voffset: true
      },
      mtable: {
        width: true,
        height: true,
        depth: true,
        align: true
      }
    },
    maligngroup: {
      mrow: {
        groupalign: true
      },
      mtable: {
        groupalign: true
      }
    }
  };
  AbstractMmlNode.alwaysInherit = {
    scriptminsize: true,
    scriptsizemultiplier: true
  };
  AbstractMmlNode.verifyDefaults = {
    checkArity: true,
    checkAttributes: false,
    fullErrors: false,
    fixMmultiscripts: true,
    fixMtables: true
  };
  return AbstractMmlNode;
}(Node_js_1.AbstractNode);

exports.AbstractMmlNode = AbstractMmlNode;

var AbstractMmlTokenNode = function (_super) {
  __extends(AbstractMmlTokenNode, _super);

  function AbstractMmlTokenNode() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(AbstractMmlTokenNode.prototype, "isToken", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  AbstractMmlTokenNode.prototype.getText = function () {
    var e_10, _a;

    var text = '';

    try {
      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;

        if (child instanceof TextNode) {
          text += child.getText();
        }
      }
    } catch (e_10_1) {
      e_10 = {
        error: e_10_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_10) throw e_10.error;
      }
    }

    return text;
  };

  AbstractMmlTokenNode.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
    var e_11, _a;

    try {
      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;

        if (child instanceof AbstractMmlNode) {
          child.setInheritedAttributes(attributes, display, level, prime);
        }
      }
    } catch (e_11_1) {
      e_11 = {
        error: e_11_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_11) throw e_11.error;
      }
    }
  };

  AbstractMmlTokenNode.prototype.walkTree = function (func, data) {
    var e_12, _a;

    func(this, data);

    try {
      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;

        if (child instanceof AbstractMmlNode) {
          child.walkTree(func, data);
        }
      }
    } catch (e_12_1) {
      e_12 = {
        error: e_12_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_12) throw e_12.error;
      }
    }

    return data;
  };

  AbstractMmlTokenNode.defaults = __assign(__assign({}, AbstractMmlNode.defaults), {
    mathvariant: 'normal',
    mathsize: Attributes_js_1.INHERIT
  });
  return AbstractMmlTokenNode;
}(AbstractMmlNode);

exports.AbstractMmlTokenNode = AbstractMmlTokenNode;

var AbstractMmlLayoutNode = function (_super) {
  __extends(AbstractMmlLayoutNode, _super);

  function AbstractMmlLayoutNode() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(AbstractMmlLayoutNode.prototype, "isSpacelike", {
    get: function get() {
      return this.childNodes[0].isSpacelike;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlLayoutNode.prototype, "isEmbellished", {
    get: function get() {
      return this.childNodes[0].isEmbellished;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlLayoutNode.prototype, "arity", {
    get: function get() {
      return -1;
    },
    enumerable: false,
    configurable: true
  });

  AbstractMmlLayoutNode.prototype.core = function () {
    return this.childNodes[0];
  };

  AbstractMmlLayoutNode.prototype.coreMO = function () {
    return this.childNodes[0].coreMO();
  };

  AbstractMmlLayoutNode.prototype.setTeXclass = function (prev) {
    prev = this.childNodes[0].setTeXclass(prev);
    this.updateTeXclass(this.childNodes[0]);
    return prev;
  };

  AbstractMmlLayoutNode.defaults = AbstractMmlNode.defaults;
  return AbstractMmlLayoutNode;
}(AbstractMmlNode);

exports.AbstractMmlLayoutNode = AbstractMmlLayoutNode;

var AbstractMmlBaseNode = function (_super) {
  __extends(AbstractMmlBaseNode, _super);

  function AbstractMmlBaseNode() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(AbstractMmlBaseNode.prototype, "isEmbellished", {
    get: function get() {
      return this.childNodes[0].isEmbellished;
    },
    enumerable: false,
    configurable: true
  });

  AbstractMmlBaseNode.prototype.core = function () {
    return this.childNodes[0];
  };

  AbstractMmlBaseNode.prototype.coreMO = function () {
    return this.childNodes[0].coreMO();
  };

  AbstractMmlBaseNode.prototype.setTeXclass = function (prev) {
    var e_13, _a;

    this.getPrevClass(prev);
    this.texClass = exports.TEXCLASS.ORD;
    var base = this.childNodes[0];

    if (base) {
      if (this.isEmbellished || base.isKind('mi')) {
        prev = base.setTeXclass(prev);
        this.updateTeXclass(this.core());
      } else {
        base.setTeXclass(null);
        prev = this;
      }
    } else {
      prev = this;
    }

    try {
      for (var _b = __values(this.childNodes.slice(1)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;

        if (child) {
          child.setTeXclass(null);
        }
      }
    } catch (e_13_1) {
      e_13 = {
        error: e_13_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_13) throw e_13.error;
      }
    }

    return prev;
  };

  AbstractMmlBaseNode.defaults = AbstractMmlNode.defaults;
  return AbstractMmlBaseNode;
}(AbstractMmlNode);

exports.AbstractMmlBaseNode = AbstractMmlBaseNode;

var AbstractMmlEmptyNode = function (_super) {
  __extends(AbstractMmlEmptyNode, _super);

  function AbstractMmlEmptyNode() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(AbstractMmlEmptyNode.prototype, "isToken", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlEmptyNode.prototype, "isEmbellished", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlEmptyNode.prototype, "isSpacelike", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlEmptyNode.prototype, "linebreakContainer", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlEmptyNode.prototype, "hasNewLine", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlEmptyNode.prototype, "arity", {
    get: function get() {
      return 0;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlEmptyNode.prototype, "isInferred", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlEmptyNode.prototype, "notParent", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlEmptyNode.prototype, "Parent", {
    get: function get() {
      return this.parent;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlEmptyNode.prototype, "texClass", {
    get: function get() {
      return exports.TEXCLASS.NONE;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlEmptyNode.prototype, "prevClass", {
    get: function get() {
      return exports.TEXCLASS.NONE;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractMmlEmptyNode.prototype, "prevLevel", {
    get: function get() {
      return 0;
    },
    enumerable: false,
    configurable: true
  });

  AbstractMmlEmptyNode.prototype.hasSpacingAttributes = function () {
    return false;
  };

  Object.defineProperty(AbstractMmlEmptyNode.prototype, "attributes", {
    get: function get() {
      return null;
    },
    enumerable: false,
    configurable: true
  });

  AbstractMmlEmptyNode.prototype.core = function () {
    return this;
  };

  AbstractMmlEmptyNode.prototype.coreMO = function () {
    return this;
  };

  AbstractMmlEmptyNode.prototype.coreIndex = function () {
    return 0;
  };

  AbstractMmlEmptyNode.prototype.childPosition = function () {
    return 0;
  };

  AbstractMmlEmptyNode.prototype.setTeXclass = function (prev) {
    return prev;
  };

  AbstractMmlEmptyNode.prototype.texSpacing = function () {
    return '';
  };

  AbstractMmlEmptyNode.prototype.setInheritedAttributes = function (_attributes, _display, _level, _prime) {};

  AbstractMmlEmptyNode.prototype.inheritAttributesFrom = function (_node) {};

  AbstractMmlEmptyNode.prototype.verifyTree = function (_options) {};

  AbstractMmlEmptyNode.prototype.mError = function (_message, _options, _short) {
    if (_short === void 0) {
      _short = false;
    }
  };

  return AbstractMmlEmptyNode;
}(Node_js_1.AbstractEmptyNode);

exports.AbstractMmlEmptyNode = AbstractMmlEmptyNode;

var TextNode = function (_super) {
  __extends(TextNode, _super);

  function TextNode() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.text = '';
    return _this;
  }

  Object.defineProperty(TextNode.prototype, "kind", {
    get: function get() {
      return 'text';
    },
    enumerable: false,
    configurable: true
  });

  TextNode.prototype.getText = function () {
    return this.text;
  };

  TextNode.prototype.setText = function (text) {
    this.text = text;
    return this;
  };

  TextNode.prototype.copy = function () {
    return this.factory.create(this.kind).setText(this.getText());
  };

  TextNode.prototype.toString = function () {
    return this.text;
  };

  return TextNode;
}(AbstractMmlEmptyNode);

exports.TextNode = TextNode;

var XMLNode = function (_super) {
  __extends(XMLNode, _super);

  function XMLNode() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.xml = null;
    _this.adaptor = null;
    return _this;
  }

  Object.defineProperty(XMLNode.prototype, "kind", {
    get: function get() {
      return 'XML';
    },
    enumerable: false,
    configurable: true
  });

  XMLNode.prototype.getXML = function () {
    return this.xml;
  };

  XMLNode.prototype.setXML = function (xml, adaptor) {
    if (adaptor === void 0) {
      adaptor = null;
    }

    this.xml = xml;
    this.adaptor = adaptor;
    return this;
  };

  XMLNode.prototype.getSerializedXML = function () {
    return this.adaptor.serializeXML(this.xml);
  };

  XMLNode.prototype.copy = function () {
    return this.factory.create(this.kind).setXML(this.adaptor.clone(this.xml));
  };

  XMLNode.prototype.toString = function () {
    return 'XML data';
  };

  return XMLNode;
}(AbstractMmlEmptyNode);

exports.XMLNode = XMLNode;

/***/ }),

/***/ 5500:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.TeXAtom = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var mo_js_1 = __webpack_require__(5);

var TeXAtom = function (_super) {
  __extends(TeXAtom, _super);

  function TeXAtom(factory, attributes, children) {
    var _this = _super.call(this, factory, attributes, children) || this;

    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;

    _this.setProperty('texClass', _this.texClass);

    return _this;
  }

  Object.defineProperty(TeXAtom.prototype, "kind", {
    get: function get() {
      return 'TeXAtom';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TeXAtom.prototype, "arity", {
    get: function get() {
      return -1;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TeXAtom.prototype, "notParent", {
    get: function get() {
      return this.childNodes[0] && this.childNodes[0].childNodes.length === 1;
    },
    enumerable: false,
    configurable: true
  });

  TeXAtom.prototype.setTeXclass = function (prev) {
    this.childNodes[0].setTeXclass(null);
    return this.adjustTeXclass(prev);
  };

  TeXAtom.prototype.adjustTeXclass = function (prev) {
    return prev;
  };

  TeXAtom.defaults = __assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults);
  return TeXAtom;
}(MmlNode_js_1.AbstractMmlBaseNode);

exports.TeXAtom = TeXAtom;
TeXAtom.prototype.adjustTeXclass = mo_js_1.MmlMo.prototype.adjustTeXclass;

/***/ }),

/***/ 6482:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMaction = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMaction = function (_super) {
  __extends(MmlMaction, _super);

  function MmlMaction() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMaction.prototype, "kind", {
    get: function get() {
      return 'maction';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMaction.prototype, "arity", {
    get: function get() {
      return 1;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMaction.prototype, "selected", {
    get: function get() {
      var selection = this.attributes.get('selection');
      var i = Math.max(1, Math.min(this.childNodes.length, selection)) - 1;
      return this.childNodes[i] || this.factory.create('mrow');
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMaction.prototype, "isEmbellished", {
    get: function get() {
      return this.selected.isEmbellished;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMaction.prototype, "isSpacelike", {
    get: function get() {
      return this.selected.isSpacelike;
    },
    enumerable: false,
    configurable: true
  });

  MmlMaction.prototype.core = function () {
    return this.selected.core();
  };

  MmlMaction.prototype.coreMO = function () {
    return this.selected.coreMO();
  };

  MmlMaction.prototype.verifyAttributes = function (options) {
    _super.prototype.verifyAttributes.call(this, options);

    if (this.attributes.get('actiontype') !== 'toggle' && this.attributes.getExplicit('selection') !== undefined) {
      var attributes = this.attributes.getAllAttributes();
      delete attributes.selection;
    }
  };

  MmlMaction.prototype.setTeXclass = function (prev) {
    if (this.attributes.get('actiontype') === 'tooltip' && this.childNodes[1]) {
      this.childNodes[1].setTeXclass(null);
    }

    var selected = this.selected;
    prev = selected.setTeXclass(prev);
    this.updateTeXclass(selected);
    return prev;
  };

  MmlMaction.prototype.nextToggleSelection = function () {
    var selection = Math.max(1, this.attributes.get('selection') + 1);

    if (selection > this.childNodes.length) {
      selection = 1;
    }

    this.attributes.set('selection', selection);
  };

  MmlMaction.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), {
    actiontype: 'toggle',
    selection: 1
  });
  return MmlMaction;
}(MmlNode_js_1.AbstractMmlNode);

exports.MmlMaction = MmlMaction;

/***/ }),

/***/ 7144:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMaligngroup = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var Attributes_js_1 = __webpack_require__(9936);

var MmlMaligngroup = function (_super) {
  __extends(MmlMaligngroup, _super);

  function MmlMaligngroup() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMaligngroup.prototype, "kind", {
    get: function get() {
      return 'maligngroup';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMaligngroup.prototype, "isSpacelike", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  MmlMaligngroup.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
    attributes = this.addInheritedAttributes(attributes, this.attributes.getAllAttributes());

    _super.prototype.setChildInheritedAttributes.call(this, attributes, display, level, prime);
  };

  MmlMaligngroup.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults), {
    groupalign: Attributes_js_1.INHERIT
  });
  return MmlMaligngroup;
}(MmlNode_js_1.AbstractMmlLayoutNode);

exports.MmlMaligngroup = MmlMaligngroup;

/***/ }),

/***/ 9876:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMalignmark = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMalignmark = function (_super) {
  __extends(MmlMalignmark, _super);

  function MmlMalignmark() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMalignmark.prototype, "kind", {
    get: function get() {
      return 'malignmark';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMalignmark.prototype, "arity", {
    get: function get() {
      return 0;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMalignmark.prototype, "isSpacelike", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });
  MmlMalignmark.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), {
    edge: 'left'
  });
  return MmlMalignmark;
}(MmlNode_js_1.AbstractMmlNode);

exports.MmlMalignmark = MmlMalignmark;

/***/ }),

/***/ 7312:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMath = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMath = function (_super) {
  __extends(MmlMath, _super);

  function MmlMath() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMath.prototype, "kind", {
    get: function get() {
      return 'math';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMath.prototype, "linebreakContainer", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  MmlMath.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
    if (this.attributes.get('mode') === 'display') {
      this.attributes.setInherited('display', 'block');
    }

    attributes = this.addInheritedAttributes(attributes, this.attributes.getAllAttributes());
    display = !!this.attributes.get('displaystyle') || !this.attributes.get('displaystyle') && this.attributes.get('display') === 'block';
    this.attributes.setInherited('displaystyle', display);
    level = this.attributes.get('scriptlevel') || this.constructor.defaults['scriptlevel'];

    _super.prototype.setChildInheritedAttributes.call(this, attributes, display, level, prime);
  };

  MmlMath.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults), {
    mathvariant: 'normal',
    mathsize: 'normal',
    mathcolor: '',
    mathbackground: 'transparent',
    dir: 'ltr',
    scriptlevel: 0,
    displaystyle: false,
    display: 'inline',
    maxwidth: '',
    overflow: 'linebreak',
    altimg: '',
    'altimg-width': '',
    'altimg-height': '',
    'altimg-valign': '',
    alttext: '',
    cdgroup: '',
    scriptsizemultiplier: 1 / Math.sqrt(2),
    scriptminsize: '8px',
    infixlinebreakstyle: 'before',
    lineleading: '1ex',
    linebreakmultchar: "\u2062",
    indentshift: 'auto',
    indentalign: 'auto',
    indenttarget: '',
    indentalignfirst: 'indentalign',
    indentshiftfirst: 'indentshift',
    indentalignlast: 'indentalign',
    indentshiftlast: 'indentshift'
  });
  return MmlMath;
}(MmlNode_js_1.AbstractMmlLayoutNode);

exports.MmlMath = MmlMath;

/***/ }),

/***/ 5573:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MathChoice = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MathChoice = function (_super) {
  __extends(MathChoice, _super);

  function MathChoice() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MathChoice.prototype, "kind", {
    get: function get() {
      return 'MathChoice';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MathChoice.prototype, "arity", {
    get: function get() {
      return 4;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MathChoice.prototype, "notParent", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  MathChoice.prototype.setInheritedAttributes = function (attributes, display, level, prime) {
    var selection = display ? 0 : Math.max(0, Math.min(level, 2)) + 1;
    var child = this.childNodes[selection] || this.factory.create('mrow');
    this.parent.replaceChild(child, this);
    child.setInheritedAttributes(attributes, display, level, prime);
  };

  MathChoice.defaults = __assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults);
  return MathChoice;
}(MmlNode_js_1.AbstractMmlBaseNode);

exports.MathChoice = MathChoice;

/***/ }),

/***/ 2895:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMenclose = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMenclose = function (_super) {
  __extends(MmlMenclose, _super);

  function MmlMenclose() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
    return _this;
  }

  Object.defineProperty(MmlMenclose.prototype, "kind", {
    get: function get() {
      return 'menclose';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMenclose.prototype, "arity", {
    get: function get() {
      return -1;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMenclose.prototype, "linebreakContininer", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  MmlMenclose.prototype.setTeXclass = function (prev) {
    prev = this.childNodes[0].setTeXclass(prev);
    this.updateTeXclass(this.childNodes[0]);
    return prev;
  };

  MmlMenclose.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), {
    notation: 'longdiv'
  });
  return MmlMenclose;
}(MmlNode_js_1.AbstractMmlNode);

exports.MmlMenclose = MmlMenclose;

/***/ }),

/***/ 4901:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMerror = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMerror = function (_super) {
  __extends(MmlMerror, _super);

  function MmlMerror() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
    return _this;
  }

  Object.defineProperty(MmlMerror.prototype, "kind", {
    get: function get() {
      return 'merror';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMerror.prototype, "arity", {
    get: function get() {
      return -1;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMerror.prototype, "linebreakContainer", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });
  MmlMerror.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
  return MmlMerror;
}(MmlNode_js_1.AbstractMmlNode);

exports.MmlMerror = MmlMerror;

/***/ }),

/***/ 5356:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMfenced = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMfenced = function (_super) {
  __extends(MmlMfenced, _super);

  function MmlMfenced() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.texclass = MmlNode_js_1.TEXCLASS.INNER;
    _this.separators = [];
    _this.open = null;
    _this.close = null;
    return _this;
  }

  Object.defineProperty(MmlMfenced.prototype, "kind", {
    get: function get() {
      return 'mfenced';
    },
    enumerable: false,
    configurable: true
  });

  MmlMfenced.prototype.setTeXclass = function (prev) {
    this.getPrevClass(prev);

    if (this.open) {
      prev = this.open.setTeXclass(prev);
    }

    if (this.childNodes[0]) {
      prev = this.childNodes[0].setTeXclass(prev);
    }

    for (var i = 1, m = this.childNodes.length; i < m; i++) {
      if (this.separators[i - 1]) {
        prev = this.separators[i - 1].setTeXclass(prev);
      }

      if (this.childNodes[i]) {
        prev = this.childNodes[i].setTeXclass(prev);
      }
    }

    if (this.close) {
      prev = this.close.setTeXclass(prev);
    }

    this.updateTeXclass(this.open);
    return prev;
  };

  MmlMfenced.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
    var e_1, _a;

    this.addFakeNodes();

    try {
      for (var _b = __values([this.open, this.close].concat(this.separators)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;

        if (child) {
          child.setInheritedAttributes(attributes, display, level, prime);
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    _super.prototype.setChildInheritedAttributes.call(this, attributes, display, level, prime);
  };

  MmlMfenced.prototype.addFakeNodes = function () {
    var e_2, _a;

    var _b = this.attributes.getList('open', 'close', 'separators'),
        open = _b.open,
        close = _b.close,
        separators = _b.separators;

    open = open.replace(/[ \t\n\r]/g, '');
    close = close.replace(/[ \t\n\r]/g, '');
    separators = separators.replace(/[ \t\n\r]/g, '');

    if (open) {
      this.open = this.fakeNode(open, {
        fence: true,
        form: 'prefix'
      }, MmlNode_js_1.TEXCLASS.OPEN);
    }

    if (separators) {
      while (separators.length < this.childNodes.length - 1) {
        separators += separators.charAt(separators.length - 1);
      }

      var i = 0;

      try {
        for (var _c = __values(this.childNodes.slice(1)), _d = _c.next(); !_d.done; _d = _c.next()) {
          var child = _d.value;

          if (child) {
            this.separators.push(this.fakeNode(separators.charAt(i++)));
          }
        }
      } catch (e_2_1) {
        e_2 = {
          error: e_2_1
        };
      } finally {
        try {
          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
        } finally {
          if (e_2) throw e_2.error;
        }
      }
    }

    if (close) {
      this.close = this.fakeNode(close, {
        fence: true,
        form: 'postfix'
      }, MmlNode_js_1.TEXCLASS.CLOSE);
    }
  };

  MmlMfenced.prototype.fakeNode = function (c, properties, texClass) {
    if (properties === void 0) {
      properties = {};
    }

    if (texClass === void 0) {
      texClass = null;
    }

    var text = this.factory.create('text').setText(c);
    var node = this.factory.create('mo', properties, [text]);
    node.texClass = texClass;
    node.parent = this;
    return node;
  };

  MmlMfenced.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), {
    open: '(',
    close: ')',
    separators: ','
  });
  return MmlMfenced;
}(MmlNode_js_1.AbstractMmlNode);

exports.MmlMfenced = MmlMfenced;

/***/ }),

/***/ 487:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMfrac = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMfrac = function (_super) {
  __extends(MmlMfrac, _super);

  function MmlMfrac() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMfrac.prototype, "kind", {
    get: function get() {
      return 'mfrac';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMfrac.prototype, "arity", {
    get: function get() {
      return 2;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMfrac.prototype, "linebreakContainer", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  MmlMfrac.prototype.setTeXclass = function (prev) {
    var e_1, _a;

    this.getPrevClass(prev);

    try {
      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;
        child.setTeXclass(null);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return this;
  };

  MmlMfrac.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
    if (!display || level > 0) {
      level++;
    }

    this.childNodes[0].setInheritedAttributes(attributes, false, level, prime);
    this.childNodes[1].setInheritedAttributes(attributes, false, level, true);
  };

  MmlMfrac.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), {
    linethickness: 'medium',
    numalign: 'center',
    denomalign: 'center',
    bevelled: false
  });
  return MmlMfrac;
}(MmlNode_js_1.AbstractMmlBaseNode);

exports.MmlMfrac = MmlMfrac;

/***/ }),

/***/ 6912:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMglyph = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMglyph = function (_super) {
  __extends(MmlMglyph, _super);

  function MmlMglyph() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
    return _this;
  }

  Object.defineProperty(MmlMglyph.prototype, "kind", {
    get: function get() {
      return 'mglyph';
    },
    enumerable: false,
    configurable: true
  });
  MmlMglyph.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults), {
    alt: '',
    src: '',
    width: 'auto',
    height: 'auto',
    valign: '0em'
  });
  return MmlMglyph;
}(MmlNode_js_1.AbstractMmlTokenNode);

exports.MmlMglyph = MmlMglyph;

/***/ }),

/***/ 219:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMi = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMi = function (_super) {
  __extends(MmlMi, _super);

  function MmlMi() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
    return _this;
  }

  Object.defineProperty(MmlMi.prototype, "kind", {
    get: function get() {
      return 'mi';
    },
    enumerable: false,
    configurable: true
  });

  MmlMi.prototype.setInheritedAttributes = function (attributes, display, level, prime) {
    if (attributes === void 0) {
      attributes = {};
    }

    if (display === void 0) {
      display = false;
    }

    if (level === void 0) {
      level = 0;
    }

    if (prime === void 0) {
      prime = false;
    }

    _super.prototype.setInheritedAttributes.call(this, attributes, display, level, prime);

    var text = this.getText();

    if (text.match(MmlMi.singleCharacter) && !attributes.mathvariant) {
      this.attributes.setInherited('mathvariant', 'italic');
    }
  };

  MmlMi.prototype.setTeXclass = function (prev) {
    this.getPrevClass(prev);
    var name = this.getText();

    if (name.length > 1 && name.match(MmlMi.operatorName) && this.attributes.get('mathvariant') === 'normal' && this.getProperty('autoOP') === undefined && this.getProperty('texClass') === undefined) {
      this.texClass = MmlNode_js_1.TEXCLASS.OP;
      this.setProperty('autoOP', true);
    }

    return this;
  };

  MmlMi.defaults = __assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults);
  MmlMi.operatorName = /^[a-z][a-z0-9]*$/i;
  MmlMi.singleCharacter = /^[\uD800-\uDBFF]?.[\u0300-\u036F\u1AB0-\u1ABE\u1DC0-\u1DFF\u20D0-\u20EF]*$/;
  return MmlMi;
}(MmlNode_js_1.AbstractMmlTokenNode);

exports.MmlMi = MmlMi;

/***/ }),

/***/ 5114:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlNone = exports.MmlMprescripts = exports.MmlMmultiscripts = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var msubsup_js_1 = __webpack_require__(1432);

var MmlMmultiscripts = function (_super) {
  __extends(MmlMmultiscripts, _super);

  function MmlMmultiscripts() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMmultiscripts.prototype, "kind", {
    get: function get() {
      return 'mmultiscripts';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMmultiscripts.prototype, "arity", {
    get: function get() {
      return 1;
    },
    enumerable: false,
    configurable: true
  });

  MmlMmultiscripts.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
    this.childNodes[0].setInheritedAttributes(attributes, display, level, prime);
    var prescripts = false;

    for (var i = 1, n = 0; i < this.childNodes.length; i++) {
      var child = this.childNodes[i];

      if (child.isKind('mprescripts')) {
        if (!prescripts) {
          prescripts = true;

          if (i % 2 === 0) {
            var mrow = this.factory.create('mrow');
            this.childNodes.splice(i, 0, mrow);
            mrow.parent = this;
            i++;
          }
        }
      } else {
        var primestyle = prime || n % 2 === 0;
        child.setInheritedAttributes(attributes, false, level + 1, primestyle);
        n++;
      }
    }

    if (this.childNodes.length % 2 === (prescripts ? 1 : 0)) {
      this.appendChild(this.factory.create('mrow'));
      this.childNodes[this.childNodes.length - 1].setInheritedAttributes(attributes, false, level + 1, prime);
    }
  };

  MmlMmultiscripts.prototype.verifyChildren = function (options) {
    var prescripts = false;
    var fix = options['fixMmultiscripts'];

    for (var i = 0; i < this.childNodes.length; i++) {
      var child = this.childNodes[i];

      if (child.isKind('mprescripts')) {
        if (prescripts) {
          child.mError(child.kind + ' can only appear once in ' + this.kind, options, true);
        } else {
          prescripts = true;

          if (i % 2 === 0 && !fix) {
            this.mError('There must be an equal number of prescripts of each type', options);
          }
        }
      }
    }

    if (this.childNodes.length % 2 === (prescripts ? 1 : 0) && !fix) {
      this.mError('There must be an equal number of scripts of each type', options);
    }

    _super.prototype.verifyChildren.call(this, options);
  };

  MmlMmultiscripts.defaults = __assign({}, msubsup_js_1.MmlMsubsup.defaults);
  return MmlMmultiscripts;
}(msubsup_js_1.MmlMsubsup);

exports.MmlMmultiscripts = MmlMmultiscripts;

var MmlMprescripts = function (_super) {
  __extends(MmlMprescripts, _super);

  function MmlMprescripts() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMprescripts.prototype, "kind", {
    get: function get() {
      return 'mprescripts';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMprescripts.prototype, "arity", {
    get: function get() {
      return 0;
    },
    enumerable: false,
    configurable: true
  });

  MmlMprescripts.prototype.verifyTree = function (options) {
    _super.prototype.verifyTree.call(this, options);

    if (this.parent && !this.parent.isKind('mmultiscripts')) {
      this.mError(this.kind + ' must be a child of mmultiscripts', options, true);
    }
  };

  MmlMprescripts.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
  return MmlMprescripts;
}(MmlNode_js_1.AbstractMmlNode);

exports.MmlMprescripts = MmlMprescripts;

var MmlNone = function (_super) {
  __extends(MmlNone, _super);

  function MmlNone() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlNone.prototype, "kind", {
    get: function get() {
      return 'none';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlNone.prototype, "arity", {
    get: function get() {
      return 0;
    },
    enumerable: false,
    configurable: true
  });

  MmlNone.prototype.verifyTree = function (options) {
    _super.prototype.verifyTree.call(this, options);

    if (this.parent && !this.parent.isKind('mmultiscripts')) {
      this.mError(this.kind + ' must be a child of mmultiscripts', options, true);
    }
  };

  MmlNone.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
  return MmlNone;
}(MmlNode_js_1.AbstractMmlNode);

exports.MmlNone = MmlNone;

/***/ }),

/***/ 1843:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMn = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMn = function (_super) {
  __extends(MmlMn, _super);

  function MmlMn() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
    return _this;
  }

  Object.defineProperty(MmlMn.prototype, "kind", {
    get: function get() {
      return 'mn';
    },
    enumerable: false,
    configurable: true
  });
  MmlMn.defaults = __assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults);
  return MmlMn;
}(MmlNode_js_1.AbstractMmlTokenNode);

exports.MmlMn = MmlMn;

/***/ }),

/***/ 5:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMo = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var OperatorDictionary_js_1 = __webpack_require__(5417);

var string_js_1 = __webpack_require__(4944);

var MmlMo = function (_super) {
  __extends(MmlMo, _super);

  function MmlMo() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this._texClass = null;
    _this.lspace = 5 / 18;
    _this.rspace = 5 / 18;
    return _this;
  }

  Object.defineProperty(MmlMo.prototype, "texClass", {
    get: function get() {
      if (this._texClass === null) {
        var mo = this.getText();

        var _a = __read(this.handleExplicitForm(this.getForms()), 3),
            form1 = _a[0],
            form2 = _a[1],
            form3 = _a[2];

        var OPTABLE_1 = this.constructor.OPTABLE;
        var def = OPTABLE_1[form1][mo] || OPTABLE_1[form2][mo] || OPTABLE_1[form3][mo];
        return def ? def[2] : MmlNode_js_1.TEXCLASS.REL;
      }

      return this._texClass;
    },
    set: function set(value) {
      this._texClass = value;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMo.prototype, "kind", {
    get: function get() {
      return 'mo';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMo.prototype, "isEmbellished", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMo.prototype, "hasNewLine", {
    get: function get() {
      return this.attributes.get('linebreak') === 'newline';
    },
    enumerable: false,
    configurable: true
  });

  MmlMo.prototype.coreParent = function () {
    var embellished = this;
    var parent = this;
    var math = this.factory.getNodeClass('math');

    while (parent && parent.isEmbellished && parent.coreMO() === this && !(parent instanceof math)) {
      embellished = parent;
      parent = parent.parent;
    }

    return embellished;
  };

  MmlMo.prototype.coreText = function (parent) {
    if (!parent) {
      return '';
    }

    if (parent.isEmbellished) {
      return parent.coreMO().getText();
    }

    while (((parent.isKind('mrow') || parent.isKind('TeXAtom') || parent.isKind('mstyle') || parent.isKind('mphantom')) && parent.childNodes.length === 1 || parent.isKind('munderover')) && parent.childNodes[0]) {
      parent = parent.childNodes[0];
    }

    return parent.isToken ? parent.getText() : '';
  };

  MmlMo.prototype.hasSpacingAttributes = function () {
    return this.attributes.isSet('lspace') || this.attributes.isSet('rspace');
  };

  Object.defineProperty(MmlMo.prototype, "isAccent", {
    get: function get() {
      var accent = false;
      var node = this.coreParent().parent;

      if (node) {
        var key = node.isKind('mover') ? node.childNodes[node.over].coreMO() ? 'accent' : '' : node.isKind('munder') ? node.childNodes[node.under].coreMO() ? 'accentunder' : '' : node.isKind('munderover') ? this === node.childNodes[node.over].coreMO() ? 'accent' : this === node.childNodes[node.under].coreMO() ? 'accentunder' : '' : '';

        if (key) {
          var value = node.attributes.getExplicit(key);
          accent = value !== undefined ? accent : this.attributes.get('accent');
        }
      }

      return accent;
    },
    enumerable: false,
    configurable: true
  });

  MmlMo.prototype.setTeXclass = function (prev) {
    var _a = this.attributes.getList('form', 'fence'),
        form = _a.form,
        fence = _a.fence;

    if (this.getProperty('texClass') === undefined && (this.attributes.isSet('lspace') || this.attributes.isSet('rspace'))) {
      return null;
    }

    if (fence && this.texClass === MmlNode_js_1.TEXCLASS.REL) {
      if (form === 'prefix') {
        this.texClass = MmlNode_js_1.TEXCLASS.OPEN;
      }

      if (form === 'postfix') {
        this.texClass = MmlNode_js_1.TEXCLASS.CLOSE;
      }
    }

    return this.adjustTeXclass(prev);
  };

  MmlMo.prototype.adjustTeXclass = function (prev) {
    var texClass = this.texClass;
    var prevClass = this.prevClass;

    if (texClass === MmlNode_js_1.TEXCLASS.NONE) {
      return prev;
    }

    if (prev) {
      if (prev.getProperty('autoOP') && (texClass === MmlNode_js_1.TEXCLASS.BIN || texClass === MmlNode_js_1.TEXCLASS.REL)) {
        prevClass = prev.texClass = MmlNode_js_1.TEXCLASS.ORD;
      }

      prevClass = this.prevClass = prev.texClass || MmlNode_js_1.TEXCLASS.ORD;
      this.prevLevel = this.attributes.getInherited('scriptlevel');
    } else {
      prevClass = this.prevClass = MmlNode_js_1.TEXCLASS.NONE;
    }

    if (texClass === MmlNode_js_1.TEXCLASS.BIN && (prevClass === MmlNode_js_1.TEXCLASS.NONE || prevClass === MmlNode_js_1.TEXCLASS.BIN || prevClass === MmlNode_js_1.TEXCLASS.OP || prevClass === MmlNode_js_1.TEXCLASS.REL || prevClass === MmlNode_js_1.TEXCLASS.OPEN || prevClass === MmlNode_js_1.TEXCLASS.PUNCT)) {
      this.texClass = MmlNode_js_1.TEXCLASS.ORD;
    } else if (prevClass === MmlNode_js_1.TEXCLASS.BIN && (texClass === MmlNode_js_1.TEXCLASS.REL || texClass === MmlNode_js_1.TEXCLASS.CLOSE || texClass === MmlNode_js_1.TEXCLASS.PUNCT)) {
      prev.texClass = this.prevClass = MmlNode_js_1.TEXCLASS.ORD;
    } else if (texClass === MmlNode_js_1.TEXCLASS.BIN) {
      var child = this;
      var parent_1 = this.parent;

      while (parent_1 && parent_1.parent && parent_1.isEmbellished && (parent_1.childNodes.length === 1 || !parent_1.isKind('mrow') && parent_1.core() === child)) {
        child = parent_1;
        parent_1 = parent_1.parent;
      }

      if (parent_1.childNodes[parent_1.childNodes.length - 1] === child) {
        this.texClass = MmlNode_js_1.TEXCLASS.ORD;
      }
    }

    return this;
  };

  MmlMo.prototype.setInheritedAttributes = function (attributes, display, level, prime) {
    if (attributes === void 0) {
      attributes = {};
    }

    if (display === void 0) {
      display = false;
    }

    if (level === void 0) {
      level = 0;
    }

    if (prime === void 0) {
      prime = false;
    }

    _super.prototype.setInheritedAttributes.call(this, attributes, display, level, prime);

    var mo = this.getText();
    this.checkOperatorTable(mo);
    this.checkPseudoScripts(mo);
    this.checkPrimes(mo);
    this.checkMathAccent(mo);
  };

  MmlMo.prototype.checkOperatorTable = function (mo) {
    var e_1, _a;

    var _b = __read(this.handleExplicitForm(this.getForms()), 3),
        form1 = _b[0],
        form2 = _b[1],
        form3 = _b[2];

    this.attributes.setInherited('form', form1);
    var OPTABLE = this.constructor.OPTABLE;
    var def = OPTABLE[form1][mo] || OPTABLE[form2][mo] || OPTABLE[form3][mo];

    if (def) {
      if (this.getProperty('texClass') === undefined) {
        this.texClass = def[2];
      }

      try {
        for (var _c = __values(Object.keys(def[3] || {})), _d = _c.next(); !_d.done; _d = _c.next()) {
          var name_1 = _d.value;
          this.attributes.setInherited(name_1, def[3][name_1]);
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
        } finally {
          if (e_1) throw e_1.error;
        }
      }

      this.lspace = (def[0] + 1) / 18;
      this.rspace = (def[1] + 1) / 18;
    } else {
      var range = OperatorDictionary_js_1.getRange(mo);

      if (range) {
        if (this.getProperty('texClass') === undefined) {
          this.texClass = range[2];
        }

        var spacing = this.constructor.MMLSPACING[range[2]];
        this.lspace = (spacing[0] + 1) / 18;
        this.rspace = (spacing[1] + 1) / 18;
      }
    }
  };

  MmlMo.prototype.getForms = function () {
    var core = this;
    var parent = this.parent;
    var Parent = this.Parent;

    while (Parent && Parent.isEmbellished) {
      core = parent;
      parent = Parent.parent;
      Parent = Parent.Parent;
    }

    if (parent && parent.isKind('mrow') && parent.nonSpaceLength() !== 1) {
      if (parent.firstNonSpace() === core) {
        return ['prefix', 'infix', 'postfix'];
      }

      if (parent.lastNonSpace() === core) {
        return ['postfix', 'infix', 'prefix'];
      }
    }

    return ['infix', 'prefix', 'postfix'];
  };

  MmlMo.prototype.handleExplicitForm = function (forms) {
    if (this.attributes.isSet('form')) {
      var form_1 = this.attributes.get('form');
      forms = [form_1].concat(forms.filter(function (name) {
        return name !== form_1;
      }));
    }

    return forms;
  };

  MmlMo.prototype.checkPseudoScripts = function (mo) {
    var PSEUDOSCRIPTS = this.constructor.pseudoScripts;
    if (!mo.match(PSEUDOSCRIPTS)) return;
    var parent = this.coreParent().Parent;
    var isPseudo = !parent || !(parent.isKind('msubsup') && !parent.isKind('msub'));
    this.setProperty('pseudoscript', isPseudo);

    if (isPseudo) {
      this.attributes.setInherited('lspace', 0);
      this.attributes.setInherited('rspace', 0);
    }
  };

  MmlMo.prototype.checkPrimes = function (mo) {
    var PRIMES = this.constructor.primes;
    if (!mo.match(PRIMES)) return;
    var REMAP = this.constructor.remapPrimes;
    var primes = string_js_1.unicodeString(string_js_1.unicodeChars(mo).map(function (c) {
      return REMAP[c];
    }));
    this.setProperty('primes', primes);
  };

  MmlMo.prototype.checkMathAccent = function (mo) {
    var parent = this.Parent;
    if (this.getProperty('mathaccent') !== undefined || !parent || !parent.isKind('munderover')) return;
    var base = parent.childNodes[0];
    if (base.isEmbellished && base.coreMO() === this) return;
    var MATHACCENT = this.constructor.mathaccents;

    if (mo.match(MATHACCENT)) {
      this.setProperty('mathaccent', true);
    }
  };

  MmlMo.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults), {
    form: 'infix',
    fence: false,
    separator: false,
    lspace: 'thickmathspace',
    rspace: 'thickmathspace',
    stretchy: false,
    symmetric: false,
    maxsize: 'infinity',
    minsize: '0em',
    largeop: false,
    movablelimits: false,
    accent: false,
    linebreak: 'auto',
    lineleading: '1ex',
    linebreakstyle: 'before',
    indentalign: 'auto',
    indentshift: '0',
    indenttarget: '',
    indentalignfirst: 'indentalign',
    indentshiftfirst: 'indentshift',
    indentalignlast: 'indentalign',
    indentshiftlast: 'indentshift'
  });
  MmlMo.MMLSPACING = OperatorDictionary_js_1.MMLSPACING;
  MmlMo.OPTABLE = OperatorDictionary_js_1.OPTABLE;
  MmlMo.pseudoScripts = new RegExp(['^["\'*`', "\xAA", "\xB0", "\xB2-\xB4", "\xB9", "\xBA", "\u2018-\u201F", "\u2032-\u2037\u2057", "\u2070\u2071", "\u2074-\u207F", "\u2080-\u208E", ']+$'].join(''));
  MmlMo.primes = new RegExp(['^["\'`', "\u2018-\u201F", ']+$'].join(''));
  MmlMo.remapPrimes = {
    0x0022: 0x2033,
    0x0027: 0x2032,
    0x0060: 0x2035,
    0x2018: 0x2035,
    0x2019: 0x2032,
    0x201A: 0x2032,
    0x201B: 0x2035,
    0x201C: 0x2036,
    0x201D: 0x2033,
    0x201E: 0x2033,
    0x201F: 0x2036
  };
  MmlMo.mathaccents = new RegExp(['^[', "\xB4\u0301\u02CA", "`\u0300\u02CB", "\xA8\u0308", "~\u0303\u02DC", "\xAF\u0304\u02C9", "\u02D8\u0306", "\u02C7\u030C", "^\u0302\u02C6", "\u2192\u20D7", "\u02D9\u0307", "\u02DA\u030A", "\u20DB", "\u20DC", ']$'].join(''));
  return MmlMo;
}(MmlNode_js_1.AbstractMmlTokenNode);

exports.MmlMo = MmlMo;

/***/ }),

/***/ 3063:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMpadded = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMpadded = function (_super) {
  __extends(MmlMpadded, _super);

  function MmlMpadded() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMpadded.prototype, "kind", {
    get: function get() {
      return 'mpadded';
    },
    enumerable: false,
    configurable: true
  });
  MmlMpadded.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults), {
    width: '',
    height: '',
    depth: '',
    lspace: 0,
    voffset: 0
  });
  return MmlMpadded;
}(MmlNode_js_1.AbstractMmlLayoutNode);

exports.MmlMpadded = MmlMpadded;

/***/ }),

/***/ 4547:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMphantom = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMphantom = function (_super) {
  __extends(MmlMphantom, _super);

  function MmlMphantom() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
    return _this;
  }

  Object.defineProperty(MmlMphantom.prototype, "kind", {
    get: function get() {
      return 'mphantom';
    },
    enumerable: false,
    configurable: true
  });
  MmlMphantom.defaults = __assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults);
  return MmlMphantom;
}(MmlNode_js_1.AbstractMmlLayoutNode);

exports.MmlMphantom = MmlMphantom;

/***/ }),

/***/ 7400:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMroot = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMroot = function (_super) {
  __extends(MmlMroot, _super);

  function MmlMroot() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
    return _this;
  }

  Object.defineProperty(MmlMroot.prototype, "kind", {
    get: function get() {
      return 'mroot';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMroot.prototype, "arity", {
    get: function get() {
      return 2;
    },
    enumerable: false,
    configurable: true
  });

  MmlMroot.prototype.setTeXclass = function (prev) {
    this.getPrevClass(prev);
    this.childNodes[0].setTeXclass(null);
    this.childNodes[1].setTeXclass(null);
    return this;
  };

  MmlMroot.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
    this.childNodes[0].setInheritedAttributes(attributes, display, level, true);
    this.childNodes[1].setInheritedAttributes(attributes, false, level + 2, prime);
  };

  MmlMroot.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
  return MmlMroot;
}(MmlNode_js_1.AbstractMmlNode);

exports.MmlMroot = MmlMroot;

/***/ }),

/***/ 7931:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlInferredMrow = exports.MmlMrow = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMrow = function (_super) {
  __extends(MmlMrow, _super);

  function MmlMrow() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this._core = null;
    return _this;
  }

  Object.defineProperty(MmlMrow.prototype, "kind", {
    get: function get() {
      return 'mrow';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMrow.prototype, "isSpacelike", {
    get: function get() {
      var e_1, _a;

      try {
        for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
          var child = _c.value;

          if (!child.isSpacelike) {
            return false;
          }
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_1) throw e_1.error;
        }
      }

      return true;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMrow.prototype, "isEmbellished", {
    get: function get() {
      var e_2, _a;

      var embellished = false;
      var i = 0;

      try {
        for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
          var child = _c.value;

          if (child) {
            if (child.isEmbellished) {
              if (embellished) {
                return false;
              }

              embellished = true;
              this._core = i;
            } else if (!child.isSpacelike) {
              return false;
            }
          }

          i++;
        }
      } catch (e_2_1) {
        e_2 = {
          error: e_2_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_2) throw e_2.error;
        }
      }

      return embellished;
    },
    enumerable: false,
    configurable: true
  });

  MmlMrow.prototype.core = function () {
    if (!this.isEmbellished || this._core == null) {
      return this;
    }

    return this.childNodes[this._core];
  };

  MmlMrow.prototype.coreMO = function () {
    if (!this.isEmbellished || this._core == null) {
      return this;
    }

    return this.childNodes[this._core].coreMO();
  };

  MmlMrow.prototype.nonSpaceLength = function () {
    var e_3, _a;

    var n = 0;

    try {
      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;

        if (child && !child.isSpacelike) {
          n++;
        }
      }
    } catch (e_3_1) {
      e_3 = {
        error: e_3_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_3) throw e_3.error;
      }
    }

    return n;
  };

  MmlMrow.prototype.firstNonSpace = function () {
    var e_4, _a;

    try {
      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;

        if (child && !child.isSpacelike) {
          return child;
        }
      }
    } catch (e_4_1) {
      e_4 = {
        error: e_4_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_4) throw e_4.error;
      }
    }

    return null;
  };

  MmlMrow.prototype.lastNonSpace = function () {
    var i = this.childNodes.length;

    while (--i >= 0) {
      var child = this.childNodes[i];

      if (child && !child.isSpacelike) {
        return child;
      }
    }

    return null;
  };

  MmlMrow.prototype.setTeXclass = function (prev) {
    var e_5, _a, e_6, _b;

    if (this.getProperty('open') != null || this.getProperty('close') != null) {
      this.getPrevClass(prev);
      prev = null;

      try {
        for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
          var child = _d.value;
          prev = child.setTeXclass(prev);
        }
      } catch (e_5_1) {
        e_5 = {
          error: e_5_1
        };
      } finally {
        try {
          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
        } finally {
          if (e_5) throw e_5.error;
        }
      }

      if (this.texClass == null) {
        this.texClass = MmlNode_js_1.TEXCLASS.INNER;
      }
    } else {
      try {
        for (var _e = __values(this.childNodes), _f = _e.next(); !_f.done; _f = _e.next()) {
          var child = _f.value;
          prev = child.setTeXclass(prev);
        }
      } catch (e_6_1) {
        e_6 = {
          error: e_6_1
        };
      } finally {
        try {
          if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
        } finally {
          if (e_6) throw e_6.error;
        }
      }

      if (this.childNodes[0]) {
        this.updateTeXclass(this.childNodes[0]);
      }
    }

    return prev;
  };

  MmlMrow.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
  return MmlMrow;
}(MmlNode_js_1.AbstractMmlNode);

exports.MmlMrow = MmlMrow;

var MmlInferredMrow = function (_super) {
  __extends(MmlInferredMrow, _super);

  function MmlInferredMrow() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlInferredMrow.prototype, "kind", {
    get: function get() {
      return 'inferredMrow';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlInferredMrow.prototype, "isInferred", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlInferredMrow.prototype, "notParent", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  MmlInferredMrow.prototype.toString = function () {
    return '[' + this.childNodes.join(',') + ']';
  };

  MmlInferredMrow.defaults = MmlMrow.defaults;
  return MmlInferredMrow;
}(MmlMrow);

exports.MmlInferredMrow = MmlInferredMrow;

/***/ }),

/***/ 2147:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMs = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMs = function (_super) {
  __extends(MmlMs, _super);

  function MmlMs() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
    return _this;
  }

  Object.defineProperty(MmlMs.prototype, "kind", {
    get: function get() {
      return 'ms';
    },
    enumerable: false,
    configurable: true
  });
  MmlMs.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults), {
    lquote: '"',
    rquote: '"'
  });
  return MmlMs;
}(MmlNode_js_1.AbstractMmlTokenNode);

exports.MmlMs = MmlMs;

/***/ }),

/***/ 4073:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMspace = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMspace = function (_super) {
  __extends(MmlMspace, _super);

  function MmlMspace() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.texclass = MmlNode_js_1.TEXCLASS.NONE;
    return _this;
  }

  MmlMspace.prototype.setTeXclass = function (prev) {
    return prev;
  };

  Object.defineProperty(MmlMspace.prototype, "kind", {
    get: function get() {
      return 'mspace';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMspace.prototype, "arity", {
    get: function get() {
      return 0;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMspace.prototype, "isSpacelike", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMspace.prototype, "hasNewline", {
    get: function get() {
      var attributes = this.attributes;
      return attributes.getExplicit('width') == null && attributes.getExplicit('height') == null && attributes.getExplicit('depth') == null && attributes.get('linebreak') === 'newline';
    },
    enumerable: false,
    configurable: true
  });
  MmlMspace.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults), {
    width: '0em',
    height: '0ex',
    depth: '0ex',
    linebreak: 'auto'
  });
  return MmlMspace;
}(MmlNode_js_1.AbstractMmlTokenNode);

exports.MmlMspace = MmlMspace;

/***/ }),

/***/ 9926:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMsqrt = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMsqrt = function (_super) {
  __extends(MmlMsqrt, _super);

  function MmlMsqrt() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
    return _this;
  }

  Object.defineProperty(MmlMsqrt.prototype, "kind", {
    get: function get() {
      return 'msqrt';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMsqrt.prototype, "arity", {
    get: function get() {
      return -1;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMsqrt.prototype, "linebreakContainer", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  MmlMsqrt.prototype.setTeXclass = function (prev) {
    this.getPrevClass(prev);
    this.childNodes[0].setTeXclass(null);
    return this;
  };

  MmlMsqrt.prototype.setChildInheritedAttributes = function (attributes, display, level, _prime) {
    this.childNodes[0].setInheritedAttributes(attributes, display, level, true);
  };

  MmlMsqrt.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
  return MmlMsqrt;
}(MmlNode_js_1.AbstractMmlNode);

exports.MmlMsqrt = MmlMsqrt;

/***/ }),

/***/ 5270:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMstyle = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var Attributes_js_1 = __webpack_require__(9936);

var MmlMstyle = function (_super) {
  __extends(MmlMstyle, _super);

  function MmlMstyle() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMstyle.prototype, "kind", {
    get: function get() {
      return 'mstyle';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMstyle.prototype, "notParent", {
    get: function get() {
      return this.childNodes[0] && this.childNodes[0].childNodes.length === 1;
    },
    enumerable: false,
    configurable: true
  });

  MmlMstyle.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
    var scriptlevel = this.attributes.getExplicit('scriptlevel');

    if (scriptlevel != null) {
      scriptlevel = scriptlevel.toString();

      if (scriptlevel.match(/^\s*[-+]/)) {
        level += parseInt(scriptlevel);
      } else {
        level = parseInt(scriptlevel);
      }

      prime = false;
    }

    var displaystyle = this.attributes.getExplicit('displaystyle');

    if (displaystyle != null) {
      display = displaystyle === true;
      prime = false;
    }

    var cramped = this.attributes.getExplicit('data-cramped');

    if (cramped != null) {
      prime = cramped;
    }

    attributes = this.addInheritedAttributes(attributes, this.attributes.getAllAttributes());
    this.childNodes[0].setInheritedAttributes(attributes, display, level, prime);
  };

  MmlMstyle.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults), {
    scriptlevel: Attributes_js_1.INHERIT,
    displaystyle: Attributes_js_1.INHERIT,
    scriptsizemultiplier: 1 / Math.sqrt(2),
    scriptminsize: '8px',
    mathbackground: Attributes_js_1.INHERIT,
    mathcolor: Attributes_js_1.INHERIT,
    dir: Attributes_js_1.INHERIT,
    infixlinebreakstyle: 'before'
  });
  return MmlMstyle;
}(MmlNode_js_1.AbstractMmlLayoutNode);

exports.MmlMstyle = MmlMstyle;

/***/ }),

/***/ 1432:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMsup = exports.MmlMsub = exports.MmlMsubsup = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMsubsup = function (_super) {
  __extends(MmlMsubsup, _super);

  function MmlMsubsup() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMsubsup.prototype, "kind", {
    get: function get() {
      return 'msubsup';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMsubsup.prototype, "arity", {
    get: function get() {
      return 3;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMsubsup.prototype, "base", {
    get: function get() {
      return 0;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMsubsup.prototype, "sub", {
    get: function get() {
      return 1;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMsubsup.prototype, "sup", {
    get: function get() {
      return 2;
    },
    enumerable: false,
    configurable: true
  });

  MmlMsubsup.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
    var nodes = this.childNodes;
    nodes[0].setInheritedAttributes(attributes, display, level, prime);
    nodes[1].setInheritedAttributes(attributes, false, level + 1, prime || this.sub === 1);

    if (!nodes[2]) {
      return;
    }

    nodes[2].setInheritedAttributes(attributes, false, level + 1, prime || this.sub === 2);
  };

  MmlMsubsup.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), {
    subscriptshift: '',
    superscriptshift: ''
  });
  return MmlMsubsup;
}(MmlNode_js_1.AbstractMmlBaseNode);

exports.MmlMsubsup = MmlMsubsup;

var MmlMsub = function (_super) {
  __extends(MmlMsub, _super);

  function MmlMsub() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMsub.prototype, "kind", {
    get: function get() {
      return 'msub';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMsub.prototype, "arity", {
    get: function get() {
      return 2;
    },
    enumerable: false,
    configurable: true
  });
  MmlMsub.defaults = __assign({}, MmlMsubsup.defaults);
  return MmlMsub;
}(MmlMsubsup);

exports.MmlMsub = MmlMsub;

var MmlMsup = function (_super) {
  __extends(MmlMsup, _super);

  function MmlMsup() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMsup.prototype, "kind", {
    get: function get() {
      return 'msup';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMsup.prototype, "arity", {
    get: function get() {
      return 2;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMsup.prototype, "sup", {
    get: function get() {
      return 1;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMsup.prototype, "sub", {
    get: function get() {
      return 2;
    },
    enumerable: false,
    configurable: true
  });
  MmlMsup.defaults = __assign({}, MmlMsubsup.defaults);
  return MmlMsup;
}(MmlMsubsup);

exports.MmlMsup = MmlMsup;

/***/ }),

/***/ 2444:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMtable = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var string_js_1 = __webpack_require__(4944);

var MmlMtable = function (_super) {
  __extends(MmlMtable, _super);

  function MmlMtable() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.properties = {
      useHeight: true
    };
    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
    return _this;
  }

  Object.defineProperty(MmlMtable.prototype, "kind", {
    get: function get() {
      return 'mtable';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMtable.prototype, "linebreakContainer", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  MmlMtable.prototype.setInheritedAttributes = function (attributes, display, level, prime) {
    var e_1, _a;

    try {
      for (var indentAttributes_1 = __values(MmlNode_js_1.indentAttributes), indentAttributes_1_1 = indentAttributes_1.next(); !indentAttributes_1_1.done; indentAttributes_1_1 = indentAttributes_1.next()) {
        var name_1 = indentAttributes_1_1.value;

        if (attributes[name_1]) {
          this.attributes.setInherited(name_1, attributes[name_1][1]);
        }

        if (this.attributes.getExplicit(name_1) !== undefined) {
          delete this.attributes.getAllAttributes()[name_1];
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (indentAttributes_1_1 && !indentAttributes_1_1.done && (_a = indentAttributes_1.return)) _a.call(indentAttributes_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    _super.prototype.setInheritedAttributes.call(this, attributes, display, level, prime);
  };

  MmlMtable.prototype.setChildInheritedAttributes = function (attributes, display, level, _prime) {
    var e_2, _a, e_3, _b;

    try {
      for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
        var child = _d.value;

        if (!child.isKind('mtr')) {
          this.replaceChild(this.factory.create('mtr'), child).appendChild(child);
        }
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_2) throw e_2.error;
      }
    }

    level = this.getProperty('scriptlevel') || level;
    display = !!(this.attributes.getExplicit('displaystyle') || this.attributes.getDefault('displaystyle'));
    attributes = this.addInheritedAttributes(attributes, {
      columnalign: this.attributes.get('columnalign'),
      rowalign: 'center'
    });
    var cramped = this.attributes.getExplicit('data-cramped');
    var ralign = string_js_1.split(this.attributes.get('rowalign'));

    try {
      for (var _e = __values(this.childNodes), _f = _e.next(); !_f.done; _f = _e.next()) {
        var child = _f.value;
        attributes.rowalign[1] = ralign.shift() || attributes.rowalign[1];
        child.setInheritedAttributes(attributes, display, level, !!cramped);
      }
    } catch (e_3_1) {
      e_3 = {
        error: e_3_1
      };
    } finally {
      try {
        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
      } finally {
        if (e_3) throw e_3.error;
      }
    }
  };

  MmlMtable.prototype.verifyChildren = function (options) {
    var e_4, _a;

    if (!options['fixMtables']) {
      try {
        for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
          var child = _c.value;

          if (!child.isKind('mtr')) {
            this.mError('Children of ' + this.kind + ' must be mtr or mlabeledtr', options);
          }
        }
      } catch (e_4_1) {
        e_4 = {
          error: e_4_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_4) throw e_4.error;
        }
      }
    }

    _super.prototype.verifyChildren.call(this, options);
  };

  MmlMtable.prototype.setTeXclass = function (prev) {
    var e_5, _a;

    this.getPrevClass(prev);

    try {
      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;
        child.setTeXclass(null);
      }
    } catch (e_5_1) {
      e_5 = {
        error: e_5_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_5) throw e_5.error;
      }
    }

    return this;
  };

  MmlMtable.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), {
    align: 'axis',
    rowalign: 'baseline',
    columnalign: 'center',
    groupalign: '{left}',
    alignmentscope: true,
    columnwidth: 'auto',
    width: 'auto',
    rowspacing: '1ex',
    columnspacing: '.8em',
    rowlines: 'none',
    columnlines: 'none',
    frame: 'none',
    framespacing: '0.4em 0.5ex',
    equalrows: false,
    equalcolumns: false,
    displaystyle: false,
    side: 'right',
    minlabelspacing: '0.8em'
  });
  return MmlMtable;
}(MmlNode_js_1.AbstractMmlNode);

exports.MmlMtable = MmlMtable;

/***/ }),

/***/ 6195:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMtd = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var Attributes_js_1 = __webpack_require__(9936);

var MmlMtd = function (_super) {
  __extends(MmlMtd, _super);

  function MmlMtd() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMtd.prototype, "kind", {
    get: function get() {
      return 'mtd';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMtd.prototype, "arity", {
    get: function get() {
      return -1;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMtd.prototype, "linebreakContainer", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  MmlMtd.prototype.verifyChildren = function (options) {
    if (this.parent && !this.parent.isKind('mtr')) {
      this.mError(this.kind + ' can only be a child of an mtr or mlabeledtr', options, true);
      return;
    }

    _super.prototype.verifyChildren.call(this, options);
  };

  MmlMtd.prototype.setTeXclass = function (prev) {
    this.getPrevClass(prev);
    this.childNodes[0].setTeXclass(null);
    return this;
  };

  MmlMtd.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), {
    rowspan: 1,
    columnspan: 1,
    rowalign: Attributes_js_1.INHERIT,
    columnalign: Attributes_js_1.INHERIT,
    groupalign: Attributes_js_1.INHERIT
  });
  return MmlMtd;
}(MmlNode_js_1.AbstractMmlBaseNode);

exports.MmlMtd = MmlMtd;

/***/ }),

/***/ 3006:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMtext = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMtext = function (_super) {
  __extends(MmlMtext, _super);

  function MmlMtext() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
    return _this;
  }

  Object.defineProperty(MmlMtext.prototype, "kind", {
    get: function get() {
      return 'mtext';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMtext.prototype, "isSpacelike", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });
  MmlMtext.defaults = __assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults);
  return MmlMtext;
}(MmlNode_js_1.AbstractMmlTokenNode);

exports.MmlMtext = MmlMtext;

/***/ }),

/***/ 3640:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMlabeledtr = exports.MmlMtr = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var Attributes_js_1 = __webpack_require__(9936);

var string_js_1 = __webpack_require__(4944);

var MmlMtr = function (_super) {
  __extends(MmlMtr, _super);

  function MmlMtr() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMtr.prototype, "kind", {
    get: function get() {
      return 'mtr';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMtr.prototype, "linebreakContainer", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  MmlMtr.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
    var e_1, _a, e_2, _b;

    try {
      for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
        var child = _d.value;

        if (!child.isKind('mtd')) {
          this.replaceChild(this.factory.create('mtd'), child).appendChild(child);
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    var calign = string_js_1.split(this.attributes.get('columnalign'));

    if (this.arity === 1) {
      calign.unshift(this.parent.attributes.get('side'));
    }

    attributes = this.addInheritedAttributes(attributes, {
      rowalign: this.attributes.get('rowalign'),
      columnalign: 'center'
    });

    try {
      for (var _e = __values(this.childNodes), _f = _e.next(); !_f.done; _f = _e.next()) {
        var child = _f.value;
        attributes.columnalign[1] = calign.shift() || attributes.columnalign[1];
        child.setInheritedAttributes(attributes, display, level, prime);
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
      } finally {
        if (e_2) throw e_2.error;
      }
    }
  };

  MmlMtr.prototype.verifyChildren = function (options) {
    var e_3, _a;

    if (this.parent && !this.parent.isKind('mtable')) {
      this.mError(this.kind + ' can only be a child of an mtable', options, true);
      return;
    }

    if (!options['fixMtables']) {
      try {
        for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
          var child = _c.value;

          if (!child.isKind('mtd')) {
            var mtr = this.replaceChild(this.factory.create('mtr'), child);
            mtr.mError('Children of ' + this.kind + ' must be mtd', options, true);
          }
        }
      } catch (e_3_1) {
        e_3 = {
          error: e_3_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_3) throw e_3.error;
        }
      }
    }

    _super.prototype.verifyChildren.call(this, options);
  };

  MmlMtr.prototype.setTeXclass = function (prev) {
    var e_4, _a;

    this.getPrevClass(prev);

    try {
      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;
        child.setTeXclass(null);
      }
    } catch (e_4_1) {
      e_4 = {
        error: e_4_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_4) throw e_4.error;
      }
    }

    return this;
  };

  MmlMtr.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), {
    rowalign: Attributes_js_1.INHERIT,
    columnalign: Attributes_js_1.INHERIT,
    groupalign: Attributes_js_1.INHERIT
  });
  return MmlMtr;
}(MmlNode_js_1.AbstractMmlNode);

exports.MmlMtr = MmlMtr;

var MmlMlabeledtr = function (_super) {
  __extends(MmlMlabeledtr, _super);

  function MmlMlabeledtr() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMlabeledtr.prototype, "kind", {
    get: function get() {
      return 'mlabeledtr';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMlabeledtr.prototype, "arity", {
    get: function get() {
      return 1;
    },
    enumerable: false,
    configurable: true
  });
  return MmlMlabeledtr;
}(MmlMtr);

exports.MmlMlabeledtr = MmlMlabeledtr;

/***/ }),

/***/ 4389:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlMover = exports.MmlMunder = exports.MmlMunderover = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlMunderover = function (_super) {
  __extends(MmlMunderover, _super);

  function MmlMunderover() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMunderover.prototype, "kind", {
    get: function get() {
      return 'munderover';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMunderover.prototype, "arity", {
    get: function get() {
      return 3;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMunderover.prototype, "base", {
    get: function get() {
      return 0;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMunderover.prototype, "under", {
    get: function get() {
      return 1;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMunderover.prototype, "over", {
    get: function get() {
      return 2;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMunderover.prototype, "linebreakContainer", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  MmlMunderover.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
    var nodes = this.childNodes;
    nodes[0].setInheritedAttributes(attributes, display, level, prime || !!nodes[this.over]);
    var force = !!(!display && nodes[0].coreMO().attributes.get('movablelimits'));
    var ACCENTS = this.constructor.ACCENTS;
    nodes[1].setInheritedAttributes(attributes, false, this.getScriptlevel(ACCENTS[1], force, level), prime || this.under === 1);
    this.setInheritedAccent(1, ACCENTS[1], display, level, prime, force);

    if (!nodes[2]) {
      return;
    }

    nodes[2].setInheritedAttributes(attributes, false, this.getScriptlevel(ACCENTS[2], force, level), prime || this.under === 2);
    this.setInheritedAccent(2, ACCENTS[2], display, level, prime, force);
  };

  MmlMunderover.prototype.getScriptlevel = function (accent, force, level) {
    if (force || !this.attributes.get(accent)) {
      level++;
    }

    return level;
  };

  MmlMunderover.prototype.setInheritedAccent = function (n, accent, display, level, prime, force) {
    var node = this.childNodes[n];

    if (this.attributes.getExplicit(accent) == null && node.isEmbellished) {
      var value = node.coreMO().attributes.get('accent');
      this.attributes.setInherited(accent, value);

      if (value !== this.attributes.getDefault(accent)) {
        node.setInheritedAttributes({}, display, this.getScriptlevel(accent, force, level), prime);
      }
    }
  };

  MmlMunderover.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), {
    accent: false,
    accentunder: false,
    align: 'center'
  });
  MmlMunderover.ACCENTS = ['', 'accentunder', 'accent'];
  return MmlMunderover;
}(MmlNode_js_1.AbstractMmlBaseNode);

exports.MmlMunderover = MmlMunderover;

var MmlMunder = function (_super) {
  __extends(MmlMunder, _super);

  function MmlMunder() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMunder.prototype, "kind", {
    get: function get() {
      return 'munder';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMunder.prototype, "arity", {
    get: function get() {
      return 2;
    },
    enumerable: false,
    configurable: true
  });
  MmlMunder.defaults = __assign({}, MmlMunderover.defaults);
  return MmlMunder;
}(MmlMunderover);

exports.MmlMunder = MmlMunder;

var MmlMover = function (_super) {
  __extends(MmlMover, _super);

  function MmlMover() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlMover.prototype, "kind", {
    get: function get() {
      return 'mover';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMover.prototype, "arity", {
    get: function get() {
      return 2;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMover.prototype, "over", {
    get: function get() {
      return 1;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlMover.prototype, "under", {
    get: function get() {
      return 2;
    },
    enumerable: false,
    configurable: true
  });
  MmlMover.defaults = __assign({}, MmlMunderover.defaults);
  MmlMover.ACCENTS = ['', 'accent', 'accentunder'];
  return MmlMover;
}(MmlMunderover);

exports.MmlMover = MmlMover;

/***/ }),

/***/ 176:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MmlAnnotation = exports.MmlAnnotationXML = exports.MmlSemantics = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var MmlSemantics = function (_super) {
  __extends(MmlSemantics, _super);

  function MmlSemantics() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlSemantics.prototype, "kind", {
    get: function get() {
      return 'semantics';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlSemantics.prototype, "arity", {
    get: function get() {
      return 1;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlSemantics.prototype, "notParent", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });
  MmlSemantics.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), {
    definitionUrl: null,
    encoding: null
  });
  return MmlSemantics;
}(MmlNode_js_1.AbstractMmlBaseNode);

exports.MmlSemantics = MmlSemantics;

var MmlAnnotationXML = function (_super) {
  __extends(MmlAnnotationXML, _super);

  function MmlAnnotationXML() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlAnnotationXML.prototype, "kind", {
    get: function get() {
      return 'annotation-xml';
    },
    enumerable: false,
    configurable: true
  });

  MmlAnnotationXML.prototype.setChildInheritedAttributes = function () {};

  MmlAnnotationXML.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), {
    definitionUrl: null,
    encoding: null,
    cd: 'mathmlkeys',
    name: '',
    src: null
  });
  return MmlAnnotationXML;
}(MmlNode_js_1.AbstractMmlNode);

exports.MmlAnnotationXML = MmlAnnotationXML;

var MmlAnnotation = function (_super) {
  __extends(MmlAnnotation, _super);

  function MmlAnnotation() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.properties = {
      isChars: true
    };
    return _this;
  }

  Object.defineProperty(MmlAnnotation.prototype, "kind", {
    get: function get() {
      return 'annotation';
    },
    enumerable: false,
    configurable: true
  });
  MmlAnnotation.defaults = __assign({}, MmlAnnotationXML.defaults);
  return MmlAnnotation;
}(MmlAnnotationXML);

exports.MmlAnnotation = MmlAnnotation;

/***/ }),

/***/ 5417:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.OPTABLE = exports.MMLSPACING = exports.getRange = exports.RANGES = exports.MO = exports.OPDEF = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

function OPDEF(lspace, rspace, texClass, properties) {
  if (texClass === void 0) {
    texClass = MmlNode_js_1.TEXCLASS.BIN;
  }

  if (properties === void 0) {
    properties = null;
  }

  return [lspace, rspace, texClass, properties];
}

exports.OPDEF = OPDEF;
exports.MO = {
  ORD: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.ORD),
  ORD11: OPDEF(1, 1, MmlNode_js_1.TEXCLASS.ORD),
  ORD21: OPDEF(2, 1, MmlNode_js_1.TEXCLASS.ORD),
  ORD02: OPDEF(0, 2, MmlNode_js_1.TEXCLASS.ORD),
  ORD55: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.ORD),
  OP: OPDEF(1, 2, MmlNode_js_1.TEXCLASS.OP, {
    largeop: true,
    movablelimits: true,
    symmetric: true
  }),
  OPFIXED: OPDEF(1, 2, MmlNode_js_1.TEXCLASS.OP, {
    largeop: true,
    movablelimits: true
  }),
  INTEGRAL: OPDEF(0, 1, MmlNode_js_1.TEXCLASS.OP, {
    largeop: true,
    symmetric: true
  }),
  INTEGRAL2: OPDEF(1, 2, MmlNode_js_1.TEXCLASS.OP, {
    largeop: true,
    symmetric: true
  }),
  BIN3: OPDEF(3, 3, MmlNode_js_1.TEXCLASS.BIN),
  BIN4: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.BIN),
  BIN01: OPDEF(0, 1, MmlNode_js_1.TEXCLASS.BIN),
  BIN5: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.BIN),
  TALLBIN: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.BIN, {
    stretchy: true
  }),
  BINOP: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.BIN, {
    largeop: true,
    movablelimits: true
  }),
  REL: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL),
  REL1: OPDEF(1, 1, MmlNode_js_1.TEXCLASS.REL, {
    stretchy: true
  }),
  REL4: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.REL),
  RELSTRETCH: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL, {
    stretchy: true
  }),
  RELACCENT: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL, {
    accent: true
  }),
  WIDEREL: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL, {
    accent: true,
    stretchy: true
  }),
  OPEN: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.OPEN, {
    fence: true,
    stretchy: true,
    symmetric: true
  }),
  CLOSE: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.CLOSE, {
    fence: true,
    stretchy: true,
    symmetric: true
  }),
  INNER: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.INNER),
  PUNCT: OPDEF(0, 3, MmlNode_js_1.TEXCLASS.PUNCT),
  ACCENT: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.ORD, {
    accent: true
  }),
  WIDEACCENT: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.ORD, {
    accent: true,
    stretchy: true
  })
};
exports.RANGES = [[0x0020, 0x007F, MmlNode_js_1.TEXCLASS.REL, 'mo'], [0x00A0, 0x00BF, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0x00C0, 0x024F, MmlNode_js_1.TEXCLASS.ORD, 'mi'], [0x02B0, 0x036F, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0x0370, 0x1A20, MmlNode_js_1.TEXCLASS.ORD, 'mi'], [0x1AB0, 0x1AFF, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0x1B00, 0x1DBF, MmlNode_js_1.TEXCLASS.ORD, 'mi'], [0x1DC0, 0x1DFF, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0x1E00, 0x1FFF, MmlNode_js_1.TEXCLASS.ORD, 'mi'], [0x2000, 0x206F, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0x2070, 0x209F, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0x2100, 0x214F, MmlNode_js_1.TEXCLASS.ORD, 'mi'], [0x2150, 0x218F, MmlNode_js_1.TEXCLASS.ORD, 'mn'], [0x2190, 0x21FF, MmlNode_js_1.TEXCLASS.REL, 'mo'], [0x2200, 0x22FF, MmlNode_js_1.TEXCLASS.BIN, 'mo'], [0x2300, 0x23FF, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0x2460, 0x24FF, MmlNode_js_1.TEXCLASS.ORD, 'mn'], [0x2500, 0x27EF, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0x27F0, 0x27FF, MmlNode_js_1.TEXCLASS.REL, 'mo'], [0x2800, 0x28FF, MmlNode_js_1.TEXCLASS.ORD, 'mtext'], [0x2900, 0x297F, MmlNode_js_1.TEXCLASS.REL, 'mo'], [0x2980, 0x29FF, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0x2A00, 0x2AFF, MmlNode_js_1.TEXCLASS.BIN, 'mo'], [0x2B00, 0x2B2F, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0x2B30, 0x2B4F, MmlNode_js_1.TEXCLASS.REL, 'mo'], [0x2B50, 0x2BFF, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0x2C00, 0x2DE0, MmlNode_js_1.TEXCLASS.ORD, 'mi'], [0x2E00, 0x2E7F, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0x2E80, 0x2FDF, MmlNode_js_1.TEXCLASS.ORD, 'mi'], [0x2FF0, 0x303F, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0x3040, 0xA82F, MmlNode_js_1.TEXCLASS.ORD, 'mi'], [0xA830, 0xA83F, MmlNode_js_1.TEXCLASS.ORD, 'mn'], [0xA840, 0xD7FF, MmlNode_js_1.TEXCLASS.ORD, 'mi'], [0xF900, 0xFDFF, MmlNode_js_1.TEXCLASS.ORD, 'mi'], [0xFE00, 0xFE6F, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0xFE70, 0x100FF, MmlNode_js_1.TEXCLASS.ORD, 'mi'], [0x10100, 0x1018F, MmlNode_js_1.TEXCLASS.ORD, 'mn'], [0x10190, 0x123FF, MmlNode_js_1.TEXCLASS.ORD, 'mi'], [0x12400, 0x1247F, MmlNode_js_1.TEXCLASS.ORD, 'mn'], [0x12480, 0x1BC9F, MmlNode_js_1.TEXCLASS.ORD, 'mi'], [0x1BCA0, 0x1D25F, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0x1D360, 0x1D37F, MmlNode_js_1.TEXCLASS.ORD, 'mn'], [0x1D400, 0x1D7CD, MmlNode_js_1.TEXCLASS.ORD, 'mi'], [0x1D7CE, 0x1D7FF, MmlNode_js_1.TEXCLASS.ORD, 'mn'], [0x1DF00, 0x1F7FF, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0x1F800, 0x1F8FF, MmlNode_js_1.TEXCLASS.REL, 'mo'], [0x1F900, 0x1F9FF, MmlNode_js_1.TEXCLASS.ORD, 'mo'], [0x20000, 0x2FA1F, MmlNode_js_1.TEXCLASS.ORD, 'mi']];

function getRange(text) {
  var e_1, _a;

  var n = text.codePointAt(0);

  try {
    for (var RANGES_1 = __values(exports.RANGES), RANGES_1_1 = RANGES_1.next(); !RANGES_1_1.done; RANGES_1_1 = RANGES_1.next()) {
      var range = RANGES_1_1.value;

      if (n <= range[1]) {
        if (n >= range[0]) {
          return range;
        }

        break;
      }
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (RANGES_1_1 && !RANGES_1_1.done && (_a = RANGES_1.return)) _a.call(RANGES_1);
    } finally {
      if (e_1) throw e_1.error;
    }
  }

  return null;
}

exports.getRange = getRange;
exports.MMLSPACING = [[0, 0], [1, 2], [3, 3], [4, 4], [0, 0], [0, 0], [0, 3]];
exports.OPTABLE = {
  prefix: {
    '(': exports.MO.OPEN,
    '+': exports.MO.BIN01,
    '-': exports.MO.BIN01,
    '[': exports.MO.OPEN,
    '{': exports.MO.OPEN,
    '|': exports.MO.OPEN,
    '||': [0, 0, MmlNode_js_1.TEXCLASS.BIN, {
      fence: true,
      stretchy: true,
      symmetric: true
    }],
    '|||': [0, 0, MmlNode_js_1.TEXCLASS.ORD, {
      fence: true,
      stretchy: true,
      symmetric: true
    }],
    "\xAC": exports.MO.ORD21,
    "\xB1": exports.MO.BIN01,
    "\u2016": [0, 0, MmlNode_js_1.TEXCLASS.ORD, {
      fence: true,
      stretchy: true
    }],
    "\u2018": [0, 0, MmlNode_js_1.TEXCLASS.OPEN, {
      fence: true
    }],
    "\u201C": [0, 0, MmlNode_js_1.TEXCLASS.OPEN, {
      fence: true
    }],
    "\u2145": exports.MO.ORD21,
    "\u2146": OPDEF(2, 0, MmlNode_js_1.TEXCLASS.ORD),
    "\u2200": exports.MO.ORD21,
    "\u2202": exports.MO.ORD21,
    "\u2203": exports.MO.ORD21,
    "\u2204": exports.MO.ORD21,
    "\u2207": exports.MO.ORD21,
    "\u220F": exports.MO.OP,
    "\u2210": exports.MO.OP,
    "\u2211": exports.MO.OP,
    "\u2212": exports.MO.BIN01,
    "\u2213": exports.MO.BIN01,
    "\u221A": [1, 1, MmlNode_js_1.TEXCLASS.ORD, {
      stretchy: true
    }],
    "\u221B": exports.MO.ORD11,
    "\u221C": exports.MO.ORD11,
    "\u2220": exports.MO.ORD,
    "\u2221": exports.MO.ORD,
    "\u2222": exports.MO.ORD,
    "\u222B": exports.MO.INTEGRAL,
    "\u222C": exports.MO.INTEGRAL,
    "\u222D": exports.MO.INTEGRAL,
    "\u222E": exports.MO.INTEGRAL,
    "\u222F": exports.MO.INTEGRAL,
    "\u2230": exports.MO.INTEGRAL,
    "\u2231": exports.MO.INTEGRAL,
    "\u2232": exports.MO.INTEGRAL,
    "\u2233": exports.MO.INTEGRAL,
    "\u22C0": exports.MO.OP,
    "\u22C1": exports.MO.OP,
    "\u22C2": exports.MO.OP,
    "\u22C3": exports.MO.OP,
    "\u2308": exports.MO.OPEN,
    "\u230A": exports.MO.OPEN,
    "\u2329": exports.MO.OPEN,
    "\u2772": exports.MO.OPEN,
    "\u27E6": exports.MO.OPEN,
    "\u27E8": exports.MO.OPEN,
    "\u27EA": exports.MO.OPEN,
    "\u27EC": exports.MO.OPEN,
    "\u27EE": exports.MO.OPEN,
    "\u2980": [0, 0, MmlNode_js_1.TEXCLASS.ORD, {
      fence: true,
      stretchy: true
    }],
    "\u2983": exports.MO.OPEN,
    "\u2985": exports.MO.OPEN,
    "\u2987": exports.MO.OPEN,
    "\u2989": exports.MO.OPEN,
    "\u298B": exports.MO.OPEN,
    "\u298D": exports.MO.OPEN,
    "\u298F": exports.MO.OPEN,
    "\u2991": exports.MO.OPEN,
    "\u2993": exports.MO.OPEN,
    "\u2995": exports.MO.OPEN,
    "\u2997": exports.MO.OPEN,
    "\u29FC": exports.MO.OPEN,
    "\u2A00": exports.MO.OP,
    "\u2A01": exports.MO.OP,
    "\u2A02": exports.MO.OP,
    "\u2A03": exports.MO.OP,
    "\u2A04": exports.MO.OP,
    "\u2A05": exports.MO.OP,
    "\u2A06": exports.MO.OP,
    "\u2A07": exports.MO.OP,
    "\u2A08": exports.MO.OP,
    "\u2A09": exports.MO.OP,
    "\u2A0A": exports.MO.OP,
    "\u2A0B": exports.MO.INTEGRAL2,
    "\u2A0C": exports.MO.INTEGRAL,
    "\u2A0D": exports.MO.INTEGRAL2,
    "\u2A0E": exports.MO.INTEGRAL2,
    "\u2A0F": exports.MO.INTEGRAL2,
    "\u2A10": exports.MO.OP,
    "\u2A11": exports.MO.OP,
    "\u2A12": exports.MO.OP,
    "\u2A13": exports.MO.OP,
    "\u2A14": exports.MO.OP,
    "\u2A15": exports.MO.INTEGRAL2,
    "\u2A16": exports.MO.INTEGRAL2,
    "\u2A17": exports.MO.INTEGRAL2,
    "\u2A18": exports.MO.INTEGRAL2,
    "\u2A19": exports.MO.INTEGRAL2,
    "\u2A1A": exports.MO.INTEGRAL2,
    "\u2A1B": exports.MO.INTEGRAL2,
    "\u2A1C": exports.MO.INTEGRAL2,
    "\u2AFC": exports.MO.OP,
    "\u2AFF": exports.MO.OP
  },
  postfix: {
    '!!': OPDEF(1, 0),
    '!': [1, 0, MmlNode_js_1.TEXCLASS.CLOSE, null],
    '"': exports.MO.ACCENT,
    '&': exports.MO.ORD,
    ')': exports.MO.CLOSE,
    '++': OPDEF(0, 0),
    '--': OPDEF(0, 0),
    '..': OPDEF(0, 0),
    '...': exports.MO.ORD,
    '\'': exports.MO.ACCENT,
    ']': exports.MO.CLOSE,
    '^': exports.MO.WIDEACCENT,
    '_': exports.MO.WIDEACCENT,
    '`': exports.MO.ACCENT,
    '|': exports.MO.CLOSE,
    '}': exports.MO.CLOSE,
    '~': exports.MO.WIDEACCENT,
    '||': [0, 0, MmlNode_js_1.TEXCLASS.BIN, {
      fence: true,
      stretchy: true,
      symmetric: true
    }],
    '|||': [0, 0, MmlNode_js_1.TEXCLASS.ORD, {
      fence: true,
      stretchy: true,
      symmetric: true
    }],
    "\xA8": exports.MO.ACCENT,
    "\xAA": exports.MO.ACCENT,
    "\xAF": exports.MO.WIDEACCENT,
    "\xB0": exports.MO.ORD,
    "\xB2": exports.MO.ACCENT,
    "\xB3": exports.MO.ACCENT,
    "\xB4": exports.MO.ACCENT,
    "\xB8": exports.MO.ACCENT,
    "\xB9": exports.MO.ACCENT,
    "\xBA": exports.MO.ACCENT,
    "\u02C6": exports.MO.WIDEACCENT,
    "\u02C7": exports.MO.WIDEACCENT,
    "\u02C9": exports.MO.WIDEACCENT,
    "\u02CA": exports.MO.ACCENT,
    "\u02CB": exports.MO.ACCENT,
    "\u02CD": exports.MO.WIDEACCENT,
    "\u02D8": exports.MO.ACCENT,
    "\u02D9": exports.MO.ACCENT,
    "\u02DA": exports.MO.ACCENT,
    "\u02DC": exports.MO.WIDEACCENT,
    "\u02DD": exports.MO.ACCENT,
    "\u02F7": exports.MO.WIDEACCENT,
    "\u0302": exports.MO.WIDEACCENT,
    "\u0311": exports.MO.ACCENT,
    "\u03F6": exports.MO.REL,
    "\u2016": [0, 0, MmlNode_js_1.TEXCLASS.ORD, {
      fence: true,
      stretchy: true
    }],
    "\u2019": [0, 0, MmlNode_js_1.TEXCLASS.CLOSE, {
      fence: true
    }],
    "\u201A": exports.MO.ACCENT,
    "\u201B": exports.MO.ACCENT,
    "\u201D": [0, 0, MmlNode_js_1.TEXCLASS.CLOSE, {
      fence: true
    }],
    "\u201E": exports.MO.ACCENT,
    "\u201F": exports.MO.ACCENT,
    "\u2032": exports.MO.ORD,
    "\u2033": exports.MO.ACCENT,
    "\u2034": exports.MO.ACCENT,
    "\u2035": exports.MO.ACCENT,
    "\u2036": exports.MO.ACCENT,
    "\u2037": exports.MO.ACCENT,
    "\u203E": exports.MO.WIDEACCENT,
    "\u2057": exports.MO.ACCENT,
    "\u20DB": exports.MO.ACCENT,
    "\u20DC": exports.MO.ACCENT,
    "\u2309": exports.MO.CLOSE,
    "\u230B": exports.MO.CLOSE,
    "\u232A": exports.MO.CLOSE,
    "\u23B4": exports.MO.WIDEACCENT,
    "\u23B5": exports.MO.WIDEACCENT,
    "\u23DC": exports.MO.WIDEACCENT,
    "\u23DD": exports.MO.WIDEACCENT,
    "\u23DE": exports.MO.WIDEACCENT,
    "\u23DF": exports.MO.WIDEACCENT,
    "\u23E0": exports.MO.WIDEACCENT,
    "\u23E1": exports.MO.WIDEACCENT,
    "\u25A0": exports.MO.BIN3,
    "\u25A1": exports.MO.BIN3,
    "\u25AA": exports.MO.BIN3,
    "\u25AB": exports.MO.BIN3,
    "\u25AD": exports.MO.BIN3,
    "\u25AE": exports.MO.BIN3,
    "\u25AF": exports.MO.BIN3,
    "\u25B0": exports.MO.BIN3,
    "\u25B1": exports.MO.BIN3,
    "\u25B2": exports.MO.BIN4,
    "\u25B4": exports.MO.BIN4,
    "\u25B6": exports.MO.BIN4,
    "\u25B7": exports.MO.BIN4,
    "\u25B8": exports.MO.BIN4,
    "\u25BC": exports.MO.BIN4,
    "\u25BE": exports.MO.BIN4,
    "\u25C0": exports.MO.BIN4,
    "\u25C1": exports.MO.BIN4,
    "\u25C2": exports.MO.BIN4,
    "\u25C4": exports.MO.BIN4,
    "\u25C5": exports.MO.BIN4,
    "\u25C6": exports.MO.BIN4,
    "\u25C7": exports.MO.BIN4,
    "\u25C8": exports.MO.BIN4,
    "\u25C9": exports.MO.BIN4,
    "\u25CC": exports.MO.BIN4,
    "\u25CD": exports.MO.BIN4,
    "\u25CE": exports.MO.BIN4,
    "\u25CF": exports.MO.BIN4,
    "\u25D6": exports.MO.BIN4,
    "\u25D7": exports.MO.BIN4,
    "\u25E6": exports.MO.BIN4,
    "\u266D": exports.MO.ORD02,
    "\u266E": exports.MO.ORD02,
    "\u266F": exports.MO.ORD02,
    "\u2773": exports.MO.CLOSE,
    "\u27E7": exports.MO.CLOSE,
    "\u27E9": exports.MO.CLOSE,
    "\u27EB": exports.MO.CLOSE,
    "\u27ED": exports.MO.CLOSE,
    "\u27EF": exports.MO.CLOSE,
    "\u2980": [0, 0, MmlNode_js_1.TEXCLASS.ORD, {
      fence: true,
      stretchy: true
    }],
    "\u2984": exports.MO.CLOSE,
    "\u2986": exports.MO.CLOSE,
    "\u2988": exports.MO.CLOSE,
    "\u298A": exports.MO.CLOSE,
    "\u298C": exports.MO.CLOSE,
    "\u298E": exports.MO.CLOSE,
    "\u2990": exports.MO.CLOSE,
    "\u2992": exports.MO.CLOSE,
    "\u2994": exports.MO.CLOSE,
    "\u2996": exports.MO.CLOSE,
    "\u2998": exports.MO.CLOSE,
    "\u29FD": exports.MO.CLOSE
  },
  infix: {
    '!=': exports.MO.BIN4,
    '#': exports.MO.ORD,
    '$': exports.MO.ORD,
    '%': [3, 3, MmlNode_js_1.TEXCLASS.ORD, null],
    '&&': exports.MO.BIN4,
    '': exports.MO.ORD,
    '*': exports.MO.BIN3,
    '**': OPDEF(1, 1),
    '*=': exports.MO.BIN4,
    '+': exports.MO.BIN4,
    '+=': exports.MO.BIN4,
    ',': [0, 3, MmlNode_js_1.TEXCLASS.PUNCT, {
      linebreakstyle: 'after',
      separator: true
    }],
    '-': exports.MO.BIN4,
    '-=': exports.MO.BIN4,
    '->': exports.MO.BIN5,
    '.': [0, 3, MmlNode_js_1.TEXCLASS.PUNCT, {
      separator: true
    }],
    '/': exports.MO.ORD11,
    '//': OPDEF(1, 1),
    '/=': exports.MO.BIN4,
    ':': [1, 2, MmlNode_js_1.TEXCLASS.REL, null],
    ':=': exports.MO.BIN4,
    ';': [0, 3, MmlNode_js_1.TEXCLASS.PUNCT, {
      linebreakstyle: 'after',
      separator: true
    }],
    '<': exports.MO.REL,
    '<=': exports.MO.BIN5,
    '<>': OPDEF(1, 1),
    '=': exports.MO.REL,
    '==': exports.MO.BIN4,
    '>': exports.MO.REL,
    '>=': exports.MO.BIN5,
    '?': [1, 1, MmlNode_js_1.TEXCLASS.CLOSE, null],
    '@': exports.MO.ORD11,
    '\\': exports.MO.ORD,
    '^': exports.MO.ORD11,
    '_': exports.MO.ORD11,
    '|': [2, 2, MmlNode_js_1.TEXCLASS.ORD, {
      fence: true,
      stretchy: true,
      symmetric: true
    }],
    '||': [2, 2, MmlNode_js_1.TEXCLASS.BIN, {
      fence: true,
      stretchy: true,
      symmetric: true
    }],
    '|||': [2, 2, MmlNode_js_1.TEXCLASS.ORD, {
      fence: true,
      stretchy: true,
      symmetric: true
    }],
    "\xB1": exports.MO.BIN4,
    "\xB7": exports.MO.BIN4,
    "\xD7": exports.MO.BIN4,
    "\xF7": exports.MO.BIN4,
    "\u02B9": exports.MO.ORD,
    "\u0300": exports.MO.ACCENT,
    "\u0301": exports.MO.ACCENT,
    "\u0303": exports.MO.WIDEACCENT,
    "\u0304": exports.MO.ACCENT,
    "\u0306": exports.MO.ACCENT,
    "\u0307": exports.MO.ACCENT,
    "\u0308": exports.MO.ACCENT,
    "\u030C": exports.MO.ACCENT,
    "\u0332": exports.MO.WIDEACCENT,
    "\u0338": exports.MO.REL4,
    "\u2015": [0, 0, MmlNode_js_1.TEXCLASS.ORD, {
      stretchy: true
    }],
    "\u2017": [0, 0, MmlNode_js_1.TEXCLASS.ORD, {
      stretchy: true
    }],
    "\u2020": exports.MO.BIN3,
    "\u2021": exports.MO.BIN3,
    "\u2022": exports.MO.BIN4,
    "\u2026": exports.MO.INNER,
    "\u2043": exports.MO.BIN4,
    "\u2044": exports.MO.TALLBIN,
    "\u2061": exports.MO.ORD,
    "\u2062": exports.MO.ORD,
    "\u2063": [0, 0, MmlNode_js_1.TEXCLASS.ORD, {
      linebreakstyle: 'after',
      separator: true
    }],
    "\u2064": exports.MO.ORD,
    "\u20D7": exports.MO.ACCENT,
    "\u2111": exports.MO.ORD,
    "\u2113": exports.MO.ORD,
    "\u2118": exports.MO.ORD,
    "\u211C": exports.MO.ORD,
    "\u2190": exports.MO.WIDEREL,
    "\u2191": exports.MO.RELSTRETCH,
    "\u2192": exports.MO.WIDEREL,
    "\u2193": exports.MO.RELSTRETCH,
    "\u2194": exports.MO.WIDEREL,
    "\u2195": exports.MO.RELSTRETCH,
    "\u2196": exports.MO.RELSTRETCH,
    "\u2197": exports.MO.RELSTRETCH,
    "\u2198": exports.MO.RELSTRETCH,
    "\u2199": exports.MO.RELSTRETCH,
    "\u219A": exports.MO.RELACCENT,
    "\u219B": exports.MO.RELACCENT,
    "\u219C": exports.MO.WIDEREL,
    "\u219D": exports.MO.WIDEREL,
    "\u219E": exports.MO.WIDEREL,
    "\u219F": exports.MO.WIDEREL,
    "\u21A0": exports.MO.WIDEREL,
    "\u21A1": exports.MO.RELSTRETCH,
    "\u21A2": exports.MO.WIDEREL,
    "\u21A3": exports.MO.WIDEREL,
    "\u21A4": exports.MO.WIDEREL,
    "\u21A5": exports.MO.RELSTRETCH,
    "\u21A6": exports.MO.WIDEREL,
    "\u21A7": exports.MO.RELSTRETCH,
    "\u21A8": exports.MO.RELSTRETCH,
    "\u21A9": exports.MO.WIDEREL,
    "\u21AA": exports.MO.WIDEREL,
    "\u21AB": exports.MO.WIDEREL,
    "\u21AC": exports.MO.WIDEREL,
    "\u21AD": exports.MO.WIDEREL,
    "\u21AE": exports.MO.RELACCENT,
    "\u21AF": exports.MO.RELSTRETCH,
    "\u21B0": exports.MO.RELSTRETCH,
    "\u21B1": exports.MO.RELSTRETCH,
    "\u21B2": exports.MO.RELSTRETCH,
    "\u21B3": exports.MO.RELSTRETCH,
    "\u21B4": exports.MO.RELSTRETCH,
    "\u21B5": exports.MO.RELSTRETCH,
    "\u21B6": exports.MO.RELACCENT,
    "\u21B7": exports.MO.RELACCENT,
    "\u21B8": exports.MO.REL,
    "\u21B9": exports.MO.WIDEREL,
    "\u21BA": exports.MO.REL,
    "\u21BB": exports.MO.REL,
    "\u21BC": exports.MO.WIDEREL,
    "\u21BD": exports.MO.WIDEREL,
    "\u21BE": exports.MO.RELSTRETCH,
    "\u21BF": exports.MO.RELSTRETCH,
    "\u21C0": exports.MO.WIDEREL,
    "\u21C1": exports.MO.WIDEREL,
    "\u21C2": exports.MO.RELSTRETCH,
    "\u21C3": exports.MO.RELSTRETCH,
    "\u21C4": exports.MO.WIDEREL,
    "\u21C5": exports.MO.RELSTRETCH,
    "\u21C6": exports.MO.WIDEREL,
    "\u21C7": exports.MO.WIDEREL,
    "\u21C8": exports.MO.RELSTRETCH,
    "\u21C9": exports.MO.WIDEREL,
    "\u21CA": exports.MO.RELSTRETCH,
    "\u21CB": exports.MO.WIDEREL,
    "\u21CC": exports.MO.WIDEREL,
    "\u21CD": exports.MO.RELACCENT,
    "\u21CE": exports.MO.RELACCENT,
    "\u21CF": exports.MO.RELACCENT,
    "\u21D0": exports.MO.WIDEREL,
    "\u21D1": exports.MO.RELSTRETCH,
    "\u21D2": exports.MO.WIDEREL,
    "\u21D3": exports.MO.RELSTRETCH,
    "\u21D4": exports.MO.WIDEREL,
    "\u21D5": exports.MO.RELSTRETCH,
    "\u21D6": exports.MO.RELSTRETCH,
    "\u21D7": exports.MO.RELSTRETCH,
    "\u21D8": exports.MO.RELSTRETCH,
    "\u21D9": exports.MO.RELSTRETCH,
    "\u21DA": exports.MO.WIDEREL,
    "\u21DB": exports.MO.WIDEREL,
    "\u21DC": exports.MO.WIDEREL,
    "\u21DD": exports.MO.WIDEREL,
    "\u21DE": exports.MO.REL,
    "\u21DF": exports.MO.REL,
    "\u21E0": exports.MO.WIDEREL,
    "\u21E1": exports.MO.RELSTRETCH,
    "\u21E2": exports.MO.WIDEREL,
    "\u21E3": exports.MO.RELSTRETCH,
    "\u21E4": exports.MO.WIDEREL,
    "\u21E5": exports.MO.WIDEREL,
    "\u21E6": exports.MO.WIDEREL,
    "\u21E7": exports.MO.RELSTRETCH,
    "\u21E8": exports.MO.WIDEREL,
    "\u21E9": exports.MO.RELSTRETCH,
    "\u21EA": exports.MO.RELSTRETCH,
    "\u21EB": exports.MO.RELSTRETCH,
    "\u21EC": exports.MO.RELSTRETCH,
    "\u21ED": exports.MO.RELSTRETCH,
    "\u21EE": exports.MO.RELSTRETCH,
    "\u21EF": exports.MO.RELSTRETCH,
    "\u21F0": exports.MO.WIDEREL,
    "\u21F1": exports.MO.REL,
    "\u21F2": exports.MO.REL,
    "\u21F3": exports.MO.RELSTRETCH,
    "\u21F4": exports.MO.RELACCENT,
    "\u21F5": exports.MO.RELSTRETCH,
    "\u21F6": exports.MO.WIDEREL,
    "\u21F7": exports.MO.RELACCENT,
    "\u21F8": exports.MO.RELACCENT,
    "\u21F9": exports.MO.RELACCENT,
    "\u21FA": exports.MO.RELACCENT,
    "\u21FB": exports.MO.RELACCENT,
    "\u21FC": exports.MO.RELACCENT,
    "\u21FD": exports.MO.WIDEREL,
    "\u21FE": exports.MO.WIDEREL,
    "\u21FF": exports.MO.WIDEREL,
    "\u2201": OPDEF(1, 2, MmlNode_js_1.TEXCLASS.ORD),
    "\u2205": exports.MO.ORD,
    "\u2206": exports.MO.BIN3,
    "\u2208": exports.MO.REL,
    "\u2209": exports.MO.REL,
    "\u220A": exports.MO.REL,
    "\u220B": exports.MO.REL,
    "\u220C": exports.MO.REL,
    "\u220D": exports.MO.REL,
    "\u220E": exports.MO.BIN3,
    "\u2212": exports.MO.BIN4,
    "\u2213": exports.MO.BIN4,
    "\u2214": exports.MO.BIN4,
    "\u2215": exports.MO.TALLBIN,
    "\u2216": exports.MO.BIN4,
    "\u2217": exports.MO.BIN4,
    "\u2218": exports.MO.BIN4,
    "\u2219": exports.MO.BIN4,
    "\u221D": exports.MO.REL,
    "\u221E": exports.MO.ORD,
    "\u221F": exports.MO.REL,
    "\u2223": exports.MO.REL,
    "\u2224": exports.MO.REL,
    "\u2225": exports.MO.REL,
    "\u2226": exports.MO.REL,
    "\u2227": exports.MO.BIN4,
    "\u2228": exports.MO.BIN4,
    "\u2229": exports.MO.BIN4,
    "\u222A": exports.MO.BIN4,
    "\u2234": exports.MO.REL,
    "\u2235": exports.MO.REL,
    "\u2236": exports.MO.REL,
    "\u2237": exports.MO.REL,
    "\u2238": exports.MO.BIN4,
    "\u2239": exports.MO.REL,
    "\u223A": exports.MO.BIN4,
    "\u223B": exports.MO.REL,
    "\u223C": exports.MO.REL,
    "\u223D": exports.MO.REL,
    "\u223D\u0331": exports.MO.BIN3,
    "\u223E": exports.MO.REL,
    "\u223F": exports.MO.BIN3,
    "\u2240": exports.MO.BIN4,
    "\u2241": exports.MO.REL,
    "\u2242": exports.MO.REL,
    "\u2242\u0338": exports.MO.REL,
    "\u2243": exports.MO.REL,
    "\u2244": exports.MO.REL,
    "\u2245": exports.MO.REL,
    "\u2246": exports.MO.REL,
    "\u2247": exports.MO.REL,
    "\u2248": exports.MO.REL,
    "\u2249": exports.MO.REL,
    "\u224A": exports.MO.REL,
    "\u224B": exports.MO.REL,
    "\u224C": exports.MO.REL,
    "\u224D": exports.MO.REL,
    "\u224E": exports.MO.REL,
    "\u224E\u0338": exports.MO.REL,
    "\u224F": exports.MO.REL,
    "\u224F\u0338": exports.MO.REL,
    "\u2250": exports.MO.REL,
    "\u2251": exports.MO.REL,
    "\u2252": exports.MO.REL,
    "\u2253": exports.MO.REL,
    "\u2254": exports.MO.REL,
    "\u2255": exports.MO.REL,
    "\u2256": exports.MO.REL,
    "\u2257": exports.MO.REL,
    "\u2258": exports.MO.REL,
    "\u2259": exports.MO.REL,
    "\u225A": exports.MO.REL,
    "\u225B": exports.MO.REL,
    "\u225C": exports.MO.REL,
    "\u225D": exports.MO.REL,
    "\u225E": exports.MO.REL,
    "\u225F": exports.MO.REL,
    "\u2260": exports.MO.REL,
    "\u2261": exports.MO.REL,
    "\u2262": exports.MO.REL,
    "\u2263": exports.MO.REL,
    "\u2264": exports.MO.REL,
    "\u2265": exports.MO.REL,
    "\u2266": exports.MO.REL,
    "\u2266\u0338": exports.MO.REL,
    "\u2267": exports.MO.REL,
    "\u2268": exports.MO.REL,
    "\u2269": exports.MO.REL,
    "\u226A": exports.MO.REL,
    "\u226A\u0338": exports.MO.REL,
    "\u226B": exports.MO.REL,
    "\u226B\u0338": exports.MO.REL,
    "\u226C": exports.MO.REL,
    "\u226D": exports.MO.REL,
    "\u226E": exports.MO.REL,
    "\u226F": exports.MO.REL,
    "\u2270": exports.MO.REL,
    "\u2271": exports.MO.REL,
    "\u2272": exports.MO.REL,
    "\u2273": exports.MO.REL,
    "\u2274": exports.MO.REL,
    "\u2275": exports.MO.REL,
    "\u2276": exports.MO.REL,
    "\u2277": exports.MO.REL,
    "\u2278": exports.MO.REL,
    "\u2279": exports.MO.REL,
    "\u227A": exports.MO.REL,
    "\u227B": exports.MO.REL,
    "\u227C": exports.MO.REL,
    "\u227D": exports.MO.REL,
    "\u227E": exports.MO.REL,
    "\u227F": exports.MO.REL,
    "\u227F\u0338": exports.MO.REL,
    "\u2280": exports.MO.REL,
    "\u2281": exports.MO.REL,
    "\u2282": exports.MO.REL,
    "\u2282\u20D2": exports.MO.REL,
    "\u2283": exports.MO.REL,
    "\u2283\u20D2": exports.MO.REL,
    "\u2284": exports.MO.REL,
    "\u2285": exports.MO.REL,
    "\u2286": exports.MO.REL,
    "\u2287": exports.MO.REL,
    "\u2288": exports.MO.REL,
    "\u2289": exports.MO.REL,
    "\u228A": exports.MO.REL,
    "\u228B": exports.MO.REL,
    "\u228C": exports.MO.BIN4,
    "\u228D": exports.MO.BIN4,
    "\u228E": exports.MO.BIN4,
    "\u228F": exports.MO.REL,
    "\u228F\u0338": exports.MO.REL,
    "\u2290": exports.MO.REL,
    "\u2290\u0338": exports.MO.REL,
    "\u2291": exports.MO.REL,
    "\u2292": exports.MO.REL,
    "\u2293": exports.MO.BIN4,
    "\u2294": exports.MO.BIN4,
    "\u2295": exports.MO.BIN4,
    "\u2296": exports.MO.BIN4,
    "\u2297": exports.MO.BIN4,
    "\u2298": exports.MO.BIN4,
    "\u2299": exports.MO.BIN4,
    "\u229A": exports.MO.BIN4,
    "\u229B": exports.MO.BIN4,
    "\u229C": exports.MO.BIN4,
    "\u229D": exports.MO.BIN4,
    "\u229E": exports.MO.BIN4,
    "\u229F": exports.MO.BIN4,
    "\u22A0": exports.MO.BIN4,
    "\u22A1": exports.MO.BIN4,
    "\u22A2": exports.MO.REL,
    "\u22A3": exports.MO.REL,
    "\u22A4": exports.MO.ORD55,
    "\u22A5": exports.MO.REL,
    "\u22A6": exports.MO.REL,
    "\u22A7": exports.MO.REL,
    "\u22A8": exports.MO.REL,
    "\u22A9": exports.MO.REL,
    "\u22AA": exports.MO.REL,
    "\u22AB": exports.MO.REL,
    "\u22AC": exports.MO.REL,
    "\u22AD": exports.MO.REL,
    "\u22AE": exports.MO.REL,
    "\u22AF": exports.MO.REL,
    "\u22B0": exports.MO.REL,
    "\u22B1": exports.MO.REL,
    "\u22B2": exports.MO.REL,
    "\u22B3": exports.MO.REL,
    "\u22B4": exports.MO.REL,
    "\u22B5": exports.MO.REL,
    "\u22B6": exports.MO.REL,
    "\u22B7": exports.MO.REL,
    "\u22B8": exports.MO.REL,
    "\u22B9": exports.MO.REL,
    "\u22BA": exports.MO.BIN4,
    "\u22BB": exports.MO.BIN4,
    "\u22BC": exports.MO.BIN4,
    "\u22BD": exports.MO.BIN4,
    "\u22BE": exports.MO.BIN3,
    "\u22BF": exports.MO.BIN3,
    "\u22C4": exports.MO.BIN4,
    "\u22C5": exports.MO.BIN4,
    "\u22C6": exports.MO.BIN4,
    "\u22C7": exports.MO.BIN4,
    "\u22C8": exports.MO.REL,
    "\u22C9": exports.MO.BIN4,
    "\u22CA": exports.MO.BIN4,
    "\u22CB": exports.MO.BIN4,
    "\u22CC": exports.MO.BIN4,
    "\u22CD": exports.MO.REL,
    "\u22CE": exports.MO.BIN4,
    "\u22CF": exports.MO.BIN4,
    "\u22D0": exports.MO.REL,
    "\u22D1": exports.MO.REL,
    "\u22D2": exports.MO.BIN4,
    "\u22D3": exports.MO.BIN4,
    "\u22D4": exports.MO.REL,
    "\u22D5": exports.MO.REL,
    "\u22D6": exports.MO.REL,
    "\u22D7": exports.MO.REL,
    "\u22D8": exports.MO.REL,
    "\u22D9": exports.MO.REL,
    "\u22DA": exports.MO.REL,
    "\u22DB": exports.MO.REL,
    "\u22DC": exports.MO.REL,
    "\u22DD": exports.MO.REL,
    "\u22DE": exports.MO.REL,
    "\u22DF": exports.MO.REL,
    "\u22E0": exports.MO.REL,
    "\u22E1": exports.MO.REL,
    "\u22E2": exports.MO.REL,
    "\u22E3": exports.MO.REL,
    "\u22E4": exports.MO.REL,
    "\u22E5": exports.MO.REL,
    "\u22E6": exports.MO.REL,
    "\u22E7": exports.MO.REL,
    "\u22E8": exports.MO.REL,
    "\u22E9": exports.MO.REL,
    "\u22EA": exports.MO.REL,
    "\u22EB": exports.MO.REL,
    "\u22EC": exports.MO.REL,
    "\u22ED": exports.MO.REL,
    "\u22EE": exports.MO.ORD55,
    "\u22EF": exports.MO.INNER,
    "\u22F0": exports.MO.REL,
    "\u22F1": [5, 5, MmlNode_js_1.TEXCLASS.INNER, null],
    "\u22F2": exports.MO.REL,
    "\u22F3": exports.MO.REL,
    "\u22F4": exports.MO.REL,
    "\u22F5": exports.MO.REL,
    "\u22F6": exports.MO.REL,
    "\u22F7": exports.MO.REL,
    "\u22F8": exports.MO.REL,
    "\u22F9": exports.MO.REL,
    "\u22FA": exports.MO.REL,
    "\u22FB": exports.MO.REL,
    "\u22FC": exports.MO.REL,
    "\u22FD": exports.MO.REL,
    "\u22FE": exports.MO.REL,
    "\u22FF": exports.MO.REL,
    "\u2305": exports.MO.BIN3,
    "\u2306": exports.MO.BIN3,
    "\u2322": exports.MO.REL4,
    "\u2323": exports.MO.REL4,
    "\u2329": exports.MO.OPEN,
    "\u232A": exports.MO.CLOSE,
    "\u23AA": exports.MO.ORD,
    "\u23AF": [0, 0, MmlNode_js_1.TEXCLASS.ORD, {
      stretchy: true
    }],
    "\u23B0": exports.MO.OPEN,
    "\u23B1": exports.MO.CLOSE,
    "\u2500": exports.MO.ORD,
    "\u25B3": exports.MO.BIN4,
    "\u25B5": exports.MO.BIN4,
    "\u25B9": exports.MO.BIN4,
    "\u25BD": exports.MO.BIN4,
    "\u25BF": exports.MO.BIN4,
    "\u25C3": exports.MO.BIN4,
    "\u25EF": exports.MO.BIN3,
    "\u2660": exports.MO.ORD,
    "\u2661": exports.MO.ORD,
    "\u2662": exports.MO.ORD,
    "\u2663": exports.MO.ORD,
    "\u2758": exports.MO.REL,
    "\u27F0": exports.MO.RELSTRETCH,
    "\u27F1": exports.MO.RELSTRETCH,
    "\u27F5": exports.MO.WIDEREL,
    "\u27F6": exports.MO.WIDEREL,
    "\u27F7": exports.MO.WIDEREL,
    "\u27F8": exports.MO.WIDEREL,
    "\u27F9": exports.MO.WIDEREL,
    "\u27FA": exports.MO.WIDEREL,
    "\u27FB": exports.MO.WIDEREL,
    "\u27FC": exports.MO.WIDEREL,
    "\u27FD": exports.MO.WIDEREL,
    "\u27FE": exports.MO.WIDEREL,
    "\u27FF": exports.MO.WIDEREL,
    "\u2900": exports.MO.RELACCENT,
    "\u2901": exports.MO.RELACCENT,
    "\u2902": exports.MO.RELACCENT,
    "\u2903": exports.MO.RELACCENT,
    "\u2904": exports.MO.RELACCENT,
    "\u2905": exports.MO.RELACCENT,
    "\u2906": exports.MO.RELACCENT,
    "\u2907": exports.MO.RELACCENT,
    "\u2908": exports.MO.REL,
    "\u2909": exports.MO.REL,
    "\u290A": exports.MO.RELSTRETCH,
    "\u290B": exports.MO.RELSTRETCH,
    "\u290C": exports.MO.WIDEREL,
    "\u290D": exports.MO.WIDEREL,
    "\u290E": exports.MO.WIDEREL,
    "\u290F": exports.MO.WIDEREL,
    "\u2910": exports.MO.WIDEREL,
    "\u2911": exports.MO.RELACCENT,
    "\u2912": exports.MO.RELSTRETCH,
    "\u2913": exports.MO.RELSTRETCH,
    "\u2914": exports.MO.RELACCENT,
    "\u2915": exports.MO.RELACCENT,
    "\u2916": exports.MO.RELACCENT,
    "\u2917": exports.MO.RELACCENT,
    "\u2918": exports.MO.RELACCENT,
    "\u2919": exports.MO.RELACCENT,
    "\u291A": exports.MO.RELACCENT,
    "\u291B": exports.MO.RELACCENT,
    "\u291C": exports.MO.RELACCENT,
    "\u291D": exports.MO.RELACCENT,
    "\u291E": exports.MO.RELACCENT,
    "\u291F": exports.MO.RELACCENT,
    "\u2920": exports.MO.RELACCENT,
    "\u2921": exports.MO.RELSTRETCH,
    "\u2922": exports.MO.RELSTRETCH,
    "\u2923": exports.MO.REL,
    "\u2924": exports.MO.REL,
    "\u2925": exports.MO.REL,
    "\u2926": exports.MO.REL,
    "\u2927": exports.MO.REL,
    "\u2928": exports.MO.REL,
    "\u2929": exports.MO.REL,
    "\u292A": exports.MO.REL,
    "\u292B": exports.MO.REL,
    "\u292C": exports.MO.REL,
    "\u292D": exports.MO.REL,
    "\u292E": exports.MO.REL,
    "\u292F": exports.MO.REL,
    "\u2930": exports.MO.REL,
    "\u2931": exports.MO.REL,
    "\u2932": exports.MO.REL,
    "\u2933": exports.MO.RELACCENT,
    "\u2934": exports.MO.REL,
    "\u2935": exports.MO.REL,
    "\u2936": exports.MO.REL,
    "\u2937": exports.MO.REL,
    "\u2938": exports.MO.REL,
    "\u2939": exports.MO.REL,
    "\u293A": exports.MO.RELACCENT,
    "\u293B": exports.MO.RELACCENT,
    "\u293C": exports.MO.RELACCENT,
    "\u293D": exports.MO.RELACCENT,
    "\u293E": exports.MO.REL,
    "\u293F": exports.MO.REL,
    "\u2940": exports.MO.REL,
    "\u2941": exports.MO.REL,
    "\u2942": exports.MO.RELACCENT,
    "\u2943": exports.MO.RELACCENT,
    "\u2944": exports.MO.RELACCENT,
    "\u2945": exports.MO.RELACCENT,
    "\u2946": exports.MO.RELACCENT,
    "\u2947": exports.MO.RELACCENT,
    "\u2948": exports.MO.RELACCENT,
    "\u2949": exports.MO.REL,
    "\u294A": exports.MO.RELACCENT,
    "\u294B": exports.MO.RELACCENT,
    "\u294C": exports.MO.REL,
    "\u294D": exports.MO.REL,
    "\u294E": exports.MO.WIDEREL,
    "\u294F": exports.MO.RELSTRETCH,
    "\u2950": exports.MO.WIDEREL,
    "\u2951": exports.MO.RELSTRETCH,
    "\u2952": exports.MO.WIDEREL,
    "\u2953": exports.MO.WIDEREL,
    "\u2954": exports.MO.RELSTRETCH,
    "\u2955": exports.MO.RELSTRETCH,
    "\u2956": exports.MO.RELSTRETCH,
    "\u2957": exports.MO.RELSTRETCH,
    "\u2958": exports.MO.RELSTRETCH,
    "\u2959": exports.MO.RELSTRETCH,
    "\u295A": exports.MO.WIDEREL,
    "\u295B": exports.MO.WIDEREL,
    "\u295C": exports.MO.RELSTRETCH,
    "\u295D": exports.MO.RELSTRETCH,
    "\u295E": exports.MO.WIDEREL,
    "\u295F": exports.MO.WIDEREL,
    "\u2960": exports.MO.RELSTRETCH,
    "\u2961": exports.MO.RELSTRETCH,
    "\u2962": exports.MO.RELACCENT,
    "\u2963": exports.MO.REL,
    "\u2964": exports.MO.RELACCENT,
    "\u2965": exports.MO.REL,
    "\u2966": exports.MO.RELACCENT,
    "\u2967": exports.MO.RELACCENT,
    "\u2968": exports.MO.RELACCENT,
    "\u2969": exports.MO.RELACCENT,
    "\u296A": exports.MO.RELACCENT,
    "\u296B": exports.MO.RELACCENT,
    "\u296C": exports.MO.RELACCENT,
    "\u296D": exports.MO.RELACCENT,
    "\u296E": exports.MO.RELSTRETCH,
    "\u296F": exports.MO.RELSTRETCH,
    "\u2970": exports.MO.RELACCENT,
    "\u2971": exports.MO.RELACCENT,
    "\u2972": exports.MO.RELACCENT,
    "\u2973": exports.MO.RELACCENT,
    "\u2974": exports.MO.RELACCENT,
    "\u2975": exports.MO.RELACCENT,
    "\u2976": exports.MO.RELACCENT,
    "\u2977": exports.MO.RELACCENT,
    "\u2978": exports.MO.RELACCENT,
    "\u2979": exports.MO.RELACCENT,
    "\u297A": exports.MO.RELACCENT,
    "\u297B": exports.MO.RELACCENT,
    "\u297C": exports.MO.RELACCENT,
    "\u297D": exports.MO.RELACCENT,
    "\u297E": exports.MO.REL,
    "\u297F": exports.MO.REL,
    "\u2981": exports.MO.BIN3,
    "\u2982": exports.MO.BIN3,
    "\u2999": exports.MO.BIN3,
    "\u299A": exports.MO.BIN3,
    "\u299B": exports.MO.BIN3,
    "\u299C": exports.MO.BIN3,
    "\u299D": exports.MO.BIN3,
    "\u299E": exports.MO.BIN3,
    "\u299F": exports.MO.BIN3,
    "\u29A0": exports.MO.BIN3,
    "\u29A1": exports.MO.BIN3,
    "\u29A2": exports.MO.BIN3,
    "\u29A3": exports.MO.BIN3,
    "\u29A4": exports.MO.BIN3,
    "\u29A5": exports.MO.BIN3,
    "\u29A6": exports.MO.BIN3,
    "\u29A7": exports.MO.BIN3,
    "\u29A8": exports.MO.BIN3,
    "\u29A9": exports.MO.BIN3,
    "\u29AA": exports.MO.BIN3,
    "\u29AB": exports.MO.BIN3,
    "\u29AC": exports.MO.BIN3,
    "\u29AD": exports.MO.BIN3,
    "\u29AE": exports.MO.BIN3,
    "\u29AF": exports.MO.BIN3,
    "\u29B0": exports.MO.BIN3,
    "\u29B1": exports.MO.BIN3,
    "\u29B2": exports.MO.BIN3,
    "\u29B3": exports.MO.BIN3,
    "\u29B4": exports.MO.BIN3,
    "\u29B5": exports.MO.BIN3,
    "\u29B6": exports.MO.BIN4,
    "\u29B7": exports.MO.BIN4,
    "\u29B8": exports.MO.BIN4,
    "\u29B9": exports.MO.BIN4,
    "\u29BA": exports.MO.BIN4,
    "\u29BB": exports.MO.BIN4,
    "\u29BC": exports.MO.BIN4,
    "\u29BD": exports.MO.BIN4,
    "\u29BE": exports.MO.BIN4,
    "\u29BF": exports.MO.BIN4,
    "\u29C0": exports.MO.REL,
    "\u29C1": exports.MO.REL,
    "\u29C2": exports.MO.BIN3,
    "\u29C3": exports.MO.BIN3,
    "\u29C4": exports.MO.BIN4,
    "\u29C5": exports.MO.BIN4,
    "\u29C6": exports.MO.BIN4,
    "\u29C7": exports.MO.BIN4,
    "\u29C8": exports.MO.BIN4,
    "\u29C9": exports.MO.BIN3,
    "\u29CA": exports.MO.BIN3,
    "\u29CB": exports.MO.BIN3,
    "\u29CC": exports.MO.BIN3,
    "\u29CD": exports.MO.BIN3,
    "\u29CE": exports.MO.REL,
    "\u29CF": exports.MO.REL,
    "\u29CF\u0338": exports.MO.REL,
    "\u29D0": exports.MO.REL,
    "\u29D0\u0338": exports.MO.REL,
    "\u29D1": exports.MO.REL,
    "\u29D2": exports.MO.REL,
    "\u29D3": exports.MO.REL,
    "\u29D4": exports.MO.REL,
    "\u29D5": exports.MO.REL,
    "\u29D6": exports.MO.BIN4,
    "\u29D7": exports.MO.BIN4,
    "\u29D8": exports.MO.BIN3,
    "\u29D9": exports.MO.BIN3,
    "\u29DB": exports.MO.BIN3,
    "\u29DC": exports.MO.BIN3,
    "\u29DD": exports.MO.BIN3,
    "\u29DE": exports.MO.REL,
    "\u29DF": exports.MO.BIN3,
    "\u29E0": exports.MO.BIN3,
    "\u29E1": exports.MO.REL,
    "\u29E2": exports.MO.BIN4,
    "\u29E3": exports.MO.REL,
    "\u29E4": exports.MO.REL,
    "\u29E5": exports.MO.REL,
    "\u29E6": exports.MO.REL,
    "\u29E7": exports.MO.BIN3,
    "\u29E8": exports.MO.BIN3,
    "\u29E9": exports.MO.BIN3,
    "\u29EA": exports.MO.BIN3,
    "\u29EB": exports.MO.BIN3,
    "\u29EC": exports.MO.BIN3,
    "\u29ED": exports.MO.BIN3,
    "\u29EE": exports.MO.BIN3,
    "\u29EF": exports.MO.BIN3,
    "\u29F0": exports.MO.BIN3,
    "\u29F1": exports.MO.BIN3,
    "\u29F2": exports.MO.BIN3,
    "\u29F3": exports.MO.BIN3,
    "\u29F4": exports.MO.REL,
    "\u29F5": exports.MO.BIN4,
    "\u29F6": exports.MO.BIN4,
    "\u29F7": exports.MO.BIN4,
    "\u29F8": exports.MO.BIN3,
    "\u29F9": exports.MO.BIN3,
    "\u29FA": exports.MO.BIN3,
    "\u29FB": exports.MO.BIN3,
    "\u29FE": exports.MO.BIN4,
    "\u29FF": exports.MO.BIN4,
    "\u2A1D": exports.MO.BIN3,
    "\u2A1E": exports.MO.BIN3,
    "\u2A1F": exports.MO.BIN3,
    "\u2A20": exports.MO.BIN3,
    "\u2A21": exports.MO.BIN3,
    "\u2A22": exports.MO.BIN4,
    "\u2A23": exports.MO.BIN4,
    "\u2A24": exports.MO.BIN4,
    "\u2A25": exports.MO.BIN4,
    "\u2A26": exports.MO.BIN4,
    "\u2A27": exports.MO.BIN4,
    "\u2A28": exports.MO.BIN4,
    "\u2A29": exports.MO.BIN4,
    "\u2A2A": exports.MO.BIN4,
    "\u2A2B": exports.MO.BIN4,
    "\u2A2C": exports.MO.BIN4,
    "\u2A2D": exports.MO.BIN4,
    "\u2A2E": exports.MO.BIN4,
    "\u2A2F": exports.MO.BIN4,
    "\u2A30": exports.MO.BIN4,
    "\u2A31": exports.MO.BIN4,
    "\u2A32": exports.MO.BIN4,
    "\u2A33": exports.MO.BIN4,
    "\u2A34": exports.MO.BIN4,
    "\u2A35": exports.MO.BIN4,
    "\u2A36": exports.MO.BIN4,
    "\u2A37": exports.MO.BIN4,
    "\u2A38": exports.MO.BIN4,
    "\u2A39": exports.MO.BIN4,
    "\u2A3A": exports.MO.BIN4,
    "\u2A3B": exports.MO.BIN4,
    "\u2A3C": exports.MO.BIN4,
    "\u2A3D": exports.MO.BIN4,
    "\u2A3E": exports.MO.BIN4,
    "\u2A3F": exports.MO.BIN4,
    "\u2A40": exports.MO.BIN4,
    "\u2A41": exports.MO.BIN4,
    "\u2A42": exports.MO.BIN4,
    "\u2A43": exports.MO.BIN4,
    "\u2A44": exports.MO.BIN4,
    "\u2A45": exports.MO.BIN4,
    "\u2A46": exports.MO.BIN4,
    "\u2A47": exports.MO.BIN4,
    "\u2A48": exports.MO.BIN4,
    "\u2A49": exports.MO.BIN4,
    "\u2A4A": exports.MO.BIN4,
    "\u2A4B": exports.MO.BIN4,
    "\u2A4C": exports.MO.BIN4,
    "\u2A4D": exports.MO.BIN4,
    "\u2A4E": exports.MO.BIN4,
    "\u2A4F": exports.MO.BIN4,
    "\u2A50": exports.MO.BIN4,
    "\u2A51": exports.MO.BIN4,
    "\u2A52": exports.MO.BIN4,
    "\u2A53": exports.MO.BIN4,
    "\u2A54": exports.MO.BIN4,
    "\u2A55": exports.MO.BIN4,
    "\u2A56": exports.MO.BIN4,
    "\u2A57": exports.MO.BIN4,
    "\u2A58": exports.MO.BIN4,
    "\u2A59": exports.MO.REL,
    "\u2A5A": exports.MO.BIN4,
    "\u2A5B": exports.MO.BIN4,
    "\u2A5C": exports.MO.BIN4,
    "\u2A5D": exports.MO.BIN4,
    "\u2A5E": exports.MO.BIN4,
    "\u2A5F": exports.MO.BIN4,
    "\u2A60": exports.MO.BIN4,
    "\u2A61": exports.MO.BIN4,
    "\u2A62": exports.MO.BIN4,
    "\u2A63": exports.MO.BIN4,
    "\u2A64": exports.MO.BIN4,
    "\u2A65": exports.MO.BIN4,
    "\u2A66": exports.MO.REL,
    "\u2A67": exports.MO.REL,
    "\u2A68": exports.MO.REL,
    "\u2A69": exports.MO.REL,
    "\u2A6A": exports.MO.REL,
    "\u2A6B": exports.MO.REL,
    "\u2A6C": exports.MO.REL,
    "\u2A6D": exports.MO.REL,
    "\u2A6E": exports.MO.REL,
    "\u2A6F": exports.MO.REL,
    "\u2A70": exports.MO.REL,
    "\u2A71": exports.MO.BIN4,
    "\u2A72": exports.MO.BIN4,
    "\u2A73": exports.MO.REL,
    "\u2A74": exports.MO.REL,
    "\u2A75": exports.MO.REL,
    "\u2A76": exports.MO.REL,
    "\u2A77": exports.MO.REL,
    "\u2A78": exports.MO.REL,
    "\u2A79": exports.MO.REL,
    "\u2A7A": exports.MO.REL,
    "\u2A7B": exports.MO.REL,
    "\u2A7C": exports.MO.REL,
    "\u2A7D": exports.MO.REL,
    "\u2A7D\u0338": exports.MO.REL,
    "\u2A7E": exports.MO.REL,
    "\u2A7E\u0338": exports.MO.REL,
    "\u2A7F": exports.MO.REL,
    "\u2A80": exports.MO.REL,
    "\u2A81": exports.MO.REL,
    "\u2A82": exports.MO.REL,
    "\u2A83": exports.MO.REL,
    "\u2A84": exports.MO.REL,
    "\u2A85": exports.MO.REL,
    "\u2A86": exports.MO.REL,
    "\u2A87": exports.MO.REL,
    "\u2A88": exports.MO.REL,
    "\u2A89": exports.MO.REL,
    "\u2A8A": exports.MO.REL,
    "\u2A8B": exports.MO.REL,
    "\u2A8C": exports.MO.REL,
    "\u2A8D": exports.MO.REL,
    "\u2A8E": exports.MO.REL,
    "\u2A8F": exports.MO.REL,
    "\u2A90": exports.MO.REL,
    "\u2A91": exports.MO.REL,
    "\u2A92": exports.MO.REL,
    "\u2A93": exports.MO.REL,
    "\u2A94": exports.MO.REL,
    "\u2A95": exports.MO.REL,
    "\u2A96": exports.MO.REL,
    "\u2A97": exports.MO.REL,
    "\u2A98": exports.MO.REL,
    "\u2A99": exports.MO.REL,
    "\u2A9A": exports.MO.REL,
    "\u2A9B": exports.MO.REL,
    "\u2A9C": exports.MO.REL,
    "\u2A9D": exports.MO.REL,
    "\u2A9E": exports.MO.REL,
    "\u2A9F": exports.MO.REL,
    "\u2AA0": exports.MO.REL,
    "\u2AA1": exports.MO.REL,
    "\u2AA1\u0338": exports.MO.REL,
    "\u2AA2": exports.MO.REL,
    "\u2AA2\u0338": exports.MO.REL,
    "\u2AA3": exports.MO.REL,
    "\u2AA4": exports.MO.REL,
    "\u2AA5": exports.MO.REL,
    "\u2AA6": exports.MO.REL,
    "\u2AA7": exports.MO.REL,
    "\u2AA8": exports.MO.REL,
    "\u2AA9": exports.MO.REL,
    "\u2AAA": exports.MO.REL,
    "\u2AAB": exports.MO.REL,
    "\u2AAC": exports.MO.REL,
    "\u2AAD": exports.MO.REL,
    "\u2AAE": exports.MO.REL,
    "\u2AAF": exports.MO.REL,
    "\u2AAF\u0338": exports.MO.REL,
    "\u2AB0": exports.MO.REL,
    "\u2AB0\u0338": exports.MO.REL,
    "\u2AB1": exports.MO.REL,
    "\u2AB2": exports.MO.REL,
    "\u2AB3": exports.MO.REL,
    "\u2AB4": exports.MO.REL,
    "\u2AB5": exports.MO.REL,
    "\u2AB6": exports.MO.REL,
    "\u2AB7": exports.MO.REL,
    "\u2AB8": exports.MO.REL,
    "\u2AB9": exports.MO.REL,
    "\u2ABA": exports.MO.REL,
    "\u2ABB": exports.MO.REL,
    "\u2ABC": exports.MO.REL,
    "\u2ABD": exports.MO.REL,
    "\u2ABE": exports.MO.REL,
    "\u2ABF": exports.MO.REL,
    "\u2AC0": exports.MO.REL,
    "\u2AC1": exports.MO.REL,
    "\u2AC2": exports.MO.REL,
    "\u2AC3": exports.MO.REL,
    "\u2AC4": exports.MO.REL,
    "\u2AC5": exports.MO.REL,
    "\u2AC6": exports.MO.REL,
    "\u2AC7": exports.MO.REL,
    "\u2AC8": exports.MO.REL,
    "\u2AC9": exports.MO.REL,
    "\u2ACA": exports.MO.REL,
    "\u2ACB": exports.MO.REL,
    "\u2ACC": exports.MO.REL,
    "\u2ACD": exports.MO.REL,
    "\u2ACE": exports.MO.REL,
    "\u2ACF": exports.MO.REL,
    "\u2AD0": exports.MO.REL,
    "\u2AD1": exports.MO.REL,
    "\u2AD2": exports.MO.REL,
    "\u2AD3": exports.MO.REL,
    "\u2AD4": exports.MO.REL,
    "\u2AD5": exports.MO.REL,
    "\u2AD6": exports.MO.REL,
    "\u2AD7": exports.MO.REL,
    "\u2AD8": exports.MO.REL,
    "\u2AD9": exports.MO.REL,
    "\u2ADA": exports.MO.REL,
    "\u2ADB": exports.MO.REL,
    "\u2ADD": exports.MO.REL,
    "\u2ADD\u0338": exports.MO.REL,
    "\u2ADE": exports.MO.REL,
    "\u2ADF": exports.MO.REL,
    "\u2AE0": exports.MO.REL,
    "\u2AE1": exports.MO.REL,
    "\u2AE2": exports.MO.REL,
    "\u2AE3": exports.MO.REL,
    "\u2AE4": exports.MO.REL,
    "\u2AE5": exports.MO.REL,
    "\u2AE6": exports.MO.REL,
    "\u2AE7": exports.MO.REL,
    "\u2AE8": exports.MO.REL,
    "\u2AE9": exports.MO.REL,
    "\u2AEA": exports.MO.REL,
    "\u2AEB": exports.MO.REL,
    "\u2AEC": exports.MO.REL,
    "\u2AED": exports.MO.REL,
    "\u2AEE": exports.MO.REL,
    "\u2AEF": exports.MO.REL,
    "\u2AF0": exports.MO.REL,
    "\u2AF1": exports.MO.REL,
    "\u2AF2": exports.MO.REL,
    "\u2AF3": exports.MO.REL,
    "\u2AF4": exports.MO.BIN4,
    "\u2AF5": exports.MO.BIN4,
    "\u2AF6": exports.MO.BIN4,
    "\u2AF7": exports.MO.REL,
    "\u2AF8": exports.MO.REL,
    "\u2AF9": exports.MO.REL,
    "\u2AFA": exports.MO.REL,
    "\u2AFB": exports.MO.BIN4,
    "\u2AFD": exports.MO.BIN4,
    "\u2AFE": exports.MO.BIN3,
    "\u2B45": exports.MO.RELSTRETCH,
    "\u2B46": exports.MO.RELSTRETCH,
    "\u3008": exports.MO.OPEN,
    "\u3009": exports.MO.CLOSE,
    "\uFE37": exports.MO.WIDEACCENT,
    "\uFE38": exports.MO.WIDEACCENT
  }
};
exports.OPTABLE.infix["^"] = exports.MO.WIDEREL;
exports.OPTABLE.infix._ = exports.MO.WIDEREL;
exports.OPTABLE.infix["⫝̸"] = exports.MO.REL;

/***/ }),

/***/ 1556:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AbstractOutputJax = void 0;

var Options_js_1 = __webpack_require__(5698);

var FunctionList_js_1 = __webpack_require__(438);

var AbstractOutputJax = function () {
  function AbstractOutputJax(options) {
    if (options === void 0) {
      options = {};
    }

    this.adaptor = null;
    var CLASS = this.constructor;
    this.options = Options_js_1.userOptions(Options_js_1.defaultOptions({}, CLASS.OPTIONS), options);
    this.postFilters = new FunctionList_js_1.FunctionList();
  }

  Object.defineProperty(AbstractOutputJax.prototype, "name", {
    get: function get() {
      return this.constructor.NAME;
    },
    enumerable: false,
    configurable: true
  });

  AbstractOutputJax.prototype.setAdaptor = function (adaptor) {
    this.adaptor = adaptor;
  };

  AbstractOutputJax.prototype.initialize = function () {};

  AbstractOutputJax.prototype.reset = function () {
    var _args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      _args[_i] = arguments[_i];
    }
  };

  AbstractOutputJax.prototype.getMetrics = function (_document) {};

  AbstractOutputJax.prototype.styleSheet = function (_document) {
    return null;
  };

  AbstractOutputJax.prototype.pageElements = function (_document) {
    return null;
  };

  AbstractOutputJax.prototype.executeFilters = function (filters, math, document, data) {
    var args = {
      math: math,
      document: document,
      data: data
    };
    filters.execute(args);
    return args.data;
  };

  AbstractOutputJax.NAME = 'generic';
  AbstractOutputJax.OPTIONS = {};
  return AbstractOutputJax;
}();

exports.AbstractOutputJax = AbstractOutputJax;

/***/ }),

/***/ 7045:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AbstractFactory = void 0;

var AbstractFactory = function () {
  function AbstractFactory(nodes) {
    var e_1, _a;

    if (nodes === void 0) {
      nodes = null;
    }

    this.defaultKind = 'unknown';
    this.nodeMap = new Map();
    this.node = {};

    if (nodes === null) {
      nodes = this.constructor.defaultNodes;
    }

    try {
      for (var _b = __values(Object.keys(nodes)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var kind = _c.value;
        this.setNodeClass(kind, nodes[kind]);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  }

  AbstractFactory.prototype.create = function (kind) {
    var args = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      args[_i - 1] = arguments[_i];
    }

    return (this.node[kind] || this.node[this.defaultKind]).apply(void 0, __spreadArray([], __read(args)));
  };

  AbstractFactory.prototype.setNodeClass = function (kind, nodeClass) {
    this.nodeMap.set(kind, nodeClass);
    var THIS = this;
    var KIND = this.nodeMap.get(kind);

    this.node[kind] = function () {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      return new (KIND.bind.apply(KIND, __spreadArray([void 0, THIS], __read(args))))();
    };
  };

  AbstractFactory.prototype.getNodeClass = function (kind) {
    return this.nodeMap.get(kind);
  };

  AbstractFactory.prototype.deleteNodeClass = function (kind) {
    this.nodeMap.delete(kind);
    delete this.node[kind];
  };

  AbstractFactory.prototype.nodeIsKind = function (node, kind) {
    return node instanceof this.getNodeClass(kind);
  };

  AbstractFactory.prototype.getKinds = function () {
    return Array.from(this.nodeMap.keys());
  };

  AbstractFactory.defaultNodes = {};
  return AbstractFactory;
}();

exports.AbstractFactory = AbstractFactory;

/***/ }),

/***/ 4411:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AbstractEmptyNode = exports.AbstractNode = void 0;

var AbstractNode = function () {
  function AbstractNode(factory, properties, children) {
    var e_1, _a;

    if (properties === void 0) {
      properties = {};
    }

    if (children === void 0) {
      children = [];
    }

    this.factory = factory;
    this.parent = null;
    this.properties = {};
    this.childNodes = [];

    try {
      for (var _b = __values(Object.keys(properties)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var name_1 = _c.value;
        this.setProperty(name_1, properties[name_1]);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    if (children.length) {
      this.setChildren(children);
    }
  }

  Object.defineProperty(AbstractNode.prototype, "kind", {
    get: function get() {
      return 'unknown';
    },
    enumerable: false,
    configurable: true
  });

  AbstractNode.prototype.setProperty = function (name, value) {
    this.properties[name] = value;
  };

  AbstractNode.prototype.getProperty = function (name) {
    return this.properties[name];
  };

  AbstractNode.prototype.getPropertyNames = function () {
    return Object.keys(this.properties);
  };

  AbstractNode.prototype.getAllProperties = function () {
    return this.properties;
  };

  AbstractNode.prototype.removeProperty = function () {
    var e_2, _a;

    var names = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      names[_i] = arguments[_i];
    }

    try {
      for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
        var name_2 = names_1_1.value;
        delete this.properties[name_2];
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
      } finally {
        if (e_2) throw e_2.error;
      }
    }
  };

  AbstractNode.prototype.isKind = function (kind) {
    return this.factory.nodeIsKind(this, kind);
  };

  AbstractNode.prototype.setChildren = function (children) {
    var e_3, _a;

    this.childNodes = [];

    try {
      for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
        var child = children_1_1.value;
        this.appendChild(child);
      }
    } catch (e_3_1) {
      e_3 = {
        error: e_3_1
      };
    } finally {
      try {
        if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
      } finally {
        if (e_3) throw e_3.error;
      }
    }
  };

  AbstractNode.prototype.appendChild = function (child) {
    this.childNodes.push(child);
    child.parent = this;
    return child;
  };

  AbstractNode.prototype.replaceChild = function (newChild, oldChild) {
    var i = this.childIndex(oldChild);

    if (i !== null) {
      this.childNodes[i] = newChild;
      newChild.parent = this;
    }

    return newChild;
  };

  AbstractNode.prototype.childIndex = function (node) {
    var i = this.childNodes.indexOf(node);
    return i === -1 ? null : i;
  };

  AbstractNode.prototype.copy = function () {
    var e_4, _a;

    var node = this.factory.create(this.kind);
    node.properties = __assign({}, this.properties);

    try {
      for (var _b = __values(this.childNodes || []), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;

        if (child) {
          node.appendChild(child.copy());
        }
      }
    } catch (e_4_1) {
      e_4 = {
        error: e_4_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_4) throw e_4.error;
      }
    }

    return node;
  };

  AbstractNode.prototype.findNodes = function (kind) {
    var nodes = [];
    this.walkTree(function (node) {
      if (node.isKind(kind)) {
        nodes.push(node);
      }
    });
    return nodes;
  };

  AbstractNode.prototype.walkTree = function (func, data) {
    var e_5, _a;

    func(this, data);

    try {
      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;

        if (child) {
          child.walkTree(func, data);
        }
      }
    } catch (e_5_1) {
      e_5 = {
        error: e_5_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_5) throw e_5.error;
      }
    }

    return data;
  };

  AbstractNode.prototype.toString = function () {
    return this.kind + '(' + this.childNodes.join(',') + ')';
  };

  return AbstractNode;
}();

exports.AbstractNode = AbstractNode;

var AbstractEmptyNode = function (_super) {
  __extends(AbstractEmptyNode, _super);

  function AbstractEmptyNode() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  AbstractEmptyNode.prototype.setChildren = function (_children) {};

  AbstractEmptyNode.prototype.appendChild = function (child) {
    return child;
  };

  AbstractEmptyNode.prototype.replaceChild = function (_newChild, oldChild) {
    return oldChild;
  };

  AbstractEmptyNode.prototype.childIndex = function (_node) {
    return null;
  };

  AbstractEmptyNode.prototype.walkTree = function (func, data) {
    func(this, data);
    return data;
  };

  AbstractEmptyNode.prototype.toString = function () {
    return this.kind;
  };

  return AbstractEmptyNode;
}(AbstractNode);

exports.AbstractEmptyNode = AbstractEmptyNode;

/***/ }),

/***/ 7365:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AbstractNodeFactory = void 0;

var Factory_js_1 = __webpack_require__(7045);

var AbstractNodeFactory = function (_super) {
  __extends(AbstractNodeFactory, _super);

  function AbstractNodeFactory() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  AbstractNodeFactory.prototype.create = function (kind, properties, children) {
    if (properties === void 0) {
      properties = {};
    }

    if (children === void 0) {
      children = [];
    }

    return this.node[kind](properties, children);
  };

  return AbstractNodeFactory;
}(Factory_js_1.AbstractFactory);

exports.AbstractNodeFactory = AbstractNodeFactory;

/***/ }),

/***/ 1770:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AbstractWrapper = void 0;

var AbstractWrapper = function () {
  function AbstractWrapper(factory, node) {
    this.factory = factory;
    this.node = node;
  }

  Object.defineProperty(AbstractWrapper.prototype, "kind", {
    get: function get() {
      return this.node.kind;
    },
    enumerable: false,
    configurable: true
  });

  AbstractWrapper.prototype.wrap = function (node) {
    return this.factory.wrap(node);
  };

  return AbstractWrapper;
}();

exports.AbstractWrapper = AbstractWrapper;

/***/ }),

/***/ 2322:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AbstractWrapperFactory = void 0;

var Factory_js_1 = __webpack_require__(7045);

var AbstractWrapperFactory = function (_super) {
  __extends(AbstractWrapperFactory, _super);

  function AbstractWrapperFactory() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  AbstractWrapperFactory.prototype.wrap = function (node) {
    var args = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      args[_i - 1] = arguments[_i];
    }

    return this.create.apply(this, __spreadArray([node.kind, node], __read(args)));
  };

  return AbstractWrapperFactory;
}(Factory_js_1.AbstractFactory);

exports.AbstractWrapperFactory = AbstractWrapperFactory;

/***/ }),

/***/ 849:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
exports.Q = void 0;

var mathjax_js_1 = __webpack_require__(5667);

var HTMLHandler_js_1 = __webpack_require__(4128);

function RegisterHTMLHandler(adaptor) {
  var handler = new HTMLHandler_js_1.HTMLHandler(adaptor);
  mathjax_js_1.mathjax.handlers.register(handler);
  return handler;
}

exports.Q = RegisterHTMLHandler;

/***/ }),

/***/ 4384:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.HTMLDocument = void 0;

var MathDocument_js_1 = __webpack_require__(3213);

var Options_js_1 = __webpack_require__(5698);

var HTMLMathItem_js_1 = __webpack_require__(3828);

var HTMLMathList_js_1 = __webpack_require__(1335);

var HTMLDomStrings_js_1 = __webpack_require__(6281);

var MathItem_js_1 = __webpack_require__(6712);

var HTMLDocument = function (_super) {
  __extends(HTMLDocument, _super);

  function HTMLDocument(document, adaptor, options) {
    var _this = this;

    var _a = __read(Options_js_1.separateOptions(options, HTMLDomStrings_js_1.HTMLDomStrings.OPTIONS), 2),
        html = _a[0],
        dom = _a[1];

    _this = _super.call(this, document, adaptor, html) || this;
    _this.domStrings = _this.options['DomStrings'] || new HTMLDomStrings_js_1.HTMLDomStrings(dom);
    _this.domStrings.adaptor = adaptor;
    _this.styles = [];
    return _this;
  }

  HTMLDocument.prototype.findPosition = function (N, index, delim, nodes) {
    var e_1, _a;

    var adaptor = this.adaptor;

    try {
      for (var _b = __values(nodes[N]), _c = _b.next(); !_c.done; _c = _b.next()) {
        var list = _c.value;

        var _d = __read(list, 2),
            node = _d[0],
            n = _d[1];

        if (index <= n && adaptor.kind(node) === '#text') {
          return {
            node: node,
            n: Math.max(index, 0),
            delim: delim
          };
        }

        index -= n;
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return {
      node: null,
      n: 0,
      delim: delim
    };
  };

  HTMLDocument.prototype.mathItem = function (item, jax, nodes) {
    var math = item.math;
    var start = this.findPosition(item.n, item.start.n, item.open, nodes);
    var end = this.findPosition(item.n, item.end.n, item.close, nodes);
    return new this.options.MathItem(math, jax, item.display, start, end);
  };

  HTMLDocument.prototype.findMath = function (options) {
    var e_2, _a, e_3, _b, _c, e_4, _d, e_5, _e;

    if (!this.processed.isSet('findMath')) {
      this.adaptor.document = this.document;
      options = Options_js_1.userOptions({
        elements: this.options.elements || [this.adaptor.body(this.document)]
      }, options);

      try {
        for (var _f = __values(this.adaptor.getElements(options['elements'], this.document)), _g = _f.next(); !_g.done; _g = _f.next()) {
          var container = _g.value;

          var _h = __read([null, null], 2),
              strings = _h[0],
              nodes = _h[1];

          try {
            for (var _j = (e_3 = void 0, __values(this.inputJax)), _k = _j.next(); !_k.done; _k = _j.next()) {
              var jax = _k.value;
              var list = new this.options['MathList']();

              if (jax.processStrings) {
                if (strings === null) {
                  _c = __read(this.domStrings.find(container), 2), strings = _c[0], nodes = _c[1];
                }

                try {
                  for (var _l = (e_4 = void 0, __values(jax.findMath(strings))), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var math = _m.value;
                    list.push(this.mathItem(math, jax, nodes));
                  }
                } catch (e_4_1) {
                  e_4 = {
                    error: e_4_1
                  };
                } finally {
                  try {
                    if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                  } finally {
                    if (e_4) throw e_4.error;
                  }
                }
              } else {
                try {
                  for (var _o = (e_5 = void 0, __values(jax.findMath(container))), _p = _o.next(); !_p.done; _p = _o.next()) {
                    var math = _p.value;
                    var item = new this.options.MathItem(math.math, jax, math.display, math.start, math.end);
                    list.push(item);
                  }
                } catch (e_5_1) {
                  e_5 = {
                    error: e_5_1
                  };
                } finally {
                  try {
                    if (_p && !_p.done && (_e = _o.return)) _e.call(_o);
                  } finally {
                    if (e_5) throw e_5.error;
                  }
                }
              }

              this.math.merge(list);
            }
          } catch (e_3_1) {
            e_3 = {
              error: e_3_1
            };
          } finally {
            try {
              if (_k && !_k.done && (_b = _j.return)) _b.call(_j);
            } finally {
              if (e_3) throw e_3.error;
            }
          }
        }
      } catch (e_2_1) {
        e_2 = {
          error: e_2_1
        };
      } finally {
        try {
          if (_g && !_g.done && (_a = _f.return)) _a.call(_f);
        } finally {
          if (e_2) throw e_2.error;
        }
      }

      this.processed.set('findMath');
    }

    return this;
  };

  HTMLDocument.prototype.updateDocument = function () {
    if (!this.processed.isSet('updateDocument')) {
      this.addPageElements();
      this.addStyleSheet();

      _super.prototype.updateDocument.call(this);

      this.processed.set('updateDocument');
    }

    return this;
  };

  HTMLDocument.prototype.addPageElements = function () {
    var body = this.adaptor.body(this.document);
    var node = this.documentPageElements();

    if (node) {
      this.adaptor.append(body, node);
    }
  };

  HTMLDocument.prototype.addStyleSheet = function () {
    var sheet = this.documentStyleSheet();
    var adaptor = this.adaptor;

    if (sheet && !adaptor.parent(sheet)) {
      var head = adaptor.head(this.document);
      var styles = this.findSheet(head, adaptor.getAttribute(sheet, 'id'));

      if (styles) {
        adaptor.replace(sheet, styles);
      } else {
        adaptor.append(head, sheet);
      }
    }
  };

  HTMLDocument.prototype.findSheet = function (head, id) {
    var e_6, _a;

    if (id) {
      try {
        for (var _b = __values(this.adaptor.tags(head, 'style')), _c = _b.next(); !_c.done; _c = _b.next()) {
          var sheet = _c.value;

          if (this.adaptor.getAttribute(sheet, 'id') === id) {
            return sheet;
          }
        }
      } catch (e_6_1) {
        e_6 = {
          error: e_6_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_6) throw e_6.error;
        }
      }
    }

    return null;
  };

  HTMLDocument.prototype.removeFromDocument = function (restore) {
    var e_7, _a;

    if (restore === void 0) {
      restore = false;
    }

    if (this.processed.isSet('updateDocument')) {
      try {
        for (var _b = __values(this.math), _c = _b.next(); !_c.done; _c = _b.next()) {
          var math = _c.value;

          if (math.state() >= MathItem_js_1.STATE.INSERTED) {
            math.state(MathItem_js_1.STATE.TYPESET, restore);
          }
        }
      } catch (e_7_1) {
        e_7 = {
          error: e_7_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_7) throw e_7.error;
        }
      }
    }

    this.processed.clear('updateDocument');
    return this;
  };

  HTMLDocument.prototype.documentStyleSheet = function () {
    return this.outputJax.styleSheet(this);
  };

  HTMLDocument.prototype.documentPageElements = function () {
    return this.outputJax.pageElements(this);
  };

  HTMLDocument.prototype.addStyles = function (styles) {
    this.styles.push(styles);
  };

  HTMLDocument.prototype.getStyles = function () {
    return this.styles;
  };

  HTMLDocument.KIND = 'HTML';
  HTMLDocument.OPTIONS = __assign(__assign({}, MathDocument_js_1.AbstractMathDocument.OPTIONS), {
    renderActions: Options_js_1.expandable(__assign(__assign({}, MathDocument_js_1.AbstractMathDocument.OPTIONS.renderActions), {
      styles: [MathItem_js_1.STATE.INSERTED + 1, '', 'updateStyleSheet', false]
    })),
    MathList: HTMLMathList_js_1.HTMLMathList,
    MathItem: HTMLMathItem_js_1.HTMLMathItem,
    DomStrings: null
  });
  return HTMLDocument;
}(MathDocument_js_1.AbstractMathDocument);

exports.HTMLDocument = HTMLDocument;

/***/ }),

/***/ 6281:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.HTMLDomStrings = void 0;

var Options_js_1 = __webpack_require__(5698);

var HTMLDomStrings = function () {
  function HTMLDomStrings(options) {
    if (options === void 0) {
      options = null;
    }

    var CLASS = this.constructor;
    this.options = Options_js_1.userOptions(Options_js_1.defaultOptions({}, CLASS.OPTIONS), options);
    this.init();
    this.getPatterns();
  }

  HTMLDomStrings.prototype.init = function () {
    this.strings = [];
    this.string = '';
    this.snodes = [];
    this.nodes = [];
    this.stack = [];
  };

  HTMLDomStrings.prototype.getPatterns = function () {
    var skip = Options_js_1.makeArray(this.options['skipHtmlTags']);
    var ignore = Options_js_1.makeArray(this.options['ignoreHtmlClass']);
    var process = Options_js_1.makeArray(this.options['processHtmlClass']);
    this.skipHtmlTags = new RegExp('^(?:' + skip.join('|') + ')$', 'i');
    this.ignoreHtmlClass = new RegExp('(?:^| )(?:' + ignore.join('|') + ')(?: |$)');
    this.processHtmlClass = new RegExp('(?:^| )(?:' + process + ')(?: |$)');
  };

  HTMLDomStrings.prototype.pushString = function () {
    if (this.string.match(/\S/)) {
      this.strings.push(this.string);
      this.nodes.push(this.snodes);
    }

    this.string = '';
    this.snodes = [];
  };

  HTMLDomStrings.prototype.extendString = function (node, text) {
    this.snodes.push([node, text.length]);
    this.string += text;
  };

  HTMLDomStrings.prototype.handleText = function (node, ignore) {
    if (!ignore) {
      this.extendString(node, this.adaptor.value(node));
    }

    return this.adaptor.next(node);
  };

  HTMLDomStrings.prototype.handleTag = function (node, ignore) {
    if (!ignore) {
      var text = this.options['includeHtmlTags'][this.adaptor.kind(node)];
      this.extendString(node, text);
    }

    return this.adaptor.next(node);
  };

  HTMLDomStrings.prototype.handleContainer = function (node, ignore) {
    this.pushString();
    var cname = this.adaptor.getAttribute(node, 'class') || '';
    var tname = this.adaptor.kind(node) || '';
    var process = this.processHtmlClass.exec(cname);
    var next = node;

    if (this.adaptor.firstChild(node) && !this.adaptor.getAttribute(node, 'data-MJX') && (process || !this.skipHtmlTags.exec(tname))) {
      if (this.adaptor.next(node)) {
        this.stack.push([this.adaptor.next(node), ignore]);
      }

      next = this.adaptor.firstChild(node);
      ignore = (ignore || this.ignoreHtmlClass.exec(cname)) && !process;
    } else {
      next = this.adaptor.next(node);
    }

    return [next, ignore];
  };

  HTMLDomStrings.prototype.handleOther = function (node, _ignore) {
    this.pushString();
    return this.adaptor.next(node);
  };

  HTMLDomStrings.prototype.find = function (node) {
    var _a, _b;

    this.init();
    var stop = this.adaptor.next(node);
    var ignore = false;
    var include = this.options['includeHtmlTags'];

    while (node && node !== stop) {
      var kind = this.adaptor.kind(node);

      if (kind === '#text') {
        node = this.handleText(node, ignore);
      } else if (include.hasOwnProperty(kind)) {
        node = this.handleTag(node, ignore);
      } else if (kind) {
        _a = __read(this.handleContainer(node, ignore), 2), node = _a[0], ignore = _a[1];
      } else {
        node = this.handleOther(node, ignore);
      }

      if (!node && this.stack.length) {
        this.pushString();
        _b = __read(this.stack.pop(), 2), node = _b[0], ignore = _b[1];
      }
    }

    this.pushString();
    var result = [this.strings, this.nodes];
    this.init();
    return result;
  };

  HTMLDomStrings.OPTIONS = {
    skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code', 'annotation', 'annotation-xml'],
    includeHtmlTags: {
      br: '\n',
      wbr: '',
      '#comment': ''
    },
    ignoreHtmlClass: 'mathjax_ignore',
    processHtmlClass: 'mathjax_process'
  };
  return HTMLDomStrings;
}();

exports.HTMLDomStrings = HTMLDomStrings;

/***/ }),

/***/ 4128:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.HTMLHandler = void 0;

var Handler_js_1 = __webpack_require__(2139);

var HTMLDocument_js_1 = __webpack_require__(4384);

var HTMLHandler = function (_super) {
  __extends(HTMLHandler, _super);

  function HTMLHandler() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.documentClass = HTMLDocument_js_1.HTMLDocument;
    return _this;
  }

  HTMLHandler.prototype.handlesDocument = function (document) {
    var adaptor = this.adaptor;

    if (typeof document === 'string') {
      try {
        document = adaptor.parse(document, 'text/html');
      } catch (err) {}
    }

    if (document instanceof adaptor.window.Document || document instanceof adaptor.window.HTMLElement || document instanceof adaptor.window.DocumentFragment) {
      return true;
    }

    return false;
  };

  HTMLHandler.prototype.create = function (document, options) {
    var adaptor = this.adaptor;

    if (typeof document === 'string') {
      document = adaptor.parse(document, 'text/html');
    } else if (document instanceof adaptor.window.HTMLElement || document instanceof adaptor.window.DocumentFragment) {
      var child = document;
      document = adaptor.parse('', 'text/html');
      adaptor.append(adaptor.body(document), child);
    }

    return _super.prototype.create.call(this, document, options);
  };

  return HTMLHandler;
}(Handler_js_1.AbstractHandler);

exports.HTMLHandler = HTMLHandler;

/***/ }),

/***/ 3828:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.HTMLMathItem = void 0;

var MathItem_js_1 = __webpack_require__(6712);

var HTMLMathItem = function (_super) {
  __extends(HTMLMathItem, _super);

  function HTMLMathItem(math, jax, display, start, end) {
    if (display === void 0) {
      display = true;
    }

    if (start === void 0) {
      start = {
        node: null,
        n: 0,
        delim: ''
      };
    }

    if (end === void 0) {
      end = {
        node: null,
        n: 0,
        delim: ''
      };
    }

    return _super.call(this, math, jax, display, start, end) || this;
  }

  Object.defineProperty(HTMLMathItem.prototype, "adaptor", {
    get: function get() {
      return this.inputJax.adaptor;
    },
    enumerable: false,
    configurable: true
  });

  HTMLMathItem.prototype.updateDocument = function (_html) {
    if (this.state() < MathItem_js_1.STATE.INSERTED) {
      if (this.inputJax.processStrings) {
        var node = this.start.node;

        if (node === this.end.node) {
          if (this.end.n && this.end.n < this.adaptor.value(this.end.node).length) {
            this.adaptor.split(this.end.node, this.end.n);
          }

          if (this.start.n) {
            node = this.adaptor.split(this.start.node, this.start.n);
          }

          this.adaptor.replace(this.typesetRoot, node);
        } else {
          if (this.start.n) {
            node = this.adaptor.split(node, this.start.n);
          }

          while (node !== this.end.node) {
            var next = this.adaptor.next(node);
            this.adaptor.remove(node);
            node = next;
          }

          this.adaptor.insert(this.typesetRoot, node);

          if (this.end.n < this.adaptor.value(node).length) {
            this.adaptor.split(node, this.end.n);
          }

          this.adaptor.remove(node);
        }
      } else {
        this.adaptor.replace(this.typesetRoot, this.start.node);
      }

      this.start.node = this.end.node = this.typesetRoot;
      this.start.n = this.end.n = 0;
      this.state(MathItem_js_1.STATE.INSERTED);
    }
  };

  HTMLMathItem.prototype.updateStyleSheet = function (document) {
    document.addStyleSheet();
  };

  HTMLMathItem.prototype.removeFromDocument = function (restore) {
    if (restore === void 0) {
      restore = false;
    }

    if (this.state() >= MathItem_js_1.STATE.TYPESET) {
      var adaptor = this.adaptor;
      var node = this.start.node;
      var math = adaptor.text('');

      if (restore) {
        var text = this.start.delim + this.math + this.end.delim;

        if (this.inputJax.processStrings) {
          math = adaptor.text(text);
        } else {
          var doc = adaptor.parse(text, 'text/html');
          math = adaptor.firstChild(adaptor.body(doc));
        }
      }

      if (adaptor.parent(node)) {
        adaptor.replace(math, node);
      }

      this.start.node = this.end.node = math;
      this.start.n = this.end.n = 0;
    }
  };

  return HTMLMathItem;
}(MathItem_js_1.AbstractMathItem);

exports.HTMLMathItem = HTMLMathItem;

/***/ }),

/***/ 1335:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.HTMLMathList = void 0;

var MathList_js_1 = __webpack_require__(8229);

var HTMLMathList = function (_super) {
  __extends(HTMLMathList, _super);

  function HTMLMathList() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  return HTMLMathList;
}(MathList_js_1.AbstractMathList);

exports.HTMLMathList = HTMLMathList;

/***/ }),

/***/ 7670:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.TeX = void 0;

var InputJax_js_1 = __webpack_require__(5690);

var Options_js_1 = __webpack_require__(5698);

var FindTeX_js_1 = __webpack_require__(9097);

var FilterUtil_js_1 = __webpack_require__(2287);

var NodeUtil_js_1 = __webpack_require__(8754);

var TexParser_js_1 = __webpack_require__(9525);

var TexError_js_1 = __webpack_require__(9722);

var ParseOptions_js_1 = __webpack_require__(9856);

var Tags_js_1 = __webpack_require__(4363);

var Configuration_js_1 = __webpack_require__(738);

__webpack_require__(3925);

var TeX = function (_super) {
  __extends(TeX, _super);

  function TeX(options) {
    if (options === void 0) {
      options = {};
    }

    var _this = this;

    var _a = __read(Options_js_1.separateOptions(options, TeX.OPTIONS, FindTeX_js_1.FindTeX.OPTIONS), 3),
        rest = _a[0],
        tex = _a[1],
        find = _a[2];

    _this = _super.call(this, tex) || this;
    _this.findTeX = _this.options['FindTeX'] || new FindTeX_js_1.FindTeX(find);
    var packages = _this.options.packages;
    var configuration = _this.configuration = TeX.configure(packages);
    var parseOptions = _this._parseOptions = new ParseOptions_js_1.default(configuration, [_this.options, Tags_js_1.TagsFactory.OPTIONS]);
    Options_js_1.userOptions(parseOptions.options, rest);
    configuration.config(_this);
    TeX.tags(parseOptions, configuration);

    _this.postFilters.add(FilterUtil_js_1.default.cleanSubSup, -6);

    _this.postFilters.add(FilterUtil_js_1.default.setInherited, -5);

    _this.postFilters.add(FilterUtil_js_1.default.moveLimits, -4);

    _this.postFilters.add(FilterUtil_js_1.default.cleanStretchy, -3);

    _this.postFilters.add(FilterUtil_js_1.default.cleanAttributes, -2);

    _this.postFilters.add(FilterUtil_js_1.default.combineRelations, -1);

    return _this;
  }

  TeX.configure = function (packages) {
    var configuration = new Configuration_js_1.ParserConfiguration(packages, ['tex']);
    configuration.init();
    return configuration;
  };

  TeX.tags = function (options, configuration) {
    Tags_js_1.TagsFactory.addTags(configuration.tags);
    Tags_js_1.TagsFactory.setDefault(options.options.tags);
    options.tags = Tags_js_1.TagsFactory.getDefault();
    options.tags.configuration = options;
  };

  TeX.prototype.setMmlFactory = function (mmlFactory) {
    _super.prototype.setMmlFactory.call(this, mmlFactory);

    this._parseOptions.nodeFactory.setMmlFactory(mmlFactory);
  };

  Object.defineProperty(TeX.prototype, "parseOptions", {
    get: function get() {
      return this._parseOptions;
    },
    enumerable: false,
    configurable: true
  });

  TeX.prototype.reset = function (tag) {
    if (tag === void 0) {
      tag = 0;
    }

    this.parseOptions.tags.reset(tag);
  };

  TeX.prototype.compile = function (math, document) {
    this.parseOptions.clear();
    this.executeFilters(this.preFilters, math, document, this.parseOptions);
    var display = math.display;
    this.latex = math.math;
    var node;
    this.parseOptions.tags.startEquation(math);
    var globalEnv;

    try {
      var parser = new TexParser_js_1.default(this.latex, {
        display: display,
        isInner: false
      }, this.parseOptions);
      node = parser.mml();
      globalEnv = parser.stack.global;
    } catch (err) {
      if (!(err instanceof TexError_js_1.default)) {
        throw err;
      }

      this.parseOptions.error = true;
      node = this.options.formatError(this, err);
    }

    node = this.parseOptions.nodeFactory.create('node', 'math', [node]);

    if (globalEnv === null || globalEnv === void 0 ? void 0 : globalEnv.indentalign) {
      NodeUtil_js_1.default.setAttribute(node, 'indentalign', globalEnv.indentalign);
    }

    if (display) {
      NodeUtil_js_1.default.setAttribute(node, 'display', 'block');
    }

    this.parseOptions.tags.finishEquation(math);
    this.parseOptions.root = node;
    this.executeFilters(this.postFilters, math, document, this.parseOptions);
    this.mathNode = this.parseOptions.root;
    return this.mathNode;
  };

  TeX.prototype.findMath = function (strings) {
    return this.findTeX.findMath(strings);
  };

  TeX.prototype.formatError = function (err) {
    var message = err.message.replace(/\n.*/, '');
    return this.parseOptions.nodeFactory.create('error', message, err.id, this.latex);
  };

  TeX.NAME = 'TeX';
  TeX.OPTIONS = __assign(__assign({}, InputJax_js_1.AbstractInputJax.OPTIONS), {
    FindTeX: null,
    packages: ['base'],
    digits: /^(?:[0-9]+(?:\{,\}[0-9]{3})*(?:\.[0-9]*)?|\.[0-9]+)/,
    maxBuffer: 5 * 1024,
    formatError: function formatError(jax, err) {
      return jax.formatError(err);
    }
  });
  return TeX;
}(InputJax_js_1.AbstractInputJax);

exports.TeX = TeX;

/***/ }),

/***/ 156:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
exports.b = void 0;

__webpack_require__(3925);

__webpack_require__(9881);

__webpack_require__(9085);

__webpack_require__(4360);

__webpack_require__(7464);

__webpack_require__(6614);

__webpack_require__(4771);

__webpack_require__(9219);

__webpack_require__(2263);

__webpack_require__(3862);

__webpack_require__(2747);

__webpack_require__(1741);

__webpack_require__(7115);

__webpack_require__(2250);

__webpack_require__(1624);

__webpack_require__(400);

__webpack_require__(111);

__webpack_require__(7236);

__webpack_require__(1382);

__webpack_require__(3175);

__webpack_require__(6905);

__webpack_require__(5644);

__webpack_require__(568);

__webpack_require__(4257);

__webpack_require__(2964);

__webpack_require__(6747);

__webpack_require__(1226);

__webpack_require__(9715);

__webpack_require__(7574);

__webpack_require__(8255);

__webpack_require__(6493);

__webpack_require__(4813);

__webpack_require__(9590);

if (typeof MathJax !== 'undefined' && MathJax.loader) {
  MathJax.loader.preLoad('[tex]/action', '[tex]/ams', '[tex]/amscd', '[tex]/bbox', '[tex]/boldsymbol', '[tex]/braket', '[tex]/bussproofs', '[tex]/cancel', '[tex]/cases', '[tex]/centernot', '[tex]/color', '[tex]/colorv2', '[tex]/colortbl', '[tex]/empheq', '[tex]/enclose', '[tex]/extpfeil', '[tex]/gensymb', '[tex]/html', '[tex]/mathtools', '[tex]/mhchem', '[tex]/newcommand', '[tex]/noerrors', '[tex]/noundefined', '[tex]/physics', '[tex]/upgreek', '[tex]/unicode', '[tex]/verb', '[tex]/configmacros', '[tex]/tagformat', '[tex]/textcomp', '[tex]/textmacros', '[tex]/setoptions');
}

exports.b = ['base', 'action', 'ams', 'amscd', 'bbox', 'boldsymbol', 'braket', 'bussproofs', 'cancel', 'cases', 'centernot', 'color', 'colortbl', 'empheq', 'enclose', 'extpfeil', 'gensymb', 'html', 'mathtools', 'mhchem', 'newcommand', 'noerrors', 'noundefined', 'upgreek', 'unicode', 'verb', 'configmacros', 'tagformat', 'textcomp', 'textmacros'];

/***/ }),

/***/ 738:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ParserConfiguration = exports.ConfigurationHandler = exports.Configuration = void 0;

var Options_js_1 = __webpack_require__(5698);

var MapHandler_js_1 = __webpack_require__(4951);

var FunctionList_js_1 = __webpack_require__(438);

var PrioritizedList_js_1 = __webpack_require__(5882);

var Tags_js_1 = __webpack_require__(4363);

var Configuration = function () {
  function Configuration(name, handler, fallback, items, tags, options, nodes, preprocessors, postprocessors, initMethod, configMethod, priority, parser) {
    if (handler === void 0) {
      handler = {};
    }

    if (fallback === void 0) {
      fallback = {};
    }

    if (items === void 0) {
      items = {};
    }

    if (tags === void 0) {
      tags = {};
    }

    if (options === void 0) {
      options = {};
    }

    if (nodes === void 0) {
      nodes = {};
    }

    if (preprocessors === void 0) {
      preprocessors = [];
    }

    if (postprocessors === void 0) {
      postprocessors = [];
    }

    if (initMethod === void 0) {
      initMethod = null;
    }

    if (configMethod === void 0) {
      configMethod = null;
    }

    this.name = name;
    this.handler = handler;
    this.fallback = fallback;
    this.items = items;
    this.tags = tags;
    this.options = options;
    this.nodes = nodes;
    this.preprocessors = preprocessors;
    this.postprocessors = postprocessors;
    this.initMethod = initMethod;
    this.configMethod = configMethod;
    this.priority = priority;
    this.parser = parser;
    this.handler = Object.assign({
      character: [],
      delimiter: [],
      macro: [],
      environment: []
    }, handler);
  }

  Configuration.makeProcessor = function (func, priority) {
    return Array.isArray(func) ? func : [func, priority];
  };

  Configuration._create = function (name, config) {
    var _this = this;

    if (config === void 0) {
      config = {};
    }

    var priority = config.priority || PrioritizedList_js_1.PrioritizedList.DEFAULTPRIORITY;
    var init = config.init ? this.makeProcessor(config.init, priority) : null;
    var conf = config.config ? this.makeProcessor(config.config, priority) : null;
    var preprocessors = (config.preprocessors || []).map(function (pre) {
      return _this.makeProcessor(pre, priority);
    });
    var postprocessors = (config.postprocessors || []).map(function (post) {
      return _this.makeProcessor(post, priority);
    });
    var parser = config.parser || 'tex';
    return new Configuration(name, config.handler || {}, config.fallback || {}, config.items || {}, config.tags || {}, config.options || {}, config.nodes || {}, preprocessors, postprocessors, init, conf, priority, parser);
  };

  Configuration.create = function (name, config) {
    if (config === void 0) {
      config = {};
    }

    var configuration = Configuration._create(name, config);

    ConfigurationHandler.set(name, configuration);
    return configuration;
  };

  Configuration.local = function (config) {
    if (config === void 0) {
      config = {};
    }

    return Configuration._create('', config);
  };

  Object.defineProperty(Configuration.prototype, "init", {
    get: function get() {
      return this.initMethod ? this.initMethod[0] : null;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Configuration.prototype, "config", {
    get: function get() {
      return this.configMethod ? this.configMethod[0] : null;
    },
    enumerable: false,
    configurable: true
  });
  return Configuration;
}();

exports.Configuration = Configuration;
var ConfigurationHandler;

(function (ConfigurationHandler) {
  var maps = new Map();

  ConfigurationHandler.set = function (name, map) {
    maps.set(name, map);
  };

  ConfigurationHandler.get = function (name) {
    return maps.get(name);
  };

  ConfigurationHandler.keys = function () {
    return maps.keys();
  };
})(ConfigurationHandler = exports.ConfigurationHandler || (exports.ConfigurationHandler = {}));

var ParserConfiguration = function () {
  function ParserConfiguration(packages, parsers) {
    var e_1, _a, e_2, _b;

    if (parsers === void 0) {
      parsers = ['tex'];
    }

    this.initMethod = new FunctionList_js_1.FunctionList();
    this.configMethod = new FunctionList_js_1.FunctionList();
    this.configurations = new PrioritizedList_js_1.PrioritizedList();
    this.parsers = [];
    this.handlers = new MapHandler_js_1.SubHandlers();
    this.items = {};
    this.tags = {};
    this.options = {};
    this.nodes = {};
    this.parsers = parsers;

    try {
      for (var _c = __values(packages.slice().reverse()), _d = _c.next(); !_d.done; _d = _c.next()) {
        var pkg = _d.value;
        this.addPackage(pkg);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    try {
      for (var _e = __values(this.configurations), _f = _e.next(); !_f.done; _f = _e.next()) {
        var _g = _f.value,
            config = _g.item,
            priority = _g.priority;
        this.append(config, priority);
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
      } finally {
        if (e_2) throw e_2.error;
      }
    }
  }

  ParserConfiguration.prototype.init = function () {
    this.initMethod.execute(this);
  };

  ParserConfiguration.prototype.config = function (jax) {
    var e_3, _a;

    this.configMethod.execute(this, jax);

    try {
      for (var _b = __values(this.configurations), _c = _b.next(); !_c.done; _c = _b.next()) {
        var config = _c.value;
        this.addFilters(jax, config.item);
      }
    } catch (e_3_1) {
      e_3 = {
        error: e_3_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_3) throw e_3.error;
      }
    }
  };

  ParserConfiguration.prototype.addPackage = function (pkg) {
    var name = typeof pkg === 'string' ? pkg : pkg[0];
    var conf = this.getPackage(name);
    conf && this.configurations.add(conf, typeof pkg === 'string' ? conf.priority : pkg[1]);
  };

  ParserConfiguration.prototype.add = function (name, jax, options) {
    var e_4, _a;

    if (options === void 0) {
      options = {};
    }

    var config = this.getPackage(name);
    this.append(config);
    this.configurations.add(config, config.priority);
    this.init();
    var parser = jax.parseOptions;
    parser.nodeFactory.setCreators(config.nodes);

    try {
      for (var _b = __values(Object.keys(config.items)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var kind = _c.value;
        parser.itemFactory.setNodeClass(kind, config.items[kind]);
      }
    } catch (e_4_1) {
      e_4 = {
        error: e_4_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_4) throw e_4.error;
      }
    }

    Tags_js_1.TagsFactory.addTags(config.tags);
    Options_js_1.defaultOptions(parser.options, config.options);
    Options_js_1.userOptions(parser.options, options);
    this.addFilters(jax, config);

    if (config.config) {
      config.config(this, jax);
    }
  };

  ParserConfiguration.prototype.getPackage = function (name) {
    var config = ConfigurationHandler.get(name);

    if (config && this.parsers.indexOf(config.parser) < 0) {
      throw Error("Package " + name + " doesn't target the proper parser");
    }

    return config;
  };

  ParserConfiguration.prototype.append = function (config, priority) {
    priority = priority || config.priority;

    if (config.initMethod) {
      this.initMethod.add(config.initMethod[0], config.initMethod[1]);
    }

    if (config.configMethod) {
      this.configMethod.add(config.configMethod[0], config.configMethod[1]);
    }

    this.handlers.add(config.handler, config.fallback, priority);
    Object.assign(this.items, config.items);
    Object.assign(this.tags, config.tags);
    Options_js_1.defaultOptions(this.options, config.options);
    Object.assign(this.nodes, config.nodes);
  };

  ParserConfiguration.prototype.addFilters = function (jax, config) {
    var e_5, _a, e_6, _b;

    try {
      for (var _c = __values(config.preprocessors), _d = _c.next(); !_d.done; _d = _c.next()) {
        var _e = __read(_d.value, 2),
            pre = _e[0],
            priority = _e[1];

        jax.preFilters.add(pre, priority);
      }
    } catch (e_5_1) {
      e_5 = {
        error: e_5_1
      };
    } finally {
      try {
        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_5) throw e_5.error;
      }
    }

    try {
      for (var _f = __values(config.postprocessors), _g = _f.next(); !_g.done; _g = _f.next()) {
        var _h = __read(_g.value, 2),
            post = _h[0],
            priority = _h[1];

        jax.postFilters.add(post, priority);
      }
    } catch (e_6_1) {
      e_6 = {
        error: e_6_1
      };
    } finally {
      try {
        if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
      } finally {
        if (e_6) throw e_6.error;
      }
    }
  };

  return ParserConfiguration;
}();

exports.ParserConfiguration = ParserConfiguration;

/***/ }),

/***/ 2287:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var MmlNode_js_1 = __webpack_require__(4653);

var NodeUtil_js_1 = __webpack_require__(8754);

var FilterUtil;

(function (FilterUtil) {
  FilterUtil.cleanStretchy = function (arg) {
    var e_1, _a;

    var options = arg.data;

    try {
      for (var _b = __values(options.getList('fixStretchy')), _c = _b.next(); !_c.done; _c = _b.next()) {
        var mo = _c.value;

        if (NodeUtil_js_1.default.getProperty(mo, 'fixStretchy')) {
          var symbol = NodeUtil_js_1.default.getForm(mo);

          if (symbol && symbol[3] && symbol[3]['stretchy']) {
            NodeUtil_js_1.default.setAttribute(mo, 'stretchy', false);
          }

          var parent_1 = mo.parent;

          if (!NodeUtil_js_1.default.getTexClass(mo) && (!symbol || !symbol[2])) {
            var texAtom = options.nodeFactory.create('node', 'TeXAtom', [mo]);
            parent_1.replaceChild(texAtom, mo);
            texAtom.inheritAttributesFrom(mo);
          }

          NodeUtil_js_1.default.removeProperties(mo, 'fixStretchy');
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  };

  FilterUtil.cleanAttributes = function (arg) {
    var node = arg.data.root;
    node.walkTree(function (mml, _d) {
      var e_2, _a;

      var attribs = mml.attributes;

      if (!attribs) {
        return;
      }

      try {
        for (var _b = __values(attribs.getExplicitNames()), _c = _b.next(); !_c.done; _c = _b.next()) {
          var key = _c.value;

          if (attribs.attributes[key] === mml.attributes.getInherited(key)) {
            delete attribs.attributes[key];
          }
        }
      } catch (e_2_1) {
        e_2 = {
          error: e_2_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_2) throw e_2.error;
        }
      }
    }, {});
  };

  FilterUtil.combineRelations = function (arg) {
    var e_3, _a, e_4, _b;

    var remove = [];

    try {
      for (var _c = __values(arg.data.getList('mo')), _e = _c.next(); !_e.done; _e = _c.next()) {
        var mo = _e.value;

        if (mo.getProperty('relationsCombined') || !mo.parent || mo.parent && !NodeUtil_js_1.default.isType(mo.parent, 'mrow') || NodeUtil_js_1.default.getTexClass(mo) !== MmlNode_js_1.TEXCLASS.REL) {
          continue;
        }

        var mml = mo.parent;
        var m2 = void 0;
        var children = mml.childNodes;
        var next = children.indexOf(mo) + 1;
        var variantForm = NodeUtil_js_1.default.getProperty(mo, 'variantForm');

        while (next < children.length && (m2 = children[next]) && NodeUtil_js_1.default.isType(m2, 'mo') && NodeUtil_js_1.default.getTexClass(m2) === MmlNode_js_1.TEXCLASS.REL) {
          if (variantForm === NodeUtil_js_1.default.getProperty(m2, 'variantForm') && _compareExplicit(mo, m2)) {
            NodeUtil_js_1.default.appendChildren(mo, NodeUtil_js_1.default.getChildren(m2));

            _copyExplicit(['stretchy', 'rspace'], mo, m2);

            try {
              for (var _f = (e_4 = void 0, __values(m2.getPropertyNames())), _g = _f.next(); !_g.done; _g = _f.next()) {
                var name_1 = _g.value;
                mo.setProperty(name_1, m2.getProperty(name_1));
              }
            } catch (e_4_1) {
              e_4 = {
                error: e_4_1
              };
            } finally {
              try {
                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
              } finally {
                if (e_4) throw e_4.error;
              }
            }

            children.splice(next, 1);
            remove.push(m2);
            m2.parent = null;
            m2.setProperty('relationsCombined', true);
          } else {
            if (mo.attributes.getExplicit('rspace') == null) {
              NodeUtil_js_1.default.setAttribute(mo, 'rspace', '0pt');
            }

            if (m2.attributes.getExplicit('lspace') == null) {
              NodeUtil_js_1.default.setAttribute(m2, 'lspace', '0pt');
            }

            break;
          }
        }

        mo.attributes.setInherited('form', mo.getForms()[0]);
      }
    } catch (e_3_1) {
      e_3 = {
        error: e_3_1
      };
    } finally {
      try {
        if (_e && !_e.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_3) throw e_3.error;
      }
    }

    arg.data.removeFromList('mo', remove);
  };

  var _copyExplicit = function _copyExplicit(attrs, node1, node2) {
    var attr1 = node1.attributes;
    var attr2 = node2.attributes;
    attrs.forEach(function (x) {
      var attr = attr2.getExplicit(x);

      if (attr != null) {
        attr1.set(x, attr);
      }
    });
  };

  var _compareExplicit = function _compareExplicit(node1, node2) {
    var e_5, _a;

    var filter = function filter(attr, space) {
      var exp = attr.getExplicitNames();
      return exp.filter(function (x) {
        return x !== space && (x !== 'stretchy' || attr.getExplicit('stretchy'));
      });
    };

    var attr1 = node1.attributes;
    var attr2 = node2.attributes;
    var exp1 = filter(attr1, 'lspace');
    var exp2 = filter(attr2, 'rspace');

    if (exp1.length !== exp2.length) {
      return false;
    }

    try {
      for (var exp1_1 = __values(exp1), exp1_1_1 = exp1_1.next(); !exp1_1_1.done; exp1_1_1 = exp1_1.next()) {
        var name_2 = exp1_1_1.value;

        if (attr1.getExplicit(name_2) !== attr2.getExplicit(name_2)) {
          return false;
        }
      }
    } catch (e_5_1) {
      e_5 = {
        error: e_5_1
      };
    } finally {
      try {
        if (exp1_1_1 && !exp1_1_1.done && (_a = exp1_1.return)) _a.call(exp1_1);
      } finally {
        if (e_5) throw e_5.error;
      }
    }

    return true;
  };

  var _cleanSubSup = function _cleanSubSup(options, low, up) {
    var e_6, _a;

    var remove = [];

    try {
      for (var _b = __values(options.getList('m' + low + up)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var mml = _c.value;
        var children = mml.childNodes;

        if (children[mml[low]] && children[mml[up]]) {
          continue;
        }

        var parent_2 = mml.parent;
        var newNode = children[mml[low]] ? options.nodeFactory.create('node', 'm' + low, [children[mml.base], children[mml[low]]]) : options.nodeFactory.create('node', 'm' + up, [children[mml.base], children[mml[up]]]);
        NodeUtil_js_1.default.copyAttributes(mml, newNode);

        if (parent_2) {
          parent_2.replaceChild(newNode, mml);
        } else {
          options.root = newNode;
        }

        remove.push(mml);
      }
    } catch (e_6_1) {
      e_6 = {
        error: e_6_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_6) throw e_6.error;
      }
    }

    options.removeFromList('m' + low + up, remove);
  };

  FilterUtil.cleanSubSup = function (arg) {
    var options = arg.data;

    if (options.error) {
      return;
    }

    _cleanSubSup(options, 'sub', 'sup');

    _cleanSubSup(options, 'under', 'over');
  };

  var _moveLimits = function _moveLimits(options, underover, subsup) {
    var e_7, _a;

    var remove = [];

    try {
      for (var _b = __values(options.getList(underover)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var mml = _c.value;

        if (mml.attributes.get('displaystyle')) {
          continue;
        }

        var base = mml.childNodes[mml.base];
        var mo = base.coreMO();

        if (base.getProperty('movablelimits') && !mo.attributes.getExplicit('movablelimits')) {
          var node = options.nodeFactory.create('node', subsup, mml.childNodes);
          NodeUtil_js_1.default.copyAttributes(mml, node);

          if (mml.parent) {
            mml.parent.replaceChild(node, mml);
          } else {
            options.root = node;
          }

          remove.push(mml);
        }
      }
    } catch (e_7_1) {
      e_7 = {
        error: e_7_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_7) throw e_7.error;
      }
    }

    options.removeFromList(underover, remove);
  };

  FilterUtil.moveLimits = function (arg) {
    var options = arg.data;

    _moveLimits(options, 'munderover', 'msubsup');

    _moveLimits(options, 'munder', 'msub');

    _moveLimits(options, 'mover', 'msup');
  };

  FilterUtil.setInherited = function (arg) {
    arg.data.root.setInheritedAttributes({}, arg.math['display'], 0, false);
  };
})(FilterUtil || (FilterUtil = {}));

exports["default"] = FilterUtil;

/***/ }),

/***/ 9097:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.FindTeX = void 0;

var FindMath_js_1 = __webpack_require__(6418);

var string_js_1 = __webpack_require__(4944);

var MathItem_js_1 = __webpack_require__(6712);

var FindTeX = function (_super) {
  __extends(FindTeX, _super);

  function FindTeX(options) {
    var _this = _super.call(this, options) || this;

    _this.getPatterns();

    return _this;
  }

  FindTeX.prototype.getPatterns = function () {
    var _this = this;

    var options = this.options;
    var starts = [],
        parts = [],
        subparts = [];
    this.end = {};
    this.env = this.sub = 0;
    var i = 1;
    options['inlineMath'].forEach(function (delims) {
      return _this.addPattern(starts, delims, false);
    });
    options['displayMath'].forEach(function (delims) {
      return _this.addPattern(starts, delims, true);
    });

    if (starts.length) {
      parts.push(starts.sort(string_js_1.sortLength).join('|'));
    }

    if (options['processEnvironments']) {
      parts.push('\\\\begin\\s*\\{([^}]*)\\}');
      this.env = i;
      i++;
    }

    if (options['processEscapes']) {
      subparts.push('\\\\([\\\\$])');
    }

    if (options['processRefs']) {
      subparts.push('(\\\\(?:eq)?ref\\s*\\{[^}]*\\})');
    }

    if (subparts.length) {
      parts.push('(' + subparts.join('|') + ')');
      this.sub = i;
    }

    this.start = new RegExp(parts.join('|'), 'g');
    this.hasPatterns = parts.length > 0;
  };

  FindTeX.prototype.addPattern = function (starts, delims, display) {
    var _a = __read(delims, 2),
        open = _a[0],
        close = _a[1];

    starts.push(string_js_1.quotePattern(open));
    this.end[open] = [close, display, this.endPattern(close)];
  };

  FindTeX.prototype.endPattern = function (end, endp) {
    return new RegExp((endp || string_js_1.quotePattern(end)) + '|\\\\(?:[a-zA-Z]|.)|[{}]', 'g');
  };

  FindTeX.prototype.findEnd = function (text, n, start, end) {
    var _a = __read(end, 3),
        close = _a[0],
        display = _a[1],
        pattern = _a[2];

    var i = pattern.lastIndex = start.index + start[0].length;
    var match,
        braces = 0;

    while (match = pattern.exec(text)) {
      if ((match[1] || match[0]) === close && braces === 0) {
        return MathItem_js_1.protoItem(start[0], text.substr(i, match.index - i), match[0], n, start.index, match.index + match[0].length, display);
      } else if (match[0] === '{') {
        braces++;
      } else if (match[0] === '}' && braces) {
        braces--;
      }
    }

    return null;
  };

  FindTeX.prototype.findMathInString = function (math, n, text) {
    var start, match;
    this.start.lastIndex = 0;

    while (start = this.start.exec(text)) {
      if (start[this.env] !== undefined && this.env) {
        var end = '\\\\end\\s*(\\{' + string_js_1.quotePattern(start[this.env]) + '\\})';
        match = this.findEnd(text, n, start, ['{' + start[this.env] + '}', true, this.endPattern(null, end)]);

        if (match) {
          match.math = match.open + match.math + match.close;
          match.open = match.close = '';
        }
      } else if (start[this.sub] !== undefined && this.sub) {
        var math_1 = start[this.sub];
        var end = start.index + start[this.sub].length;

        if (math_1.length === 2) {
          match = MathItem_js_1.protoItem('', math_1.substr(1), '', n, start.index, end);
        } else {
          match = MathItem_js_1.protoItem('', math_1, '', n, start.index, end, false);
        }
      } else {
        match = this.findEnd(text, n, start, this.end[start[0]]);
      }

      if (match) {
        math.push(match);
        this.start.lastIndex = match.end.n;
      }
    }
  };

  FindTeX.prototype.findMath = function (strings) {
    var math = [];

    if (this.hasPatterns) {
      for (var i = 0, m = strings.length; i < m; i++) {
        this.findMathInString(math, i, strings[i]);
      }
    }

    return math;
  };

  FindTeX.OPTIONS = {
    inlineMath: [['\\(', '\\)']],
    displayMath: [['$$', '$$'], ['\\[', '\\]']],
    processEscapes: true,
    processEnvironments: true,
    processRefs: true
  };
  return FindTeX;
}(FindMath_js_1.AbstractFindMath);

exports.FindTeX = FindTeX;

/***/ }),

/***/ 4951:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.SubHandlers = exports.SubHandler = exports.MapHandler = void 0;

var PrioritizedList_js_1 = __webpack_require__(5882);

var FunctionList_js_1 = __webpack_require__(438);

var MapHandler;

(function (MapHandler) {
  var maps = new Map();

  MapHandler.register = function (map) {
    maps.set(map.name, map);
  };

  MapHandler.getMap = function (name) {
    return maps.get(name);
  };
})(MapHandler = exports.MapHandler || (exports.MapHandler = {}));

var SubHandler = function () {
  function SubHandler() {
    this._configuration = new PrioritizedList_js_1.PrioritizedList();
    this._fallback = new FunctionList_js_1.FunctionList();
  }

  SubHandler.prototype.add = function (maps, fallback, priority) {
    var e_1, _a;

    if (priority === void 0) {
      priority = PrioritizedList_js_1.PrioritizedList.DEFAULTPRIORITY;
    }

    try {
      for (var _b = __values(maps.slice().reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {
        var name_1 = _c.value;
        var map = MapHandler.getMap(name_1);

        if (!map) {
          this.warn('Configuration ' + name_1 + ' not found! Omitted.');
          return;
        }

        this._configuration.add(map, priority);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    if (fallback) {
      this._fallback.add(fallback, priority);
    }
  };

  SubHandler.prototype.parse = function (input) {
    var e_2, _a;

    try {
      for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {
        var map = _c.value.item;
        var result = map.parse(input);

        if (result) {
          return result;
        }
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }

    var _d = __read(input, 2),
        env = _d[0],
        symbol = _d[1];

    Array.from(this._fallback)[0].item(env, symbol);
  };

  SubHandler.prototype.lookup = function (symbol) {
    var map = this.applicable(symbol);
    return map ? map.lookup(symbol) : null;
  };

  SubHandler.prototype.contains = function (symbol) {
    return this.applicable(symbol) ? true : false;
  };

  SubHandler.prototype.toString = function () {
    var e_3, _a;

    var names = [];

    try {
      for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {
        var map = _c.value.item;
        names.push(map.name);
      }
    } catch (e_3_1) {
      e_3 = {
        error: e_3_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_3) throw e_3.error;
      }
    }

    return names.join(', ');
  };

  SubHandler.prototype.applicable = function (symbol) {
    var e_4, _a;

    try {
      for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {
        var map = _c.value.item;

        if (map.contains(symbol)) {
          return map;
        }
      }
    } catch (e_4_1) {
      e_4 = {
        error: e_4_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_4) throw e_4.error;
      }
    }

    return null;
  };

  SubHandler.prototype.retrieve = function (name) {
    var e_5, _a;

    try {
      for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {
        var map = _c.value.item;

        if (map.name === name) {
          return map;
        }
      }
    } catch (e_5_1) {
      e_5 = {
        error: e_5_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_5) throw e_5.error;
      }
    }

    return null;
  };

  SubHandler.prototype.warn = function (message) {
    console.log('TexParser Warning: ' + message);
  };

  return SubHandler;
}();

exports.SubHandler = SubHandler;

var SubHandlers = function () {
  function SubHandlers() {
    this.map = new Map();
  }

  SubHandlers.prototype.add = function (handlers, fallbacks, priority) {
    var e_6, _a;

    if (priority === void 0) {
      priority = PrioritizedList_js_1.PrioritizedList.DEFAULTPRIORITY;
    }

    try {
      for (var _b = __values(Object.keys(handlers)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var key = _c.value;
        var name_2 = key;
        var subHandler = this.get(name_2);

        if (!subHandler) {
          subHandler = new SubHandler();
          this.set(name_2, subHandler);
        }

        subHandler.add(handlers[name_2], fallbacks[name_2], priority);
      }
    } catch (e_6_1) {
      e_6 = {
        error: e_6_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_6) throw e_6.error;
      }
    }
  };

  SubHandlers.prototype.set = function (name, subHandler) {
    this.map.set(name, subHandler);
  };

  SubHandlers.prototype.get = function (name) {
    return this.map.get(name);
  };

  SubHandlers.prototype.retrieve = function (name) {
    var e_7, _a;

    try {
      for (var _b = __values(this.map.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
        var handler = _c.value;
        var map = handler.retrieve(name);

        if (map) {
          return map;
        }
      }
    } catch (e_7_1) {
      e_7 = {
        error: e_7_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_7) throw e_7.error;
      }
    }

    return null;
  };

  SubHandlers.prototype.keys = function () {
    return this.map.keys();
  };

  return SubHandlers;
}();

exports.SubHandlers = SubHandlers;

/***/ }),

/***/ 9629:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.NodeFactory = void 0;

var NodeUtil_js_1 = __webpack_require__(8754);

var NodeFactory = function () {
  function NodeFactory() {
    this.mmlFactory = null;
    this.factory = {
      'node': NodeFactory.createNode,
      'token': NodeFactory.createToken,
      'text': NodeFactory.createText,
      'error': NodeFactory.createError
    };
  }

  NodeFactory.createNode = function (factory, kind, children, def, text) {
    if (children === void 0) {
      children = [];
    }

    if (def === void 0) {
      def = {};
    }

    var node = factory.mmlFactory.create(kind);
    node.setChildren(children);

    if (text) {
      node.appendChild(text);
    }

    NodeUtil_js_1.default.setProperties(node, def);
    return node;
  };

  NodeFactory.createToken = function (factory, kind, def, text) {
    if (def === void 0) {
      def = {};
    }

    if (text === void 0) {
      text = '';
    }

    var textNode = factory.create('text', text);
    return factory.create('node', kind, [], def, textNode);
  };

  NodeFactory.createText = function (factory, text) {
    if (text == null) {
      return null;
    }

    return factory.mmlFactory.create('text').setText(text);
  };

  NodeFactory.createError = function (factory, message) {
    var text = factory.create('text', message);
    var mtext = factory.create('node', 'mtext', [], {}, text);
    var error = factory.create('node', 'merror', [mtext], {
      'data-mjx-error': message
    });
    return error;
  };

  NodeFactory.prototype.setMmlFactory = function (mmlFactory) {
    this.mmlFactory = mmlFactory;
  };

  NodeFactory.prototype.set = function (kind, func) {
    this.factory[kind] = func;
  };

  NodeFactory.prototype.setCreators = function (maps) {
    for (var kind in maps) {
      this.set(kind, maps[kind]);
    }
  };

  NodeFactory.prototype.create = function (kind) {
    var rest = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      rest[_i - 1] = arguments[_i];
    }

    var func = this.factory[kind] || this.factory['node'];
    var node = func.apply(void 0, __spreadArray([this, rest[0]], __read(rest.slice(1))));

    if (kind === 'node') {
      this.configuration.addNode(rest[0], node);
    }

    return node;
  };

  NodeFactory.prototype.get = function (kind) {
    return this.factory[kind];
  };

  return NodeFactory;
}();

exports.NodeFactory = NodeFactory;

/***/ }),

/***/ 8754:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var MmlNode_js_1 = __webpack_require__(4653);

var mo_js_1 = __webpack_require__(5);

var NodeUtil;

(function (NodeUtil) {
  var attrs = new Map([['autoOP', true], ['fnOP', true], ['movesupsub', true], ['subsupOK', true], ['texprimestyle', true], ['useHeight', true], ['variantForm', true], ['withDelims', true], ['mathaccent', true], ['open', true], ['close', true]]);

  function createEntity(code) {
    return String.fromCodePoint(parseInt(code, 16));
  }

  NodeUtil.createEntity = createEntity;

  function getChildren(node) {
    return node.childNodes;
  }

  NodeUtil.getChildren = getChildren;

  function getText(node) {
    return node.getText();
  }

  NodeUtil.getText = getText;

  function appendChildren(node, children) {
    var e_1, _a;

    try {
      for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
        var child = children_1_1.value;
        node.appendChild(child);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  }

  NodeUtil.appendChildren = appendChildren;

  function setAttribute(node, attribute, value) {
    node.attributes.set(attribute, value);
  }

  NodeUtil.setAttribute = setAttribute;

  function setProperty(node, property, value) {
    node.setProperty(property, value);
  }

  NodeUtil.setProperty = setProperty;

  function setProperties(node, properties) {
    var e_2, _a;

    try {
      for (var _b = __values(Object.keys(properties)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var name_1 = _c.value;
        var value = properties[name_1];

        if (name_1 === 'texClass') {
          node.texClass = value;
          node.setProperty(name_1, value);
        } else if (name_1 === 'movablelimits') {
          node.setProperty('movablelimits', value);

          if (node.isKind('mo') || node.isKind('mstyle')) {
            node.attributes.set('movablelimits', value);
          }
        } else if (name_1 === 'inferred') {} else if (attrs.has(name_1)) {
          node.setProperty(name_1, value);
        } else {
          node.attributes.set(name_1, value);
        }
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }
  }

  NodeUtil.setProperties = setProperties;

  function getProperty(node, property) {
    return node.getProperty(property);
  }

  NodeUtil.getProperty = getProperty;

  function getAttribute(node, attr) {
    return node.attributes.get(attr);
  }

  NodeUtil.getAttribute = getAttribute;

  function removeProperties(node) {
    var properties = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      properties[_i - 1] = arguments[_i];
    }

    node.removeProperty.apply(node, __spreadArray([], __read(properties)));
  }

  NodeUtil.removeProperties = removeProperties;

  function getChildAt(node, position) {
    return node.childNodes[position];
  }

  NodeUtil.getChildAt = getChildAt;

  function setChild(node, position, child) {
    var children = node.childNodes;
    children[position] = child;

    if (child) {
      child.parent = node;
    }
  }

  NodeUtil.setChild = setChild;

  function copyChildren(oldNode, newNode) {
    var children = oldNode.childNodes;

    for (var i = 0; i < children.length; i++) {
      setChild(newNode, i, children[i]);
    }
  }

  NodeUtil.copyChildren = copyChildren;

  function copyAttributes(oldNode, newNode) {
    newNode.attributes = oldNode.attributes;
    setProperties(newNode, oldNode.getAllProperties());
  }

  NodeUtil.copyAttributes = copyAttributes;

  function isType(node, kind) {
    return node.isKind(kind);
  }

  NodeUtil.isType = isType;

  function isEmbellished(node) {
    return node.isEmbellished;
  }

  NodeUtil.isEmbellished = isEmbellished;

  function getTexClass(node) {
    return node.texClass;
  }

  NodeUtil.getTexClass = getTexClass;

  function getCoreMO(node) {
    return node.coreMO();
  }

  NodeUtil.getCoreMO = getCoreMO;

  function isNode(item) {
    return item instanceof MmlNode_js_1.AbstractMmlNode || item instanceof MmlNode_js_1.AbstractMmlEmptyNode;
  }

  NodeUtil.isNode = isNode;

  function isInferred(node) {
    return node.isInferred;
  }

  NodeUtil.isInferred = isInferred;

  function getForm(node) {
    var e_3, _a;

    if (!isType(node, 'mo')) {
      return null;
    }

    var mo = node;
    var forms = mo.getForms();

    try {
      for (var forms_1 = __values(forms), forms_1_1 = forms_1.next(); !forms_1_1.done; forms_1_1 = forms_1.next()) {
        var form = forms_1_1.value;
        var symbol = mo_js_1.MmlMo.OPTABLE[form][mo.getText()];

        if (symbol) {
          return symbol;
        }
      }
    } catch (e_3_1) {
      e_3 = {
        error: e_3_1
      };
    } finally {
      try {
        if (forms_1_1 && !forms_1_1.done && (_a = forms_1.return)) _a.call(forms_1);
      } finally {
        if (e_3) throw e_3.error;
      }
    }

    return null;
  }

  NodeUtil.getForm = getForm;
})(NodeUtil || (NodeUtil = {}));

exports["default"] = NodeUtil;

/***/ }),

/***/ 5123:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var NodeUtil_js_1 = __webpack_require__(8754);

var TexConstants_js_1 = __webpack_require__(7338);

var ParseUtil_js_1 = __webpack_require__(4632);

var ParseMethods;

(function (ParseMethods) {
  function variable(parser, c) {
    var def = ParseUtil_js_1.default.getFontDef(parser);

    if (parser.stack.env.multiLetterIdentifiers && parser.stack.env.font !== '') {
      c = parser.string.substr(parser.i - 1).match(/^[a-z]+/i)[0];
      parser.i += c.length - 1;

      if (def.mathvariant === TexConstants_js_1.TexConstant.Variant.NORMAL) {
        def.autoOP = false;
      }
    }

    var node = parser.create('token', 'mi', def, c);
    parser.Push(node);
  }

  ParseMethods.variable = variable;

  function digit(parser, c) {
    var mml;
    var pattern = parser.configuration.options['digits'];
    var n = parser.string.slice(parser.i - 1).match(pattern);
    var def = ParseUtil_js_1.default.getFontDef(parser);

    if (n) {
      mml = parser.create('token', 'mn', def, n[0].replace(/[{}]/g, ''));
      parser.i += n[0].length - 1;
    } else {
      mml = parser.create('token', 'mo', def, c);
    }

    parser.Push(mml);
  }

  ParseMethods.digit = digit;

  function controlSequence(parser, _c) {
    var name = parser.GetCS();
    parser.parse('macro', [parser, name]);
  }

  ParseMethods.controlSequence = controlSequence;

  function mathchar0mi(parser, mchar) {
    var def = mchar.attributes || {
      mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC
    };
    var node = parser.create('token', 'mi', def, mchar.char);
    parser.Push(node);
  }

  ParseMethods.mathchar0mi = mathchar0mi;

  function mathchar0mo(parser, mchar) {
    var def = mchar.attributes || {};
    def['stretchy'] = false;
    var node = parser.create('token', 'mo', def, mchar.char);
    NodeUtil_js_1.default.setProperty(node, 'fixStretchy', true);
    parser.configuration.addNode('fixStretchy', node);
    parser.Push(node);
  }

  ParseMethods.mathchar0mo = mathchar0mo;

  function mathchar7(parser, mchar) {
    var def = mchar.attributes || {
      mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
    };

    if (parser.stack.env['font']) {
      def['mathvariant'] = parser.stack.env['font'];
    }

    var node = parser.create('token', 'mi', def, mchar.char);
    parser.Push(node);
  }

  ParseMethods.mathchar7 = mathchar7;

  function delimiter(parser, delim) {
    var def = delim.attributes || {};
    def = Object.assign({
      fence: false,
      stretchy: false
    }, def);
    var node = parser.create('token', 'mo', def, delim.char);
    parser.Push(node);
  }

  ParseMethods.delimiter = delimiter;

  function environment(parser, env, func, args) {
    var end = args[0];
    var mml = parser.itemFactory.create('begin').setProperties({
      name: env,
      end: end
    });
    mml = func.apply(void 0, __spreadArray([parser, mml], __read(args.slice(1))));
    parser.Push(mml);
  }

  ParseMethods.environment = environment;
})(ParseMethods || (ParseMethods = {}));

exports["default"] = ParseMethods;

/***/ }),

/***/ 9856:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var StackItemFactory_js_1 = __webpack_require__(5076);

var NodeFactory_js_1 = __webpack_require__(9629);

var NodeUtil_js_1 = __webpack_require__(8754);

var Options_js_1 = __webpack_require__(5698);

var ParseOptions = function () {
  function ParseOptions(configuration, options) {
    if (options === void 0) {
      options = [];
    }

    this.options = {};
    this.packageData = new Map();
    this.parsers = [];
    this.root = null;
    this.nodeLists = {};
    this.error = false;
    this.handlers = configuration.handlers;
    this.nodeFactory = new NodeFactory_js_1.NodeFactory();
    this.nodeFactory.configuration = this;
    this.nodeFactory.setCreators(configuration.nodes);
    this.itemFactory = new StackItemFactory_js_1.default(configuration.items);
    this.itemFactory.configuration = this;
    Options_js_1.defaultOptions.apply(void 0, __spreadArray([this.options], __read(options)));
    Options_js_1.defaultOptions(this.options, configuration.options);
  }

  ParseOptions.prototype.pushParser = function (parser) {
    this.parsers.unshift(parser);
  };

  ParseOptions.prototype.popParser = function () {
    this.parsers.shift();
  };

  Object.defineProperty(ParseOptions.prototype, "parser", {
    get: function get() {
      return this.parsers[0];
    },
    enumerable: false,
    configurable: true
  });

  ParseOptions.prototype.clear = function () {
    this.parsers = [];
    this.root = null;
    this.nodeLists = {};
    this.error = false;
    this.tags.resetTag();
  };

  ParseOptions.prototype.addNode = function (property, node) {
    var list = this.nodeLists[property];

    if (!list) {
      list = this.nodeLists[property] = [];
    }

    list.push(node);

    if (node.kind !== property) {
      var inlists = NodeUtil_js_1.default.getProperty(node, 'in-lists') || '';
      var lists = (inlists ? inlists.split(/,/) : []).concat(property).join(',');
      NodeUtil_js_1.default.setProperty(node, 'in-lists', lists);
    }
  };

  ParseOptions.prototype.getList = function (property) {
    var e_1, _a;

    var list = this.nodeLists[property] || [];
    var result = [];

    try {
      for (var list_1 = __values(list), list_1_1 = list_1.next(); !list_1_1.done; list_1_1 = list_1.next()) {
        var node = list_1_1.value;

        if (this.inTree(node)) {
          result.push(node);
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (list_1_1 && !list_1_1.done && (_a = list_1.return)) _a.call(list_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    this.nodeLists[property] = result;
    return result;
  };

  ParseOptions.prototype.removeFromList = function (property, nodes) {
    var e_2, _a;

    var list = this.nodeLists[property] || [];

    try {
      for (var nodes_1 = __values(nodes), nodes_1_1 = nodes_1.next(); !nodes_1_1.done; nodes_1_1 = nodes_1.next()) {
        var node = nodes_1_1.value;
        var i = list.indexOf(node);

        if (i >= 0) {
          list.splice(i, 1);
        }
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (nodes_1_1 && !nodes_1_1.done && (_a = nodes_1.return)) _a.call(nodes_1);
      } finally {
        if (e_2) throw e_2.error;
      }
    }
  };

  ParseOptions.prototype.inTree = function (node) {
    while (node && node !== this.root) {
      node = node.parent;
    }

    return !!node;
  };

  return ParseOptions;
}();

exports["default"] = ParseOptions;

/***/ }),

/***/ 4632:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var MmlNode_js_1 = __webpack_require__(4653);

var NodeUtil_js_1 = __webpack_require__(8754);

var TexParser_js_1 = __webpack_require__(9525);

var TexError_js_1 = __webpack_require__(9722);

var Entities_js_1 = __webpack_require__(3719);

var ParseUtil;

(function (ParseUtil) {
  var emPerInch = 7.2;
  var pxPerInch = 72;
  var UNIT_CASES = {
    'em': function em(m) {
      return m;
    },
    'ex': function ex(m) {
      return m * .43;
    },
    'pt': function pt(m) {
      return m / 10;
    },
    'pc': function pc(m) {
      return m * 1.2;
    },
    'px': function px(m) {
      return m * emPerInch / pxPerInch;
    },
    'in': function _in(m) {
      return m * emPerInch;
    },
    'cm': function cm(m) {
      return m * emPerInch / 2.54;
    },
    'mm': function mm(m) {
      return m * emPerInch / 25.4;
    },
    'mu': function mu(m) {
      return m / 18;
    }
  };
  var num = '([-+]?([.,]\\d+|\\d+([.,]\\d*)?))';
  var unit = '(pt|em|ex|mu|px|mm|cm|in|pc)';
  var dimenEnd = RegExp('^\\s*' + num + '\\s*' + unit + '\\s*$');
  var dimenRest = RegExp('^\\s*' + num + '\\s*' + unit + ' ?');

  function matchDimen(dim, rest) {
    if (rest === void 0) {
      rest = false;
    }

    var match = dim.match(rest ? dimenRest : dimenEnd);
    return match ? muReplace([match[1].replace(/,/, '.'), match[4], match[0].length]) : [null, null, 0];
  }

  ParseUtil.matchDimen = matchDimen;

  function muReplace(_a) {
    var _b = __read(_a, 3),
        value = _b[0],
        unit = _b[1],
        length = _b[2];

    if (unit !== 'mu') {
      return [value, unit, length];
    }

    var em = Em(UNIT_CASES[unit](parseFloat(value || '1')));
    return [em.slice(0, -2), 'em', length];
  }

  function dimen2em(dim) {
    var _a = __read(matchDimen(dim), 2),
        value = _a[0],
        unit = _a[1];

    var m = parseFloat(value || '1');
    var func = UNIT_CASES[unit];
    return func ? func(m) : 0;
  }

  ParseUtil.dimen2em = dimen2em;

  function Em(m) {
    if (Math.abs(m) < .0006) {
      return '0em';
    }

    return m.toFixed(3).replace(/\.?0+$/, '') + 'em';
  }

  ParseUtil.Em = Em;

  function cols() {
    var W = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      W[_i] = arguments[_i];
    }

    return W.map(function (n) {
      return Em(n);
    }).join(' ');
  }

  ParseUtil.cols = cols;

  function fenced(configuration, open, mml, close, big, color) {
    if (big === void 0) {
      big = '';
    }

    if (color === void 0) {
      color = '';
    }

    var nf = configuration.nodeFactory;
    var mrow = nf.create('node', 'mrow', [], {
      open: open,
      close: close,
      texClass: MmlNode_js_1.TEXCLASS.INNER
    });
    var mo;

    if (big) {
      mo = new TexParser_js_1.default('\\' + big + 'l' + open, configuration.parser.stack.env, configuration).mml();
    } else {
      var openNode = nf.create('text', open);
      mo = nf.create('node', 'mo', [], {
        fence: true,
        stretchy: true,
        symmetric: true,
        texClass: MmlNode_js_1.TEXCLASS.OPEN
      }, openNode);
    }

    NodeUtil_js_1.default.appendChildren(mrow, [mo, mml]);

    if (big) {
      mo = new TexParser_js_1.default('\\' + big + 'r' + close, configuration.parser.stack.env, configuration).mml();
    } else {
      var closeNode = nf.create('text', close);
      mo = nf.create('node', 'mo', [], {
        fence: true,
        stretchy: true,
        symmetric: true,
        texClass: MmlNode_js_1.TEXCLASS.CLOSE
      }, closeNode);
    }

    color && mo.attributes.set('mathcolor', color);
    NodeUtil_js_1.default.appendChildren(mrow, [mo]);
    return mrow;
  }

  ParseUtil.fenced = fenced;

  function fixedFence(configuration, open, mml, close) {
    var mrow = configuration.nodeFactory.create('node', 'mrow', [], {
      open: open,
      close: close,
      texClass: MmlNode_js_1.TEXCLASS.ORD
    });

    if (open) {
      NodeUtil_js_1.default.appendChildren(mrow, [mathPalette(configuration, open, 'l')]);
    }

    if (NodeUtil_js_1.default.isType(mml, 'mrow')) {
      NodeUtil_js_1.default.appendChildren(mrow, NodeUtil_js_1.default.getChildren(mml));
    } else {
      NodeUtil_js_1.default.appendChildren(mrow, [mml]);
    }

    if (close) {
      NodeUtil_js_1.default.appendChildren(mrow, [mathPalette(configuration, close, 'r')]);
    }

    return mrow;
  }

  ParseUtil.fixedFence = fixedFence;

  function mathPalette(configuration, fence, side) {
    if (fence === '{' || fence === '}') {
      fence = '\\' + fence;
    }

    var D = '{\\bigg' + side + ' ' + fence + '}';
    var T = '{\\big' + side + ' ' + fence + '}';
    return new TexParser_js_1.default('\\mathchoice' + D + T + T + T, {}, configuration).mml();
  }

  ParseUtil.mathPalette = mathPalette;

  function fixInitialMO(configuration, nodes) {
    for (var i = 0, m = nodes.length; i < m; i++) {
      var child = nodes[i];

      if (child && !NodeUtil_js_1.default.isType(child, 'mspace') && (!NodeUtil_js_1.default.isType(child, 'TeXAtom') || NodeUtil_js_1.default.getChildren(child)[0] && NodeUtil_js_1.default.getChildren(NodeUtil_js_1.default.getChildren(child)[0]).length)) {
        if (NodeUtil_js_1.default.isEmbellished(child) || NodeUtil_js_1.default.isType(child, 'TeXAtom') && NodeUtil_js_1.default.getTexClass(child) === MmlNode_js_1.TEXCLASS.REL) {
          var mi = configuration.nodeFactory.create('node', 'mi');
          nodes.unshift(mi);
        }

        break;
      }
    }
  }

  ParseUtil.fixInitialMO = fixInitialMO;

  function internalMath(parser, text, level, font) {
    if (parser.configuration.options.internalMath) {
      return parser.configuration.options.internalMath(parser, text, level, font);
    }

    var mathvariant = font || parser.stack.env.font;
    var def = mathvariant ? {
      mathvariant: mathvariant
    } : {};
    var mml = [],
        i = 0,
        k = 0,
        c,
        node,
        match = '',
        braces = 0;

    if (text.match(/\\?[${}\\]|\\\(|\\(eq)?ref\s*\{/)) {
      while (i < text.length) {
        c = text.charAt(i++);

        if (c === '$') {
          if (match === '$' && braces === 0) {
            node = parser.create('node', 'TeXAtom', [new TexParser_js_1.default(text.slice(k, i - 1), {}, parser.configuration).mml()]);
            mml.push(node);
            match = '';
            k = i;
          } else if (match === '') {
            if (k < i - 1) {
              mml.push(internalText(parser, text.slice(k, i - 1), def));
            }

            match = '$';
            k = i;
          }
        } else if (c === '{' && match !== '') {
          braces++;
        } else if (c === '}') {
          if (match === '}' && braces === 0) {
            var atom = new TexParser_js_1.default(text.slice(k, i), {}, parser.configuration).mml();
            node = parser.create('node', 'TeXAtom', [atom], def);
            mml.push(node);
            match = '';
            k = i;
          } else if (match !== '') {
            if (braces) {
              braces--;
            }
          }
        } else if (c === '\\') {
          if (match === '' && text.substr(i).match(/^(eq)?ref\s*\{/)) {
            var len = RegExp['$&'].length;

            if (k < i - 1) {
              mml.push(internalText(parser, text.slice(k, i - 1), def));
            }

            match = '}';
            k = i - 1;
            i += len;
          } else {
            c = text.charAt(i++);

            if (c === '(' && match === '') {
              if (k < i - 2) {
                mml.push(internalText(parser, text.slice(k, i - 2), def));
              }

              match = ')';
              k = i;
            } else if (c === ')' && match === ')' && braces === 0) {
              node = parser.create('node', 'TeXAtom', [new TexParser_js_1.default(text.slice(k, i - 2), {}, parser.configuration).mml()]);
              mml.push(node);
              match = '';
              k = i;
            } else if (c.match(/[${}\\]/) && match === '') {
              i--;
              text = text.substr(0, i - 1) + text.substr(i);
            }
          }
        }
      }

      if (match !== '') {
        throw new TexError_js_1.default('MathNotTerminated', 'Math not terminated in text box');
      }
    }

    if (k < text.length) {
      mml.push(internalText(parser, text.slice(k), def));
    }

    if (level != null) {
      mml = [parser.create('node', 'mstyle', mml, {
        displaystyle: false,
        scriptlevel: level
      })];
    } else if (mml.length > 1) {
      mml = [parser.create('node', 'mrow', mml)];
    }

    return mml;
  }

  ParseUtil.internalMath = internalMath;

  function internalText(parser, text, def) {
    text = text.replace(/^\s+/, Entities_js_1.entities.nbsp).replace(/\s+$/, Entities_js_1.entities.nbsp);
    var textNode = parser.create('text', text);
    return parser.create('node', 'mtext', [], def, textNode);
  }

  ParseUtil.internalText = internalText;

  function underOver(parser, base, script, pos, stack) {
    ParseUtil.checkMovableLimits(base);

    if (NodeUtil_js_1.default.isType(base, 'munderover') && NodeUtil_js_1.default.isEmbellished(base)) {
      NodeUtil_js_1.default.setProperties(NodeUtil_js_1.default.getCoreMO(base), {
        lspace: 0,
        rspace: 0
      });
      var mo = parser.create('node', 'mo', [], {
        rspace: 0
      });
      base = parser.create('node', 'mrow', [mo, base]);
    }

    var mml = parser.create('node', 'munderover', [base]);
    NodeUtil_js_1.default.setChild(mml, pos === 'over' ? mml.over : mml.under, script);
    var node = mml;

    if (stack) {
      node = parser.create('node', 'TeXAtom', [mml], {
        texClass: MmlNode_js_1.TEXCLASS.OP,
        movesupsub: true
      });
    }

    NodeUtil_js_1.default.setProperty(node, 'subsupOK', true);
    return node;
  }

  ParseUtil.underOver = underOver;

  function checkMovableLimits(base) {
    var symbol = NodeUtil_js_1.default.isType(base, 'mo') ? NodeUtil_js_1.default.getForm(base) : null;

    if (NodeUtil_js_1.default.getProperty(base, 'movablelimits') || symbol && symbol[3] && symbol[3].movablelimits) {
      NodeUtil_js_1.default.setProperties(base, {
        movablelimits: false
      });
    }
  }

  ParseUtil.checkMovableLimits = checkMovableLimits;

  function trimSpaces(text) {
    if (typeof text !== 'string') {
      return text;
    }

    var TEXT = text.trim();

    if (TEXT.match(/\\$/) && text.match(/ $/)) {
      TEXT += ' ';
    }

    return TEXT;
  }

  ParseUtil.trimSpaces = trimSpaces;

  function setArrayAlign(array, align) {
    align = ParseUtil.trimSpaces(align || '');

    if (align === 't') {
      array.arraydef.align = 'baseline 1';
    } else if (align === 'b') {
      array.arraydef.align = 'baseline -1';
    } else if (align === 'c') {
      array.arraydef.align = 'axis';
    } else if (align) {
      array.arraydef.align = align;
    }

    return array;
  }

  ParseUtil.setArrayAlign = setArrayAlign;

  function substituteArgs(parser, args, str) {
    var text = '';
    var newstring = '';
    var i = 0;

    while (i < str.length) {
      var c = str.charAt(i++);

      if (c === '\\') {
        text += c + str.charAt(i++);
      } else if (c === '#') {
        c = str.charAt(i++);

        if (c === '#') {
          text += c;
        } else {
          if (!c.match(/[1-9]/) || parseInt(c, 10) > args.length) {
            throw new TexError_js_1.default('IllegalMacroParam', 'Illegal macro parameter reference');
          }

          newstring = addArgs(parser, addArgs(parser, newstring, text), args[parseInt(c, 10) - 1]);
          text = '';
        }
      } else {
        text += c;
      }
    }

    return addArgs(parser, newstring, text);
  }

  ParseUtil.substituteArgs = substituteArgs;

  function addArgs(parser, s1, s2) {
    if (s2.match(/^[a-z]/i) && s1.match(/(^|[^\\])(\\\\)*\\[a-z]+$/i)) {
      s1 += ' ';
    }

    if (s1.length + s2.length > parser.configuration.options['maxBuffer']) {
      throw new TexError_js_1.default('MaxBufferSize', 'MathJax internal buffer size exceeded; is there a' + ' recursive macro call?');
    }

    return s1 + s2;
  }

  ParseUtil.addArgs = addArgs;

  function checkMaxMacros(parser, isMacro) {
    if (isMacro === void 0) {
      isMacro = true;
    }

    if (++parser.macroCount <= parser.configuration.options['maxMacros']) {
      return;
    }

    if (isMacro) {
      throw new TexError_js_1.default('MaxMacroSub1', 'MathJax maximum macro substitution count exceeded; ' + 'is here a recursive macro call?');
    } else {
      throw new TexError_js_1.default('MaxMacroSub2', 'MathJax maximum substitution count exceeded; ' + 'is there a recursive latex environment?');
    }
  }

  ParseUtil.checkMaxMacros = checkMaxMacros;

  function checkEqnEnv(parser) {
    if (parser.stack.global.eqnenv) {
      throw new TexError_js_1.default('ErroneousNestingEq', 'Erroneous nesting of equation structures');
    }

    parser.stack.global.eqnenv = true;
  }

  ParseUtil.checkEqnEnv = checkEqnEnv;

  function copyNode(node, parser) {
    var tree = node.copy();
    var options = parser.configuration;
    tree.walkTree(function (n) {
      var e_1, _a;

      options.addNode(n.kind, n);
      var lists = (n.getProperty('in-lists') || '').split(/,/);

      try {
        for (var lists_1 = __values(lists), lists_1_1 = lists_1.next(); !lists_1_1.done; lists_1_1 = lists_1.next()) {
          var list = lists_1_1.value;
          options.addNode(list, n);
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (lists_1_1 && !lists_1_1.done && (_a = lists_1.return)) _a.call(lists_1);
        } finally {
          if (e_1) throw e_1.error;
        }
      }
    });
    return tree;
  }

  ParseUtil.copyNode = copyNode;

  function MmlFilterAttribute(_parser, _name, value) {
    return value;
  }

  ParseUtil.MmlFilterAttribute = MmlFilterAttribute;

  function getFontDef(parser) {
    var font = parser.stack.env['font'];
    return font ? {
      mathvariant: font
    } : {};
  }

  ParseUtil.getFontDef = getFontDef;

  function keyvalOptions(attrib, allowed, error) {
    var e_2, _a;

    if (allowed === void 0) {
      allowed = null;
    }

    if (error === void 0) {
      error = false;
    }

    var def = readKeyval(attrib);

    if (allowed) {
      try {
        for (var _b = __values(Object.keys(def)), _c = _b.next(); !_c.done; _c = _b.next()) {
          var key = _c.value;

          if (!allowed.hasOwnProperty(key)) {
            if (error) {
              throw new TexError_js_1.default('InvalidOption', 'Invalid option: %1', key);
            }

            delete def[key];
          }
        }
      } catch (e_2_1) {
        e_2 = {
          error: e_2_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_2) throw e_2.error;
        }
      }
    }

    return def;
  }

  ParseUtil.keyvalOptions = keyvalOptions;

  function readKeyval(text) {
    var _a, _b;

    var options = {};
    var rest = text;
    var end, key, val;

    while (rest) {
      _a = __read(readValue(rest, ['=', ',']), 3), key = _a[0], end = _a[1], rest = _a[2];

      if (end === '=') {
        _b = __read(readValue(rest, [',']), 3), val = _b[0], end = _b[1], rest = _b[2];
        val = val === 'false' || val === 'true' ? JSON.parse(val) : val;
        options[key] = val;
      } else if (key) {
        options[key] = true;
      }
    }

    return options;
  }

  function removeBraces(text, count) {
    while (count > 0) {
      text = text.trim().slice(1, -1);
      count--;
    }

    return text.trim();
  }

  function readValue(text, end) {
    var length = text.length;
    var braces = 0;
    var value = '';
    var index = 0;
    var start = 0;
    var startCount = true;
    var stopCount = false;

    while (index < length) {
      var c = text[index++];

      switch (c) {
        case ' ':
          break;

        case '{':
          if (startCount) {
            start++;
          } else {
            stopCount = false;

            if (start > braces) {
              start = braces;
            }
          }

          braces++;
          break;

        case '}':
          if (braces) {
            braces--;
          }

          if (startCount || stopCount) {
            start--;
            stopCount = true;
          }

          startCount = false;
          break;

        default:
          if (!braces && end.indexOf(c) !== -1) {
            return [stopCount ? 'true' : removeBraces(value, start), c, text.slice(index)];
          }

          startCount = false;
          stopCount = false;
      }

      value += c;
    }

    if (braces) {
      throw new TexError_js_1.default('ExtraOpenMissingClose', 'Extra open brace or missing close brace');
    }

    return [stopCount ? 'true' : removeBraces(value, start), '', text.slice(index)];
  }
})(ParseUtil || (ParseUtil = {}));

exports["default"] = ParseUtil;

/***/ }),

/***/ 4347:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var NodeUtil_js_1 = __webpack_require__(8754);

var Stack = function () {
  function Stack(_factory, _env, inner) {
    this._factory = _factory;
    this._env = _env;
    this.global = {};
    this.stack = [];
    this.global = {
      isInner: inner
    };
    this.stack = [this._factory.create('start', this.global)];

    if (_env) {
      this.stack[0].env = _env;
    }

    this.env = this.stack[0].env;
  }

  Object.defineProperty(Stack.prototype, "env", {
    get: function get() {
      return this._env;
    },
    set: function set(env) {
      this._env = env;
    },
    enumerable: false,
    configurable: true
  });

  Stack.prototype.Push = function () {
    var e_1, _a;

    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    try {
      for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {
        var node = args_1_1.value;

        if (!node) {
          continue;
        }

        var item = NodeUtil_js_1.default.isNode(node) ? this._factory.create('mml', node) : node;
        item.global = this.global;

        var _b = __read(this.stack.length ? this.Top().checkItem(item) : [null, true], 2),
            top_1 = _b[0],
            success = _b[1];

        if (!success) {
          continue;
        }

        if (top_1) {
          this.Pop();
          this.Push.apply(this, __spreadArray([], __read(top_1)));
          continue;
        }

        this.stack.push(item);

        if (item.env) {
          if (item.copyEnv) {
            Object.assign(item.env, this.env);
          }

          this.env = item.env;
        } else {
          item.env = this.env;
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  };

  Stack.prototype.Pop = function () {
    var item = this.stack.pop();

    if (!item.isOpen) {
      delete item.env;
    }

    this.env = this.stack.length ? this.Top().env : {};
    return item;
  };

  Stack.prototype.Top = function (n) {
    if (n === void 0) {
      n = 1;
    }

    return this.stack.length < n ? null : this.stack[this.stack.length - n];
  };

  Stack.prototype.Prev = function (noPop) {
    var top = this.Top();
    return noPop ? top.First : top.Pop();
  };

  Stack.prototype.toString = function () {
    return 'stack[\n  ' + this.stack.join('\n  ') + '\n]';
  };

  return Stack;
}();

exports["default"] = Stack;

/***/ }),

/***/ 2812:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BaseItem = exports.MmlStack = void 0;

var TexError_js_1 = __webpack_require__(9722);

var MmlStack = function () {
  function MmlStack(_nodes) {
    this._nodes = _nodes;
  }

  Object.defineProperty(MmlStack.prototype, "nodes", {
    get: function get() {
      return this._nodes;
    },
    enumerable: false,
    configurable: true
  });

  MmlStack.prototype.Push = function () {
    var _a;

    var nodes = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      nodes[_i] = arguments[_i];
    }

    (_a = this._nodes).push.apply(_a, __spreadArray([], __read(nodes)));
  };

  MmlStack.prototype.Pop = function () {
    return this._nodes.pop();
  };

  Object.defineProperty(MmlStack.prototype, "First", {
    get: function get() {
      return this._nodes[this.Size() - 1];
    },
    set: function set(node) {
      this._nodes[this.Size() - 1] = node;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlStack.prototype, "Last", {
    get: function get() {
      return this._nodes[0];
    },
    set: function set(node) {
      this._nodes[0] = node;
    },
    enumerable: false,
    configurable: true
  });

  MmlStack.prototype.Peek = function (n) {
    if (n == null) {
      n = 1;
    }

    return this._nodes.slice(this.Size() - n);
  };

  MmlStack.prototype.Size = function () {
    return this._nodes.length;
  };

  MmlStack.prototype.Clear = function () {
    this._nodes = [];
  };

  MmlStack.prototype.toMml = function (inferred, forceRow) {
    if (inferred === void 0) {
      inferred = true;
    }

    if (this._nodes.length === 1 && !forceRow) {
      return this.First;
    }

    return this.create('node', inferred ? 'inferredMrow' : 'mrow', this._nodes, {});
  };

  MmlStack.prototype.create = function (kind) {
    var _a;

    var rest = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      rest[_i - 1] = arguments[_i];
    }

    return (_a = this.factory.configuration.nodeFactory).create.apply(_a, __spreadArray([kind], __read(rest)));
  };

  return MmlStack;
}();

exports.MmlStack = MmlStack;

var BaseItem = function (_super) {
  __extends(BaseItem, _super);

  function BaseItem(factory) {
    var nodes = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      nodes[_i - 1] = arguments[_i];
    }

    var _this = _super.call(this, nodes) || this;

    _this.factory = factory;
    _this.global = {};
    _this._properties = {};

    if (_this.isOpen) {
      _this._env = {};
    }

    return _this;
  }

  Object.defineProperty(BaseItem.prototype, "kind", {
    get: function get() {
      return 'base';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseItem.prototype, "env", {
    get: function get() {
      return this._env;
    },
    set: function set(value) {
      this._env = value;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseItem.prototype, "copyEnv", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  BaseItem.prototype.getProperty = function (key) {
    return this._properties[key];
  };

  BaseItem.prototype.setProperty = function (key, value) {
    this._properties[key] = value;
    return this;
  };

  Object.defineProperty(BaseItem.prototype, "isOpen", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseItem.prototype, "isClose", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseItem.prototype, "isFinal", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });

  BaseItem.prototype.isKind = function (kind) {
    return kind === this.kind;
  };

  BaseItem.prototype.checkItem = function (item) {
    if (item.isKind('over') && this.isOpen) {
      item.setProperty('num', this.toMml(false));
      this.Clear();
    }

    if (item.isKind('cell') && this.isOpen) {
      if (item.getProperty('linebreak')) {
        return BaseItem.fail;
      }

      throw new TexError_js_1.default('Misplaced', 'Misplaced %1', item.getName());
    }

    if (item.isClose && this.getErrors(item.kind)) {
      var _a = __read(this.getErrors(item.kind), 2),
          id = _a[0],
          message = _a[1];

      throw new TexError_js_1.default(id, message, item.getName());
    }

    if (!item.isFinal) {
      return BaseItem.success;
    }

    this.Push(item.First);
    return BaseItem.fail;
  };

  BaseItem.prototype.clearEnv = function () {
    var e_1, _a;

    try {
      for (var _b = __values(Object.keys(this.env)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var id = _c.value;
        delete this.env[id];
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  };

  BaseItem.prototype.setProperties = function (def) {
    Object.assign(this._properties, def);
    return this;
  };

  BaseItem.prototype.getName = function () {
    return this.getProperty('name');
  };

  BaseItem.prototype.toString = function () {
    return this.kind + '[' + this.nodes.join('; ') + ']';
  };

  BaseItem.prototype.getErrors = function (kind) {
    var CLASS = this.constructor;
    return (CLASS.errors || {})[kind] || BaseItem.errors[kind];
  };

  BaseItem.fail = [null, false];
  BaseItem.success = [null, true];
  BaseItem.errors = {
    end: ['MissingBeginExtraEnd', 'Missing \\begin{%1} or extra \\end{%1}'],
    close: ['ExtraCloseMissingOpen', 'Extra close brace or missing open brace'],
    right: ['MissingLeftExtraRight', 'Missing \\left or extra \\right'],
    middle: ['ExtraMiddle', 'Extra \\middle']
  };
  return BaseItem;
}(MmlStack);

exports.BaseItem = BaseItem;

/***/ }),

/***/ 5076:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var StackItem_js_1 = __webpack_require__(2812);

var Factory_js_1 = __webpack_require__(7045);

var DummyItem = function (_super) {
  __extends(DummyItem, _super);

  function DummyItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  return DummyItem;
}(StackItem_js_1.BaseItem);

var StackItemFactory = function (_super) {
  __extends(StackItemFactory, _super);

  function StackItemFactory() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.defaultKind = 'dummy';
    _this.configuration = null;
    return _this;
  }

  StackItemFactory.DefaultStackItems = (_a = {}, _a[DummyItem.prototype.kind] = DummyItem, _a);
  return StackItemFactory;
}(Factory_js_1.AbstractFactory);

exports["default"] = StackItemFactory;

/***/ }),

/***/ 9093:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Macro = exports.Symbol = void 0;

var Symbol = function () {
  function Symbol(_symbol, _char, _attributes) {
    this._symbol = _symbol;
    this._char = _char;
    this._attributes = _attributes;
  }

  Object.defineProperty(Symbol.prototype, "symbol", {
    get: function get() {
      return this._symbol;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Symbol.prototype, "char", {
    get: function get() {
      return this._char;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Symbol.prototype, "attributes", {
    get: function get() {
      return this._attributes;
    },
    enumerable: false,
    configurable: true
  });
  return Symbol;
}();

exports.Symbol = Symbol;

var Macro = function () {
  function Macro(_symbol, _func, _args) {
    if (_args === void 0) {
      _args = [];
    }

    this._symbol = _symbol;
    this._func = _func;
    this._args = _args;
  }

  Object.defineProperty(Macro.prototype, "symbol", {
    get: function get() {
      return this._symbol;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Macro.prototype, "func", {
    get: function get() {
      return this._func;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Macro.prototype, "args", {
    get: function get() {
      return this._args;
    },
    enumerable: false,
    configurable: true
  });
  return Macro;
}();

exports.Macro = Macro;

/***/ }),

/***/ 1682:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.EnvironmentMap = exports.CommandMap = exports.MacroMap = exports.DelimiterMap = exports.CharacterMap = exports.AbstractParseMap = exports.RegExpMap = exports.AbstractSymbolMap = void 0;

var Symbol_js_1 = __webpack_require__(9093);

var MapHandler_js_1 = __webpack_require__(4951);

var AbstractSymbolMap = function () {
  function AbstractSymbolMap(_name, _parser) {
    this._name = _name;
    this._parser = _parser;
    MapHandler_js_1.MapHandler.register(this);
  }

  Object.defineProperty(AbstractSymbolMap.prototype, "name", {
    get: function get() {
      return this._name;
    },
    enumerable: false,
    configurable: true
  });

  AbstractSymbolMap.prototype.parserFor = function (symbol) {
    return this.contains(symbol) ? this.parser : null;
  };

  AbstractSymbolMap.prototype.parse = function (_a) {
    var _b = __read(_a, 2),
        env = _b[0],
        symbol = _b[1];

    var parser = this.parserFor(symbol);
    var mapped = this.lookup(symbol);
    return parser && mapped ? parser(env, mapped) || true : null;
  };

  Object.defineProperty(AbstractSymbolMap.prototype, "parser", {
    get: function get() {
      return this._parser;
    },
    set: function set(parser) {
      this._parser = parser;
    },
    enumerable: false,
    configurable: true
  });
  return AbstractSymbolMap;
}();

exports.AbstractSymbolMap = AbstractSymbolMap;

var RegExpMap = function (_super) {
  __extends(RegExpMap, _super);

  function RegExpMap(name, parser, _regExp) {
    var _this = _super.call(this, name, parser) || this;

    _this._regExp = _regExp;
    return _this;
  }

  RegExpMap.prototype.contains = function (symbol) {
    return this._regExp.test(symbol);
  };

  RegExpMap.prototype.lookup = function (symbol) {
    return this.contains(symbol) ? symbol : null;
  };

  return RegExpMap;
}(AbstractSymbolMap);

exports.RegExpMap = RegExpMap;

var AbstractParseMap = function (_super) {
  __extends(AbstractParseMap, _super);

  function AbstractParseMap() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.map = new Map();
    return _this;
  }

  AbstractParseMap.prototype.lookup = function (symbol) {
    return this.map.get(symbol);
  };

  AbstractParseMap.prototype.contains = function (symbol) {
    return this.map.has(symbol);
  };

  AbstractParseMap.prototype.add = function (symbol, object) {
    this.map.set(symbol, object);
  };

  AbstractParseMap.prototype.remove = function (symbol) {
    this.map.delete(symbol);
  };

  return AbstractParseMap;
}(AbstractSymbolMap);

exports.AbstractParseMap = AbstractParseMap;

var CharacterMap = function (_super) {
  __extends(CharacterMap, _super);

  function CharacterMap(name, parser, json) {
    var e_1, _a;

    var _this = _super.call(this, name, parser) || this;

    try {
      for (var _b = __values(Object.keys(json)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var key = _c.value;
        var value = json[key];

        var _d = __read(typeof value === 'string' ? [value, null] : value, 2),
            char = _d[0],
            attrs = _d[1];

        var character = new Symbol_js_1.Symbol(key, char, attrs);

        _this.add(key, character);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return _this;
  }

  return CharacterMap;
}(AbstractParseMap);

exports.CharacterMap = CharacterMap;

var DelimiterMap = function (_super) {
  __extends(DelimiterMap, _super);

  function DelimiterMap() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  DelimiterMap.prototype.parse = function (_a) {
    var _b = __read(_a, 2),
        env = _b[0],
        symbol = _b[1];

    return _super.prototype.parse.call(this, [env, '\\' + symbol]);
  };

  return DelimiterMap;
}(CharacterMap);

exports.DelimiterMap = DelimiterMap;

var MacroMap = function (_super) {
  __extends(MacroMap, _super);

  function MacroMap(name, json, functionMap) {
    var e_2, _a;

    var _this = _super.call(this, name, null) || this;

    try {
      for (var _b = __values(Object.keys(json)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var key = _c.value;
        var value = json[key];

        var _d = __read(typeof value === 'string' ? [value] : value),
            func = _d[0],
            attrs = _d.slice(1);

        var character = new Symbol_js_1.Macro(key, functionMap[func], attrs);

        _this.add(key, character);
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }

    return _this;
  }

  MacroMap.prototype.parserFor = function (symbol) {
    var macro = this.lookup(symbol);
    return macro ? macro.func : null;
  };

  MacroMap.prototype.parse = function (_a) {
    var _b = __read(_a, 2),
        env = _b[0],
        symbol = _b[1];

    var macro = this.lookup(symbol);
    var parser = this.parserFor(symbol);

    if (!macro || !parser) {
      return null;
    }

    return parser.apply(void 0, __spreadArray([env, macro.symbol], __read(macro.args))) || true;
  };

  return MacroMap;
}(AbstractParseMap);

exports.MacroMap = MacroMap;

var CommandMap = function (_super) {
  __extends(CommandMap, _super);

  function CommandMap() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CommandMap.prototype.parse = function (_a) {
    var _b = __read(_a, 2),
        env = _b[0],
        symbol = _b[1];

    var macro = this.lookup(symbol);
    var parser = this.parserFor(symbol);

    if (!macro || !parser) {
      return null;
    }

    if (!parser) {
      return null;
    }

    var saveCommand = env.currentCS;
    env.currentCS = '\\' + symbol;
    var result = parser.apply(void 0, __spreadArray([env, '\\' + macro.symbol], __read(macro.args)));
    env.currentCS = saveCommand;
    return result || true;
  };

  return CommandMap;
}(MacroMap);

exports.CommandMap = CommandMap;

var EnvironmentMap = function (_super) {
  __extends(EnvironmentMap, _super);

  function EnvironmentMap(name, parser, json, functionMap) {
    var _this = _super.call(this, name, json, functionMap) || this;

    _this.parser = parser;
    return _this;
  }

  EnvironmentMap.prototype.parse = function (_a) {
    var _b = __read(_a, 2),
        env = _b[0],
        symbol = _b[1];

    var macro = this.lookup(symbol);
    var envParser = this.parserFor(symbol);

    if (!macro || !envParser) {
      return null;
    }

    this.parser(env, macro.symbol, envParser, macro.args);
    return true;
  };

  return EnvironmentMap;
}(MacroMap);

exports.EnvironmentMap = EnvironmentMap;

/***/ }),

/***/ 4363:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.TagsFactory = exports.AllTags = exports.NoTags = exports.AbstractTags = exports.TagInfo = exports.Label = void 0;

var TexParser_js_1 = __webpack_require__(9525);

var Label = function () {
  function Label(tag, id) {
    if (tag === void 0) {
      tag = '???';
    }

    if (id === void 0) {
      id = '';
    }

    this.tag = tag;
    this.id = id;
  }

  return Label;
}();

exports.Label = Label;

var TagInfo = function () {
  function TagInfo(env, taggable, defaultTags, tag, tagId, tagFormat, noTag, labelId) {
    if (env === void 0) {
      env = '';
    }

    if (taggable === void 0) {
      taggable = false;
    }

    if (defaultTags === void 0) {
      defaultTags = false;
    }

    if (tag === void 0) {
      tag = null;
    }

    if (tagId === void 0) {
      tagId = '';
    }

    if (tagFormat === void 0) {
      tagFormat = '';
    }

    if (noTag === void 0) {
      noTag = false;
    }

    if (labelId === void 0) {
      labelId = '';
    }

    this.env = env;
    this.taggable = taggable;
    this.defaultTags = defaultTags;
    this.tag = tag;
    this.tagId = tagId;
    this.tagFormat = tagFormat;
    this.noTag = noTag;
    this.labelId = labelId;
  }

  return TagInfo;
}();

exports.TagInfo = TagInfo;

var AbstractTags = function () {
  function AbstractTags() {
    this.counter = 0;
    this.allCounter = 0;
    this.configuration = null;
    this.ids = {};
    this.allIds = {};
    this.labels = {};
    this.allLabels = {};
    this.redo = false;
    this.refUpdate = false;
    this.currentTag = new TagInfo();
    this.history = [];
    this.stack = [];

    this.enTag = function (node, tag) {
      var nf = this.configuration.nodeFactory;
      var cell = nf.create('node', 'mtd', [node]);
      var row = nf.create('node', 'mlabeledtr', [tag, cell]);
      var table = nf.create('node', 'mtable', [row], {
        side: this.configuration.options['tagSide'],
        minlabelspacing: this.configuration.options['tagIndent'],
        displaystyle: true
      });
      return table;
    };
  }

  AbstractTags.prototype.start = function (env, taggable, defaultTags) {
    if (this.currentTag) {
      this.stack.push(this.currentTag);
    }

    this.currentTag = new TagInfo(env, taggable, defaultTags);
  };

  Object.defineProperty(AbstractTags.prototype, "env", {
    get: function get() {
      return this.currentTag.env;
    },
    enumerable: false,
    configurable: true
  });

  AbstractTags.prototype.end = function () {
    this.history.push(this.currentTag);
    this.currentTag = this.stack.pop();
  };

  AbstractTags.prototype.tag = function (tag, noFormat) {
    this.currentTag.tag = tag;
    this.currentTag.tagFormat = noFormat ? tag : this.formatTag(tag);
    this.currentTag.noTag = false;
  };

  AbstractTags.prototype.notag = function () {
    this.tag('', true);
    this.currentTag.noTag = true;
  };

  Object.defineProperty(AbstractTags.prototype, "noTag", {
    get: function get() {
      return this.currentTag.noTag;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AbstractTags.prototype, "label", {
    get: function get() {
      return this.currentTag.labelId;
    },
    set: function set(label) {
      this.currentTag.labelId = label;
    },
    enumerable: false,
    configurable: true
  });

  AbstractTags.prototype.formatUrl = function (id, base) {
    return base + '#' + encodeURIComponent(id);
  };

  AbstractTags.prototype.formatTag = function (tag) {
    return '(' + tag + ')';
  };

  AbstractTags.prototype.formatId = function (id) {
    return 'mjx-eqn:' + id.replace(/\s/g, '_');
  };

  AbstractTags.prototype.formatNumber = function (n) {
    return n.toString();
  };

  AbstractTags.prototype.autoTag = function () {
    if (this.currentTag.tag == null) {
      this.counter++;
      this.tag(this.formatNumber(this.counter), false);
    }
  };

  AbstractTags.prototype.clearTag = function () {
    this.label = '';
    this.tag(null, true);
    this.currentTag.tagId = '';
  };

  AbstractTags.prototype.getTag = function (force) {
    if (force === void 0) {
      force = false;
    }

    if (force) {
      this.autoTag();
      return this.makeTag();
    }

    var ct = this.currentTag;

    if (ct.taggable && !ct.noTag) {
      if (ct.defaultTags) {
        this.autoTag();
      }

      if (ct.tag) {
        return this.makeTag();
      }
    }

    return null;
  };

  AbstractTags.prototype.resetTag = function () {
    this.history = [];
    this.redo = false;
    this.refUpdate = false;
    this.clearTag();
  };

  AbstractTags.prototype.reset = function (offset) {
    if (offset === void 0) {
      offset = 0;
    }

    this.resetTag();
    this.counter = this.allCounter = offset;
    this.allLabels = {};
    this.allIds = {};
  };

  AbstractTags.prototype.startEquation = function (math) {
    this.history = [];
    this.stack = [];
    this.clearTag();
    this.currentTag = new TagInfo('', undefined, undefined);
    this.labels = {};
    this.ids = {};
    this.counter = this.allCounter;
    this.redo = false;
    var recompile = math.inputData.recompile;

    if (recompile) {
      this.refUpdate = true;
      this.counter = recompile.counter;
    }
  };

  AbstractTags.prototype.finishEquation = function (math) {
    if (this.redo) {
      math.inputData.recompile = {
        state: math.state(),
        counter: this.allCounter
      };
    }

    if (!this.refUpdate) {
      this.allCounter = this.counter;
    }

    Object.assign(this.allIds, this.ids);
    Object.assign(this.allLabels, this.labels);
  };

  AbstractTags.prototype.finalize = function (node, env) {
    if (!env.display || this.currentTag.env || this.currentTag.tag == null) {
      return node;
    }

    var tag = this.makeTag();
    var table = this.enTag(node, tag);
    return table;
  };

  AbstractTags.prototype.makeId = function () {
    this.currentTag.tagId = this.formatId(this.configuration.options['useLabelIds'] ? this.label || this.currentTag.tag : this.currentTag.tag);
  };

  AbstractTags.prototype.makeTag = function () {
    this.makeId();

    if (this.label) {
      this.labels[this.label] = new Label(this.currentTag.tag, this.currentTag.tagId);
    }

    var mml = new TexParser_js_1.default('\\text{' + this.currentTag.tagFormat + '}', {}, this.configuration).mml();
    return this.configuration.nodeFactory.create('node', 'mtd', [mml], {
      id: this.currentTag.tagId
    });
  };

  return AbstractTags;
}();

exports.AbstractTags = AbstractTags;

var NoTags = function (_super) {
  __extends(NoTags, _super);

  function NoTags() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  NoTags.prototype.autoTag = function () {};

  NoTags.prototype.getTag = function () {
    return !this.currentTag.tag ? null : _super.prototype.getTag.call(this);
  };

  return NoTags;
}(AbstractTags);

exports.NoTags = NoTags;

var AllTags = function (_super) {
  __extends(AllTags, _super);

  function AllTags() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  AllTags.prototype.finalize = function (node, env) {
    if (!env.display || this.history.find(function (x) {
      return x.taggable;
    })) {
      return node;
    }

    var tag = this.getTag(true);
    return this.enTag(node, tag);
  };

  return AllTags;
}(AbstractTags);

exports.AllTags = AllTags;
var TagsFactory;

(function (TagsFactory) {
  var tagsMapping = new Map([['none', NoTags], ['all', AllTags]]);
  var defaultTags = 'none';
  TagsFactory.OPTIONS = {
    tags: defaultTags,
    tagSide: 'right',
    tagIndent: '0.8em',
    useLabelIds: true,
    ignoreDuplicateLabels: false
  };

  TagsFactory.add = function (name, constr) {
    tagsMapping.set(name, constr);
  };

  TagsFactory.addTags = function (tags) {
    var e_1, _a;

    try {
      for (var _b = __values(Object.keys(tags)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var key = _c.value;
        TagsFactory.add(key, tags[key]);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  };

  TagsFactory.create = function (name) {
    var constr = tagsMapping.get(name) || tagsMapping.get(defaultTags);

    if (!constr) {
      throw Error('Unknown tags class');
    }

    return new constr();
  };

  TagsFactory.setDefault = function (name) {
    defaultTags = name;
  };

  TagsFactory.getDefault = function () {
    return TagsFactory.create(defaultTags);
  };
})(TagsFactory = exports.TagsFactory || (exports.TagsFactory = {}));

/***/ }),

/***/ 7338:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.TexConstant = void 0;
var TexConstant;

(function (TexConstant) {
  TexConstant.Variant = {
    NORMAL: 'normal',
    BOLD: 'bold',
    ITALIC: 'italic',
    BOLDITALIC: 'bold-italic',
    DOUBLESTRUCK: 'double-struck',
    FRAKTUR: 'fraktur',
    BOLDFRAKTUR: 'bold-fraktur',
    SCRIPT: 'script',
    BOLDSCRIPT: 'bold-script',
    SANSSERIF: 'sans-serif',
    BOLDSANSSERIF: 'bold-sans-serif',
    SANSSERIFITALIC: 'sans-serif-italic',
    SANSSERIFBOLDITALIC: 'sans-serif-bold-italic',
    MONOSPACE: 'monospace',
    INITIAL: 'inital',
    TAILED: 'tailed',
    LOOPED: 'looped',
    STRETCHED: 'stretched',
    CALLIGRAPHIC: '-tex-calligraphic',
    BOLDCALLIGRAPHIC: '-tex-bold-calligraphic',
    OLDSTYLE: '-tex-oldstyle',
    BOLDOLDSTYLE: '-tex-bold-oldstyle',
    MATHITALIC: '-tex-mathit'
  };
  TexConstant.Form = {
    PREFIX: 'prefix',
    INFIX: 'infix',
    POSTFIX: 'postfix'
  };
  TexConstant.LineBreak = {
    AUTO: 'auto',
    NEWLINE: 'newline',
    NOBREAK: 'nobreak',
    GOODBREAK: 'goodbreak',
    BADBREAK: 'badbreak'
  };
  TexConstant.LineBreakStyle = {
    BEFORE: 'before',
    AFTER: 'after',
    DUPLICATE: 'duplicate',
    INFIXLINBREAKSTYLE: 'infixlinebreakstyle'
  };
  TexConstant.IndentAlign = {
    LEFT: 'left',
    CENTER: 'center',
    RIGHT: 'right',
    AUTO: 'auto',
    ID: 'id',
    INDENTALIGN: 'indentalign'
  };
  TexConstant.IndentShift = {
    INDENTSHIFT: 'indentshift'
  };
  TexConstant.LineThickness = {
    THIN: 'thin',
    MEDIUM: 'medium',
    THICK: 'thick'
  };
  TexConstant.Notation = {
    LONGDIV: 'longdiv',
    ACTUARIAL: 'actuarial',
    PHASORANGLE: 'phasorangle',
    RADICAL: 'radical',
    BOX: 'box',
    ROUNDEDBOX: 'roundedbox',
    CIRCLE: 'circle',
    LEFT: 'left',
    RIGHT: 'right',
    TOP: 'top',
    BOTTOM: 'bottom',
    UPDIAGONALSTRIKE: 'updiagonalstrike',
    DOWNDIAGONALSTRIKE: 'downdiagonalstrike',
    VERTICALSTRIKE: 'verticalstrike',
    HORIZONTALSTRIKE: 'horizontalstrike',
    NORTHEASTARROW: 'northeastarrow',
    MADRUWB: 'madruwb',
    UPDIAGONALARROW: 'updiagonalarrow'
  };
  TexConstant.Align = {
    TOP: 'top',
    BOTTOM: 'bottom',
    CENTER: 'center',
    BASELINE: 'baseline',
    AXIS: 'axis',
    LEFT: 'left',
    RIGHT: 'right'
  };
  TexConstant.Lines = {
    NONE: 'none',
    SOLID: 'solid',
    DASHED: 'dashed'
  };
  TexConstant.Side = {
    LEFT: 'left',
    RIGHT: 'right',
    LEFTOVERLAP: 'leftoverlap',
    RIGHTOVERLAP: 'rightoverlap'
  };
  TexConstant.Width = {
    AUTO: 'auto',
    FIT: 'fit'
  };
  TexConstant.Actiontype = {
    TOGGLE: 'toggle',
    STATUSLINE: 'statusline',
    TOOLTIP: 'tooltip',
    INPUT: 'input'
  };
  TexConstant.Overflow = {
    LINBREAK: 'linebreak',
    SCROLL: 'scroll',
    ELIDE: 'elide',
    TRUNCATE: 'truncate',
    SCALE: 'scale'
  };
  TexConstant.Unit = {
    EM: 'em',
    EX: 'ex',
    PX: 'px',
    IN: 'in',
    CM: 'cm',
    MM: 'mm',
    PT: 'pt',
    PC: 'pc'
  };
})(TexConstant = exports.TexConstant || (exports.TexConstant = {}));

/***/ }),

/***/ 9722:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var TexError = function () {
  function TexError(id, message) {
    var rest = [];

    for (var _i = 2; _i < arguments.length; _i++) {
      rest[_i - 2] = arguments[_i];
    }

    this.id = id;
    this.message = TexError.processString(message, rest);
  }

  TexError.processString = function (str, args) {
    var parts = str.split(TexError.pattern);

    for (var i = 1, m = parts.length; i < m; i += 2) {
      var c = parts[i].charAt(0);

      if (c >= '0' && c <= '9') {
        parts[i] = args[parseInt(parts[i], 10) - 1];

        if (typeof parts[i] === 'number') {
          parts[i] = parts[i].toString();
        }
      } else if (c === '{') {
        c = parts[i].substr(1);

        if (c >= '0' && c <= '9') {
          parts[i] = args[parseInt(parts[i].substr(1, parts[i].length - 2), 10) - 1];

          if (typeof parts[i] === 'number') {
            parts[i] = parts[i].toString();
          }
        } else {
          var match = parts[i].match(/^\{([a-z]+):%(\d+)\|(.*)\}$/);

          if (match) {
            parts[i] = '%' + parts[i];
          }
        }
      }

      if (parts[i] == null) {
        parts[i] = '???';
      }
    }

    return parts.join('');
  };

  TexError.pattern = /%(\d+|\{\d+\}|\{[a-z]+:\%\d+(?:\|(?:%\{\d+\}|%.|[^\}])*)+\}|.)/g;
  return TexError;
}();

exports["default"] = TexError;

/***/ }),

/***/ 9525:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var ParseUtil_js_1 = __webpack_require__(4632);

var Stack_js_1 = __webpack_require__(4347);

var TexError_js_1 = __webpack_require__(9722);

var MmlNode_js_1 = __webpack_require__(4653);

var TexParser = function () {
  function TexParser(_string, env, configuration) {
    var e_1, _a;

    this._string = _string;
    this.configuration = configuration;
    this.macroCount = 0;
    this.i = 0;
    this.currentCS = '';
    var inner = env.hasOwnProperty('isInner');
    var isInner = env['isInner'];
    delete env['isInner'];
    var ENV;

    if (env) {
      ENV = {};

      try {
        for (var _b = __values(Object.keys(env)), _c = _b.next(); !_c.done; _c = _b.next()) {
          var id = _c.value;
          ENV[id] = env[id];
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_1) throw e_1.error;
        }
      }
    }

    this.configuration.pushParser(this);
    this.stack = new Stack_js_1.default(this.itemFactory, ENV, inner ? isInner : true);
    this.Parse();
    this.Push(this.itemFactory.create('stop'));
  }

  Object.defineProperty(TexParser.prototype, "options", {
    get: function get() {
      return this.configuration.options;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TexParser.prototype, "itemFactory", {
    get: function get() {
      return this.configuration.itemFactory;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TexParser.prototype, "tags", {
    get: function get() {
      return this.configuration.tags;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TexParser.prototype, "string", {
    get: function get() {
      return this._string;
    },
    set: function set(str) {
      this._string = str;
    },
    enumerable: false,
    configurable: true
  });

  TexParser.prototype.parse = function (kind, input) {
    return this.configuration.handlers.get(kind).parse(input);
  };

  TexParser.prototype.lookup = function (kind, symbol) {
    return this.configuration.handlers.get(kind).lookup(symbol);
  };

  TexParser.prototype.contains = function (kind, symbol) {
    return this.configuration.handlers.get(kind).contains(symbol);
  };

  TexParser.prototype.toString = function () {
    var e_2, _a;

    var str = '';

    try {
      for (var _b = __values(Array.from(this.configuration.handlers.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {
        var config = _c.value;
        str += config + ': ' + this.configuration.handlers.get(config) + '\n';
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }

    return str;
  };

  TexParser.prototype.Parse = function () {
    var c;

    while (this.i < this.string.length) {
      c = this.getCodePoint();
      this.i += c.length;
      this.parse('character', [this, c]);
    }
  };

  TexParser.prototype.Push = function (arg) {
    if (arg instanceof MmlNode_js_1.AbstractMmlNode && arg.isInferred) {
      this.PushAll(arg.childNodes);
    } else {
      this.stack.Push(arg);
    }
  };

  TexParser.prototype.PushAll = function (args) {
    var e_3, _a;

    try {
      for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {
        var arg = args_1_1.value;
        this.stack.Push(arg);
      }
    } catch (e_3_1) {
      e_3 = {
        error: e_3_1
      };
    } finally {
      try {
        if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);
      } finally {
        if (e_3) throw e_3.error;
      }
    }
  };

  TexParser.prototype.mml = function () {
    if (!this.stack.Top().isKind('mml')) {
      return null;
    }

    var node = this.stack.Top().First;
    this.configuration.popParser();
    return node;
  };

  TexParser.prototype.convertDelimiter = function (c) {
    var symbol = this.lookup('delimiter', c);
    return symbol ? symbol.char : null;
  };

  TexParser.prototype.getCodePoint = function () {
    var code = this.string.codePointAt(this.i);
    return code === undefined ? '' : String.fromCodePoint(code);
  };

  TexParser.prototype.nextIsSpace = function () {
    return !!this.string.charAt(this.i).match(/\s/);
  };

  TexParser.prototype.GetNext = function () {
    while (this.nextIsSpace()) {
      this.i++;
    }

    return this.getCodePoint();
  };

  TexParser.prototype.GetCS = function () {
    var CS = this.string.slice(this.i).match(/^(([a-z]+) ?|[\uD800-\uDBFF].|.)/i);

    if (CS) {
      this.i += CS[0].length;
      return CS[2] || CS[1];
    } else {
      this.i++;
      return ' ';
    }
  };

  TexParser.prototype.GetArgument = function (_name, noneOK) {
    switch (this.GetNext()) {
      case '':
        if (!noneOK) {
          throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', this.currentCS);
        }

        return null;

      case '}':
        if (!noneOK) {
          throw new TexError_js_1.default('ExtraCloseMissingOpen', 'Extra close brace or missing open brace');
        }

        return null;

      case '\\':
        this.i++;
        return '\\' + this.GetCS();

      case '{':
        var j = ++this.i,
            parens = 1;

        while (this.i < this.string.length) {
          switch (this.string.charAt(this.i++)) {
            case '\\':
              this.i++;
              break;

            case '{':
              parens++;
              break;

            case '}':
              if (--parens === 0) {
                return this.string.slice(j, this.i - 1);
              }

              break;
          }
        }

        throw new TexError_js_1.default('MissingCloseBrace', 'Missing close brace');
    }

    var c = this.getCodePoint();
    this.i += c.length;
    return c;
  };

  TexParser.prototype.GetBrackets = function (_name, def) {
    if (this.GetNext() !== '[') {
      return def;
    }

    var j = ++this.i,
        parens = 0;

    while (this.i < this.string.length) {
      switch (this.string.charAt(this.i++)) {
        case '{':
          parens++;
          break;

        case '\\':
          this.i++;
          break;

        case '}':
          if (parens-- <= 0) {
            throw new TexError_js_1.default('ExtraCloseLooking', 'Extra close brace while looking for %1', '\']\'');
          }

          break;

        case ']':
          if (parens === 0) {
            return this.string.slice(j, this.i - 1);
          }

          break;
      }
    }

    throw new TexError_js_1.default('MissingCloseBracket', 'Could not find closing \']\' for argument to %1', this.currentCS);
  };

  TexParser.prototype.GetDelimiter = function (name, braceOK) {
    var c = this.GetNext();
    this.i += c.length;

    if (this.i <= this.string.length) {
      if (c === '\\') {
        c += this.GetCS();
      } else if (c === '{' && braceOK) {
        this.i--;
        c = this.GetArgument(name).trim();
      }

      if (this.contains('delimiter', c)) {
        return this.convertDelimiter(c);
      }
    }

    throw new TexError_js_1.default('MissingOrUnrecognizedDelim', 'Missing or unrecognized delimiter for %1', this.currentCS);
  };

  TexParser.prototype.GetDimen = function (name) {
    if (this.GetNext() === '{') {
      var dimen = this.GetArgument(name);

      var _a = __read(ParseUtil_js_1.default.matchDimen(dimen), 2),
          value = _a[0],
          unit = _a[1];

      if (value) {
        return value + unit;
      }
    } else {
      var dimen = this.string.slice(this.i);

      var _b = __read(ParseUtil_js_1.default.matchDimen(dimen, true), 3),
          value = _b[0],
          unit = _b[1],
          length_1 = _b[2];

      if (value) {
        this.i += length_1;
        return value + unit;
      }
    }

    throw new TexError_js_1.default('MissingDimOrUnits', 'Missing dimension or its units for %1', this.currentCS);
  };

  TexParser.prototype.GetUpTo = function (_name, token) {
    while (this.nextIsSpace()) {
      this.i++;
    }

    var j = this.i;
    var parens = 0;

    while (this.i < this.string.length) {
      var k = this.i;
      var c = this.GetNext();
      this.i += c.length;

      switch (c) {
        case '\\':
          c += this.GetCS();
          break;

        case '{':
          parens++;
          break;

        case '}':
          if (parens === 0) {
            throw new TexError_js_1.default('ExtraCloseLooking', 'Extra close brace while looking for %1', token);
          }

          parens--;
          break;
      }

      if (parens === 0 && c === token) {
        return this.string.slice(j, k);
      }
    }

    throw new TexError_js_1.default('TokenNotFoundForCommand', 'Could not find %1 for %2', token, this.currentCS);
  };

  TexParser.prototype.ParseArg = function (name) {
    return new TexParser(this.GetArgument(name), this.stack.env, this.configuration).mml();
  };

  TexParser.prototype.ParseUpTo = function (name, token) {
    return new TexParser(this.GetUpTo(name, token), this.stack.env, this.configuration).mml();
  };

  TexParser.prototype.GetDelimiterArg = function (name) {
    var c = ParseUtil_js_1.default.trimSpaces(this.GetArgument(name));

    if (c === '') {
      return null;
    }

    if (this.contains('delimiter', c)) {
      return c;
    }

    throw new TexError_js_1.default('MissingOrUnrecognizedDelim', 'Missing or unrecognized delimiter for %1', this.currentCS);
  };

  TexParser.prototype.GetStar = function () {
    var star = this.GetNext() === '*';

    if (star) {
      this.i++;
    }

    return star;
  };

  TexParser.prototype.create = function (kind) {
    var _a;

    var rest = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      rest[_i - 1] = arguments[_i];
    }

    return (_a = this.configuration.nodeFactory).create.apply(_a, __spreadArray([kind], __read(rest)));
  };

  return TexParser;
}();

exports["default"] = TexParser;

/***/ }),

/***/ 9881:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ActionConfiguration = exports.ActionMethods = void 0;

var Configuration_js_1 = __webpack_require__(738);

var TexParser_js_1 = __webpack_require__(9525);

var SymbolMap_js_1 = __webpack_require__(1682);

var BaseMethods_js_1 = __webpack_require__(4807);

exports.ActionMethods = {};
exports.ActionMethods.Macro = BaseMethods_js_1.default.Macro;

exports.ActionMethods.Toggle = function (parser, name) {
  var children = [];
  var arg;

  while ((arg = parser.GetArgument(name)) !== '\\endtoggle') {
    children.push(new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml());
  }

  parser.Push(parser.create('node', 'maction', children, {
    actiontype: 'toggle'
  }));
};

exports.ActionMethods.Mathtip = function (parser, name) {
  var arg = parser.ParseArg(name);
  var tip = parser.ParseArg(name);
  parser.Push(parser.create('node', 'maction', [arg, tip], {
    actiontype: 'tooltip'
  }));
};

new SymbolMap_js_1.CommandMap('action-macros', {
  toggle: 'Toggle',
  mathtip: 'Mathtip',
  texttip: ['Macro', '\\mathtip{#1}{\\text{#2}}', 2]
}, exports.ActionMethods);
exports.ActionConfiguration = Configuration_js_1.Configuration.create('action', {
  handler: {
    macro: ['action-macros']
  }
});

/***/ }),

/***/ 9085:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AmsConfiguration = exports.AmsTags = void 0;

var Configuration_js_1 = __webpack_require__(738);

var AmsItems_js_1 = __webpack_require__(7733);

var Tags_js_1 = __webpack_require__(4363);

var AmsMethods_js_1 = __webpack_require__(9899);

__webpack_require__(6599);

var SymbolMap_js_1 = __webpack_require__(1682);

var AmsTags = function (_super) {
  __extends(AmsTags, _super);

  function AmsTags() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  return AmsTags;
}(Tags_js_1.AbstractTags);

exports.AmsTags = AmsTags;

var init = function init(config) {
  new SymbolMap_js_1.CommandMap(AmsMethods_js_1.NEW_OPS, {}, {});
  config.append(Configuration_js_1.Configuration.local({
    handler: {
      macro: [AmsMethods_js_1.NEW_OPS]
    },
    priority: -1
  }));
};

exports.AmsConfiguration = Configuration_js_1.Configuration.create('ams', {
  handler: {
    delimiter: ['AMSsymbols-delimiter', 'AMSmath-delimiter'],
    macro: ['AMSsymbols-mathchar0mi', 'AMSsymbols-mathchar0mo', 'AMSsymbols-delimiter', 'AMSsymbols-macros', 'AMSmath-mathchar0mo', 'AMSmath-macros', 'AMSmath-delimiter'],
    environment: ['AMSmath-environment']
  },
  items: (_a = {}, _a[AmsItems_js_1.MultlineItem.prototype.kind] = AmsItems_js_1.MultlineItem, _a[AmsItems_js_1.FlalignItem.prototype.kind] = AmsItems_js_1.FlalignItem, _a),
  tags: {
    'ams': AmsTags
  },
  init: init,
  config: function config(_config, jax) {
    if (jax.parseOptions.options.multlineWidth) {
      jax.parseOptions.options.ams.multlineWidth = jax.parseOptions.options.multlineWidth;
    }

    delete jax.parseOptions.options.multlineWidth;
  },
  options: {
    multlineWidth: '',
    ams: {
      multlineWidth: '100%',
      multlineIndent: '1em'
    }
  }
});

/***/ }),

/***/ 7733:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.FlalignItem = exports.MultlineItem = void 0;

var BaseItems_js_1 = __webpack_require__(1811);

var ParseUtil_js_1 = __webpack_require__(4632);

var NodeUtil_js_1 = __webpack_require__(8754);

var TexError_js_1 = __webpack_require__(9722);

var TexConstants_js_1 = __webpack_require__(7338);

var MultlineItem = function (_super) {
  __extends(MultlineItem, _super);

  function MultlineItem(factory) {
    var args = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      args[_i - 1] = arguments[_i];
    }

    var _this = _super.call(this, factory) || this;

    _this.factory.configuration.tags.start('multline', true, args[0]);

    return _this;
  }

  Object.defineProperty(MultlineItem.prototype, "kind", {
    get: function get() {
      return 'multline';
    },
    enumerable: false,
    configurable: true
  });

  MultlineItem.prototype.EndEntry = function () {
    if (this.table.length) {
      ParseUtil_js_1.default.fixInitialMO(this.factory.configuration, this.nodes);
    }

    var shove = this.getProperty('shove');
    var mtd = this.create('node', 'mtd', this.nodes, shove ? {
      columnalign: shove
    } : {});
    this.setProperty('shove', null);
    this.row.push(mtd);
    this.Clear();
  };

  MultlineItem.prototype.EndRow = function () {
    if (this.row.length !== 1) {
      throw new TexError_js_1.default('MultlineRowsOneCol', 'The rows within the %1 environment must have exactly one column', 'multline');
    }

    var row = this.create('node', 'mtr', this.row);
    this.table.push(row);
    this.row = [];
  };

  MultlineItem.prototype.EndTable = function () {
    _super.prototype.EndTable.call(this);

    if (this.table.length) {
      var m = this.table.length - 1,
          label = -1;

      if (!NodeUtil_js_1.default.getAttribute(NodeUtil_js_1.default.getChildren(this.table[0])[0], 'columnalign')) {
        NodeUtil_js_1.default.setAttribute(NodeUtil_js_1.default.getChildren(this.table[0])[0], 'columnalign', TexConstants_js_1.TexConstant.Align.LEFT);
      }

      if (!NodeUtil_js_1.default.getAttribute(NodeUtil_js_1.default.getChildren(this.table[m])[0], 'columnalign')) {
        NodeUtil_js_1.default.setAttribute(NodeUtil_js_1.default.getChildren(this.table[m])[0], 'columnalign', TexConstants_js_1.TexConstant.Align.RIGHT);
      }

      var tag = this.factory.configuration.tags.getTag();

      if (tag) {
        label = this.arraydef.side === TexConstants_js_1.TexConstant.Align.LEFT ? 0 : this.table.length - 1;
        var mtr = this.table[label];
        var mlabel = this.create('node', 'mlabeledtr', [tag].concat(NodeUtil_js_1.default.getChildren(mtr)));
        NodeUtil_js_1.default.copyAttributes(mtr, mlabel);
        this.table[label] = mlabel;
      }
    }

    this.factory.configuration.tags.end();
  };

  return MultlineItem;
}(BaseItems_js_1.ArrayItem);

exports.MultlineItem = MultlineItem;

var FlalignItem = function (_super) {
  __extends(FlalignItem, _super);

  function FlalignItem(factory, name, numbered, padded, center) {
    var _this = _super.call(this, factory) || this;

    _this.name = name;
    _this.numbered = numbered;
    _this.padded = padded;
    _this.center = center;

    _this.factory.configuration.tags.start(name, numbered, numbered);

    return _this;
  }

  Object.defineProperty(FlalignItem.prototype, "kind", {
    get: function get() {
      return 'flalign';
    },
    enumerable: false,
    configurable: true
  });

  FlalignItem.prototype.EndEntry = function () {
    _super.prototype.EndEntry.call(this);

    var n = this.getProperty('xalignat');
    if (!n) return;

    if (this.row.length > n) {
      throw new TexError_js_1.default('XalignOverflow', 'Extra %1 in row of %2', '&', this.name);
    }
  };

  FlalignItem.prototype.EndRow = function () {
    var cell;
    var row = this.row;
    var n = this.getProperty('xalignat');

    while (row.length < n) {
      row.push(this.create('node', 'mtd'));
    }

    this.row = [];

    if (this.padded) {
      this.row.push(this.create('node', 'mtd'));
    }

    while (cell = row.shift()) {
      this.row.push(cell);
      cell = row.shift();
      if (cell) this.row.push(cell);

      if (row.length || this.padded) {
        this.row.push(this.create('node', 'mtd'));
      }
    }

    if (this.row.length > this.maxrow) {
      this.maxrow = this.row.length;
    }

    _super.prototype.EndRow.call(this);

    var mtr = this.table[this.table.length - 1];

    if (this.getProperty('zeroWidthLabel') && mtr.isKind('mlabeledtr')) {
      var mtd = NodeUtil_js_1.default.getChildren(mtr)[0];
      var side = this.factory.configuration.options['tagSide'];

      var def = __assign({
        width: 0
      }, side === 'right' ? {
        lspace: '-1width'
      } : {});

      var mpadded = this.create('node', 'mpadded', NodeUtil_js_1.default.getChildren(mtd), def);
      mtd.setChildren([mpadded]);
    }
  };

  FlalignItem.prototype.EndTable = function () {
    _super.prototype.EndTable.call(this);

    if (this.center) {
      if (this.maxrow <= 2) {
        var def = this.arraydef;
        delete def.width;
        delete this.global.indentalign;
      }
    }
  };

  return FlalignItem;
}(BaseItems_js_1.EqnArrayItem);

exports.FlalignItem = FlalignItem;

/***/ }),

/***/ 6599:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var AmsMethods_js_1 = __webpack_require__(9899);

var sm = __webpack_require__(1682);

var TexConstants_js_1 = __webpack_require__(7338);

var ParseMethods_js_1 = __webpack_require__(5123);

var ParseUtil_js_1 = __webpack_require__(4632);

var MmlNode_js_1 = __webpack_require__(4653);

var lengths_js_1 = __webpack_require__(5915);

new sm.CharacterMap('AMSmath-mathchar0mo', ParseMethods_js_1.default.mathchar0mo, {
  iiiint: ["\u2A0C", {
    texClass: MmlNode_js_1.TEXCLASS.OP
  }]
});
new sm.CommandMap('AMSmath-macros', {
  mathring: ['Accent', '02DA'],
  nobreakspace: 'Tilde',
  negmedspace: ['Spacer', lengths_js_1.MATHSPACE.negativemediummathspace],
  negthickspace: ['Spacer', lengths_js_1.MATHSPACE.negativethickmathspace],
  idotsint: ['MultiIntegral', '\\int\\cdots\\int'],
  dddot: ['Accent', '20DB'],
  ddddot: ['Accent', '20DC'],
  sideset: ['Macro', '\\mathop{\\mathop{\\rlap{\\phantom{#3}}}\\nolimits#1' + '\\!\\mathop{#3}\\nolimits#2}', 3],
  boxed: ['Macro', '\\fbox{$\\displaystyle{#1}$}', 1],
  tag: 'HandleTag',
  notag: 'HandleNoTag',
  eqref: ['HandleRef', true],
  substack: ['Macro', '\\begin{subarray}{c}#1\\end{subarray}', 1],
  injlim: ['NamedOp', 'inj&thinsp;lim'],
  projlim: ['NamedOp', 'proj&thinsp;lim'],
  varliminf: ['Macro', "\\mathop{\\underline{\\mmlToken{mi}{lim}}}"],
  varlimsup: ['Macro', '\\mathop{\\overline{\\mmlToken{mi}{lim}}}'],
  varinjlim: ['Macro', "\\mathop{\\underrightarrow{\\mmlToken{mi}{lim}}}"],
  varprojlim: ['Macro', "\\mathop{\\underleftarrow{\\mmlToken{mi}{lim}}}"],
  DeclareMathOperator: 'HandleDeclareOp',
  operatorname: 'HandleOperatorName',
  SkipLimits: 'SkipLimits',
  genfrac: 'Genfrac',
  frac: ['Genfrac', '', '', '', ''],
  tfrac: ['Genfrac', '', '', '', '1'],
  dfrac: ['Genfrac', '', '', '', '0'],
  binom: ['Genfrac', '(', ')', '0', ''],
  tbinom: ['Genfrac', '(', ')', '0', '1'],
  dbinom: ['Genfrac', '(', ')', '0', '0'],
  cfrac: 'CFrac',
  shoveleft: ['HandleShove', TexConstants_js_1.TexConstant.Align.LEFT],
  shoveright: ['HandleShove', TexConstants_js_1.TexConstant.Align.RIGHT],
  xrightarrow: ['xArrow', 0x2192, 5, 10],
  xleftarrow: ['xArrow', 0x2190, 10, 5]
}, AmsMethods_js_1.AmsMethods);
new sm.EnvironmentMap('AMSmath-environment', ParseMethods_js_1.default.environment, {
  'equation*': ['Equation', null, false],
  'eqnarray*': ['EqnArray', null, false, true, 'rcl', ParseUtil_js_1.default.cols(0, lengths_js_1.MATHSPACE.thickmathspace), '.5em'],
  align: ['EqnArray', null, true, true, 'rl', ParseUtil_js_1.default.cols(0, 2)],
  'align*': ['EqnArray', null, false, true, 'rl', ParseUtil_js_1.default.cols(0, 2)],
  multline: ['Multline', null, true],
  'multline*': ['Multline', null, false],
  split: ['EqnArray', null, false, false, 'rl', ParseUtil_js_1.default.cols(0)],
  gather: ['EqnArray', null, true, true, 'c'],
  'gather*': ['EqnArray', null, false, true, 'c'],
  alignat: ['AlignAt', null, true, true],
  'alignat*': ['AlignAt', null, false, true],
  alignedat: ['AlignAt', null, false, false],
  aligned: ['AmsEqnArray', null, null, null, 'rl', ParseUtil_js_1.default.cols(0, 2), '.5em', 'D'],
  gathered: ['AmsEqnArray', null, null, null, 'c', null, '.5em', 'D'],
  xalignat: ['XalignAt', null, true, true],
  'xalignat*': ['XalignAt', null, false, true],
  xxalignat: ['XalignAt', null, false, false],
  flalign: ['FlalignArray', null, true, false, true, 'rlc', 'auto auto fit'],
  'flalign*': ['FlalignArray', null, false, false, true, 'rlc', 'auto auto fit'],
  subarray: ['Array', null, null, null, null, ParseUtil_js_1.default.cols(0), '0.1em', 'S', 1],
  smallmatrix: ['Array', null, null, null, 'c', ParseUtil_js_1.default.cols(1 / 3), '.2em', 'S', 1],
  matrix: ['Array', null, null, null, 'c'],
  pmatrix: ['Array', null, '(', ')', 'c'],
  bmatrix: ['Array', null, '[', ']', 'c'],
  Bmatrix: ['Array', null, '\\{', '\\}', 'c'],
  vmatrix: ['Array', null, '\\vert', '\\vert', 'c'],
  Vmatrix: ['Array', null, '\\Vert', '\\Vert', 'c'],
  cases: ['Array', null, '\\{', '.', 'll', null, '.2em', 'T']
}, AmsMethods_js_1.AmsMethods);
new sm.DelimiterMap('AMSmath-delimiter', ParseMethods_js_1.default.delimiter, {
  '\\lvert': ["|", {
    texClass: MmlNode_js_1.TEXCLASS.OPEN
  }],
  '\\rvert': ["|", {
    texClass: MmlNode_js_1.TEXCLASS.CLOSE
  }],
  '\\lVert': ["\u2016", {
    texClass: MmlNode_js_1.TEXCLASS.OPEN
  }],
  '\\rVert': ["\u2016", {
    texClass: MmlNode_js_1.TEXCLASS.CLOSE
  }]
});
new sm.CharacterMap('AMSsymbols-mathchar0mi', ParseMethods_js_1.default.mathchar0mi, {
  digamma: "\u03DD",
  varkappa: "\u03F0",
  varGamma: ["\u0393", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC
  }],
  varDelta: ["\u0394", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC
  }],
  varTheta: ["\u0398", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC
  }],
  varLambda: ["\u039B", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC
  }],
  varXi: ["\u039E", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC
  }],
  varPi: ["\u03A0", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC
  }],
  varSigma: ["\u03A3", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC
  }],
  varUpsilon: ["\u03A5", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC
  }],
  varPhi: ["\u03A6", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC
  }],
  varPsi: ["\u03A8", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC
  }],
  varOmega: ["\u03A9", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC
  }],
  beth: "\u2136",
  gimel: "\u2137",
  daleth: "\u2138",
  backprime: ["\u2035", {
    variantForm: true
  }],
  hslash: "\u210F",
  varnothing: ["\u2205", {
    variantForm: true
  }],
  blacktriangle: "\u25B4",
  triangledown: ["\u25BD", {
    variantForm: true
  }],
  blacktriangledown: "\u25BE",
  square: "\u25FB",
  Box: "\u25FB",
  blacksquare: "\u25FC",
  lozenge: "\u25CA",
  Diamond: "\u25CA",
  blacklozenge: "\u29EB",
  circledS: ["\u24C8", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  bigstar: "\u2605",
  sphericalangle: "\u2222",
  measuredangle: "\u2221",
  nexists: "\u2204",
  complement: "\u2201",
  mho: "\u2127",
  eth: ["\xF0", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  Finv: "\u2132",
  diagup: "\u2571",
  Game: "\u2141",
  diagdown: "\u2572",
  Bbbk: ["k", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK
  }],
  yen: "\xA5",
  circledR: "\xAE",
  checkmark: "\u2713",
  maltese: "\u2720"
});
new sm.CharacterMap('AMSsymbols-mathchar0mo', ParseMethods_js_1.default.mathchar0mo, {
  dotplus: "\u2214",
  ltimes: "\u22C9",
  smallsetminus: ["\u2216", {
    variantForm: true
  }],
  rtimes: "\u22CA",
  Cap: "\u22D2",
  doublecap: "\u22D2",
  leftthreetimes: "\u22CB",
  Cup: "\u22D3",
  doublecup: "\u22D3",
  rightthreetimes: "\u22CC",
  barwedge: "\u22BC",
  curlywedge: "\u22CF",
  veebar: "\u22BB",
  curlyvee: "\u22CE",
  doublebarwedge: "\u2A5E",
  boxminus: "\u229F",
  circleddash: "\u229D",
  boxtimes: "\u22A0",
  circledast: "\u229B",
  boxdot: "\u22A1",
  circledcirc: "\u229A",
  boxplus: "\u229E",
  centerdot: ["\u22C5", {
    variantForm: true
  }],
  divideontimes: "\u22C7",
  intercal: "\u22BA",
  leqq: "\u2266",
  geqq: "\u2267",
  leqslant: "\u2A7D",
  geqslant: "\u2A7E",
  eqslantless: "\u2A95",
  eqslantgtr: "\u2A96",
  lesssim: "\u2272",
  gtrsim: "\u2273",
  lessapprox: "\u2A85",
  gtrapprox: "\u2A86",
  approxeq: "\u224A",
  lessdot: "\u22D6",
  gtrdot: "\u22D7",
  lll: "\u22D8",
  llless: "\u22D8",
  ggg: "\u22D9",
  gggtr: "\u22D9",
  lessgtr: "\u2276",
  gtrless: "\u2277",
  lesseqgtr: "\u22DA",
  gtreqless: "\u22DB",
  lesseqqgtr: "\u2A8B",
  gtreqqless: "\u2A8C",
  doteqdot: "\u2251",
  Doteq: "\u2251",
  eqcirc: "\u2256",
  risingdotseq: "\u2253",
  circeq: "\u2257",
  fallingdotseq: "\u2252",
  triangleq: "\u225C",
  backsim: "\u223D",
  thicksim: ["\u223C", {
    variantForm: true
  }],
  backsimeq: "\u22CD",
  thickapprox: ["\u2248", {
    variantForm: true
  }],
  subseteqq: "\u2AC5",
  supseteqq: "\u2AC6",
  Subset: "\u22D0",
  Supset: "\u22D1",
  sqsubset: "\u228F",
  sqsupset: "\u2290",
  preccurlyeq: "\u227C",
  succcurlyeq: "\u227D",
  curlyeqprec: "\u22DE",
  curlyeqsucc: "\u22DF",
  precsim: "\u227E",
  succsim: "\u227F",
  precapprox: "\u2AB7",
  succapprox: "\u2AB8",
  vartriangleleft: "\u22B2",
  lhd: "\u22B2",
  vartriangleright: "\u22B3",
  rhd: "\u22B3",
  trianglelefteq: "\u22B4",
  unlhd: "\u22B4",
  trianglerighteq: "\u22B5",
  unrhd: "\u22B5",
  vDash: ["\u22A8", {
    variantForm: true
  }],
  Vdash: "\u22A9",
  Vvdash: "\u22AA",
  smallsmile: ["\u2323", {
    variantForm: true
  }],
  shortmid: ["\u2223", {
    variantForm: true
  }],
  smallfrown: ["\u2322", {
    variantForm: true
  }],
  shortparallel: ["\u2225", {
    variantForm: true
  }],
  bumpeq: "\u224F",
  between: "\u226C",
  Bumpeq: "\u224E",
  pitchfork: "\u22D4",
  varpropto: ["\u221D", {
    variantForm: true
  }],
  backepsilon: "\u220D",
  blacktriangleleft: "\u25C2",
  blacktriangleright: "\u25B8",
  therefore: "\u2234",
  because: "\u2235",
  eqsim: "\u2242",
  vartriangle: ["\u25B3", {
    variantForm: true
  }],
  Join: "\u22C8",
  nless: "\u226E",
  ngtr: "\u226F",
  nleq: "\u2270",
  ngeq: "\u2271",
  nleqslant: ["\u2A87", {
    variantForm: true
  }],
  ngeqslant: ["\u2A88", {
    variantForm: true
  }],
  nleqq: ["\u2270", {
    variantForm: true
  }],
  ngeqq: ["\u2271", {
    variantForm: true
  }],
  lneq: "\u2A87",
  gneq: "\u2A88",
  lneqq: "\u2268",
  gneqq: "\u2269",
  lvertneqq: ["\u2268", {
    variantForm: true
  }],
  gvertneqq: ["\u2269", {
    variantForm: true
  }],
  lnsim: "\u22E6",
  gnsim: "\u22E7",
  lnapprox: "\u2A89",
  gnapprox: "\u2A8A",
  nprec: "\u2280",
  nsucc: "\u2281",
  npreceq: ["\u22E0", {
    variantForm: true
  }],
  nsucceq: ["\u22E1", {
    variantForm: true
  }],
  precneqq: "\u2AB5",
  succneqq: "\u2AB6",
  precnsim: "\u22E8",
  succnsim: "\u22E9",
  precnapprox: "\u2AB9",
  succnapprox: "\u2ABA",
  nsim: "\u2241",
  ncong: "\u2247",
  nshortmid: ["\u2224", {
    variantForm: true
  }],
  nshortparallel: ["\u2226", {
    variantForm: true
  }],
  nmid: "\u2224",
  nparallel: "\u2226",
  nvdash: "\u22AC",
  nvDash: "\u22AD",
  nVdash: "\u22AE",
  nVDash: "\u22AF",
  ntriangleleft: "\u22EA",
  ntriangleright: "\u22EB",
  ntrianglelefteq: "\u22EC",
  ntrianglerighteq: "\u22ED",
  nsubseteq: "\u2288",
  nsupseteq: "\u2289",
  nsubseteqq: ["\u2288", {
    variantForm: true
  }],
  nsupseteqq: ["\u2289", {
    variantForm: true
  }],
  subsetneq: "\u228A",
  supsetneq: "\u228B",
  varsubsetneq: ["\u228A", {
    variantForm: true
  }],
  varsupsetneq: ["\u228B", {
    variantForm: true
  }],
  subsetneqq: "\u2ACB",
  supsetneqq: "\u2ACC",
  varsubsetneqq: ["\u2ACB", {
    variantForm: true
  }],
  varsupsetneqq: ["\u2ACC", {
    variantForm: true
  }],
  leftleftarrows: "\u21C7",
  rightrightarrows: "\u21C9",
  leftrightarrows: "\u21C6",
  rightleftarrows: "\u21C4",
  Lleftarrow: "\u21DA",
  Rrightarrow: "\u21DB",
  twoheadleftarrow: "\u219E",
  twoheadrightarrow: "\u21A0",
  leftarrowtail: "\u21A2",
  rightarrowtail: "\u21A3",
  looparrowleft: "\u21AB",
  looparrowright: "\u21AC",
  leftrightharpoons: "\u21CB",
  rightleftharpoons: ["\u21CC", {
    variantForm: true
  }],
  curvearrowleft: "\u21B6",
  curvearrowright: "\u21B7",
  circlearrowleft: "\u21BA",
  circlearrowright: "\u21BB",
  Lsh: "\u21B0",
  Rsh: "\u21B1",
  upuparrows: "\u21C8",
  downdownarrows: "\u21CA",
  upharpoonleft: "\u21BF",
  upharpoonright: "\u21BE",
  downharpoonleft: "\u21C3",
  restriction: "\u21BE",
  multimap: "\u22B8",
  downharpoonright: "\u21C2",
  leftrightsquigarrow: "\u21AD",
  rightsquigarrow: "\u21DD",
  leadsto: "\u21DD",
  dashrightarrow: "\u21E2",
  dashleftarrow: "\u21E0",
  nleftarrow: "\u219A",
  nrightarrow: "\u219B",
  nLeftarrow: "\u21CD",
  nRightarrow: "\u21CF",
  nleftrightarrow: "\u21AE",
  nLeftrightarrow: "\u21CE"
});
new sm.DelimiterMap('AMSsymbols-delimiter', ParseMethods_js_1.default.delimiter, {
  "\\ulcorner": "\u231C",
  "\\urcorner": "\u231D",
  '\\llcorner': "\u231E",
  '\\lrcorner': "\u231F"
});
new sm.CommandMap('AMSsymbols-macros', {
  implies: ['Macro', '\\;\\Longrightarrow\\;'],
  impliedby: ['Macro', '\\;\\Longleftarrow\\;']
}, AmsMethods_js_1.AmsMethods);

/***/ }),

/***/ 9899:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.NEW_OPS = exports.AmsMethods = void 0;

var ParseUtil_js_1 = __webpack_require__(4632);

var NodeUtil_js_1 = __webpack_require__(8754);

var TexConstants_js_1 = __webpack_require__(7338);

var TexParser_js_1 = __webpack_require__(9525);

var TexError_js_1 = __webpack_require__(9722);

var Symbol_js_1 = __webpack_require__(9093);

var BaseMethods_js_1 = __webpack_require__(4807);

var MmlNode_js_1 = __webpack_require__(4653);

exports.AmsMethods = {};

exports.AmsMethods.AmsEqnArray = function (parser, begin, numbered, taggable, align, spacing, style) {
  var args = parser.GetBrackets('\\begin{' + begin.getName() + '}');
  var array = BaseMethods_js_1.default.EqnArray(parser, begin, numbered, taggable, align, spacing, style);
  return ParseUtil_js_1.default.setArrayAlign(array, args);
};

exports.AmsMethods.AlignAt = function (parser, begin, numbered, taggable) {
  var name = begin.getName();
  var n,
      valign,
      align = '',
      spacing = [];

  if (!taggable) {
    valign = parser.GetBrackets('\\begin{' + name + '}');
  }

  n = parser.GetArgument('\\begin{' + name + '}');

  if (n.match(/[^0-9]/)) {
    throw new TexError_js_1.default('PositiveIntegerArg', 'Argument to %1 must me a positive integer', '\\begin{' + name + '}');
  }

  var count = parseInt(n, 10);

  while (count > 0) {
    align += 'rl';
    spacing.push('0em 0em');
    count--;
  }

  var spaceStr = spacing.join(' ');

  if (taggable) {
    return exports.AmsMethods.EqnArray(parser, begin, numbered, taggable, align, spaceStr);
  }

  var array = exports.AmsMethods.EqnArray(parser, begin, numbered, taggable, align, spaceStr);
  return ParseUtil_js_1.default.setArrayAlign(array, valign);
};

exports.AmsMethods.Multline = function (parser, begin, numbered) {
  parser.Push(begin);
  ParseUtil_js_1.default.checkEqnEnv(parser);
  var item = parser.itemFactory.create('multline', numbered, parser.stack);
  item.arraydef = {
    displaystyle: true,
    rowspacing: '.5em',
    columnspacing: '100%',
    width: parser.options.ams['multlineWidth'],
    side: parser.options['tagSide'],
    minlabelspacing: parser.options['tagIndent'],
    framespacing: parser.options.ams['multlineIndent'] + ' 0',
    frame: '',
    'data-width-includes-label': true
  };
  return item;
};

exports.AmsMethods.XalignAt = function (parser, begin, numbered, padded) {
  var n = parser.GetArgument('\\begin{' + begin.getName() + '}');

  if (n.match(/[^0-9]/)) {
    throw new TexError_js_1.default('PositiveIntegerArg', 'Argument to %1 must me a positive integer', '\\begin{' + begin.getName() + '}');
  }

  var align = padded ? 'crl' : 'rlc';
  var width = padded ? 'fit auto auto' : 'auto auto fit';
  var item = exports.AmsMethods.FlalignArray(parser, begin, numbered, padded, false, align, width, true);
  item.setProperty('xalignat', 2 * parseInt(n));
  return item;
};

exports.AmsMethods.FlalignArray = function (parser, begin, numbered, padded, center, align, width, zeroWidthLabel) {
  if (zeroWidthLabel === void 0) {
    zeroWidthLabel = false;
  }

  parser.Push(begin);
  ParseUtil_js_1.default.checkEqnEnv(parser);
  align = align.split('').join(' ').replace(/r/g, 'right').replace(/l/g, 'left').replace(/c/g, 'center');
  var item = parser.itemFactory.create('flalign', begin.getName(), numbered, padded, center, parser.stack);
  item.arraydef = {
    width: '100%',
    displaystyle: true,
    columnalign: align,
    columnspacing: '0em',
    columnwidth: width,
    rowspacing: '3pt',
    side: parser.options['tagSide'],
    minlabelspacing: zeroWidthLabel ? '0' : parser.options['tagIndent'],
    'data-width-includes-label': true
  };
  item.setProperty('zeroWidthLabel', zeroWidthLabel);
  return item;
};

exports.NEW_OPS = 'ams-declare-ops';

exports.AmsMethods.HandleDeclareOp = function (parser, name) {
  var limits = parser.GetStar() ? '' : '\\nolimits\\SkipLimits';
  var cs = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));

  if (cs.charAt(0) === '\\') {
    cs = cs.substr(1);
  }

  var op = parser.GetArgument(name);

  if (!op.match(/\\text/)) {
    op = op.replace(/\*/g, '\\text{*}').replace(/-/g, '\\text{-}');
  }

  parser.configuration.handlers.retrieve(exports.NEW_OPS).add(cs, new Symbol_js_1.Macro(cs, exports.AmsMethods.Macro, ['\\mathop{\\rm ' + op + '}' + limits]));
};

exports.AmsMethods.HandleOperatorName = function (parser, name) {
  var limits = parser.GetStar() ? '' : '\\nolimits\\SkipLimits';
  var op = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));

  if (!op.match(/\\text/)) {
    op = op.replace(/\*/g, '\\text{*}').replace(/-/g, '\\text{-}');
  }

  parser.string = '\\mathop{\\rm ' + op + '}' + limits + ' ' + parser.string.slice(parser.i);
  parser.i = 0;
};

exports.AmsMethods.SkipLimits = function (parser, _name) {
  var c = parser.GetNext(),
      i = parser.i;

  if (c === '\\' && ++parser.i && parser.GetCS() !== 'limits') {
    parser.i = i;
  }
};

exports.AmsMethods.MultiIntegral = function (parser, name, integral) {
  var next = parser.GetNext();

  if (next === '\\') {
    var i = parser.i;
    next = parser.GetArgument(name);
    parser.i = i;

    if (next === '\\limits') {
      if (name === '\\idotsint') {
        integral = '\\!\\!\\mathop{\\,\\,' + integral + '}';
      } else {
        integral = '\\!\\!\\!\\mathop{\\,\\,\\,' + integral + '}';
      }
    }
  }

  parser.string = integral + ' ' + parser.string.slice(parser.i);
  parser.i = 0;
};

exports.AmsMethods.xArrow = function (parser, name, chr, l, r) {
  var def = {
    width: '+' + ParseUtil_js_1.default.Em((l + r) / 18),
    lspace: ParseUtil_js_1.default.Em(l / 18)
  };
  var bot = parser.GetBrackets(name);
  var first = parser.ParseArg(name);
  var dstrut = parser.create('node', 'mspace', [], {
    depth: '.25em'
  });
  var arrow = parser.create('token', 'mo', {
    stretchy: true,
    texClass: MmlNode_js_1.TEXCLASS.REL
  }, String.fromCodePoint(chr));
  arrow = parser.create('node', 'mstyle', [arrow], {
    scriptlevel: 0
  });
  var mml = parser.create('node', 'munderover', [arrow]);
  var mpadded = parser.create('node', 'mpadded', [first, dstrut], def);
  NodeUtil_js_1.default.setAttribute(mpadded, 'voffset', '-.2em');
  NodeUtil_js_1.default.setAttribute(mpadded, 'height', '-.2em');
  NodeUtil_js_1.default.setChild(mml, mml.over, mpadded);

  if (bot) {
    var bottom = new TexParser_js_1.default(bot, parser.stack.env, parser.configuration).mml();
    var bstrut = parser.create('node', 'mspace', [], {
      height: '.75em'
    });
    mpadded = parser.create('node', 'mpadded', [bottom, bstrut], def);
    NodeUtil_js_1.default.setAttribute(mpadded, 'voffset', '.15em');
    NodeUtil_js_1.default.setAttribute(mpadded, 'depth', '-.15em');
    NodeUtil_js_1.default.setChild(mml, mml.under, mpadded);
  }

  NodeUtil_js_1.default.setProperty(mml, 'subsupOK', true);
  parser.Push(mml);
};

exports.AmsMethods.HandleShove = function (parser, _name, shove) {
  var top = parser.stack.Top();

  if (top.kind !== 'multline') {
    throw new TexError_js_1.default('CommandOnlyAllowedInEnv', '%1 only allowed in %2 environment', parser.currentCS, 'multline');
  }

  if (top.Size()) {
    throw new TexError_js_1.default('CommandAtTheBeginingOfLine', '%1 must come at the beginning of the line', parser.currentCS);
  }

  top.setProperty('shove', shove);
};

exports.AmsMethods.CFrac = function (parser, name) {
  var lr = ParseUtil_js_1.default.trimSpaces(parser.GetBrackets(name, ''));
  var num = parser.GetArgument(name);
  var den = parser.GetArgument(name);
  var lrMap = {
    l: TexConstants_js_1.TexConstant.Align.LEFT,
    r: TexConstants_js_1.TexConstant.Align.RIGHT,
    '': ''
  };
  var numNode = new TexParser_js_1.default('\\strut\\textstyle{' + num + '}', parser.stack.env, parser.configuration).mml();
  var denNode = new TexParser_js_1.default('\\strut\\textstyle{' + den + '}', parser.stack.env, parser.configuration).mml();
  var frac = parser.create('node', 'mfrac', [numNode, denNode]);
  lr = lrMap[lr];

  if (lr == null) {
    throw new TexError_js_1.default('IllegalAlign', 'Illegal alignment specified in %1', parser.currentCS);
  }

  if (lr) {
    NodeUtil_js_1.default.setProperties(frac, {
      numalign: lr,
      denomalign: lr
    });
  }

  parser.Push(frac);
};

exports.AmsMethods.Genfrac = function (parser, name, left, right, thick, style) {
  if (left == null) {
    left = parser.GetDelimiterArg(name);
  }

  if (right == null) {
    right = parser.GetDelimiterArg(name);
  }

  if (thick == null) {
    thick = parser.GetArgument(name);
  }

  if (style == null) {
    style = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));
  }

  var num = parser.ParseArg(name);
  var den = parser.ParseArg(name);
  var frac = parser.create('node', 'mfrac', [num, den]);

  if (thick !== '') {
    NodeUtil_js_1.default.setAttribute(frac, 'linethickness', thick);
  }

  if (left || right) {
    NodeUtil_js_1.default.setProperty(frac, 'withDelims', true);
    frac = ParseUtil_js_1.default.fixedFence(parser.configuration, left, frac, right);
  }

  if (style !== '') {
    var styleDigit = parseInt(style, 10);
    var styleAlpha = ['D', 'T', 'S', 'SS'][styleDigit];

    if (styleAlpha == null) {
      throw new TexError_js_1.default('BadMathStyleFor', 'Bad math style for %1', parser.currentCS);
    }

    frac = parser.create('node', 'mstyle', [frac]);

    if (styleAlpha === 'D') {
      NodeUtil_js_1.default.setProperties(frac, {
        displaystyle: true,
        scriptlevel: 0
      });
    } else {
      NodeUtil_js_1.default.setProperties(frac, {
        displaystyle: false,
        scriptlevel: styleDigit - 1
      });
    }
  }

  parser.Push(frac);
};

exports.AmsMethods.HandleTag = function (parser, name) {
  if (!parser.tags.currentTag.taggable && parser.tags.env) {
    throw new TexError_js_1.default('CommandNotAllowedInEnv', '%1 not allowed in %2 environment', parser.currentCS, parser.tags.env);
  }

  if (parser.tags.currentTag.tag) {
    throw new TexError_js_1.default('MultipleCommand', 'Multiple %1', parser.currentCS);
  }

  var star = parser.GetStar();
  var tagId = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));
  parser.tags.tag(tagId, star);
};

exports.AmsMethods.HandleNoTag = BaseMethods_js_1.default.HandleNoTag;
exports.AmsMethods.HandleRef = BaseMethods_js_1.default.HandleRef;
exports.AmsMethods.Macro = BaseMethods_js_1.default.Macro;
exports.AmsMethods.Accent = BaseMethods_js_1.default.Accent;
exports.AmsMethods.Tilde = BaseMethods_js_1.default.Tilde;
exports.AmsMethods.Array = BaseMethods_js_1.default.Array;
exports.AmsMethods.Spacer = BaseMethods_js_1.default.Spacer;
exports.AmsMethods.NamedOp = BaseMethods_js_1.default.NamedOp;
exports.AmsMethods.EqnArray = BaseMethods_js_1.default.EqnArray;
exports.AmsMethods.Equation = BaseMethods_js_1.default.Equation;

/***/ }),

/***/ 4360:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AmsCdConfiguration = void 0;

var Configuration_js_1 = __webpack_require__(738);

__webpack_require__(2975);

exports.AmsCdConfiguration = Configuration_js_1.Configuration.create('amscd', {
  handler: {
    character: ['amscd_special'],
    macro: ['amscd_macros'],
    environment: ['amscd_environment']
  },
  options: {
    amscd: {
      colspace: '5pt',
      rowspace: '5pt',
      harrowsize: '2.75em',
      varrowsize: '1.75em',
      hideHorizontalLabels: false
    }
  }
});

/***/ }),

/***/ 2975:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var sm = __webpack_require__(1682);

var ParseMethods_js_1 = __webpack_require__(5123);

var AmsCdMethods_js_1 = __webpack_require__(2787);

new sm.EnvironmentMap('amscd_environment', ParseMethods_js_1.default.environment, {
  CD: 'CD'
}, AmsCdMethods_js_1.default);
new sm.CommandMap('amscd_macros', {
  minCDarrowwidth: 'minCDarrowwidth',
  minCDarrowheight: 'minCDarrowheight'
}, AmsCdMethods_js_1.default);
new sm.MacroMap('amscd_special', {
  '@': 'arrow'
}, AmsCdMethods_js_1.default);

/***/ }),

/***/ 2787:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var TexParser_js_1 = __webpack_require__(9525);

var BaseConfiguration_js_1 = __webpack_require__(3925);

var MmlNode_js_1 = __webpack_require__(4653);

var NodeUtil_js_1 = __webpack_require__(8754);

var AmsCdMethods = {};

AmsCdMethods.CD = function (parser, begin) {
  parser.Push(begin);
  var item = parser.itemFactory.create('array');
  var options = parser.configuration.options.amscd;
  item.setProperties({
    minw: parser.stack.env.CD_minw || options.harrowsize,
    minh: parser.stack.env.CD_minh || options.varrowsize
  });
  item.arraydef = {
    columnalign: 'center',
    columnspacing: options.colspace,
    rowspacing: options.rowspace,
    displaystyle: true
  };
  return item;
};

AmsCdMethods.arrow = function (parser, name) {
  var c = parser.string.charAt(parser.i);

  if (!c.match(/[><VA.|=]/)) {
    return BaseConfiguration_js_1.Other(parser, name);
  } else {
    parser.i++;
  }

  var first = parser.stack.Top();

  if (!first.isKind('array') || first.Size()) {
    AmsCdMethods.cell(parser, name);
    first = parser.stack.Top();
  }

  var top = first;
  var arrowRow = top.table.length % 2 === 1;
  var n = (top.row.length + (arrowRow ? 0 : 1)) % 2;

  while (n) {
    AmsCdMethods.cell(parser, name);
    n--;
  }

  var mml;
  var hdef = {
    minsize: top.getProperty('minw'),
    stretchy: true
  },
      vdef = {
    minsize: top.getProperty('minh'),
    stretchy: true,
    symmetric: true,
    lspace: 0,
    rspace: 0
  };

  if (c === '.') {} else if (c === '|') {
    mml = parser.create('token', 'mo', vdef, "\u2225");
  } else if (c === '=') {
    mml = parser.create('token', 'mo', hdef, '=');
  } else {
    var arrow = {
      '>': "\u2192",
      '<': "\u2190",
      'V': "\u2193",
      'A': "\u2191"
    }[c];
    var a = parser.GetUpTo(name + c, c);
    var b = parser.GetUpTo(name + c, c);

    if (c === '>' || c === '<') {
      mml = parser.create('token', 'mo', hdef, arrow);

      if (!a) {
        a = '\\kern ' + top.getProperty('minw');
      }

      if (a || b) {
        var pad = {
          width: '.67em',
          lspace: '.33em'
        };
        mml = parser.create('node', 'munderover', [mml]);

        if (a) {
          var nodeA = new TexParser_js_1.default(a, parser.stack.env, parser.configuration).mml();
          var mpadded = parser.create('node', 'mpadded', [nodeA], pad);
          NodeUtil_js_1.default.setAttribute(mpadded, 'voffset', '.1em');
          NodeUtil_js_1.default.setChild(mml, mml.over, mpadded);
        }

        if (b) {
          var nodeB = new TexParser_js_1.default(b, parser.stack.env, parser.configuration).mml();
          NodeUtil_js_1.default.setChild(mml, mml.under, parser.create('node', 'mpadded', [nodeB], pad));
        }

        if (parser.configuration.options.amscd.hideHorizontalLabels) {
          mml = parser.create('node', 'mpadded', mml, {
            depth: 0,
            height: '.67em'
          });
        }
      }
    } else {
      var arrowNode = parser.create('token', 'mo', vdef, arrow);
      mml = arrowNode;

      if (a || b) {
        mml = parser.create('node', 'mrow');

        if (a) {
          NodeUtil_js_1.default.appendChildren(mml, [new TexParser_js_1.default('\\scriptstyle\\llap{' + a + '}', parser.stack.env, parser.configuration).mml()]);
        }

        arrowNode.texClass = MmlNode_js_1.TEXCLASS.ORD;
        NodeUtil_js_1.default.appendChildren(mml, [arrowNode]);

        if (b) {
          NodeUtil_js_1.default.appendChildren(mml, [new TexParser_js_1.default('\\scriptstyle\\rlap{' + b + '}', parser.stack.env, parser.configuration).mml()]);
        }
      }
    }
  }

  if (mml) {
    parser.Push(mml);
  }

  AmsCdMethods.cell(parser, name);
};

AmsCdMethods.cell = function (parser, name) {
  var top = parser.stack.Top();

  if ((top.table || []).length % 2 === 0 && (top.row || []).length === 0) {
    parser.Push(parser.create('node', 'mpadded', [], {
      height: '8.5pt',
      depth: '2pt'
    }));
  }

  parser.Push(parser.itemFactory.create('cell').setProperties({
    isEntry: true,
    name: name
  }));
};

AmsCdMethods.minCDarrowwidth = function (parser, name) {
  parser.stack.env.CD_minw = parser.GetDimen(name);
};

AmsCdMethods.minCDarrowheight = function (parser, name) {
  parser.stack.env.CD_minh = parser.GetDimen(name);
};

exports["default"] = AmsCdMethods;

/***/ }),

/***/ 3925:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BaseConfiguration = exports.BaseTags = exports.Other = void 0;

var Configuration_js_1 = __webpack_require__(738);

var MapHandler_js_1 = __webpack_require__(4951);

var TexError_js_1 = __webpack_require__(9722);

var NodeUtil_js_1 = __webpack_require__(8754);

var SymbolMap_js_1 = __webpack_require__(1682);

var bitem = __webpack_require__(1811);

var Tags_js_1 = __webpack_require__(4363);

__webpack_require__(4728);

var OperatorDictionary_js_1 = __webpack_require__(5417);

new SymbolMap_js_1.CharacterMap('remap', null, {
  '-': "\u2212",
  '*': "\u2217",
  '`': "\u2018"
});

function Other(parser, char) {
  var font = parser.stack.env['font'];
  var def = font ? {
    mathvariant: parser.stack.env['font']
  } : {};
  var remap = MapHandler_js_1.MapHandler.getMap('remap').lookup(char);
  var range = OperatorDictionary_js_1.getRange(char);
  var type = range ? range[3] : 'mo';
  var mo = parser.create('token', type, def, remap ? remap.char : char);

  if (type === 'mo') {
    NodeUtil_js_1.default.setProperty(mo, 'fixStretchy', true);
    parser.configuration.addNode('fixStretchy', mo);
  }

  parser.Push(mo);
}

exports.Other = Other;

function csUndefined(_parser, name) {
  throw new TexError_js_1.default('UndefinedControlSequence', 'Undefined control sequence %1', '\\' + name);
}

function envUndefined(_parser, env) {
  throw new TexError_js_1.default('UnknownEnv', 'Unknown environment \'%1\'', env);
}

function filterNonscript(_a) {
  var e_1, _b;

  var data = _a.data;

  try {
    for (var _c = __values(data.getList('nonscript')), _d = _c.next(); !_d.done; _d = _c.next()) {
      var mml = _d.value;

      if (mml.attributes.get('scriptlevel') > 0) {
        var parent_1 = mml.parent;
        parent_1.childNodes.splice(parent_1.childIndex(mml), 1);
        data.removeFromList(mml.kind, [mml]);

        if (mml.isKind('mrow')) {
          var mstyle = mml.childNodes[0];
          data.removeFromList('mstyle', [mstyle]);
          data.removeFromList('mspace', mstyle.childNodes[0].childNodes);
        }
      } else if (mml.isKind('mrow')) {
        mml.parent.replaceChild(mml.childNodes[0], mml);
        data.removeFromList('mrow', [mml]);
      }
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
    } finally {
      if (e_1) throw e_1.error;
    }
  }
}

var BaseTags = function (_super) {
  __extends(BaseTags, _super);

  function BaseTags() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  return BaseTags;
}(Tags_js_1.AbstractTags);

exports.BaseTags = BaseTags;
exports.BaseConfiguration = Configuration_js_1.Configuration.create('base', {
  handler: {
    character: ['command', 'special', 'letter', 'digit'],
    delimiter: ['delimiter'],
    macro: ['delimiter', 'macros', 'mathchar0mi', 'mathchar0mo', 'mathchar7'],
    environment: ['environment']
  },
  fallback: {
    character: Other,
    macro: csUndefined,
    environment: envUndefined
  },
  items: (_a = {}, _a[bitem.StartItem.prototype.kind] = bitem.StartItem, _a[bitem.StopItem.prototype.kind] = bitem.StopItem, _a[bitem.OpenItem.prototype.kind] = bitem.OpenItem, _a[bitem.CloseItem.prototype.kind] = bitem.CloseItem, _a[bitem.PrimeItem.prototype.kind] = bitem.PrimeItem, _a[bitem.SubsupItem.prototype.kind] = bitem.SubsupItem, _a[bitem.OverItem.prototype.kind] = bitem.OverItem, _a[bitem.LeftItem.prototype.kind] = bitem.LeftItem, _a[bitem.Middle.prototype.kind] = bitem.Middle, _a[bitem.RightItem.prototype.kind] = bitem.RightItem, _a[bitem.BeginItem.prototype.kind] = bitem.BeginItem, _a[bitem.EndItem.prototype.kind] = bitem.EndItem, _a[bitem.StyleItem.prototype.kind] = bitem.StyleItem, _a[bitem.PositionItem.prototype.kind] = bitem.PositionItem, _a[bitem.CellItem.prototype.kind] = bitem.CellItem, _a[bitem.MmlItem.prototype.kind] = bitem.MmlItem, _a[bitem.FnItem.prototype.kind] = bitem.FnItem, _a[bitem.NotItem.prototype.kind] = bitem.NotItem, _a[bitem.NonscriptItem.prototype.kind] = bitem.NonscriptItem, _a[bitem.DotsItem.prototype.kind] = bitem.DotsItem, _a[bitem.ArrayItem.prototype.kind] = bitem.ArrayItem, _a[bitem.EqnArrayItem.prototype.kind] = bitem.EqnArrayItem, _a[bitem.EquationItem.prototype.kind] = bitem.EquationItem, _a),
  options: {
    maxMacros: 1000,
    baseURL: typeof document === 'undefined' || document.getElementsByTagName('base').length === 0 ? '' : String(document.location).replace(/#.*$/, '')
  },
  tags: {
    base: BaseTags
  },
  postprocessors: [[filterNonscript, -4]]
});

/***/ }),

/***/ 1811:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.EquationItem = exports.EqnArrayItem = exports.ArrayItem = exports.DotsItem = exports.NonscriptItem = exports.NotItem = exports.FnItem = exports.MmlItem = exports.CellItem = exports.PositionItem = exports.StyleItem = exports.EndItem = exports.BeginItem = exports.RightItem = exports.Middle = exports.LeftItem = exports.OverItem = exports.SubsupItem = exports.PrimeItem = exports.CloseItem = exports.OpenItem = exports.StopItem = exports.StartItem = void 0;

var MapHandler_js_1 = __webpack_require__(4951);

var Entities_js_1 = __webpack_require__(3719);

var MmlNode_js_1 = __webpack_require__(4653);

var TexError_js_1 = __webpack_require__(9722);

var ParseUtil_js_1 = __webpack_require__(4632);

var NodeUtil_js_1 = __webpack_require__(8754);

var StackItem_js_1 = __webpack_require__(2812);

var StartItem = function (_super) {
  __extends(StartItem, _super);

  function StartItem(factory, global) {
    var _this = _super.call(this, factory) || this;

    _this.global = global;
    return _this;
  }

  Object.defineProperty(StartItem.prototype, "kind", {
    get: function get() {
      return 'start';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(StartItem.prototype, "isOpen", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  StartItem.prototype.checkItem = function (item) {
    if (item.isKind('stop')) {
      var node = this.toMml();

      if (!this.global.isInner) {
        node = this.factory.configuration.tags.finalize(node, this.env);
      }

      return [[this.factory.create('mml', node)], true];
    }

    return _super.prototype.checkItem.call(this, item);
  };

  return StartItem;
}(StackItem_js_1.BaseItem);

exports.StartItem = StartItem;

var StopItem = function (_super) {
  __extends(StopItem, _super);

  function StopItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(StopItem.prototype, "kind", {
    get: function get() {
      return 'stop';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(StopItem.prototype, "isClose", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });
  return StopItem;
}(StackItem_js_1.BaseItem);

exports.StopItem = StopItem;

var OpenItem = function (_super) {
  __extends(OpenItem, _super);

  function OpenItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(OpenItem.prototype, "kind", {
    get: function get() {
      return 'open';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(OpenItem.prototype, "isOpen", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  OpenItem.prototype.checkItem = function (item) {
    if (item.isKind('close')) {
      var mml = this.toMml();
      var node = this.create('node', 'TeXAtom', [mml]);
      return [[this.factory.create('mml', node)], true];
    }

    return _super.prototype.checkItem.call(this, item);
  };

  OpenItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {
    'stop': ['ExtraOpenMissingClose', 'Extra open brace or missing close brace']
  });
  return OpenItem;
}(StackItem_js_1.BaseItem);

exports.OpenItem = OpenItem;

var CloseItem = function (_super) {
  __extends(CloseItem, _super);

  function CloseItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(CloseItem.prototype, "kind", {
    get: function get() {
      return 'close';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(CloseItem.prototype, "isClose", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });
  return CloseItem;
}(StackItem_js_1.BaseItem);

exports.CloseItem = CloseItem;

var PrimeItem = function (_super) {
  __extends(PrimeItem, _super);

  function PrimeItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(PrimeItem.prototype, "kind", {
    get: function get() {
      return 'prime';
    },
    enumerable: false,
    configurable: true
  });

  PrimeItem.prototype.checkItem = function (item) {
    var _a = __read(this.Peek(2), 2),
        top0 = _a[0],
        top1 = _a[1];

    if (!NodeUtil_js_1.default.isType(top0, 'msubsup') || NodeUtil_js_1.default.isType(top0, 'msup')) {
      var node = this.create('node', 'msup', [top0, top1]);
      return [[node, item], true];
    }

    NodeUtil_js_1.default.setChild(top0, top0.sup, top1);
    return [[top0, item], true];
  };

  return PrimeItem;
}(StackItem_js_1.BaseItem);

exports.PrimeItem = PrimeItem;

var SubsupItem = function (_super) {
  __extends(SubsupItem, _super);

  function SubsupItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(SubsupItem.prototype, "kind", {
    get: function get() {
      return 'subsup';
    },
    enumerable: false,
    configurable: true
  });

  SubsupItem.prototype.checkItem = function (item) {
    if (item.isKind('open') || item.isKind('left')) {
      return StackItem_js_1.BaseItem.success;
    }

    var top = this.First;
    var position = this.getProperty('position');

    if (item.isKind('mml')) {
      if (this.getProperty('primes')) {
        if (position !== 2) {
          NodeUtil_js_1.default.setChild(top, 2, this.getProperty('primes'));
        } else {
          NodeUtil_js_1.default.setProperty(this.getProperty('primes'), 'variantForm', true);
          var node = this.create('node', 'mrow', [this.getProperty('primes'), item.First]);
          item.First = node;
        }
      }

      NodeUtil_js_1.default.setChild(top, position, item.First);

      if (this.getProperty('movesupsub') != null) {
        NodeUtil_js_1.default.setProperty(top, 'movesupsub', this.getProperty('movesupsub'));
      }

      var result = this.factory.create('mml', top);
      return [[result], true];
    }

    if (_super.prototype.checkItem.call(this, item)[1]) {
      var error = this.getErrors(['', 'sub', 'sup'][position]);
      throw new (TexError_js_1.default.bind.apply(TexError_js_1.default, __spreadArray([void 0, error[0], error[1]], __read(error.splice(2)))))();
    }

    return null;
  };

  SubsupItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {
    'stop': ['MissingScript', 'Missing superscript or subscript argument'],
    'sup': ['MissingOpenForSup', 'Missing open brace for superscript'],
    'sub': ['MissingOpenForSub', 'Missing open brace for subscript']
  });
  return SubsupItem;
}(StackItem_js_1.BaseItem);

exports.SubsupItem = SubsupItem;

var OverItem = function (_super) {
  __extends(OverItem, _super);

  function OverItem(factory) {
    var _this = _super.call(this, factory) || this;

    _this.setProperty('name', '\\over');

    return _this;
  }

  Object.defineProperty(OverItem.prototype, "kind", {
    get: function get() {
      return 'over';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(OverItem.prototype, "isClose", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  OverItem.prototype.checkItem = function (item) {
    if (item.isKind('over')) {
      throw new TexError_js_1.default('AmbiguousUseOf', 'Ambiguous use of %1', item.getName());
    }

    if (item.isClose) {
      var mml = this.create('node', 'mfrac', [this.getProperty('num'), this.toMml(false)]);

      if (this.getProperty('thickness') != null) {
        NodeUtil_js_1.default.setAttribute(mml, 'linethickness', this.getProperty('thickness'));
      }

      if (this.getProperty('open') || this.getProperty('close')) {
        NodeUtil_js_1.default.setProperty(mml, 'withDelims', true);
        mml = ParseUtil_js_1.default.fixedFence(this.factory.configuration, this.getProperty('open'), mml, this.getProperty('close'));
      }

      return [[this.factory.create('mml', mml), item], true];
    }

    return _super.prototype.checkItem.call(this, item);
  };

  OverItem.prototype.toString = function () {
    return 'over[' + this.getProperty('num') + ' / ' + this.nodes.join('; ') + ']';
  };

  return OverItem;
}(StackItem_js_1.BaseItem);

exports.OverItem = OverItem;

var LeftItem = function (_super) {
  __extends(LeftItem, _super);

  function LeftItem(factory, delim) {
    var _this = _super.call(this, factory) || this;

    _this.setProperty('delim', delim);

    return _this;
  }

  Object.defineProperty(LeftItem.prototype, "kind", {
    get: function get() {
      return 'left';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(LeftItem.prototype, "isOpen", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  LeftItem.prototype.checkItem = function (item) {
    if (item.isKind('right')) {
      return [[this.factory.create('mml', ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('delim'), this.toMml(), item.getProperty('delim'), '', item.getProperty('color')))], true];
    }

    if (item.isKind('middle')) {
      var def = {
        stretchy: true
      };

      if (item.getProperty('color')) {
        def.mathcolor = item.getProperty('color');
      }

      this.Push(this.create('node', 'TeXAtom', [], {
        texClass: MmlNode_js_1.TEXCLASS.CLOSE
      }), this.create('token', 'mo', def, item.getProperty('delim')), this.create('node', 'TeXAtom', [], {
        texClass: MmlNode_js_1.TEXCLASS.OPEN
      }));
      this.env = {};
      return [[this], true];
    }

    return _super.prototype.checkItem.call(this, item);
  };

  LeftItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {
    'stop': ['ExtraLeftMissingRight', 'Extra \\left or missing \\right']
  });
  return LeftItem;
}(StackItem_js_1.BaseItem);

exports.LeftItem = LeftItem;

var Middle = function (_super) {
  __extends(Middle, _super);

  function Middle(factory, delim, color) {
    var _this = _super.call(this, factory) || this;

    _this.setProperty('delim', delim);

    color && _this.setProperty('color', color);
    return _this;
  }

  Object.defineProperty(Middle.prototype, "kind", {
    get: function get() {
      return 'middle';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Middle.prototype, "isClose", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });
  return Middle;
}(StackItem_js_1.BaseItem);

exports.Middle = Middle;

var RightItem = function (_super) {
  __extends(RightItem, _super);

  function RightItem(factory, delim, color) {
    var _this = _super.call(this, factory) || this;

    _this.setProperty('delim', delim);

    color && _this.setProperty('color', color);
    return _this;
  }

  Object.defineProperty(RightItem.prototype, "kind", {
    get: function get() {
      return 'right';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(RightItem.prototype, "isClose", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });
  return RightItem;
}(StackItem_js_1.BaseItem);

exports.RightItem = RightItem;

var BeginItem = function (_super) {
  __extends(BeginItem, _super);

  function BeginItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(BeginItem.prototype, "kind", {
    get: function get() {
      return 'begin';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BeginItem.prototype, "isOpen", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  BeginItem.prototype.checkItem = function (item) {
    if (item.isKind('end')) {
      if (item.getName() !== this.getName()) {
        throw new TexError_js_1.default('EnvBadEnd', '\\begin{%1} ended with \\end{%2}', this.getName(), item.getName());
      }

      if (!this.getProperty('end')) {
        return [[this.factory.create('mml', this.toMml())], true];
      }

      return StackItem_js_1.BaseItem.fail;
    }

    if (item.isKind('stop')) {
      throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\end{%1}', this.getName());
    }

    return _super.prototype.checkItem.call(this, item);
  };

  return BeginItem;
}(StackItem_js_1.BaseItem);

exports.BeginItem = BeginItem;

var EndItem = function (_super) {
  __extends(EndItem, _super);

  function EndItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(EndItem.prototype, "kind", {
    get: function get() {
      return 'end';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(EndItem.prototype, "isClose", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });
  return EndItem;
}(StackItem_js_1.BaseItem);

exports.EndItem = EndItem;

var StyleItem = function (_super) {
  __extends(StyleItem, _super);

  function StyleItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(StyleItem.prototype, "kind", {
    get: function get() {
      return 'style';
    },
    enumerable: false,
    configurable: true
  });

  StyleItem.prototype.checkItem = function (item) {
    if (!item.isClose) {
      return _super.prototype.checkItem.call(this, item);
    }

    var mml = this.create('node', 'mstyle', this.nodes, this.getProperty('styles'));
    return [[this.factory.create('mml', mml), item], true];
  };

  return StyleItem;
}(StackItem_js_1.BaseItem);

exports.StyleItem = StyleItem;

var PositionItem = function (_super) {
  __extends(PositionItem, _super);

  function PositionItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(PositionItem.prototype, "kind", {
    get: function get() {
      return 'position';
    },
    enumerable: false,
    configurable: true
  });

  PositionItem.prototype.checkItem = function (item) {
    if (item.isClose) {
      throw new TexError_js_1.default('MissingBoxFor', 'Missing box for %1', this.getName());
    }

    if (item.isFinal) {
      var mml = item.toMml();

      switch (this.getProperty('move')) {
        case 'vertical':
          mml = this.create('node', 'mpadded', [mml], {
            height: this.getProperty('dh'),
            depth: this.getProperty('dd'),
            voffset: this.getProperty('dh')
          });
          return [[this.factory.create('mml', mml)], true];

        case 'horizontal':
          return [[this.factory.create('mml', this.getProperty('left')), item, this.factory.create('mml', this.getProperty('right'))], true];
      }
    }

    return _super.prototype.checkItem.call(this, item);
  };

  return PositionItem;
}(StackItem_js_1.BaseItem);

exports.PositionItem = PositionItem;

var CellItem = function (_super) {
  __extends(CellItem, _super);

  function CellItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(CellItem.prototype, "kind", {
    get: function get() {
      return 'cell';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(CellItem.prototype, "isClose", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });
  return CellItem;
}(StackItem_js_1.BaseItem);

exports.CellItem = CellItem;

var MmlItem = function (_super) {
  __extends(MmlItem, _super);

  function MmlItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MmlItem.prototype, "isFinal", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MmlItem.prototype, "kind", {
    get: function get() {
      return 'mml';
    },
    enumerable: false,
    configurable: true
  });
  return MmlItem;
}(StackItem_js_1.BaseItem);

exports.MmlItem = MmlItem;

var FnItem = function (_super) {
  __extends(FnItem, _super);

  function FnItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(FnItem.prototype, "kind", {
    get: function get() {
      return 'fn';
    },
    enumerable: false,
    configurable: true
  });

  FnItem.prototype.checkItem = function (item) {
    var top = this.First;

    if (top) {
      if (item.isOpen) {
        return StackItem_js_1.BaseItem.success;
      }

      if (!item.isKind('fn')) {
        var mml = item.First;

        if (!item.isKind('mml') || !mml) {
          return [[top, item], true];
        }

        if (NodeUtil_js_1.default.isType(mml, 'mstyle') && mml.childNodes.length && NodeUtil_js_1.default.isType(mml.childNodes[0].childNodes[0], 'mspace') || NodeUtil_js_1.default.isType(mml, 'mspace')) {
          return [[top, item], true];
        }

        if (NodeUtil_js_1.default.isEmbellished(mml)) {
          mml = NodeUtil_js_1.default.getCoreMO(mml);
        }

        var form = NodeUtil_js_1.default.getForm(mml);

        if (form != null && [0, 0, 1, 1, 0, 1, 1, 0, 0, 0][form[2]]) {
          return [[top, item], true];
        }
      }

      var node = this.create('token', 'mo', {
        texClass: MmlNode_js_1.TEXCLASS.NONE
      }, Entities_js_1.entities.ApplyFunction);
      return [[top, node, item], true];
    }

    return _super.prototype.checkItem.apply(this, arguments);
  };

  return FnItem;
}(StackItem_js_1.BaseItem);

exports.FnItem = FnItem;

var NotItem = function (_super) {
  __extends(NotItem, _super);

  function NotItem() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.remap = MapHandler_js_1.MapHandler.getMap('not_remap');
    return _this;
  }

  Object.defineProperty(NotItem.prototype, "kind", {
    get: function get() {
      return 'not';
    },
    enumerable: false,
    configurable: true
  });

  NotItem.prototype.checkItem = function (item) {
    var mml;
    var c;
    var textNode;

    if (item.isKind('open') || item.isKind('left')) {
      return StackItem_js_1.BaseItem.success;
    }

    if (item.isKind('mml') && (NodeUtil_js_1.default.isType(item.First, 'mo') || NodeUtil_js_1.default.isType(item.First, 'mi') || NodeUtil_js_1.default.isType(item.First, 'mtext'))) {
      mml = item.First;
      c = NodeUtil_js_1.default.getText(mml);

      if (c.length === 1 && !NodeUtil_js_1.default.getProperty(mml, 'movesupsub') && NodeUtil_js_1.default.getChildren(mml).length === 1) {
        if (this.remap.contains(c)) {
          textNode = this.create('text', this.remap.lookup(c).char);
          NodeUtil_js_1.default.setChild(mml, 0, textNode);
        } else {
          textNode = this.create('text', "\u0338");
          NodeUtil_js_1.default.appendChildren(mml, [textNode]);
        }

        return [[item], true];
      }
    }

    textNode = this.create('text', "\u29F8");
    var mtextNode = this.create('node', 'mtext', [], {}, textNode);
    var paddedNode = this.create('node', 'mpadded', [mtextNode], {
      width: 0
    });
    mml = this.create('node', 'TeXAtom', [paddedNode], {
      texClass: MmlNode_js_1.TEXCLASS.REL
    });
    return [[mml, item], true];
  };

  return NotItem;
}(StackItem_js_1.BaseItem);

exports.NotItem = NotItem;

var NonscriptItem = function (_super) {
  __extends(NonscriptItem, _super);

  function NonscriptItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(NonscriptItem.prototype, "kind", {
    get: function get() {
      return 'nonscript';
    },
    enumerable: false,
    configurable: true
  });

  NonscriptItem.prototype.checkItem = function (item) {
    if (item.isKind('mml') && item.Size() === 1) {
      var mml = item.First;

      if (mml.isKind('mstyle') && mml.notParent) {
        mml = NodeUtil_js_1.default.getChildren(NodeUtil_js_1.default.getChildren(mml)[0])[0];
      }

      if (mml.isKind('mspace')) {
        if (mml !== item.First) {
          var mrow = this.create('node', 'mrow', [item.Pop()]);
          item.Push(mrow);
        }

        this.factory.configuration.addNode('nonscript', item.First);
      }
    }

    return [[item], true];
  };

  return NonscriptItem;
}(StackItem_js_1.BaseItem);

exports.NonscriptItem = NonscriptItem;

var DotsItem = function (_super) {
  __extends(DotsItem, _super);

  function DotsItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(DotsItem.prototype, "kind", {
    get: function get() {
      return 'dots';
    },
    enumerable: false,
    configurable: true
  });

  DotsItem.prototype.checkItem = function (item) {
    if (item.isKind('open') || item.isKind('left')) {
      return StackItem_js_1.BaseItem.success;
    }

    var dots = this.getProperty('ldots');
    var top = item.First;

    if (item.isKind('mml') && NodeUtil_js_1.default.isEmbellished(top)) {
      var tclass = NodeUtil_js_1.default.getTexClass(NodeUtil_js_1.default.getCoreMO(top));

      if (tclass === MmlNode_js_1.TEXCLASS.BIN || tclass === MmlNode_js_1.TEXCLASS.REL) {
        dots = this.getProperty('cdots');
      }
    }

    return [[dots, item], true];
  };

  return DotsItem;
}(StackItem_js_1.BaseItem);

exports.DotsItem = DotsItem;

var ArrayItem = function (_super) {
  __extends(ArrayItem, _super);

  function ArrayItem() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.table = [];
    _this.row = [];
    _this.frame = [];
    _this.hfill = [];
    _this.arraydef = {};
    _this.dashed = false;
    return _this;
  }

  Object.defineProperty(ArrayItem.prototype, "kind", {
    get: function get() {
      return 'array';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ArrayItem.prototype, "isOpen", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ArrayItem.prototype, "copyEnv", {
    get: function get() {
      return false;
    },
    enumerable: false,
    configurable: true
  });

  ArrayItem.prototype.checkItem = function (item) {
    if (item.isClose && !item.isKind('over')) {
      if (item.getProperty('isEntry')) {
        this.EndEntry();
        this.clearEnv();
        return StackItem_js_1.BaseItem.fail;
      }

      if (item.getProperty('isCR')) {
        this.EndEntry();
        this.EndRow();
        this.clearEnv();
        return StackItem_js_1.BaseItem.fail;
      }

      this.EndTable();
      this.clearEnv();
      var newItem = this.factory.create('mml', this.createMml());

      if (this.getProperty('requireClose')) {
        if (item.isKind('close')) {
          return [[newItem], true];
        }

        throw new TexError_js_1.default('MissingCloseBrace', 'Missing close brace');
      }

      return [[newItem, item], true];
    }

    return _super.prototype.checkItem.call(this, item);
  };

  ArrayItem.prototype.createMml = function () {
    var scriptlevel = this.arraydef['scriptlevel'];
    delete this.arraydef['scriptlevel'];
    var mml = this.create('node', 'mtable', this.table, this.arraydef);

    if (scriptlevel) {
      mml.setProperty('scriptlevel', scriptlevel);
    }

    if (this.frame.length === 4) {
      NodeUtil_js_1.default.setAttribute(mml, 'frame', this.dashed ? 'dashed' : 'solid');
    } else if (this.frame.length) {
      if (this.arraydef['rowlines']) {
        this.arraydef['rowlines'] = this.arraydef['rowlines'].replace(/none( none)+$/, 'none');
      }

      NodeUtil_js_1.default.setAttribute(mml, 'frame', '');
      mml = this.create('node', 'menclose', [mml], {
        notation: this.frame.join(' ')
      });

      if ((this.arraydef['columnlines'] || 'none') !== 'none' || (this.arraydef['rowlines'] || 'none') !== 'none') {
        NodeUtil_js_1.default.setAttribute(mml, 'data-padding', 0);
      }
    }

    if (this.getProperty('open') || this.getProperty('close')) {
      mml = ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('open'), mml, this.getProperty('close'));
    }

    return mml;
  };

  ArrayItem.prototype.EndEntry = function () {
    var mtd = this.create('node', 'mtd', this.nodes);

    if (this.hfill.length) {
      if (this.hfill[0] === 0) {
        NodeUtil_js_1.default.setAttribute(mtd, 'columnalign', 'right');
      }

      if (this.hfill[this.hfill.length - 1] === this.Size()) {
        NodeUtil_js_1.default.setAttribute(mtd, 'columnalign', NodeUtil_js_1.default.getAttribute(mtd, 'columnalign') ? 'center' : 'left');
      }
    }

    this.row.push(mtd);
    this.Clear();
    this.hfill = [];
  };

  ArrayItem.prototype.EndRow = function () {
    var node;

    if (this.getProperty('isNumbered') && this.row.length === 3) {
      this.row.unshift(this.row.pop());
      node = this.create('node', 'mlabeledtr', this.row);
    } else {
      node = this.create('node', 'mtr', this.row);
    }

    this.table.push(node);
    this.row = [];
  };

  ArrayItem.prototype.EndTable = function () {
    if (this.Size() || this.row.length) {
      this.EndEntry();
      this.EndRow();
    }

    this.checkLines();
  };

  ArrayItem.prototype.checkLines = function () {
    if (this.arraydef['rowlines']) {
      var lines = this.arraydef['rowlines'].split(/ /);

      if (lines.length === this.table.length) {
        this.frame.push('bottom');
        lines.pop();
        this.arraydef['rowlines'] = lines.join(' ');
      } else if (lines.length < this.table.length - 1) {
        this.arraydef['rowlines'] += ' none';
      }
    }

    if (this.getProperty('rowspacing')) {
      var rows = this.arraydef['rowspacing'].split(/ /);

      while (rows.length < this.table.length) {
        rows.push(this.getProperty('rowspacing') + 'em');
      }

      this.arraydef['rowspacing'] = rows.join(' ');
    }
  };

  ArrayItem.prototype.addRowSpacing = function (spacing) {
    if (this.arraydef['rowspacing']) {
      var rows = this.arraydef['rowspacing'].split(/ /);

      if (!this.getProperty('rowspacing')) {
        var dimem = ParseUtil_js_1.default.dimen2em(rows[0]);
        this.setProperty('rowspacing', dimem);
      }

      var rowspacing = this.getProperty('rowspacing');

      while (rows.length < this.table.length) {
        rows.push(ParseUtil_js_1.default.Em(rowspacing));
      }

      rows[this.table.length - 1] = ParseUtil_js_1.default.Em(Math.max(0, rowspacing + ParseUtil_js_1.default.dimen2em(spacing)));
      this.arraydef['rowspacing'] = rows.join(' ');
    }
  };

  return ArrayItem;
}(StackItem_js_1.BaseItem);

exports.ArrayItem = ArrayItem;

var EqnArrayItem = function (_super) {
  __extends(EqnArrayItem, _super);

  function EqnArrayItem(factory) {
    var args = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      args[_i - 1] = arguments[_i];
    }

    var _this = _super.call(this, factory) || this;

    _this.maxrow = 0;

    _this.factory.configuration.tags.start(args[0], args[2], args[1]);

    return _this;
  }

  Object.defineProperty(EqnArrayItem.prototype, "kind", {
    get: function get() {
      return 'eqnarray';
    },
    enumerable: false,
    configurable: true
  });

  EqnArrayItem.prototype.EndEntry = function () {
    if (this.row.length) {
      ParseUtil_js_1.default.fixInitialMO(this.factory.configuration, this.nodes);
    }

    var node = this.create('node', 'mtd', this.nodes);
    this.row.push(node);
    this.Clear();
  };

  EqnArrayItem.prototype.EndRow = function () {
    if (this.row.length > this.maxrow) {
      this.maxrow = this.row.length;
    }

    var mtr = 'mtr';
    var tag = this.factory.configuration.tags.getTag();

    if (tag) {
      this.row = [tag].concat(this.row);
      mtr = 'mlabeledtr';
    }

    this.factory.configuration.tags.clearTag();
    var node = this.create('node', mtr, this.row);
    this.table.push(node);
    this.row = [];
  };

  EqnArrayItem.prototype.EndTable = function () {
    _super.prototype.EndTable.call(this);

    this.factory.configuration.tags.end();
    this.extendArray('columnalign', this.maxrow);
    this.extendArray('columnwidth', this.maxrow);
    this.extendArray('columnspacing', this.maxrow - 1);
  };

  EqnArrayItem.prototype.extendArray = function (name, max) {
    if (!this.arraydef[name]) return;
    var repeat = this.arraydef[name].split(/ /);

    var columns = __spreadArray([], __read(repeat));

    if (columns.length > 1) {
      while (columns.length < max) {
        columns.push.apply(columns, __spreadArray([], __read(repeat)));
      }

      this.arraydef[name] = columns.slice(0, max).join(' ');
    }
  };

  return EqnArrayItem;
}(ArrayItem);

exports.EqnArrayItem = EqnArrayItem;

var EquationItem = function (_super) {
  __extends(EquationItem, _super);

  function EquationItem(factory) {
    var args = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      args[_i - 1] = arguments[_i];
    }

    var _this = _super.call(this, factory) || this;

    _this.factory.configuration.tags.start('equation', true, args[0]);

    return _this;
  }

  Object.defineProperty(EquationItem.prototype, "kind", {
    get: function get() {
      return 'equation';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(EquationItem.prototype, "isOpen", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  EquationItem.prototype.checkItem = function (item) {
    if (item.isKind('end')) {
      var mml = this.toMml();
      var tag = this.factory.configuration.tags.getTag();
      this.factory.configuration.tags.end();
      return [[tag ? this.factory.configuration.tags.enTag(mml, tag) : mml, item], true];
    }

    if (item.isKind('stop')) {
      throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\end{%1}', this.getName());
    }

    return _super.prototype.checkItem.call(this, item);
  };

  return EquationItem;
}(StackItem_js_1.BaseItem);

exports.EquationItem = EquationItem;

/***/ }),

/***/ 4728:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var sm = __webpack_require__(1682);

var TexConstants_js_1 = __webpack_require__(7338);

var BaseMethods_js_1 = __webpack_require__(4807);

var ParseMethods_js_1 = __webpack_require__(5123);

var ParseUtil_js_1 = __webpack_require__(4632);

var MmlNode_js_1 = __webpack_require__(4653);

var lengths_js_1 = __webpack_require__(5915);

new sm.RegExpMap('letter', ParseMethods_js_1.default.variable, /[a-z]/i);
new sm.RegExpMap('digit', ParseMethods_js_1.default.digit, /[0-9.,]/);
new sm.RegExpMap('command', ParseMethods_js_1.default.controlSequence, /^\\/);
new sm.MacroMap('special', {
  '{': 'Open',
  '}': 'Close',
  '~': 'Tilde',
  '^': 'Superscript',
  '_': 'Subscript',
  ' ': 'Space',
  '\t': 'Space',
  '\r': 'Space',
  '\n': 'Space',
  '\'': 'Prime',
  '%': 'Comment',
  '&': 'Entry',
  '#': 'Hash',
  "\xA0": 'Space',
  "\u2019": 'Prime'
}, BaseMethods_js_1.default);
new sm.CharacterMap('mathchar0mi', ParseMethods_js_1.default.mathchar0mi, {
  alpha: "\u03B1",
  beta: "\u03B2",
  gamma: "\u03B3",
  delta: "\u03B4",
  epsilon: "\u03F5",
  zeta: "\u03B6",
  eta: "\u03B7",
  theta: "\u03B8",
  iota: "\u03B9",
  kappa: "\u03BA",
  lambda: "\u03BB",
  mu: "\u03BC",
  nu: "\u03BD",
  xi: "\u03BE",
  omicron: "\u03BF",
  pi: "\u03C0",
  rho: "\u03C1",
  sigma: "\u03C3",
  tau: "\u03C4",
  upsilon: "\u03C5",
  phi: "\u03D5",
  chi: "\u03C7",
  psi: "\u03C8",
  omega: "\u03C9",
  varepsilon: "\u03B5",
  vartheta: "\u03D1",
  varpi: "\u03D6",
  varrho: "\u03F1",
  varsigma: "\u03C2",
  varphi: "\u03C6",
  S: ["\xA7", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  aleph: ["\u2135", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  hbar: ["\u210F", {
    variantForm: true
  }],
  imath: "\u0131",
  jmath: "\u0237",
  ell: "\u2113",
  wp: ["\u2118", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  Re: ["\u211C", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  Im: ["\u2111", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  partial: ["\u2202", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC
  }],
  infty: ["\u221E", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  prime: ["\u2032", {
    variantForm: true
  }],
  emptyset: ["\u2205", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  nabla: ["\u2207", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  top: ["\u22A4", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  bot: ["\u22A5", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  angle: ["\u2220", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  triangle: ["\u25B3", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  backslash: ["\u2216", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  forall: ["\u2200", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  exists: ["\u2203", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  neg: ["\xAC", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  lnot: ["\xAC", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  flat: ["\u266D", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  natural: ["\u266E", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  sharp: ["\u266F", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  clubsuit: ["\u2663", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  diamondsuit: ["\u2662", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  heartsuit: ["\u2661", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  spadesuit: ["\u2660", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }]
});
new sm.CharacterMap('mathchar0mo', ParseMethods_js_1.default.mathchar0mo, {
  surd: "\u221A",
  coprod: ["\u2210", {
    texClass: MmlNode_js_1.TEXCLASS.OP,
    movesupsub: true
  }],
  bigvee: ["\u22C1", {
    texClass: MmlNode_js_1.TEXCLASS.OP,
    movesupsub: true
  }],
  bigwedge: ["\u22C0", {
    texClass: MmlNode_js_1.TEXCLASS.OP,
    movesupsub: true
  }],
  biguplus: ["\u2A04", {
    texClass: MmlNode_js_1.TEXCLASS.OP,
    movesupsub: true
  }],
  bigcap: ["\u22C2", {
    texClass: MmlNode_js_1.TEXCLASS.OP,
    movesupsub: true
  }],
  bigcup: ["\u22C3", {
    texClass: MmlNode_js_1.TEXCLASS.OP,
    movesupsub: true
  }],
  'int': ["\u222B", {
    texClass: MmlNode_js_1.TEXCLASS.OP
  }],
  intop: ["\u222B", {
    texClass: MmlNode_js_1.TEXCLASS.OP,
    movesupsub: true,
    movablelimits: true
  }],
  iint: ["\u222C", {
    texClass: MmlNode_js_1.TEXCLASS.OP
  }],
  iiint: ["\u222D", {
    texClass: MmlNode_js_1.TEXCLASS.OP
  }],
  prod: ["\u220F", {
    texClass: MmlNode_js_1.TEXCLASS.OP,
    movesupsub: true
  }],
  sum: ["\u2211", {
    texClass: MmlNode_js_1.TEXCLASS.OP,
    movesupsub: true
  }],
  bigotimes: ["\u2A02", {
    texClass: MmlNode_js_1.TEXCLASS.OP,
    movesupsub: true
  }],
  bigoplus: ["\u2A01", {
    texClass: MmlNode_js_1.TEXCLASS.OP,
    movesupsub: true
  }],
  bigodot: ["\u2A00", {
    texClass: MmlNode_js_1.TEXCLASS.OP,
    movesupsub: true
  }],
  oint: ["\u222E", {
    texClass: MmlNode_js_1.TEXCLASS.OP
  }],
  bigsqcup: ["\u2A06", {
    texClass: MmlNode_js_1.TEXCLASS.OP,
    movesupsub: true
  }],
  smallint: ["\u222B", {
    largeop: false
  }],
  triangleleft: "\u25C3",
  triangleright: "\u25B9",
  bigtriangleup: "\u25B3",
  bigtriangledown: "\u25BD",
  wedge: "\u2227",
  land: "\u2227",
  vee: "\u2228",
  lor: "\u2228",
  cap: "\u2229",
  cup: "\u222A",
  ddagger: "\u2021",
  dagger: "\u2020",
  sqcap: "\u2293",
  sqcup: "\u2294",
  uplus: "\u228E",
  amalg: "\u2A3F",
  diamond: "\u22C4",
  bullet: "\u2219",
  wr: "\u2240",
  div: "\xF7",
  divsymbol: "\xF7",
  odot: ["\u2299", {
    largeop: false
  }],
  oslash: ["\u2298", {
    largeop: false
  }],
  otimes: ["\u2297", {
    largeop: false
  }],
  ominus: ["\u2296", {
    largeop: false
  }],
  oplus: ["\u2295", {
    largeop: false
  }],
  mp: "\u2213",
  pm: "\xB1",
  circ: "\u2218",
  bigcirc: "\u25EF",
  setminus: "\u2216",
  cdot: "\u22C5",
  ast: "\u2217",
  times: "\xD7",
  star: "\u22C6",
  propto: "\u221D",
  sqsubseteq: "\u2291",
  sqsupseteq: "\u2292",
  parallel: "\u2225",
  mid: "\u2223",
  dashv: "\u22A3",
  vdash: "\u22A2",
  leq: "\u2264",
  le: "\u2264",
  geq: "\u2265",
  ge: "\u2265",
  lt: "<",
  gt: ">",
  succ: "\u227B",
  prec: "\u227A",
  approx: "\u2248",
  succeq: "\u2AB0",
  preceq: "\u2AAF",
  supset: "\u2283",
  subset: "\u2282",
  supseteq: "\u2287",
  subseteq: "\u2286",
  'in': "\u2208",
  ni: "\u220B",
  notin: "\u2209",
  owns: "\u220B",
  gg: "\u226B",
  ll: "\u226A",
  sim: "\u223C",
  simeq: "\u2243",
  perp: "\u22A5",
  equiv: "\u2261",
  asymp: "\u224D",
  smile: "\u2323",
  frown: "\u2322",
  ne: "\u2260",
  neq: "\u2260",
  cong: "\u2245",
  doteq: "\u2250",
  bowtie: "\u22C8",
  models: "\u22A8",
  notChar: "\u29F8",
  Leftrightarrow: "\u21D4",
  Leftarrow: "\u21D0",
  Rightarrow: "\u21D2",
  leftrightarrow: "\u2194",
  leftarrow: "\u2190",
  gets: "\u2190",
  rightarrow: "\u2192",
  to: ["\u2192", {
    accent: false
  }],
  mapsto: "\u21A6",
  leftharpoonup: "\u21BC",
  leftharpoondown: "\u21BD",
  rightharpoonup: "\u21C0",
  rightharpoondown: "\u21C1",
  nearrow: "\u2197",
  searrow: "\u2198",
  nwarrow: "\u2196",
  swarrow: "\u2199",
  rightleftharpoons: "\u21CC",
  hookrightarrow: "\u21AA",
  hookleftarrow: "\u21A9",
  longleftarrow: "\u27F5",
  Longleftarrow: "\u27F8",
  longrightarrow: "\u27F6",
  Longrightarrow: "\u27F9",
  Longleftrightarrow: "\u27FA",
  longleftrightarrow: "\u27F7",
  longmapsto: "\u27FC",
  ldots: "\u2026",
  cdots: "\u22EF",
  vdots: "\u22EE",
  ddots: "\u22F1",
  dotsc: "\u2026",
  dotsb: "\u22EF",
  dotsm: "\u22EF",
  dotsi: "\u22EF",
  dotso: "\u2026",
  ldotp: [".", {
    texClass: MmlNode_js_1.TEXCLASS.PUNCT
  }],
  cdotp: ["\u22C5", {
    texClass: MmlNode_js_1.TEXCLASS.PUNCT
  }],
  colon: [":", {
    texClass: MmlNode_js_1.TEXCLASS.PUNCT
  }]
});
new sm.CharacterMap('mathchar7', ParseMethods_js_1.default.mathchar7, {
  Gamma: "\u0393",
  Delta: "\u0394",
  Theta: "\u0398",
  Lambda: "\u039B",
  Xi: "\u039E",
  Pi: "\u03A0",
  Sigma: "\u03A3",
  Upsilon: "\u03A5",
  Phi: "\u03A6",
  Psi: "\u03A8",
  Omega: "\u03A9",
  '_': "_",
  '#': "#",
  '$': "$",
  '%': "%",
  '&': "&",
  And: "&"
});
new sm.DelimiterMap('delimiter', ParseMethods_js_1.default.delimiter, {
  '(': '(',
  ')': ')',
  '[': '[',
  ']': ']',
  '<': "\u27E8",
  '>': "\u27E9",
  '\\lt': "\u27E8",
  '\\gt': "\u27E9",
  '/': '/',
  '|': ['|', {
    texClass: MmlNode_js_1.TEXCLASS.ORD
  }],
  '.': '',
  '\\\\': '\\',
  '\\lmoustache': "\u23B0",
  '\\rmoustache': "\u23B1",
  '\\lgroup': "\u27EE",
  '\\rgroup': "\u27EF",
  '\\arrowvert': "\u23D0",
  '\\Arrowvert': "\u2016",
  '\\bracevert': "\u23AA",
  '\\Vert': ["\u2016", {
    texClass: MmlNode_js_1.TEXCLASS.ORD
  }],
  '\\|': ["\u2016", {
    texClass: MmlNode_js_1.TEXCLASS.ORD
  }],
  '\\vert': ['|', {
    texClass: MmlNode_js_1.TEXCLASS.ORD
  }],
  "\\uparrow": "\u2191",
  '\\downarrow': "\u2193",
  "\\updownarrow": "\u2195",
  "\\Uparrow": "\u21D1",
  '\\Downarrow': "\u21D3",
  "\\Updownarrow": "\u21D5",
  '\\backslash': '\\',
  '\\rangle': "\u27E9",
  '\\langle': "\u27E8",
  '\\rbrace': '}',
  '\\lbrace': '{',
  '\\}': '}',
  '\\{': '{',
  '\\rceil': "\u2309",
  '\\lceil': "\u2308",
  '\\rfloor': "\u230B",
  '\\lfloor': "\u230A",
  '\\lbrack': '[',
  '\\rbrack': ']'
});
new sm.CommandMap('macros', {
  displaystyle: ['SetStyle', 'D', true, 0],
  textstyle: ['SetStyle', 'T', false, 0],
  scriptstyle: ['SetStyle', 'S', false, 1],
  scriptscriptstyle: ['SetStyle', 'SS', false, 2],
  rm: ['SetFont', TexConstants_js_1.TexConstant.Variant.NORMAL],
  mit: ['SetFont', TexConstants_js_1.TexConstant.Variant.ITALIC],
  oldstyle: ['SetFont', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
  cal: ['SetFont', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],
  it: ['SetFont', TexConstants_js_1.TexConstant.Variant.MATHITALIC],
  bf: ['SetFont', TexConstants_js_1.TexConstant.Variant.BOLD],
  bbFont: ['SetFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],
  scr: ['SetFont', TexConstants_js_1.TexConstant.Variant.SCRIPT],
  frak: ['SetFont', TexConstants_js_1.TexConstant.Variant.FRAKTUR],
  sf: ['SetFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],
  tt: ['SetFont', TexConstants_js_1.TexConstant.Variant.MONOSPACE],
  mathrm: ['MathFont', TexConstants_js_1.TexConstant.Variant.NORMAL],
  mathup: ['MathFont', TexConstants_js_1.TexConstant.Variant.NORMAL],
  mathnormal: ['MathFont', ''],
  mathbf: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLD],
  mathbfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLD],
  mathit: ['MathFont', TexConstants_js_1.TexConstant.Variant.MATHITALIC],
  mathbfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDITALIC],
  mathbb: ['MathFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],
  Bbb: ['MathFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],
  mathfrak: ['MathFont', TexConstants_js_1.TexConstant.Variant.FRAKTUR],
  mathbffrak: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDFRAKTUR],
  mathscr: ['MathFont', TexConstants_js_1.TexConstant.Variant.SCRIPT],
  mathbfscr: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSCRIPT],
  mathsf: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],
  mathsfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],
  mathbfsf: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF],
  mathbfsfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF],
  mathsfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIFITALIC],
  mathbfsfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIFBOLDITALIC],
  mathtt: ['MathFont', TexConstants_js_1.TexConstant.Variant.MONOSPACE],
  mathcal: ['MathFont', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],
  mathbfcal: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDCALLIGRAPHIC],
  symrm: ['MathFont', TexConstants_js_1.TexConstant.Variant.NORMAL],
  symup: ['MathFont', TexConstants_js_1.TexConstant.Variant.NORMAL],
  symnormal: ['MathFont', ''],
  symbf: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLD],
  symbfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLD],
  symit: ['MathFont', TexConstants_js_1.TexConstant.Variant.ITALIC],
  symbfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDITALIC],
  symbb: ['MathFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],
  symfrak: ['MathFont', TexConstants_js_1.TexConstant.Variant.FRAKTUR],
  symbffrak: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDFRAKTUR],
  symscr: ['MathFont', TexConstants_js_1.TexConstant.Variant.SCRIPT],
  symbfscr: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSCRIPT],
  symsf: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],
  symsfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],
  symbfsf: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF],
  symbfsfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF],
  symsfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIFITALIC],
  symbfsfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIFBOLDITALIC],
  symtt: ['MathFont', TexConstants_js_1.TexConstant.Variant.MONOSPACE],
  symcal: ['MathFont', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],
  symbfcal: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDCALLIGRAPHIC],
  textrm: ['HBox', null, TexConstants_js_1.TexConstant.Variant.NORMAL],
  textup: ['HBox', null, TexConstants_js_1.TexConstant.Variant.NORMAL],
  textnormal: ['HBox'],
  textit: ['HBox', null, TexConstants_js_1.TexConstant.Variant.ITALIC],
  textbf: ['HBox', null, TexConstants_js_1.TexConstant.Variant.BOLD],
  textsf: ['HBox', null, TexConstants_js_1.TexConstant.Variant.SANSSERIF],
  texttt: ['HBox', null, TexConstants_js_1.TexConstant.Variant.MONOSPACE],
  tiny: ['SetSize', 0.5],
  Tiny: ['SetSize', 0.6],
  scriptsize: ['SetSize', 0.7],
  small: ['SetSize', 0.85],
  normalsize: ['SetSize', 1.0],
  large: ['SetSize', 1.2],
  Large: ['SetSize', 1.44],
  LARGE: ['SetSize', 1.73],
  huge: ['SetSize', 2.07],
  Huge: ['SetSize', 2.49],
  arcsin: 'NamedFn',
  arccos: 'NamedFn',
  arctan: 'NamedFn',
  arg: 'NamedFn',
  cos: 'NamedFn',
  cosh: 'NamedFn',
  cot: 'NamedFn',
  coth: 'NamedFn',
  csc: 'NamedFn',
  deg: 'NamedFn',
  det: 'NamedOp',
  dim: 'NamedFn',
  exp: 'NamedFn',
  gcd: 'NamedOp',
  hom: 'NamedFn',
  inf: 'NamedOp',
  ker: 'NamedFn',
  lg: 'NamedFn',
  lim: 'NamedOp',
  liminf: ['NamedOp', 'lim&thinsp;inf'],
  limsup: ['NamedOp', 'lim&thinsp;sup'],
  ln: 'NamedFn',
  log: 'NamedFn',
  max: 'NamedOp',
  min: 'NamedOp',
  Pr: 'NamedOp',
  sec: 'NamedFn',
  sin: 'NamedFn',
  sinh: 'NamedFn',
  sup: 'NamedOp',
  tan: 'NamedFn',
  tanh: 'NamedFn',
  limits: ['Limits', 1],
  nolimits: ['Limits', 0],
  overline: ['UnderOver', '2015'],
  underline: ['UnderOver', '2015'],
  overbrace: ['UnderOver', '23DE', 1],
  underbrace: ['UnderOver', '23DF', 1],
  overparen: ['UnderOver', '23DC'],
  underparen: ['UnderOver', '23DD'],
  overrightarrow: ['UnderOver', '2192'],
  underrightarrow: ['UnderOver', '2192'],
  overleftarrow: ['UnderOver', '2190'],
  underleftarrow: ['UnderOver', '2190'],
  overleftrightarrow: ['UnderOver', '2194'],
  underleftrightarrow: ['UnderOver', '2194'],
  overset: 'Overset',
  underset: 'Underset',
  overunderset: 'Overunderset',
  stackrel: ['Macro', '\\mathrel{\\mathop{#2}\\limits^{#1}}', 2],
  stackbin: ['Macro', '\\mathbin{\\mathop{#2}\\limits^{#1}}', 2],
  over: 'Over',
  overwithdelims: 'Over',
  atop: 'Over',
  atopwithdelims: 'Over',
  above: 'Over',
  abovewithdelims: 'Over',
  brace: ['Over', '{', '}'],
  brack: ['Over', '[', ']'],
  choose: ['Over', '(', ')'],
  frac: 'Frac',
  sqrt: 'Sqrt',
  root: 'Root',
  uproot: ['MoveRoot', 'upRoot'],
  leftroot: ['MoveRoot', 'leftRoot'],
  left: 'LeftRight',
  right: 'LeftRight',
  middle: 'LeftRight',
  llap: 'Lap',
  rlap: 'Lap',
  raise: 'RaiseLower',
  lower: 'RaiseLower',
  moveleft: 'MoveLeftRight',
  moveright: 'MoveLeftRight',
  ',': ['Spacer', lengths_js_1.MATHSPACE.thinmathspace],
  ':': ['Spacer', lengths_js_1.MATHSPACE.mediummathspace],
  '>': ['Spacer', lengths_js_1.MATHSPACE.mediummathspace],
  ';': ['Spacer', lengths_js_1.MATHSPACE.thickmathspace],
  '!': ['Spacer', lengths_js_1.MATHSPACE.negativethinmathspace],
  enspace: ['Spacer', .5],
  quad: ['Spacer', 1],
  qquad: ['Spacer', 2],
  thinspace: ['Spacer', lengths_js_1.MATHSPACE.thinmathspace],
  negthinspace: ['Spacer', lengths_js_1.MATHSPACE.negativethinmathspace],
  hskip: 'Hskip',
  hspace: 'Hskip',
  kern: 'Hskip',
  mskip: 'Hskip',
  mspace: 'Hskip',
  mkern: 'Hskip',
  rule: 'rule',
  Rule: ['Rule'],
  Space: ['Rule', 'blank'],
  nonscript: 'Nonscript',
  big: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 0.85],
  Big: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 1.15],
  bigg: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 1.45],
  Bigg: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 1.75],
  bigl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 0.85],
  Bigl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 1.15],
  biggl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 1.45],
  Biggl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 1.75],
  bigr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 0.85],
  Bigr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 1.15],
  biggr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 1.45],
  Biggr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 1.75],
  bigm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 0.85],
  Bigm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 1.15],
  biggm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 1.45],
  Biggm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 1.75],
  mathord: ['TeXAtom', MmlNode_js_1.TEXCLASS.ORD],
  mathop: ['TeXAtom', MmlNode_js_1.TEXCLASS.OP],
  mathopen: ['TeXAtom', MmlNode_js_1.TEXCLASS.OPEN],
  mathclose: ['TeXAtom', MmlNode_js_1.TEXCLASS.CLOSE],
  mathbin: ['TeXAtom', MmlNode_js_1.TEXCLASS.BIN],
  mathrel: ['TeXAtom', MmlNode_js_1.TEXCLASS.REL],
  mathpunct: ['TeXAtom', MmlNode_js_1.TEXCLASS.PUNCT],
  mathinner: ['TeXAtom', MmlNode_js_1.TEXCLASS.INNER],
  vcenter: ['TeXAtom', MmlNode_js_1.TEXCLASS.VCENTER],
  buildrel: 'BuildRel',
  hbox: ['HBox', 0],
  text: 'HBox',
  mbox: ['HBox', 0],
  fbox: 'FBox',
  boxed: ['Macro', '\\fbox{$\\displaystyle{#1}$}', 1],
  framebox: 'FrameBox',
  strut: 'Strut',
  mathstrut: ['Macro', '\\vphantom{(}'],
  phantom: 'Phantom',
  vphantom: ['Phantom', 1, 0],
  hphantom: ['Phantom', 0, 1],
  smash: 'Smash',
  acute: ['Accent', '00B4'],
  grave: ['Accent', '0060'],
  ddot: ['Accent', '00A8'],
  tilde: ['Accent', '007E'],
  bar: ['Accent', '00AF'],
  breve: ['Accent', '02D8'],
  check: ['Accent', '02C7'],
  hat: ['Accent', '005E'],
  vec: ['Accent', '2192'],
  dot: ['Accent', '02D9'],
  widetilde: ['Accent', '007E', 1],
  widehat: ['Accent', '005E', 1],
  matrix: 'Matrix',
  array: 'Matrix',
  pmatrix: ['Matrix', '(', ')'],
  cases: ['Matrix', '{', '', 'left left', null, '.1em', null, true],
  eqalign: ['Matrix', null, null, 'right left', lengths_js_1.em(lengths_js_1.MATHSPACE.thickmathspace), '.5em', 'D'],
  displaylines: ['Matrix', null, null, 'center', null, '.5em', 'D'],
  cr: 'Cr',
  '\\': 'CrLaTeX',
  newline: ['CrLaTeX', true],
  hline: ['HLine', 'solid'],
  hdashline: ['HLine', 'dashed'],
  eqalignno: ['Matrix', null, null, 'right left', lengths_js_1.em(lengths_js_1.MATHSPACE.thickmathspace), '.5em', 'D', null, 'right'],
  leqalignno: ['Matrix', null, null, 'right left', lengths_js_1.em(lengths_js_1.MATHSPACE.thickmathspace), '.5em', 'D', null, 'left'],
  hfill: 'HFill',
  hfil: 'HFill',
  hfilll: 'HFill',
  bmod: ['Macro', '\\mmlToken{mo}[lspace="thickmathspace"' + ' rspace="thickmathspace"]{mod}'],
  pmod: ['Macro', '\\pod{\\mmlToken{mi}{mod}\\kern 6mu #1}', 1],
  mod: ['Macro', '\\mathchoice{\\kern18mu}{\\kern12mu}' + '{\\kern12mu}{\\kern12mu}\\mmlToken{mi}{mod}\\,\\,#1', 1],
  pod: ['Macro', '\\mathchoice{\\kern18mu}{\\kern8mu}' + '{\\kern8mu}{\\kern8mu}(#1)', 1],
  iff: ['Macro', '\\;\\Longleftrightarrow\\;'],
  skew: ['Macro', '{{#2{#3\\mkern#1mu}\\mkern-#1mu}{}}', 3],
  pmb: ['Macro', '\\rlap{#1}\\kern1px{#1}', 1],
  TeX: ['Macro', 'T\\kern-.14em\\lower.5ex{E}\\kern-.115em X'],
  LaTeX: ['Macro', 'L\\kern-.325em\\raise.21em' + '{\\scriptstyle{A}}\\kern-.17em\\TeX'],
  ' ': ['Macro', '\\text{ }'],
  not: 'Not',
  dots: 'Dots',
  space: 'Tilde',
  "\xA0": 'Tilde',
  begin: 'BeginEnd',
  end: 'BeginEnd',
  label: 'HandleLabel',
  ref: 'HandleRef',
  nonumber: 'HandleNoTag',
  mathchoice: 'MathChoice',
  mmlToken: 'MmlToken'
}, BaseMethods_js_1.default);
new sm.EnvironmentMap('environment', ParseMethods_js_1.default.environment, {
  array: ['AlignedArray'],
  equation: ['Equation', null, true],
  eqnarray: ['EqnArray', null, true, true, 'rcl', ParseUtil_js_1.default.cols(0, lengths_js_1.MATHSPACE.thickmathspace), '.5em']
}, BaseMethods_js_1.default);
new sm.CharacterMap('not_remap', null, {
  "\u2190": "\u219A",
  "\u2192": "\u219B",
  "\u2194": "\u21AE",
  "\u21D0": "\u21CD",
  "\u21D2": "\u21CF",
  "\u21D4": "\u21CE",
  "\u2208": "\u2209",
  "\u220B": "\u220C",
  "\u2223": "\u2224",
  "\u2225": "\u2226",
  "\u223C": "\u2241",
  "~": "\u2241",
  "\u2243": "\u2244",
  "\u2245": "\u2247",
  "\u2248": "\u2249",
  "\u224D": "\u226D",
  "=": "\u2260",
  "\u2261": "\u2262",
  "<": "\u226E",
  ">": "\u226F",
  "\u2264": "\u2270",
  "\u2265": "\u2271",
  "\u2272": "\u2274",
  "\u2273": "\u2275",
  "\u2276": "\u2278",
  "\u2277": "\u2279",
  "\u227A": "\u2280",
  "\u227B": "\u2281",
  "\u2282": "\u2284",
  "\u2283": "\u2285",
  "\u2286": "\u2288",
  "\u2287": "\u2289",
  "\u22A2": "\u22AC",
  "\u22A8": "\u22AD",
  "\u22A9": "\u22AE",
  "\u22AB": "\u22AF",
  "\u227C": "\u22E0",
  "\u227D": "\u22E1",
  "\u2291": "\u22E2",
  "\u2292": "\u22E3",
  "\u22B2": "\u22EA",
  "\u22B3": "\u22EB",
  "\u22B4": "\u22EC",
  "\u22B5": "\u22ED",
  "\u2203": "\u2204"
});

/***/ }),

/***/ 4807:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var sitem = __webpack_require__(1811);

var NodeUtil_js_1 = __webpack_require__(8754);

var TexError_js_1 = __webpack_require__(9722);

var TexParser_js_1 = __webpack_require__(9525);

var TexConstants_js_1 = __webpack_require__(7338);

var ParseUtil_js_1 = __webpack_require__(4632);

var MmlNode_js_1 = __webpack_require__(4653);

var Tags_js_1 = __webpack_require__(4363);

var lengths_js_1 = __webpack_require__(5915);

var Entities_js_1 = __webpack_require__(3719);

var Options_js_1 = __webpack_require__(5698);

var BaseMethods = {};
var P_HEIGHT = 1.2 / .85;
var MmlTokenAllow = {
  fontfamily: 1,
  fontsize: 1,
  fontweight: 1,
  fontstyle: 1,
  color: 1,
  background: 1,
  id: 1,
  'class': 1,
  href: 1,
  style: 1
};

BaseMethods.Open = function (parser, _c) {
  parser.Push(parser.itemFactory.create('open'));
};

BaseMethods.Close = function (parser, _c) {
  parser.Push(parser.itemFactory.create('close'));
};

BaseMethods.Tilde = function (parser, _c) {
  parser.Push(parser.create('token', 'mtext', {}, Entities_js_1.entities.nbsp));
};

BaseMethods.Space = function (_parser, _c) {};

BaseMethods.Superscript = function (parser, _c) {
  var _a;

  if (parser.GetNext().match(/\d/)) {
    parser.string = parser.string.substr(0, parser.i + 1) + ' ' + parser.string.substr(parser.i + 1);
  }

  var primes;
  var base;
  var top = parser.stack.Top();

  if (top.isKind('prime')) {
    _a = __read(top.Peek(2), 2), base = _a[0], primes = _a[1];
    parser.stack.Pop();
  } else {
    base = parser.stack.Prev();

    if (!base) {
      base = parser.create('token', 'mi', {}, '');
    }
  }

  var movesupsub = NodeUtil_js_1.default.getProperty(base, 'movesupsub');
  var position = NodeUtil_js_1.default.isType(base, 'msubsup') ? base.sup : base.over;

  if (NodeUtil_js_1.default.isType(base, 'msubsup') && !NodeUtil_js_1.default.isType(base, 'msup') && NodeUtil_js_1.default.getChildAt(base, base.sup) || NodeUtil_js_1.default.isType(base, 'munderover') && !NodeUtil_js_1.default.isType(base, 'mover') && NodeUtil_js_1.default.getChildAt(base, base.over) && !NodeUtil_js_1.default.getProperty(base, 'subsupOK')) {
    throw new TexError_js_1.default('DoubleExponent', 'Double exponent: use braces to clarify');
  }

  if (!NodeUtil_js_1.default.isType(base, 'msubsup') || NodeUtil_js_1.default.isType(base, 'msup')) {
    if (movesupsub) {
      if (!NodeUtil_js_1.default.isType(base, 'munderover') || NodeUtil_js_1.default.isType(base, 'mover') || NodeUtil_js_1.default.getChildAt(base, base.over)) {
        base = parser.create('node', 'munderover', [base], {
          movesupsub: true
        });
      }

      position = base.over;
    } else {
      base = parser.create('node', 'msubsup', [base]);
      position = base.sup;
    }
  }

  parser.Push(parser.itemFactory.create('subsup', base).setProperties({
    position: position,
    primes: primes,
    movesupsub: movesupsub
  }));
};

BaseMethods.Subscript = function (parser, _c) {
  var _a;

  if (parser.GetNext().match(/\d/)) {
    parser.string = parser.string.substr(0, parser.i + 1) + ' ' + parser.string.substr(parser.i + 1);
  }

  var primes, base;
  var top = parser.stack.Top();

  if (top.isKind('prime')) {
    _a = __read(top.Peek(2), 2), base = _a[0], primes = _a[1];
    parser.stack.Pop();
  } else {
    base = parser.stack.Prev();

    if (!base) {
      base = parser.create('token', 'mi', {}, '');
    }
  }

  var movesupsub = NodeUtil_js_1.default.getProperty(base, 'movesupsub');
  var position = NodeUtil_js_1.default.isType(base, 'msubsup') ? base.sub : base.under;

  if (NodeUtil_js_1.default.isType(base, 'msubsup') && !NodeUtil_js_1.default.isType(base, 'msup') && NodeUtil_js_1.default.getChildAt(base, base.sub) || NodeUtil_js_1.default.isType(base, 'munderover') && !NodeUtil_js_1.default.isType(base, 'mover') && NodeUtil_js_1.default.getChildAt(base, base.under) && !NodeUtil_js_1.default.getProperty(base, 'subsupOK')) {
    throw new TexError_js_1.default('DoubleSubscripts', 'Double subscripts: use braces to clarify');
  }

  if (!NodeUtil_js_1.default.isType(base, 'msubsup') || NodeUtil_js_1.default.isType(base, 'msup')) {
    if (movesupsub) {
      if (!NodeUtil_js_1.default.isType(base, 'munderover') || NodeUtil_js_1.default.isType(base, 'mover') || NodeUtil_js_1.default.getChildAt(base, base.under)) {
        base = parser.create('node', 'munderover', [base], {
          movesupsub: true
        });
      }

      position = base.under;
    } else {
      base = parser.create('node', 'msubsup', [base]);
      position = base.sub;
    }
  }

  parser.Push(parser.itemFactory.create('subsup', base).setProperties({
    position: position,
    primes: primes,
    movesupsub: movesupsub
  }));
};

BaseMethods.Prime = function (parser, c) {
  var base = parser.stack.Prev();

  if (!base) {
    base = parser.create('node', 'mi');
  }

  if (NodeUtil_js_1.default.isType(base, 'msubsup') && !NodeUtil_js_1.default.isType(base, 'msup') && NodeUtil_js_1.default.getChildAt(base, base.sup)) {
    throw new TexError_js_1.default('DoubleExponentPrime', 'Prime causes double exponent: use braces to clarify');
  }

  var sup = '';
  parser.i--;

  do {
    sup += Entities_js_1.entities.prime;
    parser.i++, c = parser.GetNext();
  } while (c === '\'' || c === Entities_js_1.entities.rsquo);

  sup = ['', "\u2032", "\u2033", "\u2034", "\u2057"][sup.length] || sup;
  var node = parser.create('token', 'mo', {
    variantForm: true
  }, sup);
  parser.Push(parser.itemFactory.create('prime', base, node));
};

BaseMethods.Comment = function (parser, _c) {
  while (parser.i < parser.string.length && parser.string.charAt(parser.i) !== '\n') {
    parser.i++;
  }
};

BaseMethods.Hash = function (_parser, _c) {
  throw new TexError_js_1.default('CantUseHash1', 'You can\'t use \'macro parameter character #\' in math mode');
};

BaseMethods.MathFont = function (parser, name, variant) {
  var text = parser.GetArgument(name);
  var mml = new TexParser_js_1.default(text, __assign(__assign({}, parser.stack.env), {
    font: variant,
    multiLetterIdentifiers: true
  }), parser.configuration).mml();
  parser.Push(parser.create('node', 'TeXAtom', [mml]));
};

BaseMethods.SetFont = function (parser, _name, font) {
  parser.stack.env['font'] = font;
};

BaseMethods.SetStyle = function (parser, _name, texStyle, style, level) {
  parser.stack.env['style'] = texStyle;
  parser.stack.env['level'] = level;
  parser.Push(parser.itemFactory.create('style').setProperty('styles', {
    displaystyle: style,
    scriptlevel: level
  }));
};

BaseMethods.SetSize = function (parser, _name, size) {
  parser.stack.env['size'] = size;
  parser.Push(parser.itemFactory.create('style').setProperty('styles', {
    mathsize: lengths_js_1.em(size)
  }));
};

BaseMethods.Spacer = function (parser, _name, space) {
  var node = parser.create('node', 'mspace', [], {
    width: lengths_js_1.em(space)
  });
  var style = parser.create('node', 'mstyle', [node], {
    scriptlevel: 0
  });
  parser.Push(style);
};

BaseMethods.LeftRight = function (parser, name) {
  var first = name.substr(1);
  parser.Push(parser.itemFactory.create(first, parser.GetDelimiter(name), parser.stack.env.color));
};

BaseMethods.NamedFn = function (parser, name, id) {
  if (!id) {
    id = name.substr(1);
  }

  var mml = parser.create('token', 'mi', {
    texClass: MmlNode_js_1.TEXCLASS.OP
  }, id);
  parser.Push(parser.itemFactory.create('fn', mml));
};

BaseMethods.NamedOp = function (parser, name, id) {
  if (!id) {
    id = name.substr(1);
  }

  id = id.replace(/&thinsp;/, "\u2006");
  var mml = parser.create('token', 'mo', {
    movablelimits: true,
    movesupsub: true,
    form: TexConstants_js_1.TexConstant.Form.PREFIX,
    texClass: MmlNode_js_1.TEXCLASS.OP
  }, id);
  parser.Push(mml);
};

BaseMethods.Limits = function (parser, _name, limits) {
  var op = parser.stack.Prev(true);

  if (!op || NodeUtil_js_1.default.getTexClass(NodeUtil_js_1.default.getCoreMO(op)) !== MmlNode_js_1.TEXCLASS.OP && NodeUtil_js_1.default.getProperty(op, 'movesupsub') == null) {
    throw new TexError_js_1.default('MisplacedLimits', '%1 is allowed only on operators', parser.currentCS);
  }

  var top = parser.stack.Top();
  var node;

  if (NodeUtil_js_1.default.isType(op, 'munderover') && !limits) {
    node = parser.create('node', 'msubsup');
    NodeUtil_js_1.default.copyChildren(op, node);
    op = top.Last = node;
  } else if (NodeUtil_js_1.default.isType(op, 'msubsup') && limits) {
    node = parser.create('node', 'munderover');
    NodeUtil_js_1.default.copyChildren(op, node);
    op = top.Last = node;
  }

  NodeUtil_js_1.default.setProperty(op, 'movesupsub', limits ? true : false);
  NodeUtil_js_1.default.setProperties(NodeUtil_js_1.default.getCoreMO(op), {
    'movablelimits': false
  });

  if (NodeUtil_js_1.default.getAttribute(op, 'movablelimits') || NodeUtil_js_1.default.getProperty(op, 'movablelimits')) {
    NodeUtil_js_1.default.setProperties(op, {
      'movablelimits': false
    });
  }
};

BaseMethods.Over = function (parser, name, open, close) {
  var mml = parser.itemFactory.create('over').setProperty('name', parser.currentCS);

  if (open || close) {
    mml.setProperty('open', open);
    mml.setProperty('close', close);
  } else if (name.match(/withdelims$/)) {
    mml.setProperty('open', parser.GetDelimiter(name));
    mml.setProperty('close', parser.GetDelimiter(name));
  }

  if (name.match(/^\\above/)) {
    mml.setProperty('thickness', parser.GetDimen(name));
  } else if (name.match(/^\\atop/) || open || close) {
    mml.setProperty('thickness', 0);
  }

  parser.Push(mml);
};

BaseMethods.Frac = function (parser, name) {
  var num = parser.ParseArg(name);
  var den = parser.ParseArg(name);
  var node = parser.create('node', 'mfrac', [num, den]);
  parser.Push(node);
};

BaseMethods.Sqrt = function (parser, name) {
  var n = parser.GetBrackets(name);
  var arg = parser.GetArgument(name);

  if (arg === '\\frac') {
    arg += '{' + parser.GetArgument(arg) + '}{' + parser.GetArgument(arg) + '}';
  }

  var mml = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();

  if (!n) {
    mml = parser.create('node', 'msqrt', [mml]);
  } else {
    mml = parser.create('node', 'mroot', [mml, parseRoot(parser, n)]);
  }

  parser.Push(mml);
};

function parseRoot(parser, n) {
  var env = parser.stack.env;
  var inRoot = env['inRoot'];
  env['inRoot'] = true;
  var newParser = new TexParser_js_1.default(n, env, parser.configuration);
  var node = newParser.mml();
  var global = newParser.stack.global;

  if (global['leftRoot'] || global['upRoot']) {
    var def = {};

    if (global['leftRoot']) {
      def['width'] = global['leftRoot'];
    }

    if (global['upRoot']) {
      def['voffset'] = global['upRoot'];
      def['height'] = global['upRoot'];
    }

    node = parser.create('node', 'mpadded', [node], def);
  }

  env['inRoot'] = inRoot;
  return node;
}

BaseMethods.Root = function (parser, name) {
  var n = parser.GetUpTo(name, '\\of');
  var arg = parser.ParseArg(name);
  var node = parser.create('node', 'mroot', [arg, parseRoot(parser, n)]);
  parser.Push(node);
};

BaseMethods.MoveRoot = function (parser, name, id) {
  if (!parser.stack.env['inRoot']) {
    throw new TexError_js_1.default('MisplacedMoveRoot', '%1 can appear only within a root', parser.currentCS);
  }

  if (parser.stack.global[id]) {
    throw new TexError_js_1.default('MultipleMoveRoot', 'Multiple use of %1', parser.currentCS);
  }

  var n = parser.GetArgument(name);

  if (!n.match(/-?[0-9]+/)) {
    throw new TexError_js_1.default('IntegerArg', 'The argument to %1 must be an integer', parser.currentCS);
  }

  n = parseInt(n, 10) / 15 + 'em';

  if (n.substr(0, 1) !== '-') {
    n = '+' + n;
  }

  parser.stack.global[id] = n;
};

BaseMethods.Accent = function (parser, name, accent, stretchy) {
  var c = parser.ParseArg(name);

  var def = __assign(__assign({}, ParseUtil_js_1.default.getFontDef(parser)), {
    accent: true,
    mathaccent: true
  });

  var entity = NodeUtil_js_1.default.createEntity(accent);
  var moNode = parser.create('token', 'mo', def, entity);
  var mml = moNode;
  NodeUtil_js_1.default.setAttribute(mml, 'stretchy', stretchy ? true : false);
  var mo = NodeUtil_js_1.default.isEmbellished(c) ? NodeUtil_js_1.default.getCoreMO(c) : c;

  if (NodeUtil_js_1.default.isType(mo, 'mo')) {
    NodeUtil_js_1.default.setProperties(mo, {
      'movablelimits': false
    });
  }

  var muoNode = parser.create('node', 'munderover');
  NodeUtil_js_1.default.setChild(muoNode, 0, c);
  NodeUtil_js_1.default.setChild(muoNode, 1, null);
  NodeUtil_js_1.default.setChild(muoNode, 2, mml);
  var texAtom = parser.create('node', 'TeXAtom', [muoNode]);
  parser.Push(texAtom);
};

BaseMethods.UnderOver = function (parser, name, c, stack) {
  var entity = NodeUtil_js_1.default.createEntity(c);
  var mo = parser.create('token', 'mo', {
    stretchy: true,
    accent: true
  }, entity);
  var pos = name.charAt(1) === 'o' ? 'over' : 'under';
  var base = parser.ParseArg(name);
  parser.Push(ParseUtil_js_1.default.underOver(parser, base, mo, pos, stack));
};

BaseMethods.Overset = function (parser, name) {
  var top = parser.ParseArg(name);
  var base = parser.ParseArg(name);
  ParseUtil_js_1.default.checkMovableLimits(base);
  var node = parser.create('node', 'mover', [base, top]);
  parser.Push(node);
};

BaseMethods.Underset = function (parser, name) {
  var bot = parser.ParseArg(name);
  var base = parser.ParseArg(name);
  ParseUtil_js_1.default.checkMovableLimits(base);
  var node = parser.create('node', 'munder', [base, bot]);
  parser.Push(node);
};

BaseMethods.Overunderset = function (parser, name) {
  var top = parser.ParseArg(name);
  var bot = parser.ParseArg(name);
  var base = parser.ParseArg(name);
  ParseUtil_js_1.default.checkMovableLimits(base);
  var node = parser.create('node', 'munderover', [base, bot, top]);
  parser.Push(node);
};

BaseMethods.TeXAtom = function (parser, name, mclass) {
  var def = {
    texClass: mclass
  };
  var mml;
  var node;
  var parsed;

  if (mclass === MmlNode_js_1.TEXCLASS.OP) {
    def['movesupsub'] = def['movablelimits'] = true;
    var arg = parser.GetArgument(name);
    var match = arg.match(/^\s*\\rm\s+([a-zA-Z0-9 ]+)$/);

    if (match) {
      def['mathvariant'] = TexConstants_js_1.TexConstant.Variant.NORMAL;
      node = parser.create('token', 'mi', def, match[1]);
    } else {
      parsed = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
      node = parser.create('node', 'TeXAtom', [parsed], def);
    }

    mml = parser.itemFactory.create('fn', node);
  } else {
    parsed = parser.ParseArg(name);
    mml = parser.create('node', 'TeXAtom', [parsed], def);
  }

  parser.Push(mml);
};

BaseMethods.MmlToken = function (parser, name) {
  var kind = parser.GetArgument(name);
  var attr = parser.GetBrackets(name, '').replace(/^\s+/, '');
  var text = parser.GetArgument(name);
  var def = {};
  var node;

  try {
    node = parser.create('node', kind);
  } catch (e) {
    node = null;
  }

  if (!node || !node.isToken) {
    throw new TexError_js_1.default('NotMathMLToken', '%1 is not a token element', kind);
  }

  while (attr !== '') {
    var match = attr.match(/^([a-z]+)\s*=\s*('[^']*'|"[^"]*"|[^ ,]*)\s*,?\s*/i);

    if (!match) {
      throw new TexError_js_1.default('InvalidMathMLAttr', 'Invalid MathML attribute: %1', attr);
    }

    if (!node.attributes.hasDefault(match[1]) && !MmlTokenAllow[match[1]]) {
      throw new TexError_js_1.default('UnknownAttrForElement', '%1 is not a recognized attribute for %2', match[1], kind);
    }

    var value = ParseUtil_js_1.default.MmlFilterAttribute(parser, match[1], match[2].replace(/^(['"])(.*)\1$/, '$2'));

    if (value) {
      if (value.toLowerCase() === 'true') {
        value = true;
      } else if (value.toLowerCase() === 'false') {
        value = false;
      }

      def[match[1]] = value;
    }

    attr = attr.substr(match[0].length);
  }

  var textNode = parser.create('text', text);
  node.appendChild(textNode);
  NodeUtil_js_1.default.setProperties(node, def);
  parser.Push(node);
};

BaseMethods.Strut = function (parser, _name) {
  var row = parser.create('node', 'mrow');
  var padded = parser.create('node', 'mpadded', [row], {
    height: '8.6pt',
    depth: '3pt',
    width: 0
  });
  parser.Push(padded);
};

BaseMethods.Phantom = function (parser, name, v, h) {
  var box = parser.create('node', 'mphantom', [parser.ParseArg(name)]);

  if (v || h) {
    box = parser.create('node', 'mpadded', [box]);

    if (h) {
      NodeUtil_js_1.default.setAttribute(box, 'height', 0);
      NodeUtil_js_1.default.setAttribute(box, 'depth', 0);
    }

    if (v) {
      NodeUtil_js_1.default.setAttribute(box, 'width', 0);
    }
  }

  var atom = parser.create('node', 'TeXAtom', [box]);
  parser.Push(atom);
};

BaseMethods.Smash = function (parser, name) {
  var bt = ParseUtil_js_1.default.trimSpaces(parser.GetBrackets(name, ''));
  var smash = parser.create('node', 'mpadded', [parser.ParseArg(name)]);

  switch (bt) {
    case 'b':
      NodeUtil_js_1.default.setAttribute(smash, 'depth', 0);
      break;

    case 't':
      NodeUtil_js_1.default.setAttribute(smash, 'height', 0);
      break;

    default:
      NodeUtil_js_1.default.setAttribute(smash, 'height', 0);
      NodeUtil_js_1.default.setAttribute(smash, 'depth', 0);
  }

  var atom = parser.create('node', 'TeXAtom', [smash]);
  parser.Push(atom);
};

BaseMethods.Lap = function (parser, name) {
  var mml = parser.create('node', 'mpadded', [parser.ParseArg(name)], {
    width: 0
  });

  if (name === '\\llap') {
    NodeUtil_js_1.default.setAttribute(mml, 'lspace', '-1width');
  }

  var atom = parser.create('node', 'TeXAtom', [mml]);
  parser.Push(atom);
};

BaseMethods.RaiseLower = function (parser, name) {
  var h = parser.GetDimen(name);
  var item = parser.itemFactory.create('position').setProperties({
    name: parser.currentCS,
    move: 'vertical'
  });

  if (h.charAt(0) === '-') {
    h = h.slice(1);
    name = name.substr(1) === 'raise' ? '\\lower' : '\\raise';
  }

  if (name === '\\lower') {
    item.setProperty('dh', '-' + h);
    item.setProperty('dd', '+' + h);
  } else {
    item.setProperty('dh', '+' + h);
    item.setProperty('dd', '-' + h);
  }

  parser.Push(item);
};

BaseMethods.MoveLeftRight = function (parser, name) {
  var h = parser.GetDimen(name);
  var nh = h.charAt(0) === '-' ? h.slice(1) : '-' + h;

  if (name === '\\moveleft') {
    var tmp = h;
    h = nh;
    nh = tmp;
  }

  parser.Push(parser.itemFactory.create('position').setProperties({
    name: parser.currentCS,
    move: 'horizontal',
    left: parser.create('node', 'mspace', [], {
      width: h
    }),
    right: parser.create('node', 'mspace', [], {
      width: nh
    })
  }));
};

BaseMethods.Hskip = function (parser, name) {
  var node = parser.create('node', 'mspace', [], {
    width: parser.GetDimen(name)
  });
  parser.Push(node);
};

BaseMethods.Nonscript = function (parser, _name) {
  parser.Push(parser.itemFactory.create('nonscript'));
};

BaseMethods.Rule = function (parser, name, style) {
  var w = parser.GetDimen(name),
      h = parser.GetDimen(name),
      d = parser.GetDimen(name);
  var def = {
    width: w,
    height: h,
    depth: d
  };

  if (style !== 'blank') {
    def['mathbackground'] = parser.stack.env['color'] || 'black';
  }

  var node = parser.create('node', 'mspace', [], def);
  parser.Push(node);
};

BaseMethods.rule = function (parser, name) {
  var v = parser.GetBrackets(name),
      w = parser.GetDimen(name),
      h = parser.GetDimen(name);
  var mml = parser.create('node', 'mspace', [], {
    width: w,
    height: h,
    mathbackground: parser.stack.env['color'] || 'black'
  });

  if (v) {
    mml = parser.create('node', 'mpadded', [mml], {
      voffset: v
    });

    if (v.match(/^\-/)) {
      NodeUtil_js_1.default.setAttribute(mml, 'height', v);
      NodeUtil_js_1.default.setAttribute(mml, 'depth', '+' + v.substr(1));
    } else {
      NodeUtil_js_1.default.setAttribute(mml, 'height', '+' + v);
    }
  }

  parser.Push(mml);
};

BaseMethods.MakeBig = function (parser, name, mclass, size) {
  size *= P_HEIGHT;
  var sizeStr = String(size).replace(/(\.\d\d\d).+/, '$1') + 'em';
  var delim = parser.GetDelimiter(name, true);
  var mo = parser.create('token', 'mo', {
    minsize: sizeStr,
    maxsize: sizeStr,
    fence: true,
    stretchy: true,
    symmetric: true
  }, delim);
  var node = parser.create('node', 'TeXAtom', [mo], {
    texClass: mclass
  });
  parser.Push(node);
};

BaseMethods.BuildRel = function (parser, name) {
  var top = parser.ParseUpTo(name, '\\over');
  var bot = parser.ParseArg(name);
  var node = parser.create('node', 'munderover');
  NodeUtil_js_1.default.setChild(node, 0, bot);
  NodeUtil_js_1.default.setChild(node, 1, null);
  NodeUtil_js_1.default.setChild(node, 2, top);
  var atom = parser.create('node', 'TeXAtom', [node], {
    texClass: MmlNode_js_1.TEXCLASS.REL
  });
  parser.Push(atom);
};

BaseMethods.HBox = function (parser, name, style, font) {
  parser.PushAll(ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name), style, font));
};

BaseMethods.FBox = function (parser, name) {
  var internal = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));
  var node = parser.create('node', 'menclose', internal, {
    notation: 'box'
  });
  parser.Push(node);
};

BaseMethods.FrameBox = function (parser, name) {
  var width = parser.GetBrackets(name);
  var pos = parser.GetBrackets(name) || 'c';
  var mml = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));

  if (width) {
    mml = [parser.create('node', 'mpadded', mml, {
      width: width,
      'data-align': Options_js_1.lookup(pos, {
        l: 'left',
        r: 'right'
      }, 'center')
    })];
  }

  var node = parser.create('node', 'TeXAtom', [parser.create('node', 'menclose', mml, {
    notation: 'box'
  })], {
    texClass: MmlNode_js_1.TEXCLASS.ORD
  });
  parser.Push(node);
};

BaseMethods.Not = function (parser, _name) {
  parser.Push(parser.itemFactory.create('not'));
};

BaseMethods.Dots = function (parser, _name) {
  var ldotsEntity = NodeUtil_js_1.default.createEntity('2026');
  var cdotsEntity = NodeUtil_js_1.default.createEntity('22EF');
  var ldots = parser.create('token', 'mo', {
    stretchy: false
  }, ldotsEntity);
  var cdots = parser.create('token', 'mo', {
    stretchy: false
  }, cdotsEntity);
  parser.Push(parser.itemFactory.create('dots').setProperties({
    ldots: ldots,
    cdots: cdots
  }));
};

BaseMethods.Matrix = function (parser, _name, open, close, align, spacing, vspacing, style, cases, numbered) {
  var c = parser.GetNext();

  if (c === '') {
    throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
  }

  if (c === '{') {
    parser.i++;
  } else {
    parser.string = c + '}' + parser.string.slice(parser.i + 1);
    parser.i = 0;
  }

  var array = parser.itemFactory.create('array').setProperty('requireClose', true);
  array.arraydef = {
    rowspacing: vspacing || '4pt',
    columnspacing: spacing || '1em'
  };

  if (cases) {
    array.setProperty('isCases', true);
  }

  if (numbered) {
    array.setProperty('isNumbered', true);
    array.arraydef.side = numbered;
  }

  if (open || close) {
    array.setProperty('open', open);
    array.setProperty('close', close);
  }

  if (style === 'D') {
    array.arraydef.displaystyle = true;
  }

  if (align != null) {
    array.arraydef.columnalign = align;
  }

  parser.Push(array);
};

BaseMethods.Entry = function (parser, name) {
  parser.Push(parser.itemFactory.create('cell').setProperties({
    isEntry: true,
    name: name
  }));
  var top = parser.stack.Top();
  var env = top.getProperty('casesEnv');
  var cases = top.getProperty('isCases');
  if (!cases && !env) return;
  var str = parser.string;
  var braces = 0,
      close = -1,
      i = parser.i,
      m = str.length;
  var end = env ? new RegExp("^\\\\end\\s*\\{" + env.replace(/\*/, '\\*') + "\\}") : null;

  while (i < m) {
    var c = str.charAt(i);

    if (c === '{') {
      braces++;
      i++;
    } else if (c === '}') {
      if (braces === 0) {
        m = 0;
      } else {
        braces--;

        if (braces === 0 && close < 0) {
          close = i - parser.i;
        }

        i++;
      }
    } else if (c === '&' && braces === 0) {
      throw new TexError_js_1.default('ExtraAlignTab', 'Extra alignment tab in \\cases text');
    } else if (c === '\\') {
      var rest = str.substr(i);

      if (rest.match(/^((\\cr)[^a-zA-Z]|\\\\)/) || end && rest.match(end)) {
        m = 0;
      } else {
        i += 2;
      }
    } else {
      i++;
    }
  }

  var text = str.substr(parser.i, i - parser.i);

  if (!text.match(/^\s*\\text[^a-zA-Z]/) || close !== text.replace(/\s+$/, '').length - 1) {
    var internal = ParseUtil_js_1.default.internalMath(parser, ParseUtil_js_1.default.trimSpaces(text), 0);
    parser.PushAll(internal);
    parser.i = i;
  }
};

BaseMethods.Cr = function (parser, name) {
  parser.Push(parser.itemFactory.create('cell').setProperties({
    isCR: true,
    name: name
  }));
};

BaseMethods.CrLaTeX = function (parser, name, nobrackets) {
  if (nobrackets === void 0) {
    nobrackets = false;
  }

  var n;

  if (!nobrackets) {
    if (parser.string.charAt(parser.i) === '*') {
      parser.i++;
    }

    if (parser.string.charAt(parser.i) === '[') {
      var dim = parser.GetBrackets(name, '');

      var _a = __read(ParseUtil_js_1.default.matchDimen(dim), 2),
          value = _a[0],
          unit = _a[1];

      if (dim && !value) {
        throw new TexError_js_1.default('BracketMustBeDimension', 'Bracket argument to %1 must be a dimension', parser.currentCS);
      }

      n = value + unit;
    }
  }

  parser.Push(parser.itemFactory.create('cell').setProperties({
    isCR: true,
    name: name,
    linebreak: true
  }));
  var top = parser.stack.Top();
  var node;

  if (top instanceof sitem.ArrayItem) {
    if (n) {
      top.addRowSpacing(n);
    }
  } else {
    if (n) {
      node = parser.create('node', 'mspace', [], {
        depth: n
      });
      parser.Push(node);
    }

    node = parser.create('node', 'mspace', [], {
      linebreak: TexConstants_js_1.TexConstant.LineBreak.NEWLINE
    });
    parser.Push(node);
  }
};

BaseMethods.HLine = function (parser, _name, style) {
  if (style == null) {
    style = 'solid';
  }

  var top = parser.stack.Top();

  if (!(top instanceof sitem.ArrayItem) || top.Size()) {
    throw new TexError_js_1.default('Misplaced', 'Misplaced %1', parser.currentCS);
  }

  if (!top.table.length) {
    top.frame.push('top');
  } else {
    var lines = top.arraydef['rowlines'] ? top.arraydef['rowlines'].split(/ /) : [];

    while (lines.length < top.table.length) {
      lines.push('none');
    }

    lines[top.table.length - 1] = style;
    top.arraydef['rowlines'] = lines.join(' ');
  }
};

BaseMethods.HFill = function (parser, _name) {
  var top = parser.stack.Top();

  if (top instanceof sitem.ArrayItem) {
    top.hfill.push(top.Size());
  } else {
    throw new TexError_js_1.default('UnsupportedHFill', 'Unsupported use of %1', parser.currentCS);
  }
};

BaseMethods.BeginEnd = function (parser, name) {
  var env = parser.GetArgument(name);

  if (env.match(/\\/i)) {
    throw new TexError_js_1.default('InvalidEnv', 'Invalid environment name \'%1\'', env);
  }

  var macro = parser.configuration.handlers.get('environment').lookup(env);

  if (macro && name === '\\end') {
    if (!macro.args[0]) {
      var mml = parser.itemFactory.create('end').setProperty('name', env);
      parser.Push(mml);
      return;
    }

    parser.stack.env['closing'] = env;
  }

  ParseUtil_js_1.default.checkMaxMacros(parser, false);
  parser.parse('environment', [parser, env]);
};

BaseMethods.Array = function (parser, begin, open, close, align, spacing, vspacing, style, raggedHeight) {
  if (!align) {
    align = parser.GetArgument('\\begin{' + begin.getName() + '}');
  }

  var lines = ('c' + align).replace(/[^clr|:]/g, '').replace(/[^|:]([|:])+/g, '$1');
  align = align.replace(/[^clr]/g, '').split('').join(' ');
  align = align.replace(/l/g, 'left').replace(/r/g, 'right').replace(/c/g, 'center');
  var array = parser.itemFactory.create('array');
  array.arraydef = {
    columnalign: align,
    columnspacing: spacing || '1em',
    rowspacing: vspacing || '4pt'
  };

  if (lines.match(/[|:]/)) {
    if (lines.charAt(0).match(/[|:]/)) {
      array.frame.push('left');
      array.dashed = lines.charAt(0) === ':';
    }

    if (lines.charAt(lines.length - 1).match(/[|:]/)) {
      array.frame.push('right');
    }

    lines = lines.substr(1, lines.length - 2);
    array.arraydef.columnlines = lines.split('').join(' ').replace(/[^|: ]/g, 'none').replace(/\|/g, 'solid').replace(/:/g, 'dashed');
  }

  if (open) {
    array.setProperty('open', parser.convertDelimiter(open));
  }

  if (close) {
    array.setProperty('close', parser.convertDelimiter(close));
  }

  if ((style || '').charAt(1) === '\'') {
    array.arraydef['data-cramped'] = true;
    style = style.charAt(0);
  }

  if (style === 'D') {
    array.arraydef['displaystyle'] = true;
  } else if (style) {
    array.arraydef['displaystyle'] = false;
  }

  if (style === 'S') {
    array.arraydef['scriptlevel'] = 1;
  }

  if (raggedHeight) {
    array.arraydef['useHeight'] = false;
  }

  parser.Push(begin);
  return array;
};

BaseMethods.AlignedArray = function (parser, begin) {
  var align = parser.GetBrackets('\\begin{' + begin.getName() + '}');
  var item = BaseMethods.Array(parser, begin);
  return ParseUtil_js_1.default.setArrayAlign(item, align);
};

BaseMethods.Equation = function (parser, begin, numbered) {
  parser.Push(begin);
  ParseUtil_js_1.default.checkEqnEnv(parser);
  return parser.itemFactory.create('equation', numbered).setProperty('name', begin.getName());
};

BaseMethods.EqnArray = function (parser, begin, numbered, taggable, align, spacing) {
  parser.Push(begin);

  if (taggable) {
    ParseUtil_js_1.default.checkEqnEnv(parser);
  }

  align = align.replace(/[^clr]/g, '').split('').join(' ');
  align = align.replace(/l/g, 'left').replace(/r/g, 'right').replace(/c/g, 'center');
  var newItem = parser.itemFactory.create('eqnarray', begin.getName(), numbered, taggable, parser.stack.global);
  newItem.arraydef = {
    displaystyle: true,
    columnalign: align,
    columnspacing: spacing || '1em',
    rowspacing: '3pt',
    side: parser.options['tagSide'],
    minlabelspacing: parser.options['tagIndent']
  };
  return newItem;
};

BaseMethods.HandleNoTag = function (parser, _name) {
  parser.tags.notag();
};

BaseMethods.HandleLabel = function (parser, name) {
  var label = parser.GetArgument(name);

  if (label === '') {
    return;
  }

  if (!parser.tags.refUpdate) {
    if (parser.tags.label) {
      throw new TexError_js_1.default('MultipleCommand', 'Multiple %1', parser.currentCS);
    }

    parser.tags.label = label;

    if ((parser.tags.allLabels[label] || parser.tags.labels[label]) && !parser.options['ignoreDuplicateLabels']) {
      throw new TexError_js_1.default('MultipleLabel', 'Label \'%1\' multiply defined', label);
    }

    parser.tags.labels[label] = new Tags_js_1.Label();
  }
};

BaseMethods.HandleRef = function (parser, name, eqref) {
  var label = parser.GetArgument(name);
  var ref = parser.tags.allLabels[label] || parser.tags.labels[label];

  if (!ref) {
    if (!parser.tags.refUpdate) {
      parser.tags.redo = true;
    }

    ref = new Tags_js_1.Label();
  }

  var tag = ref.tag;

  if (eqref) {
    tag = parser.tags.formatTag(tag);
  }

  var node = parser.create('node', 'mrow', ParseUtil_js_1.default.internalMath(parser, tag), {
    href: parser.tags.formatUrl(ref.id, parser.options.baseURL),
    'class': 'MathJax_ref'
  });
  parser.Push(node);
};

BaseMethods.Macro = function (parser, name, macro, argcount, def) {
  if (argcount) {
    var args = [];

    if (def != null) {
      var optional = parser.GetBrackets(name);
      args.push(optional == null ? def : optional);
    }

    for (var i = args.length; i < argcount; i++) {
      args.push(parser.GetArgument(name));
    }

    macro = ParseUtil_js_1.default.substituteArgs(parser, args, macro);
  }

  parser.string = ParseUtil_js_1.default.addArgs(parser, macro, parser.string.slice(parser.i));
  parser.i = 0;
  ParseUtil_js_1.default.checkMaxMacros(parser);
};

BaseMethods.MathChoice = function (parser, name) {
  var D = parser.ParseArg(name);
  var T = parser.ParseArg(name);
  var S = parser.ParseArg(name);
  var SS = parser.ParseArg(name);
  parser.Push(parser.create('node', 'MathChoice', [D, T, S, SS]));
};

exports["default"] = BaseMethods;

/***/ }),

/***/ 7464:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BboxConfiguration = exports.BboxMethods = void 0;

var Configuration_js_1 = __webpack_require__(738);

var SymbolMap_js_1 = __webpack_require__(1682);

var TexError_js_1 = __webpack_require__(9722);

exports.BboxMethods = {};

exports.BboxMethods.BBox = function (parser, name) {
  var bbox = parser.GetBrackets(name, '');
  var math = parser.ParseArg(name);
  var parts = bbox.split(/,/);
  var def, background, style;

  for (var i = 0, m = parts.length; i < m; i++) {
    var part = parts[i].trim();
    var match = part.match(/^(\.\d+|\d+(\.\d*)?)(pt|em|ex|mu|px|in|cm|mm)$/);

    if (match) {
      if (def) {
        throw new TexError_js_1.default('MultipleBBoxProperty', '%1 specified twice in %2', 'Padding', name);
      }

      var pad = BBoxPadding(match[1] + match[3]);

      if (pad) {
        def = {
          height: '+' + pad,
          depth: '+' + pad,
          lspace: pad,
          width: '+' + 2 * parseInt(match[1], 10) + match[3]
        };
      }
    } else if (part.match(/^([a-z0-9]+|\#[0-9a-f]{6}|\#[0-9a-f]{3})$/i)) {
      if (background) {
        throw new TexError_js_1.default('MultipleBBoxProperty', '%1 specified twice in %2', 'Background', name);
      }

      background = part;
    } else if (part.match(/^[-a-z]+:/i)) {
      if (style) {
        throw new TexError_js_1.default('MultipleBBoxProperty', '%1 specified twice in %2', 'Style', name);
      }

      style = BBoxStyle(part);
    } else if (part !== '') {
      throw new TexError_js_1.default('InvalidBBoxProperty', '"%1" doesn\'t look like a color, a padding dimension, or a style', part);
    }
  }

  if (def) {
    math = parser.create('node', 'mpadded', [math], def);
  }

  if (background || style) {
    def = {};

    if (background) {
      Object.assign(def, {
        mathbackground: background
      });
    }

    if (style) {
      Object.assign(def, {
        style: style
      });
    }

    math = parser.create('node', 'mstyle', [math], def);
  }

  parser.Push(math);
};

var BBoxStyle = function BBoxStyle(styles) {
  return styles;
};

var BBoxPadding = function BBoxPadding(pad) {
  return pad;
};

new SymbolMap_js_1.CommandMap('bbox', {
  bbox: 'BBox'
}, exports.BboxMethods);
exports.BboxConfiguration = Configuration_js_1.Configuration.create('bbox', {
  handler: {
    macro: ['bbox']
  }
});

/***/ }),

/***/ 6614:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BoldsymbolConfiguration = exports.rewriteBoldTokens = exports.createBoldToken = exports.BoldsymbolMethods = void 0;

var Configuration_js_1 = __webpack_require__(738);

var NodeUtil_js_1 = __webpack_require__(8754);

var TexConstants_js_1 = __webpack_require__(7338);

var SymbolMap_js_1 = __webpack_require__(1682);

var NodeFactory_js_1 = __webpack_require__(9629);

var BOLDVARIANT = {};
BOLDVARIANT[TexConstants_js_1.TexConstant.Variant.NORMAL] = TexConstants_js_1.TexConstant.Variant.BOLD;
BOLDVARIANT[TexConstants_js_1.TexConstant.Variant.ITALIC] = TexConstants_js_1.TexConstant.Variant.BOLDITALIC;
BOLDVARIANT[TexConstants_js_1.TexConstant.Variant.FRAKTUR] = TexConstants_js_1.TexConstant.Variant.BOLDFRAKTUR;
BOLDVARIANT[TexConstants_js_1.TexConstant.Variant.SCRIPT] = TexConstants_js_1.TexConstant.Variant.BOLDSCRIPT;
BOLDVARIANT[TexConstants_js_1.TexConstant.Variant.SANSSERIF] = TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF;
BOLDVARIANT['-tex-calligraphic'] = '-tex-bold-calligraphic';
BOLDVARIANT['-tex-oldstyle'] = '-tex-bold-oldstyle';
BOLDVARIANT['-tex-mathit'] = TexConstants_js_1.TexConstant.Variant.BOLDITALIC;
exports.BoldsymbolMethods = {};

exports.BoldsymbolMethods.Boldsymbol = function (parser, name) {
  var boldsymbol = parser.stack.env['boldsymbol'];
  parser.stack.env['boldsymbol'] = true;
  var mml = parser.ParseArg(name);
  parser.stack.env['boldsymbol'] = boldsymbol;
  parser.Push(mml);
};

new SymbolMap_js_1.CommandMap('boldsymbol', {
  boldsymbol: 'Boldsymbol'
}, exports.BoldsymbolMethods);

function createBoldToken(factory, kind, def, text) {
  var token = NodeFactory_js_1.NodeFactory.createToken(factory, kind, def, text);

  if (kind !== 'mtext' && factory.configuration.parser.stack.env['boldsymbol']) {
    NodeUtil_js_1.default.setProperty(token, 'fixBold', true);
    factory.configuration.addNode('fixBold', token);
  }

  return token;
}

exports.createBoldToken = createBoldToken;

function rewriteBoldTokens(arg) {
  var e_1, _a;

  try {
    for (var _b = __values(arg.data.getList('fixBold')), _c = _b.next(); !_c.done; _c = _b.next()) {
      var node = _c.value;

      if (NodeUtil_js_1.default.getProperty(node, 'fixBold')) {
        var variant = NodeUtil_js_1.default.getAttribute(node, 'mathvariant');

        if (variant == null) {
          NodeUtil_js_1.default.setAttribute(node, 'mathvariant', TexConstants_js_1.TexConstant.Variant.BOLD);
        } else {
          NodeUtil_js_1.default.setAttribute(node, 'mathvariant', BOLDVARIANT[variant] || variant);
        }

        NodeUtil_js_1.default.removeProperties(node, 'fixBold');
      }
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_1) throw e_1.error;
    }
  }
}

exports.rewriteBoldTokens = rewriteBoldTokens;
exports.BoldsymbolConfiguration = Configuration_js_1.Configuration.create('boldsymbol', {
  handler: {
    macro: ['boldsymbol']
  },
  nodes: {
    'token': createBoldToken
  },
  postprocessors: [rewriteBoldTokens]
});

/***/ }),

/***/ 4771:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BraketConfiguration = void 0;

var Configuration_js_1 = __webpack_require__(738);

var BraketItems_js_1 = __webpack_require__(5856);

__webpack_require__(5753);

exports.BraketConfiguration = Configuration_js_1.Configuration.create('braket', {
  handler: {
    character: ['Braket-characters'],
    macro: ['Braket-macros']
  },
  items: (_a = {}, _a[BraketItems_js_1.BraketItem.prototype.kind] = BraketItems_js_1.BraketItem, _a)
});

/***/ }),

/***/ 5856:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BraketItem = void 0;

var StackItem_js_1 = __webpack_require__(2812);

var MmlNode_js_1 = __webpack_require__(4653);

var ParseUtil_js_1 = __webpack_require__(4632);

var BraketItem = function (_super) {
  __extends(BraketItem, _super);

  function BraketItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(BraketItem.prototype, "kind", {
    get: function get() {
      return 'braket';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BraketItem.prototype, "isOpen", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  BraketItem.prototype.checkItem = function (item) {
    if (item.isKind('close')) {
      return [[this.factory.create('mml', this.toMml())], true];
    }

    if (item.isKind('mml')) {
      this.Push(item.toMml());

      if (this.getProperty('single')) {
        return [[this.toMml()], true];
      }

      return StackItem_js_1.BaseItem.fail;
    }

    return _super.prototype.checkItem.call(this, item);
  };

  BraketItem.prototype.toMml = function () {
    var inner = _super.prototype.toMml.call(this);

    var open = this.getProperty('open');
    var close = this.getProperty('close');

    if (this.getProperty('stretchy')) {
      return ParseUtil_js_1.default.fenced(this.factory.configuration, open, inner, close);
    }

    var attrs = {
      fence: true,
      stretchy: false,
      symmetric: true,
      texClass: MmlNode_js_1.TEXCLASS.OPEN
    };
    var openNode = this.create('token', 'mo', attrs, open);
    attrs.texClass = MmlNode_js_1.TEXCLASS.CLOSE;
    var closeNode = this.create('token', 'mo', attrs, close);
    var mrow = this.create('node', 'mrow', [openNode, inner, closeNode], {
      open: open,
      close: close,
      texClass: MmlNode_js_1.TEXCLASS.INNER
    });
    return mrow;
  };

  return BraketItem;
}(StackItem_js_1.BaseItem);

exports.BraketItem = BraketItem;

/***/ }),

/***/ 5753:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var SymbolMap_js_1 = __webpack_require__(1682);

var BraketMethods_js_1 = __webpack_require__(969);

new SymbolMap_js_1.CommandMap('Braket-macros', {
  bra: ['Macro', '{\\langle {#1} \\vert}', 1],
  ket: ['Macro', '{\\vert {#1} \\rangle}', 1],
  braket: ['Braket', "\u27E8", "\u27E9", false, Infinity],
  'set': ['Braket', '{', '}', false, 1],
  Bra: ['Macro', '{\\left\\langle {#1} \\right\\vert}', 1],
  Ket: ['Macro', '{\\left\\vert {#1} \\right\\rangle}', 1],
  Braket: ['Braket', "\u27E8", "\u27E9", true, Infinity],
  Set: ['Braket', '{', '}', true, 1],
  ketbra: ['Macro', '{\\vert {#1} \\rangle\\langle {#2} \\vert}', 2],
  Ketbra: ['Macro', '{\\left\\vert {#1} \\right\\rangle\\left\\langle {#2} \\right\\vert}', 2],
  '|': 'Bar'
}, BraketMethods_js_1.default);
new SymbolMap_js_1.MacroMap('Braket-characters', {
  '|': 'Bar'
}, BraketMethods_js_1.default);

/***/ }),

/***/ 969:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var BaseMethods_js_1 = __webpack_require__(4807);

var MmlNode_js_1 = __webpack_require__(4653);

var TexError_js_1 = __webpack_require__(9722);

var BraketMethods = {};
BraketMethods.Macro = BaseMethods_js_1.default.Macro;

BraketMethods.Braket = function (parser, _name, open, close, stretchy, barmax) {
  var next = parser.GetNext();

  if (next === '') {
    throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
  }

  var single = true;

  if (next === '{') {
    parser.i++;
    single = false;
  }

  parser.Push(parser.itemFactory.create('braket').setProperties({
    barmax: barmax,
    barcount: 0,
    open: open,
    close: close,
    stretchy: stretchy,
    single: single
  }));
};

BraketMethods.Bar = function (parser, name) {
  var c = name === '|' ? '|' : "\u2225";
  var top = parser.stack.Top();

  if (top.kind !== 'braket' || top.getProperty('barcount') >= top.getProperty('barmax')) {
    var mml = parser.create('token', 'mo', {
      texClass: MmlNode_js_1.TEXCLASS.ORD,
      stretchy: false
    }, c);
    parser.Push(mml);
    return;
  }

  if (c === '|' && parser.GetNext() === '|') {
    parser.i++;
    c = "\u2225";
  }

  var stretchy = top.getProperty('stretchy');

  if (!stretchy) {
    var node_1 = parser.create('token', 'mo', {
      stretchy: false,
      braketbar: true
    }, c);
    parser.Push(node_1);
    return;
  }

  var node = parser.create('node', 'TeXAtom', [], {
    texClass: MmlNode_js_1.TEXCLASS.CLOSE
  });
  parser.Push(node);
  top.setProperty('barcount', top.getProperty('barcount') + 1);
  node = parser.create('token', 'mo', {
    stretchy: true,
    braketbar: true
  }, c);
  parser.Push(node);
  node = parser.create('node', 'TeXAtom', [], {
    texClass: MmlNode_js_1.TEXCLASS.OPEN
  });
  parser.Push(node);
};

exports["default"] = BraketMethods;

/***/ }),

/***/ 9219:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BussproofsConfiguration = void 0;

var Configuration_js_1 = __webpack_require__(738);

var BussproofsItems_js_1 = __webpack_require__(3157);

var BussproofsUtil_js_1 = __webpack_require__(6773);

__webpack_require__(3557);

exports.BussproofsConfiguration = Configuration_js_1.Configuration.create('bussproofs', {
  handler: {
    macro: ['Bussproofs-macros'],
    environment: ['Bussproofs-environments']
  },
  items: (_a = {}, _a[BussproofsItems_js_1.ProofTreeItem.prototype.kind] = BussproofsItems_js_1.ProofTreeItem, _a),
  preprocessors: [[BussproofsUtil_js_1.saveDocument, 1]],
  postprocessors: [[BussproofsUtil_js_1.clearDocument, 3], [BussproofsUtil_js_1.makeBsprAttributes, 2], [BussproofsUtil_js_1.balanceRules, 1]]
});

/***/ }),

/***/ 3157:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ProofTreeItem = void 0;

var TexError_js_1 = __webpack_require__(9722);

var StackItem_js_1 = __webpack_require__(2812);

var Stack_js_1 = __webpack_require__(4347);

var BussproofsUtil = __webpack_require__(6773);

var ProofTreeItem = function (_super) {
  __extends(ProofTreeItem, _super);

  function ProofTreeItem() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.leftLabel = null;
    _this.rigthLabel = null;
    _this.innerStack = new Stack_js_1.default(_this.factory, {}, true);
    return _this;
  }

  Object.defineProperty(ProofTreeItem.prototype, "kind", {
    get: function get() {
      return 'proofTree';
    },
    enumerable: false,
    configurable: true
  });

  ProofTreeItem.prototype.checkItem = function (item) {
    if (item.isKind('end') && item.getName() === 'prooftree') {
      var node = this.toMml();
      BussproofsUtil.setProperty(node, 'proof', true);
      return [[this.factory.create('mml', node), item], true];
    }

    if (item.isKind('stop')) {
      throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\end{%1}', this.getName());
    }

    this.innerStack.Push(item);
    return StackItem_js_1.BaseItem.fail;
  };

  ProofTreeItem.prototype.toMml = function () {
    var tree = _super.prototype.toMml.call(this);

    var start = this.innerStack.Top();

    if (start.isKind('start') && !start.Size()) {
      return tree;
    }

    this.innerStack.Push(this.factory.create('stop'));
    var prefix = this.innerStack.Top().toMml();
    return this.create('node', 'mrow', [prefix, tree], {});
  };

  return ProofTreeItem;
}(StackItem_js_1.BaseItem);

exports.ProofTreeItem = ProofTreeItem;

/***/ }),

/***/ 3557:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var BussproofsMethods_js_1 = __webpack_require__(6199);

var ParseMethods_js_1 = __webpack_require__(5123);

var SymbolMap_js_1 = __webpack_require__(1682);

new SymbolMap_js_1.CommandMap('Bussproofs-macros', {
  AxiomC: 'Axiom',
  UnaryInfC: ['Inference', 1],
  BinaryInfC: ['Inference', 2],
  TrinaryInfC: ['Inference', 3],
  QuaternaryInfC: ['Inference', 4],
  QuinaryInfC: ['Inference', 5],
  RightLabel: ['Label', 'right'],
  LeftLabel: ['Label', 'left'],
  AXC: 'Axiom',
  UIC: ['Inference', 1],
  BIC: ['Inference', 2],
  TIC: ['Inference', 3],
  RL: ['Label', 'right'],
  LL: ['Label', 'left'],
  noLine: ['SetLine', 'none', false],
  singleLine: ['SetLine', 'solid', false],
  solidLine: ['SetLine', 'solid', false],
  dashedLine: ['SetLine', 'dashed', false],
  alwaysNoLine: ['SetLine', 'none', true],
  alwaysSingleLine: ['SetLine', 'solid', true],
  alwaysSolidLine: ['SetLine', 'solid', true],
  alwaysDashedLine: ['SetLine', 'dashed', true],
  rootAtTop: ['RootAtTop', true],
  alwaysRootAtTop: ['RootAtTop', true],
  rootAtBottom: ['RootAtTop', false],
  alwaysRootAtBottom: ['RootAtTop', false],
  fCenter: 'FCenter',
  Axiom: 'AxiomF',
  UnaryInf: ['InferenceF', 1],
  BinaryInf: ['InferenceF', 2],
  TrinaryInf: ['InferenceF', 3],
  QuaternaryInf: ['InferenceF', 4],
  QuinaryInf: ['InferenceF', 5]
}, BussproofsMethods_js_1.default);
new SymbolMap_js_1.EnvironmentMap('Bussproofs-environments', ParseMethods_js_1.default.environment, {
  prooftree: ['Prooftree', null, false]
}, BussproofsMethods_js_1.default);

/***/ }),

/***/ 6199:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var TexError_js_1 = __webpack_require__(9722);

var TexParser_js_1 = __webpack_require__(9525);

var ParseUtil_js_1 = __webpack_require__(4632);

var BussproofsUtil = __webpack_require__(6773);

var BussproofsMethods = {};

BussproofsMethods.Prooftree = function (parser, begin) {
  parser.Push(begin);
  var newItem = parser.itemFactory.create('proofTree').setProperties({
    name: begin.getName(),
    line: 'solid',
    currentLine: 'solid',
    rootAtTop: false
  });
  return newItem;
};

BussproofsMethods.Axiom = function (parser, name) {
  var top = parser.stack.Top();

  if (top.kind !== 'proofTree') {
    throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
  }

  var content = paddedContent(parser, parser.GetArgument(name));
  BussproofsUtil.setProperty(content, 'axiom', true);
  top.Push(content);
};

var paddedContent = function paddedContent(parser, content) {
  var nodes = ParseUtil_js_1.default.internalMath(parser, ParseUtil_js_1.default.trimSpaces(content), 0);

  if (!nodes[0].childNodes[0].childNodes.length) {
    return parser.create('node', 'mrow', []);
  }

  var lpad = parser.create('node', 'mspace', [], {
    width: '.5ex'
  });
  var rpad = parser.create('node', 'mspace', [], {
    width: '.5ex'
  });
  return parser.create('node', 'mrow', __spreadArray(__spreadArray([lpad], __read(nodes)), [rpad]));
};

BussproofsMethods.Inference = function (parser, name, n) {
  var top = parser.stack.Top();

  if (top.kind !== 'proofTree') {
    throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
  }

  if (top.Size() < n) {
    throw new TexError_js_1.default('BadProofTree', 'Proof tree badly specified.');
  }

  var rootAtTop = top.getProperty('rootAtTop');
  var childCount = n === 1 && !top.Peek()[0].childNodes.length ? 0 : n;
  var children = [];

  do {
    if (children.length) {
      children.unshift(parser.create('node', 'mtd', [], {}));
    }

    children.unshift(parser.create('node', 'mtd', [top.Pop()], {
      'rowalign': rootAtTop ? 'top' : 'bottom'
    }));
    n--;
  } while (n > 0);

  var row = parser.create('node', 'mtr', children, {});
  var table = parser.create('node', 'mtable', [row], {
    framespacing: '0 0'
  });
  var conclusion = paddedContent(parser, parser.GetArgument(name));
  var style = top.getProperty('currentLine');

  if (style !== top.getProperty('line')) {
    top.setProperty('currentLine', top.getProperty('line'));
  }

  var rule = createRule(parser, table, [conclusion], top.getProperty('left'), top.getProperty('right'), style, rootAtTop);
  top.setProperty('left', null);
  top.setProperty('right', null);
  BussproofsUtil.setProperty(rule, 'inference', childCount);
  parser.configuration.addNode('inference', rule);
  top.Push(rule);
};

function createRule(parser, premise, conclusions, left, right, style, rootAtTop) {
  var upper = parser.create('node', 'mtr', [parser.create('node', 'mtd', [premise], {})], {});
  var lower = parser.create('node', 'mtr', [parser.create('node', 'mtd', conclusions, {})], {});
  var rule = parser.create('node', 'mtable', rootAtTop ? [lower, upper] : [upper, lower], {
    align: 'top 2',
    rowlines: style,
    framespacing: '0 0'
  });
  BussproofsUtil.setProperty(rule, 'inferenceRule', rootAtTop ? 'up' : 'down');
  var leftLabel, rightLabel;

  if (left) {
    leftLabel = parser.create('node', 'mpadded', [left], {
      height: '+.5em',
      width: '+.5em',
      voffset: '-.15em'
    });
    BussproofsUtil.setProperty(leftLabel, 'prooflabel', 'left');
  }

  if (right) {
    rightLabel = parser.create('node', 'mpadded', [right], {
      height: '+.5em',
      width: '+.5em',
      voffset: '-.15em'
    });
    BussproofsUtil.setProperty(rightLabel, 'prooflabel', 'right');
  }

  var children, label;

  if (left && right) {
    children = [leftLabel, rule, rightLabel];
    label = 'both';
  } else if (left) {
    children = [leftLabel, rule];
    label = 'left';
  } else if (right) {
    children = [rule, rightLabel];
    label = 'right';
  } else {
    return rule;
  }

  rule = parser.create('node', 'mrow', children);
  BussproofsUtil.setProperty(rule, 'labelledRule', label);
  return rule;
}

BussproofsMethods.Label = function (parser, name, side) {
  var top = parser.stack.Top();

  if (top.kind !== 'proofTree') {
    throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
  }

  var content = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name), 0);
  var label = content.length > 1 ? parser.create('node', 'mrow', content, {}) : content[0];
  top.setProperty(side, label);
};

BussproofsMethods.SetLine = function (parser, _name, style, always) {
  var top = parser.stack.Top();

  if (top.kind !== 'proofTree') {
    throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
  }

  top.setProperty('currentLine', style);

  if (always) {
    top.setProperty('line', style);
  }
};

BussproofsMethods.RootAtTop = function (parser, _name, where) {
  var top = parser.stack.Top();

  if (top.kind !== 'proofTree') {
    throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
  }

  top.setProperty('rootAtTop', where);
};

BussproofsMethods.AxiomF = function (parser, name) {
  var top = parser.stack.Top();

  if (top.kind !== 'proofTree') {
    throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
  }

  var line = parseFCenterLine(parser, name);
  BussproofsUtil.setProperty(line, 'axiom', true);
  top.Push(line);
};

function parseFCenterLine(parser, name) {
  var dollar = parser.GetNext();

  if (dollar !== '$') {
    throw new TexError_js_1.default('IllegalUseOfCommand', 'Use of %1 does not match it\'s definition.', name);
  }

  parser.i++;
  var axiom = parser.GetUpTo(name, '$');

  if (axiom.indexOf('\\fCenter') === -1) {
    throw new TexError_js_1.default('IllegalUseOfCommand', 'Missing \\fCenter in %1.', name);
  }

  var _a = __read(axiom.split('\\fCenter'), 2),
      prem = _a[0],
      conc = _a[1];

  var premise = new TexParser_js_1.default(prem, parser.stack.env, parser.configuration).mml();
  var conclusion = new TexParser_js_1.default(conc, parser.stack.env, parser.configuration).mml();
  var fcenter = new TexParser_js_1.default('\\fCenter', parser.stack.env, parser.configuration).mml();
  var left = parser.create('node', 'mtd', [premise], {});
  var middle = parser.create('node', 'mtd', [fcenter], {});
  var right = parser.create('node', 'mtd', [conclusion], {});
  var row = parser.create('node', 'mtr', [left, middle, right], {});
  var table = parser.create('node', 'mtable', [row], {
    columnspacing: '.5ex',
    columnalign: 'center 2'
  });
  BussproofsUtil.setProperty(table, 'sequent', true);
  parser.configuration.addNode('sequent', row);
  return table;
}

BussproofsMethods.FCenter = function (_parser, _name) {};

BussproofsMethods.InferenceF = function (parser, name, n) {
  var top = parser.stack.Top();

  if (top.kind !== 'proofTree') {
    throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
  }

  if (top.Size() < n) {
    throw new TexError_js_1.default('BadProofTree', 'Proof tree badly specified.');
  }

  var rootAtTop = top.getProperty('rootAtTop');
  var childCount = n === 1 && !top.Peek()[0].childNodes.length ? 0 : n;
  var children = [];

  do {
    if (children.length) {
      children.unshift(parser.create('node', 'mtd', [], {}));
    }

    children.unshift(parser.create('node', 'mtd', [top.Pop()], {
      'rowalign': rootAtTop ? 'top' : 'bottom'
    }));
    n--;
  } while (n > 0);

  var row = parser.create('node', 'mtr', children, {});
  var table = parser.create('node', 'mtable', [row], {
    framespacing: '0 0'
  });
  var conclusion = parseFCenterLine(parser, name);
  var style = top.getProperty('currentLine');

  if (style !== top.getProperty('line')) {
    top.setProperty('currentLine', top.getProperty('line'));
  }

  var rule = createRule(parser, table, [conclusion], top.getProperty('left'), top.getProperty('right'), style, rootAtTop);
  top.setProperty('left', null);
  top.setProperty('right', null);
  BussproofsUtil.setProperty(rule, 'inference', childCount);
  parser.configuration.addNode('inference', rule);
  top.Push(rule);
};

exports["default"] = BussproofsMethods;

/***/ }),

/***/ 6773:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.clearDocument = exports.saveDocument = exports.makeBsprAttributes = exports.removeProperty = exports.getProperty = exports.setProperty = exports.balanceRules = void 0;

var NodeUtil_js_1 = __webpack_require__(8754);

var ParseUtil_js_1 = __webpack_require__(4632);

var doc = null;
var item = null;

var getBBox = function getBBox(node) {
  item.root = node;
  var width = doc.outputJax.getBBox(item, doc).w;
  return width;
};

var getRule = function getRule(node) {
  var i = 0;

  while (node && !NodeUtil_js_1.default.isType(node, 'mtable')) {
    if (NodeUtil_js_1.default.isType(node, 'text')) {
      return null;
    }

    if (NodeUtil_js_1.default.isType(node, 'mrow')) {
      node = node.childNodes[0];
      i = 0;
      continue;
    }

    node = node.parent.childNodes[i];
    i++;
  }

  return node;
};

var getPremises = function getPremises(rule, direction) {
  return rule.childNodes[direction === 'up' ? 1 : 0].childNodes[0].childNodes[0].childNodes[0].childNodes[0];
};

var getPremise = function getPremise(premises, n) {
  return premises.childNodes[n].childNodes[0].childNodes[0];
};

var firstPremise = function firstPremise(premises) {
  return getPremise(premises, 0);
};

var lastPremise = function lastPremise(premises) {
  return getPremise(premises, premises.childNodes.length - 1);
};

var getConclusion = function getConclusion(rule, direction) {
  return rule.childNodes[direction === 'up' ? 0 : 1].childNodes[0].childNodes[0].childNodes[0];
};

var getColumn = function getColumn(inf) {
  while (inf && !NodeUtil_js_1.default.isType(inf, 'mtd')) {
    inf = inf.parent;
  }

  return inf;
};

var nextSibling = function nextSibling(inf) {
  return inf.parent.childNodes[inf.parent.childNodes.indexOf(inf) + 1];
};

var previousSibling = function previousSibling(inf) {
  return inf.parent.childNodes[inf.parent.childNodes.indexOf(inf) - 1];
};

var getParentInf = function getParentInf(inf) {
  while (inf && exports.getProperty(inf, 'inference') == null) {
    inf = inf.parent;
  }

  return inf;
};

var getSpaces = function getSpaces(inf, rule, right) {
  if (right === void 0) {
    right = false;
  }

  var result = 0;

  if (inf === rule) {
    return result;
  }

  if (inf !== rule.parent) {
    var children_1 = inf.childNodes;
    var index_1 = right ? children_1.length - 1 : 0;

    if (NodeUtil_js_1.default.isType(children_1[index_1], 'mspace')) {
      result += getBBox(children_1[index_1]);
    }

    inf = rule.parent;
  }

  if (inf === rule) {
    return result;
  }

  var children = inf.childNodes;
  var index = right ? children.length - 1 : 0;

  if (children[index] !== rule) {
    result += getBBox(children[index]);
  }

  return result;
};

var adjustValue = function adjustValue(inf, right) {
  if (right === void 0) {
    right = false;
  }

  var rule = getRule(inf);
  var conc = getConclusion(rule, exports.getProperty(rule, 'inferenceRule'));
  var w = getSpaces(inf, rule, right);
  var x = getBBox(rule);
  var y = getBBox(conc);
  return w + (x - y) / 2;
};

var addSpace = function addSpace(config, inf, space, right) {
  if (right === void 0) {
    right = false;
  }

  if (exports.getProperty(inf, 'inferenceRule') || exports.getProperty(inf, 'labelledRule')) {
    var mrow = config.nodeFactory.create('node', 'mrow');
    inf.parent.replaceChild(mrow, inf);
    mrow.setChildren([inf]);
    moveProperties(inf, mrow);
    inf = mrow;
  }

  var index = right ? inf.childNodes.length - 1 : 0;
  var mspace = inf.childNodes[index];

  if (NodeUtil_js_1.default.isType(mspace, 'mspace')) {
    NodeUtil_js_1.default.setAttribute(mspace, 'width', ParseUtil_js_1.default.Em(ParseUtil_js_1.default.dimen2em(NodeUtil_js_1.default.getAttribute(mspace, 'width')) + space));
    return;
  }

  mspace = config.nodeFactory.create('node', 'mspace', [], {
    width: ParseUtil_js_1.default.Em(space)
  });

  if (right) {
    inf.appendChild(mspace);
    return;
  }

  mspace.parent = inf;
  inf.childNodes.unshift(mspace);
};

var moveProperties = function moveProperties(src, dest) {
  var props = ['inference', 'proof', 'maxAdjust', 'labelledRule'];
  props.forEach(function (x) {
    var value = exports.getProperty(src, x);

    if (value != null) {
      exports.setProperty(dest, x, value);
      exports.removeProperty(src, x);
    }
  });
};

var adjustSequents = function adjustSequents(config) {
  var sequents = config.nodeLists['sequent'];

  if (!sequents) {
    return;
  }

  for (var i = sequents.length - 1, seq = void 0; seq = sequents[i]; i--) {
    if (exports.getProperty(seq, 'sequentProcessed')) {
      exports.removeProperty(seq, 'sequentProcessed');
      continue;
    }

    var collect = [];
    var inf = getParentInf(seq);

    if (exports.getProperty(inf, 'inference') !== 1) {
      continue;
    }

    collect.push(seq);

    while (exports.getProperty(inf, 'inference') === 1) {
      inf = getRule(inf);
      var premise = firstPremise(getPremises(inf, exports.getProperty(inf, 'inferenceRule')));
      var sequent = exports.getProperty(premise, 'inferenceRule') ? getConclusion(premise, exports.getProperty(premise, 'inferenceRule')) : premise;

      if (exports.getProperty(sequent, 'sequent')) {
        seq = sequent.childNodes[0];
        collect.push(seq);
        exports.setProperty(seq, 'sequentProcessed', true);
      }

      inf = premise;
    }

    adjustSequentPairwise(config, collect);
  }
};

var addSequentSpace = function addSequentSpace(config, sequent, position, direction, width) {
  var mspace = config.nodeFactory.create('node', 'mspace', [], {
    width: ParseUtil_js_1.default.Em(width)
  });

  if (direction === 'left') {
    var row = sequent.childNodes[position].childNodes[0];
    mspace.parent = row;
    row.childNodes.unshift(mspace);
  } else {
    sequent.childNodes[position].appendChild(mspace);
  }

  exports.setProperty(sequent.parent, 'sequentAdjust_' + direction, width);
};

var adjustSequentPairwise = function adjustSequentPairwise(config, sequents) {
  var top = sequents.pop();

  while (sequents.length) {
    var bottom = sequents.pop();

    var _a = __read(compareSequents(top, bottom), 2),
        left = _a[0],
        right = _a[1];

    if (exports.getProperty(top.parent, 'axiom')) {
      addSequentSpace(config, left < 0 ? top : bottom, 0, 'left', Math.abs(left));
      addSequentSpace(config, right < 0 ? top : bottom, 2, 'right', Math.abs(right));
    }

    top = bottom;
  }
};

var compareSequents = function compareSequents(top, bottom) {
  var tr = getBBox(top.childNodes[2]);
  var br = getBBox(bottom.childNodes[2]);
  var tl = getBBox(top.childNodes[0]);
  var bl = getBBox(bottom.childNodes[0]);
  var dl = tl - bl;
  var dr = tr - br;
  return [dl, dr];
};

var balanceRules = function balanceRules(arg) {
  var e_1, _a;

  item = new arg.document.options.MathItem('', null, arg.math.display);
  var config = arg.data;
  adjustSequents(config);
  var inferences = config.nodeLists['inference'] || [];

  try {
    for (var inferences_1 = __values(inferences), inferences_1_1 = inferences_1.next(); !inferences_1_1.done; inferences_1_1 = inferences_1.next()) {
      var inf = inferences_1_1.value;
      var isProof = exports.getProperty(inf, 'proof');
      var rule = getRule(inf);
      var premises = getPremises(rule, exports.getProperty(rule, 'inferenceRule'));
      var premiseF = firstPremise(premises);

      if (exports.getProperty(premiseF, 'inference')) {
        var adjust_1 = adjustValue(premiseF);

        if (adjust_1) {
          addSpace(config, premiseF, -adjust_1);
          var w_1 = getSpaces(inf, rule, false);
          addSpace(config, inf, adjust_1 - w_1);
        }
      }

      var premiseL = lastPremise(premises);

      if (exports.getProperty(premiseL, 'inference') == null) {
        continue;
      }

      var adjust = adjustValue(premiseL, true);
      addSpace(config, premiseL, -adjust, true);
      var w = getSpaces(inf, rule, true);
      var maxAdjust = exports.getProperty(inf, 'maxAdjust');

      if (maxAdjust != null) {
        adjust = Math.max(adjust, maxAdjust);
      }

      var column = void 0;

      if (isProof || !(column = getColumn(inf))) {
        addSpace(config, exports.getProperty(inf, 'proof') ? inf : inf.parent, adjust - w, true);
        continue;
      }

      var sibling = nextSibling(column);

      if (sibling) {
        var pos = config.nodeFactory.create('node', 'mspace', [], {
          width: adjust - w + 'em'
        });
        sibling.appendChild(pos);
        inf.removeProperty('maxAdjust');
        continue;
      }

      var parentRule = getParentInf(column);

      if (!parentRule) {
        continue;
      }

      adjust = exports.getProperty(parentRule, 'maxAdjust') ? Math.max(exports.getProperty(parentRule, 'maxAdjust'), adjust) : adjust;
      exports.setProperty(parentRule, 'maxAdjust', adjust);
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (inferences_1_1 && !inferences_1_1.done && (_a = inferences_1.return)) _a.call(inferences_1);
    } finally {
      if (e_1) throw e_1.error;
    }
  }
};

exports.balanceRules = balanceRules;
var property_prefix = 'bspr_';
var blacklistedProperties = (_a = {}, _a[property_prefix + 'maxAdjust'] = true, _a);

var setProperty = function setProperty(node, property, value) {
  NodeUtil_js_1.default.setProperty(node, property_prefix + property, value);
};

exports.setProperty = setProperty;

var getProperty = function getProperty(node, property) {
  return NodeUtil_js_1.default.getProperty(node, property_prefix + property);
};

exports.getProperty = getProperty;

var removeProperty = function removeProperty(node, property) {
  node.removeProperty(property_prefix + property);
};

exports.removeProperty = removeProperty;

var makeBsprAttributes = function makeBsprAttributes(arg) {
  arg.data.root.walkTree(function (mml, _data) {
    var attr = [];
    mml.getPropertyNames().forEach(function (x) {
      if (!blacklistedProperties[x] && x.match(RegExp('^' + property_prefix))) {
        attr.push(x + ':' + mml.getProperty(x));
      }
    });

    if (attr.length) {
      NodeUtil_js_1.default.setAttribute(mml, 'semantics', attr.join(';'));
    }
  });
};

exports.makeBsprAttributes = makeBsprAttributes;

var saveDocument = function saveDocument(arg) {
  doc = arg.document;

  if (!('getBBox' in doc.outputJax)) {
    throw Error('The bussproofs extension requires an output jax with a getBBox() method');
  }
};

exports.saveDocument = saveDocument;

var clearDocument = function clearDocument(_arg) {
  doc = null;
};

exports.clearDocument = clearDocument;

/***/ }),

/***/ 2263:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CancelConfiguration = exports.CancelMethods = void 0;

var Configuration_js_1 = __webpack_require__(738);

var TexConstants_js_1 = __webpack_require__(7338);

var SymbolMap_js_1 = __webpack_require__(1682);

var ParseUtil_js_1 = __webpack_require__(4632);

var EncloseConfiguration_js_1 = __webpack_require__(111);

exports.CancelMethods = {};

exports.CancelMethods.Cancel = function (parser, name, notation) {
  var attr = parser.GetBrackets(name, '');
  var math = parser.ParseArg(name);
  var def = ParseUtil_js_1.default.keyvalOptions(attr, EncloseConfiguration_js_1.ENCLOSE_OPTIONS);
  def['notation'] = notation;
  parser.Push(parser.create('node', 'menclose', [math], def));
};

exports.CancelMethods.CancelTo = function (parser, name) {
  var attr = parser.GetBrackets(name, '');
  var value = parser.ParseArg(name);
  var math = parser.ParseArg(name);
  var def = ParseUtil_js_1.default.keyvalOptions(attr, EncloseConfiguration_js_1.ENCLOSE_OPTIONS);
  def['notation'] = [TexConstants_js_1.TexConstant.Notation.UPDIAGONALSTRIKE, TexConstants_js_1.TexConstant.Notation.UPDIAGONALARROW, TexConstants_js_1.TexConstant.Notation.NORTHEASTARROW].join(' ');
  value = parser.create('node', 'mpadded', [value], {
    depth: '-.1em',
    height: '+.1em',
    voffset: '.1em'
  });
  parser.Push(parser.create('node', 'msup', [parser.create('node', 'menclose', [math], def), value]));
};

new SymbolMap_js_1.CommandMap('cancel', {
  cancel: ['Cancel', TexConstants_js_1.TexConstant.Notation.UPDIAGONALSTRIKE],
  bcancel: ['Cancel', TexConstants_js_1.TexConstant.Notation.DOWNDIAGONALSTRIKE],
  xcancel: ['Cancel', TexConstants_js_1.TexConstant.Notation.UPDIAGONALSTRIKE + ' ' + TexConstants_js_1.TexConstant.Notation.DOWNDIAGONALSTRIKE],
  cancelto: 'CancelTo'
}, exports.CancelMethods);
exports.CancelConfiguration = Configuration_js_1.Configuration.create('cancel', {
  handler: {
    macro: ['cancel']
  }
});

/***/ }),

/***/ 3862:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CasesConfiguration = exports.CasesMethods = exports.CasesTags = exports.CasesBeginItem = void 0;

var Configuration_js_1 = __webpack_require__(738);

var SymbolMap_js_1 = __webpack_require__(1682);

var ParseUtil_js_1 = __webpack_require__(4632);

var BaseMethods_js_1 = __webpack_require__(4807);

var TexError_js_1 = __webpack_require__(9722);

var BaseItems_js_1 = __webpack_require__(1811);

var AmsConfiguration_js_1 = __webpack_require__(9085);

var EmpheqUtil_js_1 = __webpack_require__(5267);

var CasesBeginItem = function (_super) {
  __extends(CasesBeginItem, _super);

  function CasesBeginItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(CasesBeginItem.prototype, "kind", {
    get: function get() {
      return 'cases-begin';
    },
    enumerable: false,
    configurable: true
  });

  CasesBeginItem.prototype.checkItem = function (item) {
    if (item.isKind('end') && item.getName() === this.getName()) {
      if (this.getProperty('end')) {
        this.setProperty('end', false);
        return [[], true];
      }
    }

    return _super.prototype.checkItem.call(this, item);
  };

  return CasesBeginItem;
}(BaseItems_js_1.BeginItem);

exports.CasesBeginItem = CasesBeginItem;

var CasesTags = function (_super) {
  __extends(CasesTags, _super);

  function CasesTags() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.subcounter = 0;
    return _this;
  }

  CasesTags.prototype.start = function (env, taggable, defaultTags) {
    this.subcounter = 0;

    _super.prototype.start.call(this, env, taggable, defaultTags);
  };

  CasesTags.prototype.autoTag = function () {
    if (this.currentTag.tag != null) return;

    if (this.currentTag.env === 'subnumcases') {
      if (this.subcounter === 0) this.counter++;
      this.subcounter++;
      this.tag(this.formatNumber(this.counter, this.subcounter), false);
    } else {
      if (this.subcounter === 0 || this.currentTag.env !== 'numcases-left') this.counter++;
      this.tag(this.formatNumber(this.counter), false);
    }
  };

  CasesTags.prototype.formatNumber = function (n, m) {
    if (m === void 0) {
      m = null;
    }

    return n.toString() + (m === null ? '' : String.fromCharCode(0x60 + m));
  };

  return CasesTags;
}(AmsConfiguration_js_1.AmsTags);

exports.CasesTags = CasesTags;
exports.CasesMethods = {
  NumCases: function NumCases(parser, begin) {
    if (parser.stack.env.closing === begin.getName()) {
      delete parser.stack.env.closing;
      parser.Push(parser.itemFactory.create('end').setProperty('name', begin.getName()));
      var cases = parser.stack.Top();
      var table = cases.Last;
      var original = ParseUtil_js_1.default.copyNode(table, parser);
      var left = cases.getProperty('left');
      EmpheqUtil_js_1.EmpheqUtil.left(table, original, left + '\\empheqlbrace\\,', parser, 'numcases-left');
      parser.Push(parser.itemFactory.create('end').setProperty('name', begin.getName()));
      return null;
    } else {
      var left = parser.GetArgument('\\begin{' + begin.getName() + '}');
      begin.setProperty('left', left);
      var array = BaseMethods_js_1.default.EqnArray(parser, begin, true, true, 'll');
      array.arraydef.displaystyle = false;
      array.arraydef.rowspacing = '.2em';
      array.setProperty('numCases', true);
      parser.Push(begin);
      return array;
    }
  },
  Entry: function Entry(parser, name) {
    if (!parser.stack.Top().getProperty('numCases')) {
      return BaseMethods_js_1.default.Entry(parser, name);
    }

    parser.Push(parser.itemFactory.create('cell').setProperties({
      isEntry: true,
      name: name
    }));
    var tex = parser.string;
    var braces = 0,
        i = parser.i,
        m = tex.length;

    while (i < m) {
      var c = tex.charAt(i);

      if (c === '{') {
        braces++;
        i++;
      } else if (c === '}') {
        if (braces === 0) {
          break;
        } else {
          braces--;
          i++;
        }
      } else if (c === '&' && braces === 0) {
        throw new TexError_js_1.default('ExtraCasesAlignTab', 'Extra alignment tab in text for numcase environment');
      } else if (c === '\\' && braces === 0) {
        var cs = (tex.slice(i + 1).match(/^[a-z]+|./i) || [])[0];

        if (cs === '\\' || cs === 'cr' || cs === 'end' || cs === 'label') {
          break;
        } else {
          i += cs.length;
        }
      } else {
        i++;
      }
    }

    var text = tex.substr(parser.i, i - parser.i).replace(/^\s*/, '');
    parser.PushAll(ParseUtil_js_1.default.internalMath(parser, text, 0));
    parser.i = i;
  }
};
new SymbolMap_js_1.EnvironmentMap('cases-env', EmpheqUtil_js_1.EmpheqUtil.environment, {
  numcases: ['NumCases', 'cases'],
  subnumcases: ['NumCases', 'cases']
}, exports.CasesMethods);
new SymbolMap_js_1.MacroMap('cases-macros', {
  '&': 'Entry'
}, exports.CasesMethods);
exports.CasesConfiguration = Configuration_js_1.Configuration.create('cases', {
  handler: {
    environment: ['cases-env'],
    character: ['cases-macros']
  },
  items: (_a = {}, _a[CasesBeginItem.prototype.kind] = CasesBeginItem, _a),
  tags: {
    'cases': CasesTags
  }
});

/***/ }),

/***/ 2747:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CenternotConfiguration = exports.filterCenterOver = void 0;

var Configuration_js_1 = __webpack_require__(738);

var TexParser_js_1 = __webpack_require__(9525);

var NodeUtil_js_1 = __webpack_require__(8754);

var SymbolMap_js_1 = __webpack_require__(1682);

var BaseMethods_js_1 = __webpack_require__(4807);

new SymbolMap_js_1.CommandMap('centernot', {
  centerOver: 'CenterOver',
  centernot: ['Macro', "\\centerOver{#1}{{\u29F8}}", 1]
}, {
  CenterOver: function CenterOver(parser, name) {
    var arg = '{' + parser.GetArgument(name) + '}';
    var over = parser.ParseArg(name);
    var base = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
    var mml = parser.create('node', 'TeXAtom', [new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml(), parser.create('node', 'mpadded', [parser.create('node', 'mpadded', [over], {
      width: 0,
      lspace: '-.5width'
    }), parser.create('node', 'mphantom', [base])], {
      width: 0,
      lspace: '-.5width'
    })]);
    parser.configuration.addNode('centerOver', base);
    parser.Push(mml);
  },
  Macro: BaseMethods_js_1.default.Macro
});

function filterCenterOver(_a) {
  var e_1, _b;

  var data = _a.data;

  try {
    for (var _c = __values(data.getList('centerOver')), _d = _c.next(); !_d.done; _d = _c.next()) {
      var base = _d.value;
      var texClass = NodeUtil_js_1.default.getTexClass(base.childNodes[0].childNodes[0]);

      if (texClass !== null) {
        NodeUtil_js_1.default.setProperties(base.parent.parent.parent.parent.parent.parent, {
          texClass: texClass
        });
      }
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
    } finally {
      if (e_1) throw e_1.error;
    }
  }
}

exports.filterCenterOver = filterCenterOver;
exports.CenternotConfiguration = Configuration_js_1.Configuration.create('centernot', {
  handler: {
    macro: ['centernot']
  },
  postprocessors: [filterCenterOver]
});

/***/ }),

/***/ 1741:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ColorConfiguration = void 0;

var SymbolMap_js_1 = __webpack_require__(1682);

var Configuration_js_1 = __webpack_require__(738);

var ColorMethods_js_1 = __webpack_require__(9798);

var ColorUtil_js_1 = __webpack_require__(2002);

new SymbolMap_js_1.CommandMap('color', {
  color: 'Color',
  textcolor: 'TextColor',
  definecolor: 'DefineColor',
  colorbox: 'ColorBox',
  fcolorbox: 'FColorBox'
}, ColorMethods_js_1.ColorMethods);

var config = function config(_config, jax) {
  jax.parseOptions.packageData.set('color', {
    model: new ColorUtil_js_1.ColorModel()
  });
};

exports.ColorConfiguration = Configuration_js_1.Configuration.create('color', {
  handler: {
    macro: ['color']
  },
  options: {
    color: {
      padding: '5px',
      borderWidth: '2px'
    }
  },
  config: config
});

/***/ }),

/***/ 6754:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.COLORS = void 0;
exports.COLORS = new Map([['Apricot', '#FBB982'], ['Aquamarine', '#00B5BE'], ['Bittersweet', '#C04F17'], ['Black', '#221E1F'], ['Blue', '#2D2F92'], ['BlueGreen', '#00B3B8'], ['BlueViolet', '#473992'], ['BrickRed', '#B6321C'], ['Brown', '#792500'], ['BurntOrange', '#F7921D'], ['CadetBlue', '#74729A'], ['CarnationPink', '#F282B4'], ['Cerulean', '#00A2E3'], ['CornflowerBlue', '#41B0E4'], ['Cyan', '#00AEEF'], ['Dandelion', '#FDBC42'], ['DarkOrchid', '#A4538A'], ['Emerald', '#00A99D'], ['ForestGreen', '#009B55'], ['Fuchsia', '#8C368C'], ['Goldenrod', '#FFDF42'], ['Gray', '#949698'], ['Green', '#00A64F'], ['GreenYellow', '#DFE674'], ['JungleGreen', '#00A99A'], ['Lavender', '#F49EC4'], ['LimeGreen', '#8DC73E'], ['Magenta', '#EC008C'], ['Mahogany', '#A9341F'], ['Maroon', '#AF3235'], ['Melon', '#F89E7B'], ['MidnightBlue', '#006795'], ['Mulberry', '#A93C93'], ['NavyBlue', '#006EB8'], ['OliveGreen', '#3C8031'], ['Orange', '#F58137'], ['OrangeRed', '#ED135A'], ['Orchid', '#AF72B0'], ['Peach', '#F7965A'], ['Periwinkle', '#7977B8'], ['PineGreen', '#008B72'], ['Plum', '#92268F'], ['ProcessBlue', '#00B0F0'], ['Purple', '#99479B'], ['RawSienna', '#974006'], ['Red', '#ED1B23'], ['RedOrange', '#F26035'], ['RedViolet', '#A1246B'], ['Rhodamine', '#EF559F'], ['RoyalBlue', '#0071BC'], ['RoyalPurple', '#613F99'], ['RubineRed', '#ED017D'], ['Salmon', '#F69289'], ['SeaGreen', '#3FBC9D'], ['Sepia', '#671800'], ['SkyBlue', '#46C5DD'], ['SpringGreen', '#C6DC67'], ['Tan', '#DA9D76'], ['TealBlue', '#00AEB3'], ['Thistle', '#D883B7'], ['Turquoise', '#00B4CE'], ['Violet', '#58429B'], ['VioletRed', '#EF58A0'], ['White', '#FFFFFF'], ['WildStrawberry', '#EE2967'], ['Yellow', '#FFF200'], ['YellowGreen', '#98CC70'], ['YellowOrange', '#FAA21A']]);

/***/ }),

/***/ 9798:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ColorMethods = void 0;

var NodeUtil_js_1 = __webpack_require__(8754);

var ParseUtil_js_1 = __webpack_require__(4632);

function padding(colorPadding) {
  var pad = "+" + colorPadding;
  var unit = colorPadding.replace(/^.*?([a-z]*)$/, '$1');
  var pad2 = 2 * parseFloat(pad);
  return {
    width: "+" + pad2 + unit,
    height: pad,
    depth: pad,
    lspace: colorPadding
  };
}

exports.ColorMethods = {};

exports.ColorMethods.Color = function (parser, name) {
  var model = parser.GetBrackets(name, '');
  var colorDef = parser.GetArgument(name);
  var colorModel = parser.configuration.packageData.get('color').model;
  var color = colorModel.getColor(model, colorDef);
  var style = parser.itemFactory.create('style').setProperties({
    styles: {
      mathcolor: color
    }
  });
  parser.stack.env['color'] = color;
  parser.Push(style);
};

exports.ColorMethods.TextColor = function (parser, name) {
  var model = parser.GetBrackets(name, '');
  var colorDef = parser.GetArgument(name);
  var colorModel = parser.configuration.packageData.get('color').model;
  var color = colorModel.getColor(model, colorDef);
  var old = parser.stack.env['color'];
  parser.stack.env['color'] = color;
  var math = parser.ParseArg(name);

  if (old) {
    parser.stack.env['color'] = old;
  } else {
    delete parser.stack.env['color'];
  }

  var node = parser.create('node', 'mstyle', [math], {
    mathcolor: color
  });
  parser.Push(node);
};

exports.ColorMethods.DefineColor = function (parser, name) {
  var cname = parser.GetArgument(name);
  var model = parser.GetArgument(name);
  var def = parser.GetArgument(name);
  var colorModel = parser.configuration.packageData.get('color').model;
  colorModel.defineColor(model, cname, def);
};

exports.ColorMethods.ColorBox = function (parser, name) {
  var cname = parser.GetArgument(name);
  var math = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));
  var colorModel = parser.configuration.packageData.get('color').model;
  var node = parser.create('node', 'mpadded', math, {
    mathbackground: colorModel.getColor('named', cname)
  });
  NodeUtil_js_1.default.setProperties(node, padding(parser.options.color.padding));
  parser.Push(node);
};

exports.ColorMethods.FColorBox = function (parser, name) {
  var fname = parser.GetArgument(name);
  var cname = parser.GetArgument(name);
  var math = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));
  var options = parser.options.color;
  var colorModel = parser.configuration.packageData.get('color').model;
  var node = parser.create('node', 'mpadded', math, {
    mathbackground: colorModel.getColor('named', cname),
    style: "border: " + options.borderWidth + " solid " + colorModel.getColor('named', fname)
  });
  NodeUtil_js_1.default.setProperties(node, padding(options.padding));
  parser.Push(node);
};

/***/ }),

/***/ 2002:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ColorModel = void 0;

var TexError_js_1 = __webpack_require__(9722);

var ColorConstants_js_1 = __webpack_require__(6754);

var ColorModelProcessors = new Map();

var ColorModel = function () {
  function ColorModel() {
    this.userColors = new Map();
  }

  ColorModel.prototype.normalizeColor = function (model, def) {
    if (!model || model === 'named') {
      return def;
    }

    if (ColorModelProcessors.has(model)) {
      var modelProcessor = ColorModelProcessors.get(model);
      return modelProcessor(def);
    }

    throw new TexError_js_1.default('UndefinedColorModel', 'Color model \'%1\' not defined', model);
  };

  ColorModel.prototype.getColor = function (model, def) {
    if (!model || model === 'named') {
      return this.getColorByName(def);
    }

    return this.normalizeColor(model, def);
  };

  ColorModel.prototype.getColorByName = function (name) {
    if (this.userColors.has(name)) {
      return this.userColors.get(name);
    }

    if (ColorConstants_js_1.COLORS.has(name)) {
      return ColorConstants_js_1.COLORS.get(name);
    }

    return name;
  };

  ColorModel.prototype.defineColor = function (model, name, def) {
    var normalized = this.normalizeColor(model, def);
    this.userColors.set(name, normalized);
  };

  return ColorModel;
}();

exports.ColorModel = ColorModel;
ColorModelProcessors.set('rgb', function (rgb) {
  var e_1, _a;

  var rgbParts = rgb.trim().split(/\s*,\s*/);
  var RGB = '#';

  if (rgbParts.length !== 3) {
    throw new TexError_js_1.default('ModelArg1', 'Color values for the %1 model require 3 numbers', 'rgb');
  }

  try {
    for (var rgbParts_1 = __values(rgbParts), rgbParts_1_1 = rgbParts_1.next(); !rgbParts_1_1.done; rgbParts_1_1 = rgbParts_1.next()) {
      var rgbPart = rgbParts_1_1.value;

      if (!rgbPart.match(/^(\d+(\.\d*)?|\.\d+)$/)) {
        throw new TexError_js_1.default('InvalidDecimalNumber', 'Invalid decimal number');
      }

      var n = parseFloat(rgbPart);

      if (n < 0 || n > 1) {
        throw new TexError_js_1.default('ModelArg2', 'Color values for the %1 model must be between %2 and %3', 'rgb', '0', '1');
      }

      var pn = Math.floor(n * 255).toString(16);

      if (pn.length < 2) {
        pn = '0' + pn;
      }

      RGB += pn;
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (rgbParts_1_1 && !rgbParts_1_1.done && (_a = rgbParts_1.return)) _a.call(rgbParts_1);
    } finally {
      if (e_1) throw e_1.error;
    }
  }

  return RGB;
});
ColorModelProcessors.set('RGB', function (rgb) {
  var e_2, _a;

  var rgbParts = rgb.trim().split(/\s*,\s*/);
  var RGB = '#';

  if (rgbParts.length !== 3) {
    throw new TexError_js_1.default('ModelArg1', 'Color values for the %1 model require 3 numbers', 'RGB');
  }

  try {
    for (var rgbParts_2 = __values(rgbParts), rgbParts_2_1 = rgbParts_2.next(); !rgbParts_2_1.done; rgbParts_2_1 = rgbParts_2.next()) {
      var rgbPart = rgbParts_2_1.value;

      if (!rgbPart.match(/^\d+$/)) {
        throw new TexError_js_1.default('InvalidNumber', 'Invalid number');
      }

      var n = parseInt(rgbPart);

      if (n > 255) {
        throw new TexError_js_1.default('ModelArg2', 'Color values for the %1 model must be between %2 and %3', 'RGB', '0', '255');
      }

      var pn = n.toString(16);

      if (pn.length < 2) {
        pn = '0' + pn;
      }

      RGB += pn;
    }
  } catch (e_2_1) {
    e_2 = {
      error: e_2_1
    };
  } finally {
    try {
      if (rgbParts_2_1 && !rgbParts_2_1.done && (_a = rgbParts_2.return)) _a.call(rgbParts_2);
    } finally {
      if (e_2) throw e_2.error;
    }
  }

  return RGB;
});
ColorModelProcessors.set('gray', function (gray) {
  if (!gray.match(/^\s*(\d+(\.\d*)?|\.\d+)\s*$/)) {
    throw new TexError_js_1.default('InvalidDecimalNumber', 'Invalid decimal number');
  }

  var n = parseFloat(gray);

  if (n < 0 || n > 1) {
    throw new TexError_js_1.default('ModelArg2', 'Color values for the %1 model must be between %2 and %3', 'gray', '0', '1');
  }

  var pn = Math.floor(n * 255).toString(16);

  if (pn.length < 2) {
    pn = '0' + pn;
  }

  return "#" + pn + pn + pn;
});

/***/ }),

/***/ 2250:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ColortblConfiguration = exports.ColorArrayItem = void 0;

var BaseItems_js_1 = __webpack_require__(1811);

var Configuration_js_1 = __webpack_require__(738);

var SymbolMap_js_1 = __webpack_require__(1682);

var TexError_js_1 = __webpack_require__(9722);

var ColorArrayItem = function (_super) {
  __extends(ColorArrayItem, _super);

  function ColorArrayItem() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.color = {
      cell: '',
      row: '',
      col: []
    };
    _this.hasColor = false;
    return _this;
  }

  ColorArrayItem.prototype.EndEntry = function () {
    _super.prototype.EndEntry.call(this);

    var cell = this.row[this.row.length - 1];
    var color = this.color.cell || this.color.row || this.color.col[this.row.length - 1];

    if (color) {
      cell.attributes.set('mathbackground', color);
      this.color.cell = '';
      this.hasColor = true;
    }
  };

  ColorArrayItem.prototype.EndRow = function () {
    _super.prototype.EndRow.call(this);

    this.color.row = '';
  };

  ColorArrayItem.prototype.createMml = function () {
    var mml = _super.prototype.createMml.call(this);

    var table = mml.isKind('mrow') ? mml.childNodes[1] : mml;

    if (table.isKind('menclose')) {
      table = table.childNodes[0].childNodes[0];
    }

    if (this.hasColor && table.attributes.get('frame') === 'none') {
      table.attributes.set('frame', '');
    }

    return mml;
  };

  return ColorArrayItem;
}(BaseItems_js_1.ArrayItem);

exports.ColorArrayItem = ColorArrayItem;
new SymbolMap_js_1.CommandMap('colortbl', {
  cellcolor: ['TableColor', 'cell'],
  rowcolor: ['TableColor', 'row'],
  columncolor: ['TableColor', 'col']
}, {
  TableColor: function TableColor(parser, name, type) {
    var lookup = parser.configuration.packageData.get('color').model;
    var model = parser.GetBrackets(name, '');
    var color = lookup.getColor(model, parser.GetArgument(name));
    var top = parser.stack.Top();

    if (!(top instanceof ColorArrayItem)) {
      throw new TexError_js_1.default('UnsupportedTableColor', 'Unsupported use of %1', parser.currentCS);
    }

    if (type === 'col') {
      if (top.table.length) {
        throw new TexError_js_1.default('ColumnColorNotTop', '%1 must be in the top row', name);
      }

      top.color.col[top.row.length] = color;

      if (parser.GetBrackets(name, '')) {
        parser.GetBrackets(name, '');
      }
    } else {
      top.color[type] = color;

      if (type === 'row' && (top.Size() || top.row.length)) {
        throw new TexError_js_1.default('RowColorNotFirst', '%1 must be at the beginning of a row', name);
      }
    }
  }
});

var config = function config(_config, jax) {
  if (!jax.parseOptions.packageData.has('color')) {
    Configuration_js_1.ConfigurationHandler.get('color').config(_config, jax);
  }
};

exports.ColortblConfiguration = Configuration_js_1.Configuration.create('colortbl', {
  handler: {
    macro: ['colortbl']
  },
  items: {
    'array': ColorArrayItem
  },
  priority: 10,
  config: [config, 10]
});

/***/ }),

/***/ 7115:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ColorConfiguration = exports.ColorV2Methods = void 0;

var SymbolMap_js_1 = __webpack_require__(1682);

var Configuration_js_1 = __webpack_require__(738);

exports.ColorV2Methods = {
  Color: function Color(parser, name) {
    var color = parser.GetArgument(name);
    var old = parser.stack.env['color'];
    parser.stack.env['color'] = color;
    var math = parser.ParseArg(name);

    if (old) {
      parser.stack.env['color'] = old;
    } else {
      delete parser.stack.env['color'];
    }

    var node = parser.create('node', 'mstyle', [math], {
      mathcolor: color
    });
    parser.Push(node);
  }
};
new SymbolMap_js_1.CommandMap('colorv2', {
  color: 'Color'
}, exports.ColorV2Methods);
exports.ColorConfiguration = Configuration_js_1.Configuration.create('colorv2', {
  handler: {
    macro: ['colorv2']
  }
});

/***/ }),

/***/ 1624:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ConfigMacrosConfiguration = void 0;

var Configuration_js_1 = __webpack_require__(738);

var Options_js_1 = __webpack_require__(5698);

var SymbolMap_js_1 = __webpack_require__(1682);

var ParseMethods_js_1 = __webpack_require__(5123);

var Symbol_js_1 = __webpack_require__(9093);

var NewcommandMethods_js_1 = __webpack_require__(3517);

var NewcommandItems_js_1 = __webpack_require__(4700);

var MACROSMAP = 'configmacros-map';
var ENVIRONMENTMAP = 'configmacros-env-map';

function configmacrosInit(config) {
  new SymbolMap_js_1.CommandMap(MACROSMAP, {}, {});
  new SymbolMap_js_1.EnvironmentMap(ENVIRONMENTMAP, ParseMethods_js_1.default.environment, {}, {});
  config.append(Configuration_js_1.Configuration.local({
    handler: {
      macro: [MACROSMAP],
      environment: [ENVIRONMENTMAP]
    },
    priority: 3
  }));
}

function configmacrosConfig(_config, jax) {
  configMacros(jax);
  configEnvironments(jax);
}

function configMacros(jax) {
  var e_1, _a;

  var handler = jax.parseOptions.handlers.retrieve(MACROSMAP);
  var macros = jax.parseOptions.options.macros;

  try {
    for (var _b = __values(Object.keys(macros)), _c = _b.next(); !_c.done; _c = _b.next()) {
      var cs = _c.value;
      var def = typeof macros[cs] === 'string' ? [macros[cs]] : macros[cs];
      var macro = Array.isArray(def[2]) ? new Symbol_js_1.Macro(cs, NewcommandMethods_js_1.default.MacroWithTemplate, def.slice(0, 2).concat(def[2])) : new Symbol_js_1.Macro(cs, NewcommandMethods_js_1.default.Macro, def);
      handler.add(cs, macro);
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_1) throw e_1.error;
    }
  }
}

function configEnvironments(jax) {
  var e_2, _a;

  var handler = jax.parseOptions.handlers.retrieve(ENVIRONMENTMAP);
  var environments = jax.parseOptions.options.environments;

  try {
    for (var _b = __values(Object.keys(environments)), _c = _b.next(); !_c.done; _c = _b.next()) {
      var env = _c.value;
      handler.add(env, new Symbol_js_1.Macro(env, NewcommandMethods_js_1.default.BeginEnv, [true].concat(environments[env])));
    }
  } catch (e_2_1) {
    e_2 = {
      error: e_2_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_2) throw e_2.error;
    }
  }
}

exports.ConfigMacrosConfiguration = Configuration_js_1.Configuration.create('configmacros', {
  init: configmacrosInit,
  config: configmacrosConfig,
  items: (_a = {}, _a[NewcommandItems_js_1.BeginEnvItem.prototype.kind] = NewcommandItems_js_1.BeginEnvItem, _a),
  options: {
    macros: Options_js_1.expandable({}),
    environments: Options_js_1.expandable({})
  }
});

/***/ }),

/***/ 400:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.EmpheqConfiguration = exports.EmpheqMethods = exports.EmpheqBeginItem = void 0;

var Configuration_js_1 = __webpack_require__(738);

var SymbolMap_js_1 = __webpack_require__(1682);

var ParseUtil_js_1 = __webpack_require__(4632);

var TexError_js_1 = __webpack_require__(9722);

var BaseItems_js_1 = __webpack_require__(1811);

var EmpheqUtil_js_1 = __webpack_require__(5267);

var EmpheqBeginItem = function (_super) {
  __extends(EmpheqBeginItem, _super);

  function EmpheqBeginItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(EmpheqBeginItem.prototype, "kind", {
    get: function get() {
      return 'empheq-begin';
    },
    enumerable: false,
    configurable: true
  });

  EmpheqBeginItem.prototype.checkItem = function (item) {
    if (item.isKind('end') && item.getName() === this.getName()) {
      this.setProperty('end', false);
    }

    return _super.prototype.checkItem.call(this, item);
  };

  return EmpheqBeginItem;
}(BaseItems_js_1.BeginItem);

exports.EmpheqBeginItem = EmpheqBeginItem;
exports.EmpheqMethods = {
  Empheq: function Empheq(parser, begin) {
    if (parser.stack.env.closing === begin.getName()) {
      delete parser.stack.env.closing;
      parser.Push(parser.itemFactory.create('end').setProperty('name', parser.stack.global.empheq));
      parser.stack.global.empheq = '';
      var empheq = parser.stack.Top();
      EmpheqUtil_js_1.EmpheqUtil.adjustTable(empheq, parser);
      parser.Push(parser.itemFactory.create('end').setProperty('name', 'empheq'));
    } else {
      ParseUtil_js_1.default.checkEqnEnv(parser);
      delete parser.stack.global.eqnenv;
      var opts = parser.GetBrackets('\\begin{' + begin.getName() + '}') || '';

      var _a = __read((parser.GetArgument('\\begin{' + begin.getName() + '}') || '').split(/=/), 2),
          env = _a[0],
          n = _a[1];

      if (!EmpheqUtil_js_1.EmpheqUtil.checkEnv(env)) {
        throw new TexError_js_1.default('UnknownEnv', 'Unknown environment "%1"', env);
      }

      if (opts) {
        begin.setProperties(EmpheqUtil_js_1.EmpheqUtil.splitOptions(opts, {
          left: 1,
          right: 1
        }));
      }

      parser.stack.global.empheq = env;
      parser.string = '\\begin{' + env + '}' + (n ? '{' + n + '}' : '') + parser.string.slice(parser.i);
      parser.i = 0;
      parser.Push(begin);
    }
  },
  EmpheqMO: function EmpheqMO(parser, _name, c) {
    parser.Push(parser.create('token', 'mo', {}, c));
  },
  EmpheqDelim: function EmpheqDelim(parser, name) {
    var c = parser.GetDelimiter(name);
    parser.Push(parser.create('token', 'mo', {
      stretchy: true,
      symmetric: true
    }, c));
  }
};
new SymbolMap_js_1.EnvironmentMap('empheq-env', EmpheqUtil_js_1.EmpheqUtil.environment, {
  empheq: ['Empheq', 'empheq']
}, exports.EmpheqMethods);
new SymbolMap_js_1.CommandMap('empheq-macros', {
  empheqlbrace: ['EmpheqMO', '{'],
  empheqrbrace: ['EmpheqMO', '}'],
  empheqlbrack: ['EmpheqMO', '['],
  empheqrbrack: ['EmpheqMO', ']'],
  empheqlangle: ['EmpheqMO', "\u27E8"],
  empheqrangle: ['EmpheqMO', "\u27E9"],
  empheqlparen: ['EmpheqMO', '('],
  empheqrparen: ['EmpheqMO', ')'],
  empheqlvert: ['EmpheqMO', '|'],
  empheqrvert: ['EmpheqMO', '|'],
  empheqlVert: ['EmpheqMO', "\u2016"],
  empheqrVert: ['EmpheqMO', "\u2016"],
  empheqlfloor: ['EmpheqMO', "\u230A"],
  empheqrfloor: ['EmpheqMO', "\u230B"],
  empheqlceil: ['EmpheqMO', "\u2308"],
  empheqrceil: ['EmpheqMO', "\u2309"],
  empheqbiglbrace: ['EmpheqMO', '{'],
  empheqbigrbrace: ['EmpheqMO', '}'],
  empheqbiglbrack: ['EmpheqMO', '['],
  empheqbigrbrack: ['EmpheqMO', ']'],
  empheqbiglangle: ['EmpheqMO', "\u27E8"],
  empheqbigrangle: ['EmpheqMO', "\u27E9"],
  empheqbiglparen: ['EmpheqMO', '('],
  empheqbigrparen: ['EmpheqMO', ')'],
  empheqbiglvert: ['EmpheqMO', '|'],
  empheqbigrvert: ['EmpheqMO', '|'],
  empheqbiglVert: ['EmpheqMO', "\u2016"],
  empheqbigrVert: ['EmpheqMO', "\u2016"],
  empheqbiglfloor: ['EmpheqMO', "\u230A"],
  empheqbigrfloor: ['EmpheqMO', "\u230B"],
  empheqbiglceil: ['EmpheqMO', "\u2308"],
  empheqbigrceil: ['EmpheqMO', "\u2309"],
  empheql: 'EmpheqDelim',
  empheqr: 'EmpheqDelim',
  empheqbigl: 'EmpheqDelim',
  empheqbigr: 'EmpheqDelim'
}, exports.EmpheqMethods);
exports.EmpheqConfiguration = Configuration_js_1.Configuration.create('empheq', {
  handler: {
    macro: ['empheq-macros'],
    environment: ['empheq-env']
  },
  items: (_a = {}, _a[EmpheqBeginItem.prototype.kind] = EmpheqBeginItem, _a)
});

/***/ }),

/***/ 5267:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.EmpheqUtil = void 0;

var ParseUtil_js_1 = __webpack_require__(4632);

var TexParser_js_1 = __webpack_require__(9525);

exports.EmpheqUtil = {
  environment: function environment(parser, env, func, args) {
    var name = args[0];
    var item = parser.itemFactory.create(name + '-begin').setProperties({
      name: env,
      end: name
    });
    parser.Push(func.apply(void 0, __spreadArray([parser, item], __read(args.slice(1)))));
  },
  splitOptions: function splitOptions(text, allowed) {
    if (allowed === void 0) {
      allowed = null;
    }

    return ParseUtil_js_1.default.keyvalOptions(text, allowed, true);
  },
  columnCount: function columnCount(table) {
    var e_1, _a;

    var m = 0;

    try {
      for (var _b = __values(table.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var row = _c.value;
        var n = row.childNodes.length - (row.isKind('mlabeledtr') ? 1 : 0);
        if (n > m) m = n;
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return m;
  },
  cellBlock: function cellBlock(tex, table, parser, env) {
    var e_2, _a;

    var mpadded = parser.create('node', 'mpadded', [], {
      height: 0,
      depth: 0,
      voffset: '-1height'
    });
    var result = new TexParser_js_1.default(tex, parser.stack.env, parser.configuration);
    var mml = result.mml();

    if (env && result.configuration.tags.label) {
      result.configuration.tags.currentTag.env = env;
      result.configuration.tags.getTag(true);
    }

    try {
      for (var _b = __values(mml.isInferred ? mml.childNodes : [mml]), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;
        mpadded.appendChild(child);
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }

    mpadded.appendChild(parser.create('node', 'mphantom', [parser.create('node', 'mpadded', [table], {
      width: 0
    })]));
    return mpadded;
  },
  topRowTable: function topRowTable(original, parser) {
    var table = ParseUtil_js_1.default.copyNode(original, parser);
    table.setChildren(table.childNodes.slice(0, 1));
    table.attributes.set('align', 'baseline 1');
    return original.factory.create('mphantom', {}, [parser.create('node', 'mpadded', [table], {
      width: 0
    })]);
  },
  rowspanCell: function rowspanCell(mtd, tex, table, parser, env) {
    mtd.appendChild(parser.create('node', 'mpadded', [this.cellBlock(tex, ParseUtil_js_1.default.copyNode(table, parser), parser, env), this.topRowTable(table, parser)], {
      height: 0,
      depth: 0,
      voffset: 'height'
    }));
  },
  left: function left(table, original, _left, parser, env) {
    var e_3, _a;

    if (env === void 0) {
      env = '';
    }

    table.attributes.set('columnalign', 'right ' + (table.attributes.get('columnalign') || ''));
    table.attributes.set('columnspacing', '0em ' + (table.attributes.get('columnspacing') || ''));
    var mtd;

    try {
      for (var _b = __values(table.childNodes.slice(0).reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {
        var row = _c.value;
        mtd = parser.create('node', 'mtd');
        row.childNodes.unshift(mtd);
        row.replaceChild(mtd, mtd);

        if (row.isKind('mlabeledtr')) {
          row.childNodes[0] = row.childNodes[1];
          row.childNodes[1] = mtd;
        }
      }
    } catch (e_3_1) {
      e_3 = {
        error: e_3_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_3) throw e_3.error;
      }
    }

    this.rowspanCell(mtd, _left, original, parser, env);
  },
  right: function right(table, original, _right, parser, env) {
    if (env === void 0) {
      env = '';
    }

    if (table.childNodes.length === 0) {
      table.appendChild(parser.create('node', 'mtr'));
    }

    var m = exports.EmpheqUtil.columnCount(table);
    var row = table.childNodes[0];

    while (row.childNodes.length < m) {
      row.appendChild(parser.create('node', 'mtd'));
    }

    var mtd = row.appendChild(parser.create('node', 'mtd'));
    exports.EmpheqUtil.rowspanCell(mtd, _right, original, parser, env);
    table.attributes.set('columnalign', (table.attributes.get('columnalign') || '').split(/ /).slice(0, m).join(' ') + ' left');
    table.attributes.set('columnspacing', (table.attributes.get('columnspacing') || '').split(/ /).slice(0, m - 1).join(' ') + ' 0em');
  },
  adjustTable: function adjustTable(empheq, parser) {
    var left = empheq.getProperty('left');
    var right = empheq.getProperty('right');

    if (left || right) {
      var table = empheq.Last;
      var original = ParseUtil_js_1.default.copyNode(table, parser);
      if (left) this.left(table, original, left, parser);
      if (right) this.right(table, original, right, parser);
    }
  },
  allowEnv: {
    equation: true,
    align: true,
    gather: true,
    flalign: true,
    alignat: true,
    multline: true
  },
  checkEnv: function checkEnv(env) {
    return this.allowEnv.hasOwnProperty(env.replace(/\*$/, '')) || false;
  }
};

/***/ }),

/***/ 111:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.EncloseConfiguration = exports.EncloseMethods = exports.ENCLOSE_OPTIONS = void 0;

var Configuration_js_1 = __webpack_require__(738);

var SymbolMap_js_1 = __webpack_require__(1682);

var ParseUtil_js_1 = __webpack_require__(4632);

exports.ENCLOSE_OPTIONS = {
  'data-arrowhead': 1,
  color: 1,
  mathcolor: 1,
  background: 1,
  mathbackground: 1,
  'data-padding': 1,
  'data-thickness': 1
};
exports.EncloseMethods = {};

exports.EncloseMethods.Enclose = function (parser, name) {
  var notation = parser.GetArgument(name).replace(/,/g, ' ');
  var attr = parser.GetBrackets(name, '');
  var math = parser.ParseArg(name);
  var def = ParseUtil_js_1.default.keyvalOptions(attr, exports.ENCLOSE_OPTIONS);
  def.notation = notation;
  parser.Push(parser.create('node', 'menclose', [math], def));
};

new SymbolMap_js_1.CommandMap('enclose', {
  enclose: 'Enclose'
}, exports.EncloseMethods);
exports.EncloseConfiguration = Configuration_js_1.Configuration.create('enclose', {
  handler: {
    macro: ['enclose']
  }
});

/***/ }),

/***/ 7236:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ExtpfeilConfiguration = exports.ExtpfeilMethods = void 0;

var Configuration_js_1 = __webpack_require__(738);

var SymbolMap_js_1 = __webpack_require__(1682);

var AmsMethods_js_1 = __webpack_require__(9899);

var NewcommandUtil_js_1 = __webpack_require__(8825);

var NewcommandConfiguration_js_1 = __webpack_require__(568);

var TexError_js_1 = __webpack_require__(9722);

exports.ExtpfeilMethods = {};
exports.ExtpfeilMethods.xArrow = AmsMethods_js_1.AmsMethods.xArrow;

exports.ExtpfeilMethods.NewExtArrow = function (parser, name) {
  var cs = parser.GetArgument(name);
  var space = parser.GetArgument(name);
  var chr = parser.GetArgument(name);

  if (!cs.match(/^\\([a-z]+|.)$/i)) {
    throw new TexError_js_1.default('NewextarrowArg1', 'First argument to %1 must be a control sequence name', name);
  }

  if (!space.match(/^(\d+),(\d+)$/)) {
    throw new TexError_js_1.default('NewextarrowArg2', 'Second argument to %1 must be two integers separated by a comma', name);
  }

  if (!chr.match(/^(\d+|0x[0-9A-F]+)$/i)) {
    throw new TexError_js_1.default('NewextarrowArg3', 'Third argument to %1 must be a unicode character number', name);
  }

  cs = cs.substr(1);
  var spaces = space.split(',');
  NewcommandUtil_js_1.default.addMacro(parser, cs, exports.ExtpfeilMethods.xArrow, [parseInt(chr), parseInt(spaces[0]), parseInt(spaces[1])]);
};

new SymbolMap_js_1.CommandMap('extpfeil', {
  xtwoheadrightarrow: ['xArrow', 0x21A0, 12, 16],
  xtwoheadleftarrow: ['xArrow', 0x219E, 17, 13],
  xmapsto: ['xArrow', 0x21A6, 6, 7],
  xlongequal: ['xArrow', 0x003D, 7, 7],
  xtofrom: ['xArrow', 0x21C4, 12, 12],
  Newextarrow: 'NewExtArrow'
}, exports.ExtpfeilMethods);

var init = function init(config) {
  NewcommandConfiguration_js_1.NewcommandConfiguration.init(config);
};

exports.ExtpfeilConfiguration = Configuration_js_1.Configuration.create('extpfeil', {
  handler: {
    macro: ['extpfeil']
  },
  init: init
});

/***/ }),

/***/ 1382:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.GensymbConfiguration = void 0;

var Configuration_js_1 = __webpack_require__(738);

var TexConstants_js_1 = __webpack_require__(7338);

var SymbolMap_js_1 = __webpack_require__(1682);

function mathcharUnit(parser, mchar) {
  var def = mchar.attributes || {};
  def.mathvariant = TexConstants_js_1.TexConstant.Variant.NORMAL;
  def.class = 'MathML-Unit';
  var node = parser.create('token', 'mi', def, mchar.char);
  parser.Push(node);
}

new SymbolMap_js_1.CharacterMap('gensymb-symbols', mathcharUnit, {
  ohm: "\u2126",
  degree: "\xB0",
  celsius: "\u2103",
  perthousand: "\u2030",
  micro: "\xB5"
});
exports.GensymbConfiguration = Configuration_js_1.Configuration.create('gensymb', {
  handler: {
    macro: ['gensymb-symbols']
  }
});

/***/ }),

/***/ 3175:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.HtmlConfiguration = void 0;

var Configuration_js_1 = __webpack_require__(738);

var SymbolMap_js_1 = __webpack_require__(1682);

var HtmlMethods_js_1 = __webpack_require__(6417);

new SymbolMap_js_1.CommandMap('html_macros', {
  href: 'Href',
  'class': 'Class',
  style: 'Style',
  cssId: 'Id'
}, HtmlMethods_js_1.default);
exports.HtmlConfiguration = Configuration_js_1.Configuration.create('html', {
  handler: {
    macro: ['html_macros']
  }
});

/***/ }),

/***/ 6417:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var NodeUtil_js_1 = __webpack_require__(8754);

var HtmlMethods = {};

HtmlMethods.Href = function (parser, name) {
  var url = parser.GetArgument(name);
  var arg = GetArgumentMML(parser, name);
  NodeUtil_js_1.default.setAttribute(arg, 'href', url);
  parser.Push(arg);
};

HtmlMethods.Class = function (parser, name) {
  var CLASS = parser.GetArgument(name);
  var arg = GetArgumentMML(parser, name);
  var oldClass = NodeUtil_js_1.default.getAttribute(arg, 'class');

  if (oldClass) {
    CLASS = oldClass + ' ' + CLASS;
  }

  NodeUtil_js_1.default.setAttribute(arg, 'class', CLASS);
  parser.Push(arg);
};

HtmlMethods.Style = function (parser, name) {
  var style = parser.GetArgument(name);
  var arg = GetArgumentMML(parser, name);
  var oldStyle = NodeUtil_js_1.default.getAttribute(arg, 'style');

  if (oldStyle) {
    if (style.charAt(style.length - 1) !== ';') {
      style += ';';
    }

    style = oldStyle + ' ' + style;
  }

  NodeUtil_js_1.default.setAttribute(arg, 'style', style);
  parser.Push(arg);
};

HtmlMethods.Id = function (parser, name) {
  var ID = parser.GetArgument(name);
  var arg = GetArgumentMML(parser, name);
  NodeUtil_js_1.default.setAttribute(arg, 'id', ID);
  parser.Push(arg);
};

var GetArgumentMML = function GetArgumentMML(parser, name) {
  var arg = parser.ParseArg(name);

  if (!NodeUtil_js_1.default.isInferred(arg)) {
    return arg;
  }

  var children = NodeUtil_js_1.default.getChildren(arg);

  if (children.length === 1) {
    return children[0];
  }

  var mrow = parser.create('node', 'mrow');
  NodeUtil_js_1.default.copyChildren(arg, mrow);
  NodeUtil_js_1.default.copyAttributes(arg, mrow);
  return mrow;
};

exports["default"] = HtmlMethods;

/***/ }),

/***/ 6905:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MathtoolsConfiguration = exports.fixPrescripts = exports.PAIREDDELIMS = void 0;

var Configuration_js_1 = __webpack_require__(738);

var SymbolMap_js_1 = __webpack_require__(1682);

var NodeUtil_js_1 = __webpack_require__(8754);

var Options_js_1 = __webpack_require__(5698);

__webpack_require__(7683);

var MathtoolsUtil_js_1 = __webpack_require__(1328);

var MathtoolsTags_js_1 = __webpack_require__(4432);

var MathtoolsItems_js_1 = __webpack_require__(3953);

exports.PAIREDDELIMS = 'mathtools-paired-delims';

function initMathtools(config) {
  new SymbolMap_js_1.CommandMap(exports.PAIREDDELIMS, {}, {});
  config.append(Configuration_js_1.Configuration.local({
    handler: {
      macro: [exports.PAIREDDELIMS]
    },
    priority: -5
  }));
}

function configMathtools(config, jax) {
  var e_1, _a;

  var parser = jax.parseOptions;
  var pairedDelims = parser.options.mathtools.pairedDelimiters;

  try {
    for (var _b = __values(Object.keys(pairedDelims)), _c = _b.next(); !_c.done; _c = _b.next()) {
      var cs = _c.value;
      MathtoolsUtil_js_1.MathtoolsUtil.addPairedDelims(parser, cs, pairedDelims[cs]);
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_1) throw e_1.error;
    }
  }

  MathtoolsTags_js_1.MathtoolsTagFormat(config, jax);
}

function fixPrescripts(_a) {
  var e_2, _b, e_3, _c, e_4, _d;

  var data = _a.data;

  try {
    for (var _e = __values(data.getList('mmultiscripts')), _f = _e.next(); !_f.done; _f = _e.next()) {
      var node = _f.value;
      if (!node.getProperty('fixPrescript')) continue;
      var childNodes = NodeUtil_js_1.default.getChildren(node);
      var n = 0;

      try {
        for (var _g = (e_3 = void 0, __values([1, 2])), _h = _g.next(); !_h.done; _h = _g.next()) {
          var i = _h.value;

          if (!childNodes[i]) {
            NodeUtil_js_1.default.setChild(node, i, data.nodeFactory.create('node', 'none'));
            n++;
          }
        }
      } catch (e_3_1) {
        e_3 = {
          error: e_3_1
        };
      } finally {
        try {
          if (_h && !_h.done && (_c = _g.return)) _c.call(_g);
        } finally {
          if (e_3) throw e_3.error;
        }
      }

      try {
        for (var _j = (e_4 = void 0, __values([4, 5])), _k = _j.next(); !_k.done; _k = _j.next()) {
          var i = _k.value;

          if (NodeUtil_js_1.default.isType(childNodes[i], 'mrow') && NodeUtil_js_1.default.getChildren(childNodes[i]).length === 0) {
            NodeUtil_js_1.default.setChild(node, i, data.nodeFactory.create('node', 'none'));
          }
        }
      } catch (e_4_1) {
        e_4 = {
          error: e_4_1
        };
      } finally {
        try {
          if (_k && !_k.done && (_d = _j.return)) _d.call(_j);
        } finally {
          if (e_4) throw e_4.error;
        }
      }

      if (n === 2) {
        childNodes.splice(1, 2);
      }
    }
  } catch (e_2_1) {
    e_2 = {
      error: e_2_1
    };
  } finally {
    try {
      if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
    } finally {
      if (e_2) throw e_2.error;
    }
  }
}

exports.fixPrescripts = fixPrescripts;
exports.MathtoolsConfiguration = Configuration_js_1.Configuration.create('mathtools', {
  handler: {
    macro: ['mathtools-macros', 'mathtools-delimiters'],
    environment: ['mathtools-environments'],
    delimiter: ['mathtools-delimiters'],
    character: ['mathtools-characters']
  },
  items: (_a = {}, _a[MathtoolsItems_js_1.MultlinedItem.prototype.kind] = MathtoolsItems_js_1.MultlinedItem, _a),
  init: initMathtools,
  config: configMathtools,
  postprocessors: [[fixPrescripts, -6]],
  options: {
    mathtools: {
      'multlinegap': '1em',
      'multlined-pos': 'c',
      'firstline-afterskip': '',
      'lastline-preskip': '',
      'smallmatrix-align': 'c',
      'shortvdotsadjustabove': '.2em',
      'shortvdotsadjustbelow': '.2em',
      'centercolon': false,
      'centercolon-offset': '.04em',
      'thincolon-dx': '-.04em',
      'thincolon-dw': '-.08em',
      'use-unicode': false,
      'prescript-sub-format': '',
      'prescript-sup-format': '',
      'prescript-arg-format': '',
      'allow-mathtoolsset': true,
      pairedDelimiters: Options_js_1.expandable({}),
      tagforms: Options_js_1.expandable({})
    }
  }
});

/***/ }),

/***/ 3953:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MultlinedItem = void 0;

var AmsItems_js_1 = __webpack_require__(7733);

var NodeUtil_js_1 = __webpack_require__(8754);

var TexConstants_js_1 = __webpack_require__(7338);

var MultlinedItem = function (_super) {
  __extends(MultlinedItem, _super);

  function MultlinedItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MultlinedItem.prototype, "kind", {
    get: function get() {
      return 'multlined';
    },
    enumerable: false,
    configurable: true
  });

  MultlinedItem.prototype.EndTable = function () {
    if (this.Size() || this.row.length) {
      this.EndEntry();
      this.EndRow();
    }

    if (this.table.length > 1) {
      var options = this.factory.configuration.options.mathtools;
      var gap = options.multlinegap;
      var firstskip = options['firstline-afterskip'] || gap;
      var lastskip = options['lastline-preskip'] || gap;
      var first = NodeUtil_js_1.default.getChildren(this.table[0])[0];

      if (NodeUtil_js_1.default.getAttribute(first, 'columnalign') !== TexConstants_js_1.TexConstant.Align.RIGHT) {
        first.appendChild(this.create('node', 'mspace', [], {
          width: firstskip
        }));
      }

      var last = NodeUtil_js_1.default.getChildren(this.table[this.table.length - 1])[0];

      if (NodeUtil_js_1.default.getAttribute(last, 'columnalign') !== TexConstants_js_1.TexConstant.Align.LEFT) {
        var top_1 = NodeUtil_js_1.default.getChildren(last)[0];
        top_1.childNodes.unshift(null);
        var space = this.create('node', 'mspace', [], {
          width: lastskip
        });
        NodeUtil_js_1.default.setChild(top_1, 0, space);
      }
    }

    _super.prototype.EndTable.call(this);
  };

  return MultlinedItem;
}(AmsItems_js_1.MultlineItem);

exports.MultlinedItem = MultlinedItem;

/***/ }),

/***/ 7683:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var ParseMethods_js_1 = __webpack_require__(5123);

var SymbolMap_js_1 = __webpack_require__(1682);

var TexConstants_js_1 = __webpack_require__(7338);

var MathtoolsMethods_js_1 = __webpack_require__(9549);

new SymbolMap_js_1.CommandMap('mathtools-macros', {
  shoveleft: ['HandleShove', TexConstants_js_1.TexConstant.Align.LEFT],
  shoveright: ['HandleShove', TexConstants_js_1.TexConstant.Align.RIGHT],
  xleftrightarrow: ['xArrow', 0x2194, 10, 10],
  xLeftarrow: ['xArrow', 0x21D0, 12, 7],
  xRightarrow: ['xArrow', 0x21D2, 7, 12],
  xLeftrightarrow: ['xArrow', 0x21D4, 12, 12],
  xhookleftarrow: ['xArrow', 0x21A9, 10, 5],
  xhookrightarrow: ['xArrow', 0x21AA, 5, 10],
  xmapsto: ['xArrow', 0x21A6, 10, 10],
  xrightharpoondown: ['xArrow', 0x21C1, 5, 10],
  xleftharpoondown: ['xArrow', 0x21BD, 10, 5],
  xrightleftharpoons: ['xArrow', 0x21CC, 10, 10],
  xrightharpoonup: ['xArrow', 0x21C0, 5, 10],
  xleftharpoonup: ['xArrow', 0x21BC, 10, 5],
  xleftrightharpoons: ['xArrow', 0x21CB, 10, 10],
  mathllap: ['MathLap', 'l', false],
  mathrlap: ['MathLap', 'r', false],
  mathclap: ['MathLap', 'c', false],
  clap: ['MtLap', 'c'],
  textllap: ['MtLap', 'l'],
  textrlap: ['MtLap', 'r'],
  textclap: ['MtLap', 'c'],
  cramped: 'Cramped',
  crampedllap: ['MathLap', 'l', true],
  crampedrlap: ['MathLap', 'r', true],
  crampedclap: ['MathLap', 'c', true],
  crampedsubstack: ['Macro', '\\begin{crampedsubarray}{c}#1\\end{crampedsubarray}', 1],
  mathmbox: 'MathMBox',
  mathmakebox: 'MathMakeBox',
  overbracket: 'UnderOverBracket',
  underbracket: 'UnderOverBracket',
  refeq: 'HandleRef',
  MoveEqLeft: ['Macro', '\\hspace{#1em}&\\hspace{-#1em}', 1, '2'],
  Aboxed: 'Aboxed',
  ArrowBetweenLines: 'ArrowBetweenLines',
  vdotswithin: 'VDotsWithin',
  shortvdotswithin: 'ShortVDotsWithin',
  MTFlushSpaceAbove: 'FlushSpaceAbove',
  MTFlushSpaceBelow: 'FlushSpaceBelow',
  DeclarePairedDelimiters: 'DeclarePairedDelimiters',
  DeclarePairedDelimitersX: 'DeclarePairedDelimitersX',
  DeclarePairedDelimitersXPP: 'DeclarePairedDelimitersXPP',
  centercolon: ['CenterColon', true, true],
  ordinarycolon: ['CenterColon', false],
  MTThinColon: ['CenterColon', true, true, true],
  coloneqq: ['Relation', ':=', "\u2254"],
  Coloneqq: ['Relation', '::=', "\u2A74"],
  coloneq: ['Relation', ':-'],
  Coloneq: ['Relation', '::-'],
  eqqcolon: ['Relation', '=:', "\u2255"],
  Eqqcolon: ['Relation', '=::'],
  eqcolon: ['Relation', '-:', "\u2239"],
  Eqcolon: ['Relation', '-::'],
  colonapprox: ['Relation', ':\\approx'],
  Colonapprox: ['Relation', '::\\approx'],
  colonsim: ['Relation', ':\\sim'],
  Colonsim: ['Relation', '::\\sim'],
  dblcolon: ['Relation', '::', "\u2237"],
  nuparrow: ['NArrow', "\u2191", '.06em'],
  ndownarrow: ['NArrow', "\u2193", '.25em'],
  bigtimes: ['Macro', '\\mathop{\\Large\\kern-.1em\\boldsymbol{\\times}\\kern-.1em}'],
  splitfrac: ['SplitFrac', false],
  splitdfrac: ['SplitFrac', true],
  xmathstrut: 'XMathStrut',
  prescript: 'Prescript',
  newtagform: ['NewTagForm', false],
  renewtagform: ['NewTagForm', true],
  usetagform: 'UseTagForm',
  adjustlimits: ['MacroWithTemplate', '\\mathop{{#1}\\vphantom{{#3}}}_{{#2}\\vphantom{{#4}}}\\mathop{{#3}\\vphantom{{#1}}}_{{#4}\\vphantom{{#2}}}', 4,, '_',, '_'],
  mathtoolsset: 'SetOptions'
}, MathtoolsMethods_js_1.MathtoolsMethods);
new SymbolMap_js_1.EnvironmentMap('mathtools-environments', ParseMethods_js_1.default.environment, {
  dcases: ['Array', null, '\\{', '', 'll', null, '.2em', 'D'],
  rcases: ['Array', null, '', '\\}', 'll', null, '.2em'],
  drcases: ['Array', null, '', '\\}', 'll', null, '.2em', 'D'],
  'dcases*': ['Cases', null, '{', '', 'D'],
  'rcases*': ['Cases', null, '', '}'],
  'drcases*': ['Cases', null, '', '}', 'D'],
  'cases*': ['Cases', null, '{', ''],
  'matrix*': ['MtMatrix', null, null, null],
  'pmatrix*': ['MtMatrix', null, '(', ')'],
  'bmatrix*': ['MtMatrix', null, '[', ']'],
  'Bmatrix*': ['MtMatrix', null, '\\{', '\\}'],
  'vmatrix*': ['MtMatrix', null, '\\vert', '\\vert'],
  'Vmatrix*': ['MtMatrix', null, '\\Vert', '\\Vert'],
  'smallmatrix*': ['MtSmallMatrix', null, null, null],
  psmallmatrix: ['MtSmallMatrix', null, '(', ')', 'c'],
  'psmallmatrix*': ['MtSmallMatrix', null, '(', ')'],
  bsmallmatrix: ['MtSmallMatrix', null, '[', ']', 'c'],
  'bsmallmatrix*': ['MtSmallMatrix', null, '[', ']'],
  Bsmallmatrix: ['MtSmallMatrix', null, '\\{', '\\}', 'c'],
  'Bsmallmatrix*': ['MtSmallMatrix', null, '\\{', '\\}'],
  vsmallmatrix: ['MtSmallMatrix', null, '\\vert', '\\vert', 'c'],
  'vsmallmatrix*': ['MtSmallMatrix', null, '\\vert', '\\vert'],
  Vsmallmatrix: ['MtSmallMatrix', null, '\\Vert', '\\Vert', 'c'],
  'Vsmallmatrix*': ['MtSmallMatrix', null, '\\Vert', '\\Vert'],
  crampedsubarray: ['Array', null, null, null, null, '0em', '0.1em', 'S\'', 1],
  multlined: 'MtMultlined',
  spreadlines: ['SpreadLines', true],
  lgathered: ['AmsEqnArray', null, null, null, 'l', null, '.5em', 'D'],
  rgathered: ['AmsEqnArray', null, null, null, 'r', null, '.5em', 'D']
}, MathtoolsMethods_js_1.MathtoolsMethods);
new SymbolMap_js_1.DelimiterMap('mathtools-delimiters', ParseMethods_js_1.default.delimiter, {
  '\\lparen': '(',
  '\\rparen': ')'
});
new SymbolMap_js_1.CommandMap('mathtools-characters', {
  ':': ['CenterColon', true]
}, MathtoolsMethods_js_1.MathtoolsMethods);

/***/ }),

/***/ 9549:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MathtoolsMethods = void 0;

var ParseUtil_js_1 = __webpack_require__(4632);

var AmsMethods_js_1 = __webpack_require__(9899);

var BaseMethods_js_1 = __webpack_require__(4807);

var TexParser_js_1 = __webpack_require__(9525);

var TexError_js_1 = __webpack_require__(9722);

var NodeUtil_js_1 = __webpack_require__(8754);

var MmlNode_js_1 = __webpack_require__(4653);

var lengths_js_1 = __webpack_require__(5915);

var Options_js_1 = __webpack_require__(5698);

var NewcommandUtil_js_1 = __webpack_require__(8825);

var NewcommandMethods_js_1 = __webpack_require__(3517);

var MathtoolsUtil_js_1 = __webpack_require__(1328);

exports.MathtoolsMethods = {
  MtMatrix: function MtMatrix(parser, begin, open, close) {
    var align = parser.GetBrackets("\\begin{" + begin.getName() + "}", 'c');
    return exports.MathtoolsMethods.Array(parser, begin, open, close, align);
  },
  MtSmallMatrix: function MtSmallMatrix(parser, begin, open, close, align) {
    if (!align) {
      align = parser.GetBrackets("\\begin{" + begin.getName() + "}", parser.options.mathtools['smallmatrix-align']);
    }

    return exports.MathtoolsMethods.Array(parser, begin, open, close, align, ParseUtil_js_1.default.Em(1 / 3), '.2em', 'S', 1);
  },
  MtMultlined: function MtMultlined(parser, begin) {
    var _a;

    var name = "\\begin{" + begin.getName() + "}";
    var pos = parser.GetBrackets(name, parser.options.mathtools['multlined-pos'] || 'c');
    var width = pos ? parser.GetBrackets(name, '') : '';

    if (pos && !pos.match(/^[cbt]$/)) {
      _a = __read([pos, width], 2), width = _a[0], pos = _a[1];
    }

    parser.Push(begin);
    var item = parser.itemFactory.create('multlined', parser, begin);
    item.arraydef = {
      displaystyle: true,
      rowspacing: '.5em',
      width: width || 'auto',
      columnwidth: '100%'
    };
    return ParseUtil_js_1.default.setArrayAlign(item, pos || 'c');
  },
  HandleShove: function HandleShove(parser, name, shove) {
    var top = parser.stack.Top();

    if (top.kind !== 'multline' && top.kind !== 'multlined') {
      throw new TexError_js_1.default('CommandInMultlined', '%1 can only appear within the multline or multlined environments', name);
    }

    if (top.Size()) {
      throw new TexError_js_1.default('CommandAtTheBeginingOfLine', '%1 must come at the beginning of the line', name);
    }

    top.setProperty('shove', shove);
    var shift = parser.GetBrackets(name);
    var mml = parser.ParseArg(name);

    if (shift) {
      var mrow = parser.create('node', 'mrow', []);
      var mspace = parser.create('node', 'mspace', [], {
        width: shift
      });

      if (shove === 'left') {
        mrow.appendChild(mspace);
        mrow.appendChild(mml);
      } else {
        mrow.appendChild(mml);
        mrow.appendChild(mspace);
      }

      mml = mrow;
    }

    parser.Push(mml);
  },
  SpreadLines: function SpreadLines(parser, begin) {
    var e_1, _a;

    if (parser.stack.env.closing === begin.getName()) {
      delete parser.stack.env.closing;
      var top_1 = parser.stack.Pop();
      var mml = top_1.toMml();
      var spread = top_1.getProperty('spread');

      if (mml.isInferred) {
        try {
          for (var _b = __values(NodeUtil_js_1.default.getChildren(mml)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var child = _c.value;
            MathtoolsUtil_js_1.MathtoolsUtil.spreadLines(child, spread);
          }
        } catch (e_1_1) {
          e_1 = {
            error: e_1_1
          };
        } finally {
          try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
          } finally {
            if (e_1) throw e_1.error;
          }
        }
      } else {
        MathtoolsUtil_js_1.MathtoolsUtil.spreadLines(mml, spread);
      }

      parser.Push(mml);
    } else {
      var spread = parser.GetDimen("\\begin{" + begin.getName() + "}");
      begin.setProperty('spread', spread);
      parser.Push(begin);
    }
  },
  Cases: function Cases(parser, begin, open, close, style) {
    var array = parser.itemFactory.create('array').setProperty('casesEnv', begin.getName());
    array.arraydef = {
      rowspacing: '.2em',
      columnspacing: '1em',
      columnalign: 'left'
    };

    if (style === 'D') {
      array.arraydef.displaystyle = true;
    }

    array.setProperties({
      open: open,
      close: close
    });
    parser.Push(begin);
    return array;
  },
  MathLap: function MathLap(parser, name, pos, cramped) {
    var style = parser.GetBrackets(name, '').trim();
    var mml = parser.create('node', 'mstyle', [parser.create('node', 'mpadded', [parser.ParseArg(name)], __assign({
      width: 0
    }, pos === 'r' ? {} : {
      lspace: pos === 'l' ? '-1width' : '-.5width'
    }))], {
      'data-cramped': cramped
    });
    MathtoolsUtil_js_1.MathtoolsUtil.setDisplayLevel(mml, style);
    parser.Push(parser.create('node', 'TeXAtom', [mml]));
  },
  Cramped: function Cramped(parser, name) {
    var style = parser.GetBrackets(name, '').trim();
    var arg = parser.ParseArg(name);
    var mml = parser.create('node', 'mstyle', [arg], {
      'data-cramped': true
    });
    MathtoolsUtil_js_1.MathtoolsUtil.setDisplayLevel(mml, style);
    parser.Push(mml);
  },
  MtLap: function MtLap(parser, name, pos) {
    var content = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name), 0);
    var mml = parser.create('node', 'mpadded', content, {
      width: 0
    });

    if (pos !== 'r') {
      NodeUtil_js_1.default.setAttribute(mml, 'lspace', pos === 'l' ? '-1width' : '-.5width');
    }

    parser.Push(mml);
  },
  MathMakeBox: function MathMakeBox(parser, name) {
    var width = parser.GetBrackets(name);
    var pos = parser.GetBrackets(name, 'c');
    var mml = parser.create('node', 'mpadded', [parser.ParseArg(name)]);

    if (width) {
      NodeUtil_js_1.default.setAttribute(mml, 'width', width);
    }

    var align = Options_js_1.lookup(pos, {
      c: 'center',
      r: 'right'
    }, '');

    if (align) {
      NodeUtil_js_1.default.setAttribute(mml, 'data-align', align);
    }

    parser.Push(mml);
  },
  MathMBox: function MathMBox(parser, name) {
    parser.Push(parser.create('node', 'mrow', [parser.ParseArg(name)]));
  },
  UnderOverBracket: function UnderOverBracket(parser, name) {
    var _a;

    var thickness = lengths_js_1.length2em(parser.GetBrackets(name, '.1em'), .1);
    var height = parser.GetBrackets(name, '.2em');
    var arg = parser.GetArgument(name);

    var _b = __read(name.charAt(1) === 'o' ? ['over', 'accent', 'bottom', 'height'] : ['under', 'accentunder', 'top', 'depth'], 4),
        pos = _b[0],
        accent = _b[1],
        border = _b[2],
        side = _b[3];

    var t = lengths_js_1.em(thickness);
    var t2 = lengths_js_1.em(2 * thickness);
    var base = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
    var copy = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
    var script = parser.create('node', 'mpadded', [parser.create('node', 'mpadded', [parser.create('node', 'mphantom', [copy])], {
      style: "border: " + t + " solid; border-" + border + ": none",
      width: "-" + t2,
      height: height,
      depth: 0
    })], (_a = {
      width: "+" + t2
    }, _a[side] = "+" + t, _a));
    var node = ParseUtil_js_1.default.underOver(parser, base, script, pos, true);
    var munderover = NodeUtil_js_1.default.getChildAt(NodeUtil_js_1.default.getChildAt(node, 0), 0);
    NodeUtil_js_1.default.setAttribute(munderover, accent, true);
    parser.Push(node);
  },
  Aboxed: function Aboxed(parser, name) {
    var top = MathtoolsUtil_js_1.MathtoolsUtil.checkAlignment(parser, name);

    if (top.row.length % 2 === 1) {
      top.row.push(parser.create('node', 'mtd', []));
    }

    var arg = parser.GetArgument(name);
    var rest = parser.string.substr(parser.i);
    parser.string = arg + '&&\\endAboxed';
    parser.i = 0;
    var left = parser.GetUpTo(name, '&');
    var right = parser.GetUpTo(name, '&');
    parser.GetUpTo(name, '\\endAboxed');
    var tex = ParseUtil_js_1.default.substituteArgs(parser, [left, right], '\\rlap{\\boxed{#1{}#2}}\\kern.267em\\phantom{#1}&\\phantom{{}#2}\\kern.267em');
    parser.string = tex + rest;
    parser.i = 0;
  },
  ArrowBetweenLines: function ArrowBetweenLines(parser, name) {
    var top = MathtoolsUtil_js_1.MathtoolsUtil.checkAlignment(parser, name);

    if (top.Size() || top.row.length) {
      throw new TexError_js_1.default('BetweenLines', '%1 must be on a row by itself', name);
    }

    var star = parser.GetStar();
    var symbol = parser.GetBrackets(name, "\\Updownarrow");

    if (star) {
      top.EndEntry();
      top.EndEntry();
    }

    var tex = star ? '\\quad' + symbol : symbol + '\\quad';
    var mml = new TexParser_js_1.default(tex, parser.stack.env, parser.configuration).mml();
    parser.Push(mml);
    top.EndEntry();
    top.EndRow();
  },
  VDotsWithin: function VDotsWithin(parser, name) {
    var top = parser.stack.Top();
    var isFlush = top.getProperty('flushspaceabove') === top.table.length;
    var arg = '\\mmlToken{mi}{}' + parser.GetArgument(name) + '\\mmlToken{mi}{}';
    var base = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
    var mml = parser.create('node', 'mpadded', [parser.create('node', 'mpadded', [parser.create('node', 'mo', [parser.create('text', "\u22EE")])], __assign({
      width: 0,
      lspace: '-.5width'
    }, isFlush ? {
      height: '-.6em',
      voffset: '-.18em'
    } : {})), parser.create('node', 'mphantom', [base])], {
      lspace: '.5width'
    });
    parser.Push(mml);
  },
  ShortVDotsWithin: function ShortVDotsWithin(parser, _name) {
    var top = parser.stack.Top();
    var star = parser.GetStar();
    exports.MathtoolsMethods.FlushSpaceAbove(parser, '\\MTFlushSpaceAbove');
    !star && top.EndEntry();
    exports.MathtoolsMethods.VDotsWithin(parser, '\\vdotswithin');
    star && top.EndEntry();
    exports.MathtoolsMethods.FlushSpaceBelow(parser, '\\MTFlushSpaceBelow');
  },
  FlushSpaceAbove: function FlushSpaceAbove(parser, name) {
    var top = MathtoolsUtil_js_1.MathtoolsUtil.checkAlignment(parser, name);
    top.setProperty('flushspaceabove', top.table.length);
    top.addRowSpacing('-' + parser.options.mathtools['shortvdotsadjustabove']);
  },
  FlushSpaceBelow: function FlushSpaceBelow(parser, name) {
    var top = MathtoolsUtil_js_1.MathtoolsUtil.checkAlignment(parser, name);
    top.Size() && top.EndEntry();
    top.EndRow();
    top.addRowSpacing('-' + parser.options.mathtools['shortvdotsadjustbelow']);
  },
  PairedDelimiters: function PairedDelimiters(parser, name, open, close, body, n, pre, post) {
    if (body === void 0) {
      body = '#1';
    }

    if (n === void 0) {
      n = 1;
    }

    if (pre === void 0) {
      pre = '';
    }

    if (post === void 0) {
      post = '';
    }

    var star = parser.GetStar();
    var size = star ? '' : parser.GetBrackets(name);

    var _a = __read(star ? ['\\left', '\\right'] : size ? [size + 'l', size + 'r'] : ['', ''], 2),
        left = _a[0],
        right = _a[1];

    var delim = star ? '\\middle' : size || '';

    if (n) {
      var args = [];

      for (var i = args.length; i < n; i++) {
        args.push(parser.GetArgument(name));
      }

      body = ParseUtil_js_1.default.substituteArgs(parser, args, body);
    }

    body = body.replace(/\\delimsize/g, delim);
    parser.string = [pre, left, open, body, right, close, post, parser.string.substr(parser.i)].reduce(function (s, part) {
      return ParseUtil_js_1.default.addArgs(parser, s, part);
    }, '');
    parser.i = 0;
    ParseUtil_js_1.default.checkMaxMacros(parser);
  },
  DeclarePairedDelimiters: function DeclarePairedDelimiters(parser, name) {
    var cs = NewcommandUtil_js_1.default.GetCsNameArgument(parser, name);
    var open = parser.GetArgument(name);
    var close = parser.GetArgument(name);
    MathtoolsUtil_js_1.MathtoolsUtil.addPairedDelims(parser.configuration, cs, [open, close]);
  },
  DeclarePairedDelimitersX: function DeclarePairedDelimitersX(parser, name) {
    var cs = NewcommandUtil_js_1.default.GetCsNameArgument(parser, name);
    var n = NewcommandUtil_js_1.default.GetArgCount(parser, name);
    var open = parser.GetArgument(name);
    var close = parser.GetArgument(name);
    var body = parser.GetArgument(name);
    MathtoolsUtil_js_1.MathtoolsUtil.addPairedDelims(parser.configuration, cs, [open, close, body, n]);
  },
  DeclarePairedDelimitersXPP: function DeclarePairedDelimitersXPP(parser, name) {
    var cs = NewcommandUtil_js_1.default.GetCsNameArgument(parser, name);
    var n = NewcommandUtil_js_1.default.GetArgCount(parser, name);
    var pre = parser.GetArgument(name);
    var open = parser.GetArgument(name);
    var close = parser.GetArgument(name);
    var post = parser.GetArgument(name);
    var body = parser.GetArgument(name);
    MathtoolsUtil_js_1.MathtoolsUtil.addPairedDelims(parser.configuration, cs, [open, close, body, n, pre, post]);
  },
  CenterColon: function CenterColon(parser, _name, center, force, thin) {
    if (force === void 0) {
      force = false;
    }

    if (thin === void 0) {
      thin = false;
    }

    var options = parser.options.mathtools;
    var mml = parser.create('token', 'mo', {}, ':');

    if (center && (options['centercolon'] || force)) {
      var dy = options['centercolon-offset'];
      mml = parser.create('node', 'mpadded', [mml], __assign({
        voffset: dy,
        height: "+" + dy,
        depth: "-" + dy
      }, thin ? {
        width: options['thincolon-dw'],
        lspace: options['thincolon-dx']
      } : {}));
    }

    parser.Push(mml);
  },
  Relation: function Relation(parser, _name, tex, unicode) {
    var options = parser.options.mathtools;

    if (options['use-unicode'] && unicode) {
      parser.Push(parser.create('token', 'mo', {
        texClass: MmlNode_js_1.TEXCLASS.REL
      }, unicode));
    } else {
      tex = '\\mathrel{' + tex.replace(/:/g, '\\MTThinColon').replace(/-/g, '\\mathrel{-}') + '}';
      parser.string = ParseUtil_js_1.default.addArgs(parser, tex, parser.string.substr(parser.i));
      parser.i = 0;
    }
  },
  NArrow: function NArrow(parser, _name, c, dy) {
    parser.Push(parser.create('node', 'TeXAtom', [parser.create('token', 'mtext', {}, c), parser.create('node', 'mpadded', [parser.create('node', 'mpadded', [parser.create('node', 'menclose', [parser.create('node', 'mspace', [], {
      height: '.2em',
      depth: 0,
      width: '.4em'
    })], {
      notation: 'updiagonalstrike',
      'data-thickness': '.05em',
      'data-padding': 0
    })], {
      width: 0,
      lspace: '-.5width',
      voffset: dy
    }), parser.create('node', 'mphantom', [parser.create('token', 'mtext', {}, c)])], {
      width: 0,
      lspace: '-.5width'
    })], {
      texClass: MmlNode_js_1.TEXCLASS.REL
    }));
  },
  SplitFrac: function SplitFrac(parser, name, display) {
    var num = parser.ParseArg(name);
    var den = parser.ParseArg(name);
    parser.Push(parser.create('node', 'mstyle', [parser.create('node', 'mfrac', [parser.create('node', 'mstyle', [num, parser.create('token', 'mi'), parser.create('token', 'mspace', {
      width: '1em'
    })], {
      scriptlevel: 0
    }), parser.create('node', 'mstyle', [parser.create('token', 'mspace', {
      width: '1em'
    }), parser.create('token', 'mi'), den], {
      scriptlevel: 0
    })], {
      linethickness: 0,
      numalign: 'left',
      denomalign: 'right'
    })], {
      displaystyle: display,
      scriptlevel: 0
    }));
  },
  XMathStrut: function XMathStrut(parser, name) {
    var dd = parser.GetBrackets(name);
    var dh = parser.GetArgument(name);
    dh = MathtoolsUtil_js_1.MathtoolsUtil.plusOrMinus(name, dh);
    dd = MathtoolsUtil_js_1.MathtoolsUtil.plusOrMinus(name, dd || dh);
    parser.Push(parser.create('node', 'TeXAtom', [parser.create('node', 'mpadded', [parser.create('node', 'mphantom', [parser.create('token', 'mo', {
      stretchy: false
    }, '(')])], {
      width: 0,
      height: dh + 'height',
      depth: dd + 'depth'
    })], {
      texClass: MmlNode_js_1.TEXCLASS.ORD
    }));
  },
  Prescript: function Prescript(parser, name) {
    var sup = MathtoolsUtil_js_1.MathtoolsUtil.getScript(parser, name, 'sup');
    var sub = MathtoolsUtil_js_1.MathtoolsUtil.getScript(parser, name, 'sub');
    var base = MathtoolsUtil_js_1.MathtoolsUtil.getScript(parser, name, 'arg');

    if (NodeUtil_js_1.default.isType(sup, 'none') && NodeUtil_js_1.default.isType(sub, 'none')) {
      parser.Push(base);
      return;
    }

    var mml = parser.create('node', 'mmultiscripts', [base]);
    NodeUtil_js_1.default.getChildren(mml).push(null, null);
    NodeUtil_js_1.default.appendChildren(mml, [parser.create('node', 'mprescripts'), sub, sup]);
    mml.setProperty('fixPrescript', true);
    parser.Push(mml);
  },
  NewTagForm: function NewTagForm(parser, name, renew) {
    if (renew === void 0) {
      renew = false;
    }

    var tags = parser.tags;

    if (!('mtFormats' in tags)) {
      throw new TexError_js_1.default('TagsNotMT', '%1 can only be used with ams or mathtools tags', name);
    }

    var id = parser.GetArgument(name).trim();

    if (!id) {
      throw new TexError_js_1.default('InvalidTagFormID', 'Tag form name can\'t be empty');
    }

    var format = parser.GetBrackets(name, '');
    var left = parser.GetArgument(name);
    var right = parser.GetArgument(name);

    if (!renew && tags.mtFormats.has(id)) {
      throw new TexError_js_1.default('DuplicateTagForm', 'Duplicate tag form: %1', id);
    }

    tags.mtFormats.set(id, [left, right, format]);
  },
  UseTagForm: function UseTagForm(parser, name) {
    var tags = parser.tags;

    if (!('mtFormats' in tags)) {
      throw new TexError_js_1.default('TagsNotMT', '%1 can only be used with ams or mathtools tags', name);
    }

    var id = parser.GetArgument(name).trim();

    if (!id) {
      tags.mtCurrent = null;
      return;
    }

    if (!tags.mtFormats.has(id)) {
      throw new TexError_js_1.default('UndefinedTagForm', 'Undefined tag form: %1', id);
    }

    tags.mtCurrent = tags.mtFormats.get(id);
  },
  SetOptions: function SetOptions(parser, name) {
    var e_2, _a;

    var options = parser.options.mathtools;

    if (!options['allow-mathtoolsset']) {
      throw new TexError_js_1.default('ForbiddenMathtoolsSet', '%1 is disabled', name);
    }

    var allowed = {};
    Object.keys(options).forEach(function (id) {
      if (id !== 'pariedDelimiters' && id !== 'tagforms' && id !== 'allow-mathtoolsset') {
        allowed[id] = 1;
      }
    });
    var args = parser.GetArgument(name);
    var keys = ParseUtil_js_1.default.keyvalOptions(args, allowed, true);

    try {
      for (var _b = __values(Object.keys(keys)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var id = _c.value;
        options[id] = keys[id];
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }
  },
  Array: BaseMethods_js_1.default.Array,
  Macro: BaseMethods_js_1.default.Macro,
  xArrow: AmsMethods_js_1.AmsMethods.xArrow,
  HandleRef: AmsMethods_js_1.AmsMethods.HandleRef,
  AmsEqnArray: AmsMethods_js_1.AmsMethods.AmsEqnArray,
  MacroWithTemplate: NewcommandMethods_js_1.default.MacroWithTemplate
};

/***/ }),

/***/ 4432:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MathtoolsTagFormat = void 0;

var TexError_js_1 = __webpack_require__(9722);

var Tags_js_1 = __webpack_require__(4363);

var tagID = 0;

function MathtoolsTagFormat(config, jax) {
  var tags = jax.parseOptions.options.tags;

  if (tags !== 'base' && config.tags.hasOwnProperty(tags)) {
    Tags_js_1.TagsFactory.add(tags, config.tags[tags]);
  }

  var TagClass = Tags_js_1.TagsFactory.create(jax.parseOptions.options.tags).constructor;

  var TagFormat = function (_super) {
    __extends(TagFormat, _super);

    function TagFormat() {
      var e_1, _a;

      var _this = _super.call(this) || this;

      _this.mtFormats = new Map();
      _this.mtCurrent = null;
      var forms = jax.parseOptions.options.mathtools.tagforms;

      try {
        for (var _b = __values(Object.keys(forms)), _c = _b.next(); !_c.done; _c = _b.next()) {
          var form = _c.value;

          if (!Array.isArray(forms[form]) || forms[form].length !== 3) {
            throw new TexError_js_1.default('InvalidTagFormDef', 'The tag form definition for "%1" should be an array fo three strings', form);
          }

          _this.mtFormats.set(form, forms[form]);
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_1) throw e_1.error;
        }
      }

      return _this;
    }

    TagFormat.prototype.formatTag = function (tag) {
      if (this.mtCurrent) {
        var _a = __read(this.mtCurrent, 3),
            left = _a[0],
            right = _a[1],
            format = _a[2];

        return format ? "" + left + format + "{" + tag + "}" + right : "" + left + tag + right;
      }

      return _super.prototype.formatTag.call(this, tag);
    };

    return TagFormat;
  }(TagClass);

  tagID++;
  var tagName = 'MathtoolsTags-' + tagID;
  Tags_js_1.TagsFactory.add(tagName, TagFormat);
  jax.parseOptions.options.tags = tagName;
}

exports.MathtoolsTagFormat = MathtoolsTagFormat;

/***/ }),

/***/ 1328:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MathtoolsUtil = void 0;

var BaseItems_js_1 = __webpack_require__(1811);

var ParseUtil_js_1 = __webpack_require__(4632);

var TexParser_js_1 = __webpack_require__(9525);

var TexError_js_1 = __webpack_require__(9722);

var Symbol_js_1 = __webpack_require__(9093);

var Options_js_1 = __webpack_require__(5698);

var MathtoolsMethods_js_1 = __webpack_require__(9549);

var MathtoolsConfiguration_js_1 = __webpack_require__(6905);

exports.MathtoolsUtil = {
  setDisplayLevel: function setDisplayLevel(mml, style) {
    if (!style) return;

    var _a = __read(Options_js_1.lookup(style, {
      '\\displaystyle': [true, 0],
      '\\textstyle': [false, 0],
      '\\scriptstyle': [false, 1],
      '\\scriptscriptstyle': [false, 2]
    }, [null, null]), 2),
        display = _a[0],
        script = _a[1];

    if (display !== null) {
      mml.attributes.set('displaystyle', display);
      mml.attributes.set('scriptlevel', script);
    }
  },
  checkAlignment: function checkAlignment(parser, name) {
    var top = parser.stack.Top();

    if (top.kind !== BaseItems_js_1.EqnArrayItem.prototype.kind) {
      throw new TexError_js_1.default('NotInAlignment', '%1 can only be used in aligment environments', name);
    }

    return top;
  },
  addPairedDelims: function addPairedDelims(config, cs, args) {
    var delims = config.handlers.retrieve(MathtoolsConfiguration_js_1.PAIREDDELIMS);
    delims.add(cs, new Symbol_js_1.Macro(cs, MathtoolsMethods_js_1.MathtoolsMethods.PairedDelimiters, args));
  },
  spreadLines: function spreadLines(mtable, spread) {
    if (!mtable.isKind('mtable')) return;
    var rowspacing = mtable.attributes.get('rowspacing');

    if (rowspacing) {
      var add_1 = ParseUtil_js_1.default.dimen2em(spread);
      rowspacing = rowspacing.split(/ /).map(function (s) {
        return ParseUtil_js_1.default.Em(Math.max(0, ParseUtil_js_1.default.dimen2em(s) + add_1));
      }).join(' ');
    } else {
      rowspacing = spread;
    }

    mtable.attributes.set('rowspacing', rowspacing);
  },
  plusOrMinus: function plusOrMinus(name, n) {
    n = n.trim();

    if (!n.match(/^[-+]?(?:\d+(?:\.\d*)?|\.\d+)$/)) {
      throw new TexError_js_1.default('NotANumber', 'Argument to %1 is not a number', name);
    }

    return n.match(/^[-+]/) ? n : '+' + n;
  },
  getScript: function getScript(parser, name, pos) {
    var arg = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));

    if (arg === '') {
      return parser.create('node', 'none');
    }

    var format = parser.options.mathtools["prescript-" + pos + "-format"];
    format && (arg = format + "{" + arg + "}");
    return new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
  }
};

/***/ }),

/***/ 5644:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MhchemConfiguration = void 0;

var Configuration_js_1 = __webpack_require__(738);

var SymbolMap_js_1 = __webpack_require__(1682);

var TexError_js_1 = __webpack_require__(9722);

var BaseMethods_js_1 = __webpack_require__(4807);

var AmsMethods_js_1 = __webpack_require__(9899);

var mhchemParser_js_1 = __webpack_require__(4396);

var MhchemMethods = {};
MhchemMethods.Macro = BaseMethods_js_1.default.Macro;
MhchemMethods.xArrow = AmsMethods_js_1.AmsMethods.xArrow;

MhchemMethods.Machine = function (parser, name, machine) {
  try {
    var arg = parser.GetArgument(name);
    var tex = mhchemParser_js_1.mhchemParser.toTex(arg, machine);
    parser.string = tex + parser.string.substr(parser.i);
    parser.i = 0;
  } catch (err) {
    throw new TexError_js_1.default(err[0], err[1], err.slice(2));
  }
};

new SymbolMap_js_1.CommandMap('mhchem', {
  ce: ['Machine', 'ce'],
  pu: ['Machine', 'pu'],
  longrightleftharpoons: ['Macro', '\\stackrel{\\textstyle{-}\\!\\!{\\rightharpoonup}}{\\smash{{\\leftharpoondown}\\!\\!{-}}}'],
  longRightleftharpoons: ['Macro', '\\stackrel{\\textstyle{-}\\!\\!{\\rightharpoonup}}{\\smash{\\leftharpoondown}}'],
  longLeftrightharpoons: ['Macro', '\\stackrel{\\textstyle\\vphantom{{-}}{\\rightharpoonup}}{\\smash{{\\leftharpoondown}\\!\\!{-}}}'],
  longleftrightarrows: ['Macro', '\\stackrel{\\longrightarrow}{\\smash{\\longleftarrow}\\Rule{0px}{.25em}{0px}}'],
  tripledash: ['Macro', '\\vphantom{-}\\raise2mu{\\kern2mu\\tiny\\text{-}\\kern1mu\\text{-}\\kern1mu\\text{-}\\kern2mu}'],
  xleftrightarrow: ['xArrow', 0x2194, 6, 6],
  xrightleftharpoons: ['xArrow', 0x21CC, 5, 7],
  xRightleftharpoons: ['xArrow', 0x21CC, 5, 7],
  xLeftrightharpoons: ['xArrow', 0x21CC, 5, 7]
}, MhchemMethods);
exports.MhchemConfiguration = Configuration_js_1.Configuration.create('mhchem', {
  handler: {
    macro: ['mhchem']
  }
});

/***/ }),

/***/ 568:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.NewcommandConfiguration = void 0;

var Configuration_js_1 = __webpack_require__(738);

var NewcommandItems_js_1 = __webpack_require__(4700);

var NewcommandUtil_js_1 = __webpack_require__(8825);

__webpack_require__(6971);

var ParseMethods_js_1 = __webpack_require__(5123);

var sm = __webpack_require__(1682);

var init = function init(config) {
  new sm.DelimiterMap(NewcommandUtil_js_1.default.NEW_DELIMITER, ParseMethods_js_1.default.delimiter, {});
  new sm.CommandMap(NewcommandUtil_js_1.default.NEW_COMMAND, {}, {});
  new sm.EnvironmentMap(NewcommandUtil_js_1.default.NEW_ENVIRONMENT, ParseMethods_js_1.default.environment, {}, {});
  config.append(Configuration_js_1.Configuration.local({
    handler: {
      character: [],
      delimiter: [NewcommandUtil_js_1.default.NEW_DELIMITER],
      macro: [NewcommandUtil_js_1.default.NEW_DELIMITER, NewcommandUtil_js_1.default.NEW_COMMAND],
      environment: [NewcommandUtil_js_1.default.NEW_ENVIRONMENT]
    },
    priority: -1
  }));
};

exports.NewcommandConfiguration = Configuration_js_1.Configuration.create('newcommand', {
  handler: {
    macro: ['Newcommand-macros']
  },
  items: (_a = {}, _a[NewcommandItems_js_1.BeginEnvItem.prototype.kind] = NewcommandItems_js_1.BeginEnvItem, _a),
  options: {
    maxMacros: 1000
  },
  init: init
});

/***/ }),

/***/ 4700:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BeginEnvItem = void 0;

var TexError_js_1 = __webpack_require__(9722);

var StackItem_js_1 = __webpack_require__(2812);

var BeginEnvItem = function (_super) {
  __extends(BeginEnvItem, _super);

  function BeginEnvItem() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(BeginEnvItem.prototype, "kind", {
    get: function get() {
      return 'beginEnv';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BeginEnvItem.prototype, "isOpen", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  BeginEnvItem.prototype.checkItem = function (item) {
    if (item.isKind('end')) {
      if (item.getName() !== this.getName()) {
        throw new TexError_js_1.default('EnvBadEnd', '\\begin{%1} ended with \\end{%2}', this.getName(), item.getName());
      }

      return [[this.factory.create('mml', this.toMml())], true];
    }

    if (item.isKind('stop')) {
      throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\end{%1}', this.getName());
    }

    return _super.prototype.checkItem.call(this, item);
  };

  return BeginEnvItem;
}(StackItem_js_1.BaseItem);

exports.BeginEnvItem = BeginEnvItem;

/***/ }),

/***/ 6971:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var NewcommandMethods_js_1 = __webpack_require__(3517);

var SymbolMap_js_1 = __webpack_require__(1682);

new SymbolMap_js_1.CommandMap('Newcommand-macros', {
  newcommand: 'NewCommand',
  renewcommand: 'NewCommand',
  newenvironment: 'NewEnvironment',
  renewenvironment: 'NewEnvironment',
  def: 'MacroDef',
  'let': 'Let'
}, NewcommandMethods_js_1.default);

/***/ }),

/***/ 3517:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var TexError_js_1 = __webpack_require__(9722);

var sm = __webpack_require__(1682);

var BaseMethods_js_1 = __webpack_require__(4807);

var ParseUtil_js_1 = __webpack_require__(4632);

var NewcommandUtil_js_1 = __webpack_require__(8825);

var NewcommandMethods = {};

NewcommandMethods.NewCommand = function (parser, name) {
  var cs = NewcommandUtil_js_1.default.GetCsNameArgument(parser, name);
  var n = NewcommandUtil_js_1.default.GetArgCount(parser, name);
  var opt = parser.GetBrackets(name);
  var def = parser.GetArgument(name);
  NewcommandUtil_js_1.default.addMacro(parser, cs, NewcommandMethods.Macro, [def, n, opt]);
};

NewcommandMethods.NewEnvironment = function (parser, name) {
  var env = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));
  var n = NewcommandUtil_js_1.default.GetArgCount(parser, name);
  var opt = parser.GetBrackets(name);
  var bdef = parser.GetArgument(name);
  var edef = parser.GetArgument(name);
  NewcommandUtil_js_1.default.addEnvironment(parser, env, NewcommandMethods.BeginEnv, [true, bdef, edef, n, opt]);
};

NewcommandMethods.MacroDef = function (parser, name) {
  var cs = NewcommandUtil_js_1.default.GetCSname(parser, name);
  var params = NewcommandUtil_js_1.default.GetTemplate(parser, name, '\\' + cs);
  var def = parser.GetArgument(name);
  !(params instanceof Array) ? NewcommandUtil_js_1.default.addMacro(parser, cs, NewcommandMethods.Macro, [def, params]) : NewcommandUtil_js_1.default.addMacro(parser, cs, NewcommandMethods.MacroWithTemplate, [def].concat(params));
};

NewcommandMethods.Let = function (parser, name) {
  var cs = NewcommandUtil_js_1.default.GetCSname(parser, name);
  var c = parser.GetNext();

  if (c === '=') {
    parser.i++;
    c = parser.GetNext();
  }

  var handlers = parser.configuration.handlers;

  if (c === '\\') {
    name = NewcommandUtil_js_1.default.GetCSname(parser, name);
    var macro_1 = handlers.get('delimiter').lookup('\\' + name);

    if (macro_1) {
      NewcommandUtil_js_1.default.addDelimiter(parser, '\\' + cs, macro_1.char, macro_1.attributes);
      return;
    }

    var map_1 = handlers.get('macro').applicable(name);

    if (!map_1) {
      return;
    }

    if (map_1 instanceof sm.MacroMap) {
      var macro_2 = map_1.lookup(name);
      NewcommandUtil_js_1.default.addMacro(parser, cs, macro_2.func, macro_2.args, macro_2.symbol);
      return;
    }

    macro_1 = map_1.lookup(name);
    var newArgs = NewcommandUtil_js_1.default.disassembleSymbol(cs, macro_1);

    var method = function method(p, _cs) {
      var rest = [];

      for (var _i = 2; _i < arguments.length; _i++) {
        rest[_i - 2] = arguments[_i];
      }

      var symb = NewcommandUtil_js_1.default.assembleSymbol(rest);
      return map_1.parser(p, symb);
    };

    NewcommandUtil_js_1.default.addMacro(parser, cs, method, newArgs);
    return;
  }

  parser.i++;
  var macro = handlers.get('delimiter').lookup(c);

  if (macro) {
    NewcommandUtil_js_1.default.addDelimiter(parser, '\\' + cs, macro.char, macro.attributes);
    return;
  }

  NewcommandUtil_js_1.default.addMacro(parser, cs, NewcommandMethods.Macro, [c]);
};

NewcommandMethods.MacroWithTemplate = function (parser, name, text, n) {
  var params = [];

  for (var _i = 4; _i < arguments.length; _i++) {
    params[_i - 4] = arguments[_i];
  }

  var argCount = parseInt(n, 10);

  if (argCount) {
    var args = [];
    parser.GetNext();

    if (params[0] && !NewcommandUtil_js_1.default.MatchParam(parser, params[0])) {
      throw new TexError_js_1.default('MismatchUseDef', 'Use of %1 doesn\'t match its definition', name);
    }

    for (var i = 0; i < argCount; i++) {
      args.push(NewcommandUtil_js_1.default.GetParameter(parser, name, params[i + 1]));
    }

    text = ParseUtil_js_1.default.substituteArgs(parser, args, text);
  }

  parser.string = ParseUtil_js_1.default.addArgs(parser, text, parser.string.slice(parser.i));
  parser.i = 0;
  ParseUtil_js_1.default.checkMaxMacros(parser);
};

NewcommandMethods.BeginEnv = function (parser, begin, bdef, edef, n, def) {
  if (begin.getProperty('end') && parser.stack.env['closing'] === begin.getName()) {
    delete parser.stack.env['closing'];
    var rest = parser.string.slice(parser.i);
    parser.string = edef;
    parser.i = 0;
    parser.Parse();
    parser.string = rest;
    parser.i = 0;
    return parser.itemFactory.create('end').setProperty('name', begin.getName());
  }

  if (n) {
    var args = [];

    if (def != null) {
      var optional = parser.GetBrackets('\\begin{' + begin.getName() + '}');
      args.push(optional == null ? def : optional);
    }

    for (var i = args.length; i < n; i++) {
      args.push(parser.GetArgument('\\begin{' + begin.getName() + '}'));
    }

    bdef = ParseUtil_js_1.default.substituteArgs(parser, args, bdef);
    edef = ParseUtil_js_1.default.substituteArgs(parser, [], edef);
  }

  parser.string = ParseUtil_js_1.default.addArgs(parser, bdef, parser.string.slice(parser.i));
  parser.i = 0;
  return parser.itemFactory.create('beginEnv').setProperty('name', begin.getName());
};

NewcommandMethods.Macro = BaseMethods_js_1.default.Macro;
exports["default"] = NewcommandMethods;

/***/ }),

/***/ 8825:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var ParseUtil_js_1 = __webpack_require__(4632);

var TexError_js_1 = __webpack_require__(9722);

var Symbol_js_1 = __webpack_require__(9093);

var NewcommandUtil;

(function (NewcommandUtil) {
  function disassembleSymbol(name, symbol) {
    var newArgs = [name, symbol.char];

    if (symbol.attributes) {
      for (var key in symbol.attributes) {
        newArgs.push(key);
        newArgs.push(symbol.attributes[key]);
      }
    }

    return newArgs;
  }

  NewcommandUtil.disassembleSymbol = disassembleSymbol;

  function assembleSymbol(args) {
    var name = args[0];
    var char = args[1];
    var attrs = {};

    for (var i = 2; i < args.length; i = i + 2) {
      attrs[args[i]] = args[i + 1];
    }

    return new Symbol_js_1.Symbol(name, char, attrs);
  }

  NewcommandUtil.assembleSymbol = assembleSymbol;

  function GetCSname(parser, cmd) {
    var c = parser.GetNext();

    if (c !== '\\') {
      throw new TexError_js_1.default('MissingCS', '%1 must be followed by a control sequence', cmd);
    }

    var cs = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(cmd));
    return cs.substr(1);
  }

  NewcommandUtil.GetCSname = GetCSname;

  function GetCsNameArgument(parser, name) {
    var cs = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));

    if (cs.charAt(0) === '\\') {
      cs = cs.substr(1);
    }

    if (!cs.match(/^(.|[a-z]+)$/i)) {
      throw new TexError_js_1.default('IllegalControlSequenceName', 'Illegal control sequence name for %1', name);
    }

    return cs;
  }

  NewcommandUtil.GetCsNameArgument = GetCsNameArgument;

  function GetArgCount(parser, name) {
    var n = parser.GetBrackets(name);

    if (n) {
      n = ParseUtil_js_1.default.trimSpaces(n);

      if (!n.match(/^[0-9]+$/)) {
        throw new TexError_js_1.default('IllegalParamNumber', 'Illegal number of parameters specified in %1', name);
      }
    }

    return n;
  }

  NewcommandUtil.GetArgCount = GetArgCount;

  function GetTemplate(parser, cmd, cs) {
    var c = parser.GetNext();
    var params = [];
    var n = 0;
    var i = parser.i;

    while (parser.i < parser.string.length) {
      c = parser.GetNext();

      if (c === '#') {
        if (i !== parser.i) {
          params[n] = parser.string.substr(i, parser.i - i);
        }

        c = parser.string.charAt(++parser.i);

        if (!c.match(/^[1-9]$/)) {
          throw new TexError_js_1.default('CantUseHash2', 'Illegal use of # in template for %1', cs);
        }

        if (parseInt(c) !== ++n) {
          throw new TexError_js_1.default('SequentialParam', 'Parameters for %1 must be numbered sequentially', cs);
        }

        i = parser.i + 1;
      } else if (c === '{') {
        if (i !== parser.i) {
          params[n] = parser.string.substr(i, parser.i - i);
        }

        if (params.length > 0) {
          return [n.toString()].concat(params);
        } else {
          return n;
        }
      }

      parser.i++;
    }

    throw new TexError_js_1.default('MissingReplacementString', 'Missing replacement string for definition of %1', cmd);
  }

  NewcommandUtil.GetTemplate = GetTemplate;

  function GetParameter(parser, name, param) {
    if (param == null) {
      return parser.GetArgument(name);
    }

    var i = parser.i;
    var j = 0;
    var hasBraces = 0;

    while (parser.i < parser.string.length) {
      var c = parser.string.charAt(parser.i);

      if (c === '{') {
        if (parser.i === i) {
          hasBraces = 1;
        }

        parser.GetArgument(name);
        j = parser.i - i;
      } else if (MatchParam(parser, param)) {
        if (hasBraces) {
          i++;
          j -= 2;
        }

        return parser.string.substr(i, j);
      } else if (c === '\\') {
        parser.i++;
        j++;
        hasBraces = 0;
        var match = parser.string.substr(parser.i).match(/[a-z]+|./i);

        if (match) {
          parser.i += match[0].length;
          j = parser.i - i;
        }
      } else {
        parser.i++;
        j++;
        hasBraces = 0;
      }
    }

    throw new TexError_js_1.default('RunawayArgument', 'Runaway argument for %1?', name);
  }

  NewcommandUtil.GetParameter = GetParameter;

  function MatchParam(parser, param) {
    if (parser.string.substr(parser.i, param.length) !== param) {
      return 0;
    }

    if (param.match(/\\[a-z]+$/i) && parser.string.charAt(parser.i + param.length).match(/[a-z]/i)) {
      return 0;
    }

    parser.i += param.length;
    return 1;
  }

  NewcommandUtil.MatchParam = MatchParam;

  function addDelimiter(parser, cs, char, attr) {
    var handlers = parser.configuration.handlers;
    var handler = handlers.retrieve(NewcommandUtil.NEW_DELIMITER);
    handler.add(cs, new Symbol_js_1.Symbol(cs, char, attr));
  }

  NewcommandUtil.addDelimiter = addDelimiter;

  function addMacro(parser, cs, func, attr, symbol) {
    if (symbol === void 0) {
      symbol = '';
    }

    var handlers = parser.configuration.handlers;
    var handler = handlers.retrieve(NewcommandUtil.NEW_COMMAND);
    handler.add(cs, new Symbol_js_1.Macro(symbol ? symbol : cs, func, attr));
  }

  NewcommandUtil.addMacro = addMacro;

  function addEnvironment(parser, env, func, attr) {
    var handlers = parser.configuration.handlers;
    var handler = handlers.retrieve(NewcommandUtil.NEW_ENVIRONMENT);
    handler.add(env, new Symbol_js_1.Macro(env, func, attr));
  }

  NewcommandUtil.addEnvironment = addEnvironment;
  NewcommandUtil.NEW_DELIMITER = 'new-Delimiter';
  NewcommandUtil.NEW_COMMAND = 'new-Command';
  NewcommandUtil.NEW_ENVIRONMENT = 'new-Environment';
})(NewcommandUtil || (NewcommandUtil = {}));

exports["default"] = NewcommandUtil;

/***/ }),

/***/ 4257:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.NoErrorsConfiguration = void 0;

var Configuration_js_1 = __webpack_require__(738);

function noErrors(factory, message, _id, expr) {
  var mtext = factory.create('token', 'mtext', {}, expr.replace(/\n/g, ' '));
  var error = factory.create('node', 'merror', [mtext], {
    'data-mjx-error': message,
    title: message
  });
  return error;
}

exports.NoErrorsConfiguration = Configuration_js_1.Configuration.create('noerrors', {
  nodes: {
    'error': noErrors
  }
});

/***/ }),

/***/ 2964:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.NoUndefinedConfiguration = void 0;

var Configuration_js_1 = __webpack_require__(738);

function noUndefined(parser, name) {
  var e_1, _a;

  var textNode = parser.create('text', '\\' + name);
  var options = parser.options.noundefined || {};
  var def = {};

  try {
    for (var _b = __values(['color', 'background', 'size']), _c = _b.next(); !_c.done; _c = _b.next()) {
      var id = _c.value;

      if (options[id]) {
        def['math' + id] = options[id];
      }
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_1) throw e_1.error;
    }
  }

  parser.Push(parser.create('node', 'mtext', [], def, textNode));
}

exports.NoUndefinedConfiguration = Configuration_js_1.Configuration.create('noundefined', {
  fallback: {
    macro: noUndefined
  },
  options: {
    noundefined: {
      color: 'red',
      background: '',
      size: ''
    }
  },
  priority: 3
});

/***/ }),

/***/ 6747:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.PhysicsConfiguration = void 0;

var Configuration_js_1 = __webpack_require__(738);

var PhysicsItems_js_1 = __webpack_require__(7326);

__webpack_require__(3350);

exports.PhysicsConfiguration = Configuration_js_1.Configuration.create('physics', {
  handler: {
    macro: ['Physics-automatic-bracing-macros', 'Physics-vector-macros', 'Physics-vector-chars', 'Physics-derivative-macros', 'Physics-expressions-macros', 'Physics-quick-quad-macros', 'Physics-bra-ket-macros', 'Physics-matrix-macros'],
    character: ['Physics-characters'],
    environment: ['Physics-aux-envs']
  },
  items: (_a = {}, _a[PhysicsItems_js_1.AutoOpen.prototype.kind] = PhysicsItems_js_1.AutoOpen, _a),
  options: {
    physics: {
      italicdiff: false,
      arrowdel: false
    }
  }
});

/***/ }),

/***/ 7326:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AutoOpen = void 0;

var StackItem_js_1 = __webpack_require__(2812);

var ParseUtil_js_1 = __webpack_require__(4632);

var TexParser_js_1 = __webpack_require__(9525);

var AutoOpen = function (_super) {
  __extends(AutoOpen, _super);

  function AutoOpen() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(AutoOpen.prototype, "kind", {
    get: function get() {
      return 'auto open';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AutoOpen.prototype, "isOpen", {
    get: function get() {
      return true;
    },
    enumerable: false,
    configurable: true
  });

  AutoOpen.prototype.toMml = function () {
    var parser = this.factory.configuration.parser;
    var right = this.getProperty('right');

    if (this.getProperty('smash')) {
      var mml_1 = _super.prototype.toMml.call(this);

      var smash = parser.create('node', 'mpadded', [mml_1], {
        height: 0,
        depth: 0
      });
      this.Clear();
      this.Push(parser.create('node', 'TeXAtom', [smash]));
    }

    if (right) {
      this.Push(new TexParser_js_1.default(right, parser.stack.env, parser.configuration).mml());
    }

    var mml = _super.prototype.toMml.call(this);

    return ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('open'), mml, this.getProperty('close'), this.getProperty('big'));
  };

  AutoOpen.prototype.checkItem = function (item) {
    var close = item.getProperty('autoclose');

    if (close && close === this.getProperty('close')) {
      if (this.getProperty('ignore')) {
        this.Clear();
        return [[], true];
      }

      return [[this.toMml()], true];
    }

    return _super.prototype.checkItem.call(this, item);
  };

  return AutoOpen;
}(StackItem_js_1.BaseItem);

exports.AutoOpen = AutoOpen;

/***/ }),

/***/ 3350:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var SymbolMap_js_1 = __webpack_require__(1682);

var PhysicsMethods_js_1 = __webpack_require__(2678);

var TexConstants_js_1 = __webpack_require__(7338);

var ParseMethods_js_1 = __webpack_require__(5123);

var MmlNode_js_1 = __webpack_require__(4653);

new SymbolMap_js_1.CommandMap('Physics-automatic-bracing-macros', {
  'quantity': 'Quantity',
  'qty': 'Quantity',
  'pqty': ['Quantity', '(', ')', true],
  'bqty': ['Quantity', '[', ']', true],
  'vqty': ['Quantity', '|', '|', true],
  'Bqty': ['Quantity', '\\{', '\\}', true],
  'absolutevalue': ['Quantity', '|', '|', true],
  'abs': ['Quantity', '|', '|', true],
  'norm': ['Quantity', '\\|', '\\|', true],
  'evaluated': 'Eval',
  'eval': 'Eval',
  'order': ['Quantity', '(', ')', true, 'O', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],
  'commutator': 'Commutator',
  'comm': 'Commutator',
  'anticommutator': ['Commutator', '\\{', '\\}'],
  'acomm': ['Commutator', '\\{', '\\}'],
  'poissonbracket': ['Commutator', '\\{', '\\}'],
  'pb': ['Commutator', '\\{', '\\}']
}, PhysicsMethods_js_1.default);
new SymbolMap_js_1.CharacterMap('Physics-vector-chars', ParseMethods_js_1.default.mathchar0mi, {
  dotproduct: ["\u22C5", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.BOLD
  }],
  vdot: ["\u22C5", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.BOLD
  }],
  crossproduct: "\xD7",
  cross: "\xD7",
  cp: "\xD7",
  gradientnabla: ["\u2207", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.BOLD
  }],
  real: ["\u211C", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }],
  imaginary: ["\u2111", {
    mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL
  }]
});
new SymbolMap_js_1.CommandMap('Physics-vector-macros', {
  'vnabla': 'Vnabla',
  'vectorbold': 'VectorBold',
  'vb': 'VectorBold',
  'vectorarrow': ['StarMacro', 1, '\\vec{\\vb', '{#1}}'],
  'va': ['StarMacro', 1, '\\vec{\\vb', '{#1}}'],
  'vectorunit': ['StarMacro', 1, '\\hat{\\vb', '{#1}}'],
  'vu': ['StarMacro', 1, '\\hat{\\vb', '{#1}}'],
  'gradient': ['OperatorApplication', '\\vnabla', '(', '['],
  'grad': ['OperatorApplication', '\\vnabla', '(', '['],
  'divergence': ['VectorOperator', '\\vnabla\\vdot', '(', '['],
  'div': ['VectorOperator', '\\vnabla\\vdot', '(', '['],
  'curl': ['VectorOperator', '\\vnabla\\crossproduct', '(', '['],
  'laplacian': ['OperatorApplication', '\\nabla^2', '(', '[']
}, PhysicsMethods_js_1.default);
new SymbolMap_js_1.CommandMap('Physics-expressions-macros', {
  'sin': 'Expression',
  'sinh': 'Expression',
  'arcsin': 'Expression',
  'asin': 'Expression',
  'cos': 'Expression',
  'cosh': 'Expression',
  'arccos': 'Expression',
  'acos': 'Expression',
  'tan': 'Expression',
  'tanh': 'Expression',
  'arctan': 'Expression',
  'atan': 'Expression',
  'csc': 'Expression',
  'csch': 'Expression',
  'arccsc': 'Expression',
  'acsc': 'Expression',
  'sec': 'Expression',
  'sech': 'Expression',
  'arcsec': 'Expression',
  'asec': 'Expression',
  'cot': 'Expression',
  'coth': 'Expression',
  'arccot': 'Expression',
  'acot': 'Expression',
  'exp': ['Expression', false],
  'log': 'Expression',
  'ln': 'Expression',
  'det': ['Expression', false],
  'Pr': ['Expression', false],
  'tr': ['Expression', false],
  'trace': ['Expression', false, 'tr'],
  'Tr': ['Expression', false],
  'Trace': ['Expression', false, 'Tr'],
  'rank': 'NamedFn',
  'erf': ['Expression', false],
  'Residue': ['Macro', '\\mathrm{Res}'],
  'Res': ['OperatorApplication', '\\Residue', '(', '[', '{'],
  'principalvalue': ['OperatorApplication', '{\\cal P}'],
  'pv': ['OperatorApplication', '{\\cal P}'],
  'PV': ['OperatorApplication', '{\\rm P.V.}'],
  'Re': ['OperatorApplication', '\\mathrm{Re}', '{'],
  'Im': ['OperatorApplication', '\\mathrm{Im}', '{'],
  'sine': ['NamedFn', 'sin'],
  'hypsine': ['NamedFn', 'sinh'],
  'arcsine': ['NamedFn', 'arcsin'],
  'asine': ['NamedFn', 'asin'],
  'cosine': ['NamedFn', 'cos'],
  'hypcosine': ['NamedFn', 'cosh'],
  'arccosine': ['NamedFn', 'arccos'],
  'acosine': ['NamedFn', 'acos'],
  'tangent': ['NamedFn', 'tan'],
  'hyptangent': ['NamedFn', 'tanh'],
  'arctangent': ['NamedFn', 'arctan'],
  'atangent': ['NamedFn', 'atan'],
  'cosecant': ['NamedFn', 'csc'],
  'hypcosecant': ['NamedFn', 'csch'],
  'arccosecant': ['NamedFn', 'arccsc'],
  'acosecant': ['NamedFn', 'acsc'],
  'secant': ['NamedFn', 'sec'],
  'hypsecant': ['NamedFn', 'sech'],
  'arcsecant': ['NamedFn', 'arcsec'],
  'asecant': ['NamedFn', 'asec'],
  'cotangent': ['NamedFn', 'cot'],
  'hypcotangent': ['NamedFn', 'coth'],
  'arccotangent': ['NamedFn', 'arccot'],
  'acotangent': ['NamedFn', 'acot'],
  'exponential': ['NamedFn', 'exp'],
  'logarithm': ['NamedFn', 'log'],
  'naturallogarithm': ['NamedFn', 'ln'],
  'determinant': ['NamedFn', 'det'],
  'Probability': ['NamedFn', 'Pr']
}, PhysicsMethods_js_1.default);
new SymbolMap_js_1.CommandMap('Physics-quick-quad-macros', {
  'qqtext': 'Qqtext',
  'qq': 'Qqtext',
  'qcomma': ['Macro', '\\qqtext*{,}'],
  'qc': ['Macro', '\\qqtext*{,}'],
  'qcc': ['Qqtext', 'c.c.'],
  'qif': ['Qqtext', 'if'],
  'qthen': ['Qqtext', 'then'],
  'qelse': ['Qqtext', 'else'],
  'qotherwise': ['Qqtext', 'otherwise'],
  'qunless': ['Qqtext', 'unless'],
  'qgiven': ['Qqtext', 'given'],
  'qusing': ['Qqtext', 'using'],
  'qassume': ['Qqtext', 'assume'],
  'qsince': ['Qqtext', 'since'],
  'qlet': ['Qqtext', 'let'],
  'qfor': ['Qqtext', 'for'],
  'qall': ['Qqtext', 'all'],
  'qeven': ['Qqtext', 'even'],
  'qodd': ['Qqtext', 'odd'],
  'qinteger': ['Qqtext', 'integer'],
  'qand': ['Qqtext', 'and'],
  'qor': ['Qqtext', 'or'],
  'qas': ['Qqtext', 'as'],
  'qin': ['Qqtext', 'in']
}, PhysicsMethods_js_1.default);
new SymbolMap_js_1.CommandMap('Physics-derivative-macros', {
  'diffd': 'DiffD',
  'flatfrac': ['Macro', '\\left.#1\\middle/#2\\right.', 2],
  'differential': ['Differential', '\\diffd'],
  'dd': ['Differential', '\\diffd'],
  'variation': ['Differential', '\\delta'],
  'var': ['Differential', '\\delta'],
  'derivative': ['Derivative', 2, '\\diffd'],
  'dv': ['Derivative', 2, '\\diffd'],
  'partialderivative': ['Derivative', 3, '\\partial'],
  'pderivative': ['Derivative', 3, '\\partial'],
  'pdv': ['Derivative', 3, '\\partial'],
  'functionalderivative': ['Derivative', 2, '\\delta'],
  'fderivative': ['Derivative', 2, '\\delta'],
  'fdv': ['Derivative', 2, '\\delta']
}, PhysicsMethods_js_1.default);
new SymbolMap_js_1.CommandMap('Physics-bra-ket-macros', {
  'bra': 'Bra',
  'ket': 'Ket',
  'innerproduct': 'BraKet',
  'ip': 'BraKet',
  'braket': 'BraKet',
  'outerproduct': 'KetBra',
  'dyad': 'KetBra',
  'ketbra': 'KetBra',
  'op': 'KetBra',
  'expectationvalue': 'Expectation',
  'expval': 'Expectation',
  'ev': 'Expectation',
  'matrixelement': 'MatrixElement',
  'matrixel': 'MatrixElement',
  'mel': 'MatrixElement'
}, PhysicsMethods_js_1.default);
new SymbolMap_js_1.CommandMap('Physics-matrix-macros', {
  'matrixquantity': 'MatrixQuantity',
  'mqty': 'MatrixQuantity',
  'pmqty': ['Macro', '\\mqty(#1)', 1],
  'Pmqty': ['Macro', '\\mqty*(#1)', 1],
  'bmqty': ['Macro', '\\mqty[#1]', 1],
  'vmqty': ['Macro', '\\mqty|#1|', 1],
  'smallmatrixquantity': ['MatrixQuantity', true],
  'smqty': ['MatrixQuantity', true],
  'spmqty': ['Macro', '\\smqty(#1)', 1],
  'sPmqty': ['Macro', '\\smqty*(#1)', 1],
  'sbmqty': ['Macro', '\\smqty[#1]', 1],
  'svmqty': ['Macro', '\\smqty|#1|', 1],
  'matrixdeterminant': ['Macro', '\\vmqty{#1}', 1],
  'mdet': ['Macro', '\\vmqty{#1}', 1],
  'smdet': ['Macro', '\\svmqty{#1}', 1],
  'identitymatrix': 'IdentityMatrix',
  'imat': 'IdentityMatrix',
  'xmatrix': 'XMatrix',
  'xmat': 'XMatrix',
  'zeromatrix': ['Macro', '\\xmat{0}{#1}{#2}', 2],
  'zmat': ['Macro', '\\xmat{0}{#1}{#2}', 2],
  'paulimatrix': 'PauliMatrix',
  'pmat': 'PauliMatrix',
  'diagonalmatrix': 'DiagonalMatrix',
  'dmat': 'DiagonalMatrix',
  'antidiagonalmatrix': ['DiagonalMatrix', true],
  'admat': ['DiagonalMatrix', true]
}, PhysicsMethods_js_1.default);
new SymbolMap_js_1.EnvironmentMap('Physics-aux-envs', ParseMethods_js_1.default.environment, {
  smallmatrix: ['Array', null, null, null, 'c', '0.333em', '.2em', 'S', 1]
}, PhysicsMethods_js_1.default);
new SymbolMap_js_1.MacroMap('Physics-characters', {
  '|': ['AutoClose', MmlNode_js_1.TEXCLASS.ORD],
  ')': 'AutoClose',
  ']': 'AutoClose'
}, PhysicsMethods_js_1.default);

/***/ }),

/***/ 2678:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var BaseMethods_js_1 = __webpack_require__(4807);

var TexParser_js_1 = __webpack_require__(9525);

var TexError_js_1 = __webpack_require__(9722);

var MmlNode_js_1 = __webpack_require__(4653);

var ParseUtil_js_1 = __webpack_require__(4632);

var NodeUtil_js_1 = __webpack_require__(8754);

var NodeFactory_js_1 = __webpack_require__(9629);

var PhysicsMethods = {};
var pairs = {
  '(': ')',
  '[': ']',
  '{': '}',
  '|': '|'
};
var biggs = /^(b|B)i(g{1,2})$/;

PhysicsMethods.Quantity = function (parser, name, open, close, arg, named, variant) {
  if (open === void 0) {
    open = '(';
  }

  if (close === void 0) {
    close = ')';
  }

  if (arg === void 0) {
    arg = false;
  }

  if (named === void 0) {
    named = '';
  }

  if (variant === void 0) {
    variant = '';
  }

  var star = arg ? parser.GetStar() : false;
  var next = parser.GetNext();
  var position = parser.i;
  var big = null;

  if (next === '\\') {
    parser.i++;
    big = parser.GetCS();

    if (!big.match(biggs)) {
      var empty = parser.create('node', 'mrow');
      parser.Push(ParseUtil_js_1.default.fenced(parser.configuration, open, empty, close));
      parser.i = position;
      return;
    }

    next = parser.GetNext();
  }

  var right = pairs[next];

  if (arg && next !== '{') {
    throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
  }

  if (!right) {
    var empty = parser.create('node', 'mrow');
    parser.Push(ParseUtil_js_1.default.fenced(parser.configuration, open, empty, close));
    parser.i = position;
    return;
  }

  if (named) {
    var mml = parser.create('token', 'mi', {
      texClass: MmlNode_js_1.TEXCLASS.OP
    }, named);

    if (variant) {
      NodeUtil_js_1.default.setAttribute(mml, 'mathvariant', variant);
    }

    parser.Push(parser.itemFactory.create('fn', mml));
  }

  if (next === '{') {
    var argument = parser.GetArgument(name);
    next = arg ? open : '\\{';
    right = arg ? close : '\\}';
    argument = star ? next + ' ' + argument + ' ' + right : big ? '\\' + big + 'l' + next + ' ' + argument + ' ' + '\\' + big + 'r' + right : '\\left' + next + ' ' + argument + ' ' + '\\right' + right;
    parser.Push(new TexParser_js_1.default(argument, parser.stack.env, parser.configuration).mml());
    return;
  }

  if (arg) {
    next = open;
    right = close;
  }

  parser.i++;
  parser.Push(parser.itemFactory.create('auto open').setProperties({
    open: next,
    close: right,
    big: big
  }));
};

PhysicsMethods.Eval = function (parser, name) {
  var star = parser.GetStar();
  var next = parser.GetNext();

  if (next === '{') {
    var arg = parser.GetArgument(name);
    var replace = '\\left. ' + (star ? '\\smash{' + arg + '}' : arg) + ' ' + '\\vphantom{\\int}\\right|';
    parser.string = parser.string.slice(0, parser.i) + replace + parser.string.slice(parser.i);
    return;
  }

  if (next === '(' || next === '[') {
    parser.i++;
    parser.Push(parser.itemFactory.create('auto open').setProperties({
      open: next,
      close: '|',
      smash: star,
      right: '\\vphantom{\\int}'
    }));
    return;
  }

  throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
};

PhysicsMethods.Commutator = function (parser, name, open, close) {
  if (open === void 0) {
    open = '[';
  }

  if (close === void 0) {
    close = ']';
  }

  var star = parser.GetStar();
  var next = parser.GetNext();
  var big = null;

  if (next === '\\') {
    parser.i++;
    big = parser.GetCS();

    if (!big.match(biggs)) {
      throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
    }

    next = parser.GetNext();
  }

  if (next !== '{') {
    throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
  }

  var arg1 = parser.GetArgument(name);
  var arg2 = parser.GetArgument(name);
  var argument = arg1 + ',' + arg2;
  argument = star ? open + ' ' + argument + ' ' + close : big ? '\\' + big + 'l' + open + ' ' + argument + ' ' + '\\' + big + 'r' + close : '\\left' + open + ' ' + argument + ' ' + '\\right' + close;
  parser.Push(new TexParser_js_1.default(argument, parser.stack.env, parser.configuration).mml());
};

var latinCap = [0x41, 0x5A];
var latinSmall = [0x61, 0x7A];
var greekCap = [0x391, 0x3A9];
var greekSmall = [0x3B1, 0x3C9];
var digits = [0x30, 0x39];

function inRange(value, range) {
  return value >= range[0] && value <= range[1];
}

function createVectorToken(factory, kind, def, text) {
  var parser = factory.configuration.parser;
  var token = NodeFactory_js_1.NodeFactory.createToken(factory, kind, def, text);
  var code = text.codePointAt(0);

  if (text.length === 1 && !parser.stack.env.font && parser.stack.env.vectorFont && (inRange(code, latinCap) || inRange(code, latinSmall) || inRange(code, greekCap) || inRange(code, digits) || inRange(code, greekSmall) && parser.stack.env.vectorStar || NodeUtil_js_1.default.getAttribute(token, 'accent'))) {
    NodeUtil_js_1.default.setAttribute(token, 'mathvariant', parser.stack.env.vectorFont);
  }

  return token;
}

PhysicsMethods.VectorBold = function (parser, name) {
  var star = parser.GetStar();
  var arg = parser.GetArgument(name);
  var oldToken = parser.configuration.nodeFactory.get('token');
  var oldFont = parser.stack.env.font;
  delete parser.stack.env.font;
  parser.configuration.nodeFactory.set('token', createVectorToken);
  parser.stack.env.vectorFont = star ? 'bold-italic' : 'bold';
  parser.stack.env.vectorStar = star;
  var node = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();

  if (oldFont) {
    parser.stack.env.font = oldFont;
  }

  delete parser.stack.env.vectorFont;
  delete parser.stack.env.vectorStar;
  parser.configuration.nodeFactory.set('token', oldToken);
  parser.Push(node);
};

PhysicsMethods.StarMacro = function (parser, name, argcount) {
  var parts = [];

  for (var _i = 3; _i < arguments.length; _i++) {
    parts[_i - 3] = arguments[_i];
  }

  var star = parser.GetStar();
  var args = [];

  if (argcount) {
    for (var i = args.length; i < argcount; i++) {
      args.push(parser.GetArgument(name));
    }
  }

  var macro = parts.join(star ? '*' : '');
  macro = ParseUtil_js_1.default.substituteArgs(parser, args, macro);
  parser.string = ParseUtil_js_1.default.addArgs(parser, macro, parser.string.slice(parser.i));
  parser.i = 0;
  ParseUtil_js_1.default.checkMaxMacros(parser);
};

var vectorApplication = function vectorApplication(parser, kind, name, operator, fences) {
  var op = new TexParser_js_1.default(operator, parser.stack.env, parser.configuration).mml();
  parser.Push(parser.itemFactory.create(kind, op));
  var left = parser.GetNext();
  var right = pairs[left];

  if (!right) {
    return;
  }

  var lfence = '',
      rfence = '',
      arg = '';
  var enlarge = fences.indexOf(left) !== -1;

  if (left === '{') {
    arg = parser.GetArgument(name);
    lfence = enlarge ? '\\left\\{' : '';
    rfence = enlarge ? '\\right\\}' : '';
    var macro = lfence + ' ' + arg + ' ' + rfence;
    parser.string = macro + parser.string.slice(parser.i);
    parser.i = 0;
    return;
  }

  if (!enlarge) {
    return;
  }

  parser.i++;
  parser.Push(parser.itemFactory.create('auto open').setProperties({
    open: left,
    close: right
  }));
};

PhysicsMethods.OperatorApplication = function (parser, name, operator) {
  var fences = [];

  for (var _i = 3; _i < arguments.length; _i++) {
    fences[_i - 3] = arguments[_i];
  }

  vectorApplication(parser, 'fn', name, operator, fences);
};

PhysicsMethods.VectorOperator = function (parser, name, operator) {
  var fences = [];

  for (var _i = 3; _i < arguments.length; _i++) {
    fences[_i - 3] = arguments[_i];
  }

  vectorApplication(parser, 'mml', name, operator, fences);
};

PhysicsMethods.Expression = function (parser, name, opt, id) {
  if (opt === void 0) {
    opt = true;
  }

  if (id === void 0) {
    id = '';
  }

  id = id || name.slice(1);
  var exp = opt ? parser.GetBrackets(name) : null;
  var mml = parser.create('token', 'mi', {
    texClass: MmlNode_js_1.TEXCLASS.OP
  }, id);

  if (exp) {
    var sup = new TexParser_js_1.default(exp, parser.stack.env, parser.configuration).mml();
    mml = parser.create('node', 'msup', [mml, sup]);
  }

  parser.Push(parser.itemFactory.create('fn', mml));

  if (parser.GetNext() !== '(') {
    return;
  }

  parser.i++;
  parser.Push(parser.itemFactory.create('auto open').setProperties({
    open: '(',
    close: ')'
  }));
};

PhysicsMethods.Qqtext = function (parser, name, text) {
  var star = parser.GetStar();
  var arg = text ? text : parser.GetArgument(name);
  var replace = (star ? '' : '\\quad') + '\\text{' + arg + '}\\quad ';
  parser.string = parser.string.slice(0, parser.i) + replace + parser.string.slice(parser.i);
};

PhysicsMethods.Differential = function (parser, name, op) {
  var optArg = parser.GetBrackets(name);
  var power = optArg != null ? '^{' + optArg + '}' : ' ';
  var parens = parser.GetNext() === '(';
  var braces = parser.GetNext() === '{';
  var macro = op + power;

  if (!(parens || braces)) {
    macro += parser.GetArgument(name, true) || '';
    var mml = new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml();
    parser.Push(mml);
    return;
  }

  if (braces) {
    macro += parser.GetArgument(name);
    var mml = new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml();
    parser.Push(parser.create('node', 'TeXAtom', [mml], {
      texClass: MmlNode_js_1.TEXCLASS.OP
    }));
    return;
  }

  parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
  parser.i++;
  parser.Push(parser.itemFactory.create('auto open').setProperties({
    open: '(',
    close: ')'
  }));
};

PhysicsMethods.Derivative = function (parser, name, argMax, op) {
  var star = parser.GetStar();
  var optArg = parser.GetBrackets(name);
  var argCounter = 1;
  var args = [];
  args.push(parser.GetArgument(name));

  while (parser.GetNext() === '{' && argCounter < argMax) {
    args.push(parser.GetArgument(name));
    argCounter++;
  }

  var ignore = false;
  var power1 = ' ';
  var power2 = ' ';

  if (argMax > 2 && args.length > 2) {
    power1 = '^{' + (args.length - 1) + '}';
    ignore = true;
  } else if (optArg != null) {
    if (argMax > 2 && args.length > 1) {
      ignore = true;
    }

    power1 = '^{' + optArg + '}';
    power2 = power1;
  }

  var frac = star ? '\\flatfrac' : '\\frac';
  var first = args.length > 1 ? args[0] : '';
  var second = args.length > 1 ? args[1] : args[0];
  var rest = '';

  for (var i = 2, arg = void 0; arg = args[i]; i++) {
    rest += op + ' ' + arg;
  }

  var macro = frac + '{' + op + power1 + first + '}' + '{' + op + ' ' + second + power2 + ' ' + rest + '}';
  parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());

  if (parser.GetNext() === '(') {
    parser.i++;
    parser.Push(parser.itemFactory.create('auto open').setProperties({
      open: '(',
      close: ')',
      ignore: ignore
    }));
  }
};

PhysicsMethods.Bra = function (parser, name) {
  var starBra = parser.GetStar();
  var bra = parser.GetArgument(name);
  var ket = '';
  var hasKet = false;
  var starKet = false;

  if (parser.GetNext() === '\\') {
    var saveI = parser.i;
    parser.i++;
    var cs = parser.GetCS();
    var symbol = parser.lookup('macro', cs);

    if (symbol && symbol.symbol === 'ket') {
      hasKet = true;
      saveI = parser.i;
      starKet = parser.GetStar();

      if (parser.GetNext() === '{') {
        ket = parser.GetArgument(cs, true);
      } else {
        parser.i = saveI;
        starKet = false;
      }
    } else {
      parser.i = saveI;
    }
  }

  var macro = '';

  if (hasKet) {
    macro = starBra || starKet ? "\\langle{" + bra + "}\\vert{" + ket + "}\\rangle" : "\\left\\langle{" + bra + "}\\middle\\vert{" + ket + "}\\right\\rangle";
  } else {
    macro = starBra || starKet ? "\\langle{" + bra + "}\\vert" : "\\left\\langle{" + bra + "}\\right\\vert{" + ket + "}";
  }

  parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
};

PhysicsMethods.Ket = function (parser, name) {
  var star = parser.GetStar();
  var ket = parser.GetArgument(name);
  var macro = star ? "\\vert{" + ket + "}\\rangle" : "\\left\\vert{" + ket + "}\\right\\rangle";
  parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
};

PhysicsMethods.BraKet = function (parser, name) {
  var star = parser.GetStar();
  var bra = parser.GetArgument(name);
  var ket = null;

  if (parser.GetNext() === '{') {
    ket = parser.GetArgument(name, true);
  }

  var macro = '';

  if (ket == null) {
    macro = star ? "\\langle{" + bra + "}\\vert{" + bra + "}\\rangle" : "\\left\\langle{" + bra + "}\\middle\\vert{" + bra + "}\\right\\rangle";
  } else {
    macro = star ? "\\langle{" + bra + "}\\vert{" + ket + "}\\rangle" : "\\left\\langle{" + bra + "}\\middle\\vert{" + ket + "}\\right\\rangle";
  }

  parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
};

PhysicsMethods.KetBra = function (parser, name) {
  var star = parser.GetStar();
  var ket = parser.GetArgument(name);
  var bra = null;

  if (parser.GetNext() === '{') {
    bra = parser.GetArgument(name, true);
  }

  var macro = '';

  if (bra == null) {
    macro = star ? "\\vert{" + ket + "}\\rangle\\!\\langle{" + ket + "}\\vert" : "\\left\\vert{" + ket + "}\\middle\\rangle\\!\\middle\\langle{" + ket + "}\\right\\vert";
  } else {
    macro = star ? "\\vert{" + ket + "}\\rangle\\!\\langle{" + bra + "}\\vert" : "\\left\\vert{" + ket + "}\\middle\\rangle\\!\\middle\\langle{" + bra + "}\\right\\vert";
  }

  parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
};

function outputBraket(_a, star1, star2) {
  var _b = __read(_a, 3),
      arg1 = _b[0],
      arg2 = _b[1],
      arg3 = _b[2];

  return star1 && star2 ? "\\left\\langle{" + arg1 + "}\\middle\\vert{" + arg2 + "}\\middle\\vert{" + arg3 + "}\\right\\rangle" : star1 ? "\\langle{" + arg1 + "}\\vert{" + arg2 + "}\\vert{" + arg3 + "}\\rangle" : "\\left\\langle{" + arg1 + "}\\right\\vert{" + arg2 + "}\\left\\vert{" + arg3 + "}\\right\\rangle";
}

PhysicsMethods.Expectation = function (parser, name) {
  var star1 = parser.GetStar();
  var star2 = star1 && parser.GetStar();
  var arg1 = parser.GetArgument(name);
  var arg2 = null;

  if (parser.GetNext() === '{') {
    arg2 = parser.GetArgument(name, true);
  }

  var macro = arg1 && arg2 ? outputBraket([arg2, arg1, arg2], star1, star2) : star1 ? "\\langle {" + arg1 + "} \\rangle" : "\\left\\langle {" + arg1 + "} \\right\\rangle";
  parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
};

PhysicsMethods.MatrixElement = function (parser, name) {
  var star1 = parser.GetStar();
  var star2 = star1 && parser.GetStar();
  var arg1 = parser.GetArgument(name);
  var arg2 = parser.GetArgument(name);
  var arg3 = parser.GetArgument(name);
  var macro = outputBraket([arg1, arg2, arg3], star1, star2);
  parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
};

PhysicsMethods.MatrixQuantity = function (parser, name, small) {
  var star = parser.GetStar();
  var next = parser.GetNext();
  var array = small ? 'smallmatrix' : 'array';
  var arg = '';
  var open = '';
  var close = '';

  switch (next) {
    case '{':
      arg = parser.GetArgument(name);
      break;

    case '(':
      parser.i++;
      open = star ? '\\lgroup' : '(';
      close = star ? '\\rgroup' : ')';
      arg = parser.GetUpTo(name, ')');
      break;

    case '[':
      parser.i++;
      open = '[';
      close = ']';
      arg = parser.GetUpTo(name, ']');
      break;

    case '|':
      parser.i++;
      open = '|';
      close = '|';
      arg = parser.GetUpTo(name, '|');
      break;

    default:
      open = '(';
      close = ')';
      break;
  }

  var macro = (open ? '\\left' : '') + open + '\\begin{' + array + '}{} ' + arg + '\\end{' + array + '}' + (open ? '\\right' : '') + close;
  parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
};

PhysicsMethods.IdentityMatrix = function (parser, name) {
  var arg = parser.GetArgument(name);
  var size = parseInt(arg, 10);

  if (isNaN(size)) {
    throw new TexError_js_1.default('InvalidNumber', 'Invalid number');
  }

  if (size <= 1) {
    parser.string = '1' + parser.string.slice(parser.i);
    parser.i = 0;
    return;
  }

  var zeros = Array(size).fill('0');
  var columns = [];

  for (var i = 0; i < size; i++) {
    var row = zeros.slice();
    row[i] = '1';
    columns.push(row.join(' & '));
  }

  parser.string = columns.join('\\\\ ') + parser.string.slice(parser.i);
  parser.i = 0;
};

PhysicsMethods.XMatrix = function (parser, name) {
  var star = parser.GetStar();
  var arg1 = parser.GetArgument(name);
  var arg2 = parser.GetArgument(name);
  var arg3 = parser.GetArgument(name);
  var n = parseInt(arg2, 10);
  var m = parseInt(arg3, 10);

  if (isNaN(n) || isNaN(m) || m.toString() !== arg3 || n.toString() !== arg2) {
    throw new TexError_js_1.default('InvalidNumber', 'Invalid number');
  }

  n = n < 1 ? 1 : n;
  m = m < 1 ? 1 : m;

  if (!star) {
    var row = Array(m).fill(arg1).join(' & ');
    var matrix_1 = Array(n).fill(row).join('\\\\ ');
    parser.string = matrix_1 + parser.string.slice(parser.i);
    parser.i = 0;
    return;
  }

  var matrix = '';

  if (n === 1 && m === 1) {
    matrix = arg1;
  } else if (n === 1) {
    var row = [];

    for (var i = 1; i <= m; i++) {
      row.push(arg1 + "_{" + i + "}");
    }

    matrix = row.join(' & ');
  } else if (m === 1) {
    var row = [];

    for (var i = 1; i <= n; i++) {
      row.push(arg1 + "_{" + i + "}");
    }

    matrix = row.join('\\\\ ');
  } else {
    var rows = [];

    for (var i = 1; i <= n; i++) {
      var row = [];

      for (var j = 1; j <= m; j++) {
        row.push(arg1 + "_{{" + i + "}{" + j + "}}");
      }

      rows.push(row.join(' & '));
    }

    matrix = rows.join('\\\\ ');
  }

  parser.string = matrix + parser.string.slice(parser.i);
  parser.i = 0;
  return;
};

PhysicsMethods.PauliMatrix = function (parser, name) {
  var arg = parser.GetArgument(name);
  var matrix = arg.slice(1);

  switch (arg[0]) {
    case '0':
      matrix += ' 1 & 0\\\\ 0 & 1';
      break;

    case '1':
    case 'x':
      matrix += ' 0 & 1\\\\ 1 & 0';
      break;

    case '2':
    case 'y':
      matrix += ' 0 & -i\\\\ i & 0';
      break;

    case '3':
    case 'z':
      matrix += ' 1 & 0\\\\ 0 & -1';
      break;

    default:
  }

  parser.string = matrix + parser.string.slice(parser.i);
  parser.i = 0;
};

PhysicsMethods.DiagonalMatrix = function (parser, name, anti) {
  if (parser.GetNext() !== '{') {
    return;
  }

  var startI = parser.i;
  parser.GetArgument(name);
  var endI = parser.i;
  parser.i = startI + 1;
  var elements = [];
  var element = '';
  var currentI = parser.i;

  while (currentI < endI) {
    try {
      element = parser.GetUpTo(name, ',');
    } catch (e) {
      parser.i = endI;
      elements.push(parser.string.slice(currentI, endI - 1));
      break;
    }

    if (parser.i >= endI) {
      elements.push(parser.string.slice(currentI, endI));
      break;
    }

    currentI = parser.i;
    elements.push(element);
  }

  parser.string = makeDiagMatrix(elements, anti) + parser.string.slice(endI);
  parser.i = 0;
};

function makeDiagMatrix(elements, anti) {
  var length = elements.length;
  var matrix = [];

  for (var i = 0; i < length; i++) {
    matrix.push(Array(anti ? length - i : i + 1).join('&') + '\\mqty{' + elements[i] + '}');
  }

  return matrix.join('\\\\ ');
}

PhysicsMethods.AutoClose = function (parser, fence, _texclass) {
  var mo = parser.create('token', 'mo', {
    stretchy: false
  }, fence);
  var item = parser.itemFactory.create('mml', mo).setProperties({
    autoclose: fence
  });
  parser.Push(item);
};

PhysicsMethods.Vnabla = function (parser, _name) {
  var argument = parser.options.physics.arrowdel ? '\\vec{\\gradientnabla}' : '{\\gradientnabla}';
  return parser.Push(new TexParser_js_1.default(argument, parser.stack.env, parser.configuration).mml());
};

PhysicsMethods.DiffD = function (parser, _name) {
  var argument = parser.options.physics.italicdiff ? 'd' : '{\\rm d}';
  return parser.Push(new TexParser_js_1.default(argument, parser.stack.env, parser.configuration).mml());
};

PhysicsMethods.Macro = BaseMethods_js_1.default.Macro;
PhysicsMethods.NamedFn = BaseMethods_js_1.default.NamedFn;
PhysicsMethods.Array = BaseMethods_js_1.default.Array;
exports["default"] = PhysicsMethods;

/***/ }),

/***/ 1226:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.SetOptionsConfiguration = exports.SetOptionsUtil = void 0;

var Configuration_js_1 = __webpack_require__(738);

var SymbolMap_js_1 = __webpack_require__(1682);

var TexError_js_1 = __webpack_require__(9722);

var ParseUtil_js_1 = __webpack_require__(4632);

var Symbol_js_1 = __webpack_require__(9093);

var BaseMethods_js_1 = __webpack_require__(4807);

var Options_js_1 = __webpack_require__(5698);

exports.SetOptionsUtil = {
  filterPackage: function filterPackage(parser, extension) {
    if (extension !== 'tex' && !Configuration_js_1.ConfigurationHandler.get(extension)) {
      throw new TexError_js_1.default('NotAPackage', 'Not a defined package: %1', extension);
    }

    var config = parser.options.setoptions;
    var options = config.allowOptions[extension];

    if (options === undefined && !config.allowPackageDefault || options === false) {
      throw new TexError_js_1.default('PackageNotSettable', 'Options can\'t be set for package "%1"', extension);
    }

    return true;
  },
  filterOption: function filterOption(parser, extension, option) {
    var _a;

    var config = parser.options.setoptions;
    var options = config.allowOptions[extension] || {};
    var allow = options.hasOwnProperty(option) && !Options_js_1.isObject(options[option]) ? options[option] : null;

    if (allow === false || allow === null && !config.allowOptionsDefault) {
      throw new TexError_js_1.default('OptionNotSettable', 'Option "%1" is not allowed to be set', option);
    }

    if (!((_a = extension === 'tex' ? parser.options : parser.options[extension]) === null || _a === void 0 ? void 0 : _a.hasOwnProperty(option))) {
      if (extension === 'tex') {
        throw new TexError_js_1.default('InvalidTexOption', 'Invalid TeX option "%1"', option);
      } else {
        throw new TexError_js_1.default('InvalidOptionKey', 'Invalid option "%1" for package "%2"', option, extension);
      }
    }

    return true;
  },
  filterValue: function filterValue(_parser, _extension, _option, value) {
    return value;
  }
};
var setOptionsMap = new SymbolMap_js_1.CommandMap('setoptions', {
  setOptions: 'SetOptions'
}, {
  SetOptions: function SetOptions(parser, name) {
    var e_1, _a;

    var extension = parser.GetBrackets(name) || 'tex';
    var options = ParseUtil_js_1.default.keyvalOptions(parser.GetArgument(name));
    var config = parser.options.setoptions;
    if (!config.filterPackage(parser, extension)) return;

    try {
      for (var _b = __values(Object.keys(options)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var key = _c.value;

        if (config.filterOption(parser, extension, key)) {
          (extension === 'tex' ? parser.options : parser.options[extension])[key] = config.filterValue(parser, extension, key, options[key]);
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  }
});

function setoptionsConfig(_config, jax) {
  var require = jax.parseOptions.handlers.get('macro').lookup('require');

  if (require) {
    setOptionsMap.add('Require', new Symbol_js_1.Macro('Require', require._func));
    setOptionsMap.add('require', new Symbol_js_1.Macro('require', BaseMethods_js_1.default.Macro, ['\\Require{#2}\\setOptions[#2]{#1}', 2, '']));
  }
}

exports.SetOptionsConfiguration = Configuration_js_1.Configuration.create('setoptions', {
  handler: {
    macro: ['setoptions']
  },
  config: setoptionsConfig,
  priority: 3,
  options: {
    setoptions: {
      filterPackage: exports.SetOptionsUtil.filterPackage,
      filterOption: exports.SetOptionsUtil.filterOption,
      filterValue: exports.SetOptionsUtil.filterValue,
      allowPackageDefault: true,
      allowOptionsDefault: true,
      allowOptions: Options_js_1.expandable({
        tex: {
          FindTeX: false,
          formatError: false,
          package: false,
          baseURL: false,
          tags: false,
          maxBuffer: false,
          maxMaxros: false,
          macros: false,
          environments: false
        },
        setoptions: false,
        autoload: false,
        require: false,
        configmacros: false,
        tagformat: false
      })
    }
  }
});

/***/ }),

/***/ 9715:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.TagFormatConfiguration = exports.tagformatConfig = void 0;

var Configuration_js_1 = __webpack_require__(738);

var Tags_js_1 = __webpack_require__(4363);

var tagID = 0;

function tagformatConfig(config, jax) {
  var tags = jax.parseOptions.options.tags;

  if (tags !== 'base' && config.tags.hasOwnProperty(tags)) {
    Tags_js_1.TagsFactory.add(tags, config.tags[tags]);
  }

  var TagClass = Tags_js_1.TagsFactory.create(jax.parseOptions.options.tags).constructor;

  var TagFormat = function (_super) {
    __extends(TagFormat, _super);

    function TagFormat() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    TagFormat.prototype.formatNumber = function (n) {
      return jax.parseOptions.options.tagformat.number(n);
    };

    TagFormat.prototype.formatTag = function (tag) {
      return jax.parseOptions.options.tagformat.tag(tag);
    };

    TagFormat.prototype.formatId = function (id) {
      return jax.parseOptions.options.tagformat.id(id);
    };

    TagFormat.prototype.formatUrl = function (id, base) {
      return jax.parseOptions.options.tagformat.url(id, base);
    };

    return TagFormat;
  }(TagClass);

  tagID++;
  var tagName = 'configTags-' + tagID;
  Tags_js_1.TagsFactory.add(tagName, TagFormat);
  jax.parseOptions.options.tags = tagName;
}

exports.tagformatConfig = tagformatConfig;
exports.TagFormatConfiguration = Configuration_js_1.Configuration.create('tagformat', {
  config: [tagformatConfig, 10],
  options: {
    tagformat: {
      number: function number(n) {
        return n.toString();
      },
      tag: function tag(_tag) {
        return '(' + _tag + ')';
      },
      id: function id(_id) {
        return 'mjx-eqn:' + _id.replace(/\s/g, '_');
      },
      url: function url(id, base) {
        return base + '#' + encodeURIComponent(id);
      }
    }
  }
});

/***/ }),

/***/ 7574:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.TextcompConfiguration = void 0;

var Configuration_js_1 = __webpack_require__(738);

__webpack_require__(1437);

exports.TextcompConfiguration = Configuration_js_1.Configuration.create('textcomp', {
  handler: {
    macro: ['textcomp-macros']
  }
});

/***/ }),

/***/ 1437:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var SymbolMap_js_1 = __webpack_require__(1682);

var TexConstants_js_1 = __webpack_require__(7338);

var TextMacrosMethods_js_1 = __webpack_require__(7316);

var ParseUtil_js_1 = __webpack_require__(4632);

var TextParser_js_1 = __webpack_require__(4414);

new SymbolMap_js_1.CommandMap('textcomp-macros', {
  'textasciicircum': ['Insert', "^"],
  'textasciitilde': ['Insert', "~"],
  'textasteriskcentered': ['Insert', "*"],
  'textbackslash': ['Insert', "\\"],
  'textbar': ['Insert', "|"],
  'textbraceleft': ['Insert', "{"],
  'textbraceright': ['Insert', "}"],
  'textbullet': ['Insert', "\u2022"],
  'textdagger': ['Insert', "\u2020"],
  'textdaggerdbl': ['Insert', "\u2021"],
  'textellipsis': ['Insert', "\u2026"],
  'textemdash': ['Insert', "\u2014"],
  'textendash': ['Insert', "\u2013"],
  'textexclamdown': ['Insert', "\xA1"],
  'textgreater': ['Insert', ">"],
  'textless': ['Insert', "<"],
  'textordfeminine': ['Insert', "\xAA"],
  'textordmasculine': ['Insert', "\xBA"],
  'textparagraph': ['Insert', "\xB6"],
  'textperiodcentered': ['Insert', "\xB7"],
  'textquestiondown': ['Insert', "\xBF"],
  'textquotedblleft': ['Insert', "\u201C"],
  'textquotedblright': ['Insert', "\u201D"],
  'textquoteleft': ['Insert', "\u2018"],
  'textquoteright': ['Insert', "\u2019"],
  'textsection': ['Insert', "\xA7"],
  'textunderscore': ['Insert', "_"],
  'textvisiblespace': ['Insert', "\u2423"],
  'textacutedbl': ['Insert', "\u02DD"],
  'textasciiacute': ['Insert', "\xB4"],
  'textasciibreve': ['Insert', "\u02D8"],
  'textasciicaron': ['Insert', "\u02C7"],
  'textasciidieresis': ['Insert', "\xA8"],
  'textasciimacron': ['Insert', "\xAF"],
  'textgravedbl': ['Insert', "\u02F5"],
  'texttildelow': ['Insert', "\u02F7"],
  'textbaht': ['Insert', "\u0E3F"],
  'textcent': ['Insert', "\xA2"],
  'textcolonmonetary': ['Insert', "\u20A1"],
  'textcurrency': ['Insert', "\xA4"],
  'textdollar': ['Insert', "$"],
  'textdong': ['Insert', "\u20AB"],
  'texteuro': ['Insert', "\u20AC"],
  'textflorin': ['Insert', "\u0192"],
  'textguarani': ['Insert', "\u20B2"],
  'textlira': ['Insert', "\u20A4"],
  'textnaira': ['Insert', "\u20A6"],
  'textpeso': ['Insert', "\u20B1"],
  'textsterling': ['Insert', "\xA3"],
  'textwon': ['Insert', "\u20A9"],
  'textyen': ['Insert', "\xA5"],
  'textcircledP': ['Insert', "\u2117"],
  'textcompwordmark': ['Insert', "\u200C"],
  'textcopyleft': ['Insert', "\uD83C\uDD2F"],
  'textcopyright': ['Insert', "\xA9"],
  'textregistered': ['Insert', "\xAE"],
  'textservicemark': ['Insert', "\u2120"],
  'texttrademark': ['Insert', "\u2122"],
  'textbardbl': ['Insert', "\u2016"],
  'textbigcircle': ['Insert', "\u25EF"],
  'textblank': ['Insert', "\u2422"],
  'textbrokenbar': ['Insert', "\xA6"],
  'textdiscount': ['Insert', "\u2052"],
  'textestimated': ['Insert', "\u212E"],
  'textinterrobang': ['Insert', "\u203D"],
  'textinterrobangdown': ['Insert', "\u2E18"],
  'textmusicalnote': ['Insert', "\u266A"],
  'textnumero': ['Insert', "\u2116"],
  'textopenbullet': ['Insert', "\u25E6"],
  'textpertenthousand': ['Insert', "\u2031"],
  'textperthousand': ['Insert', "\u2030"],
  'textrecipe': ['Insert', "\u211E"],
  'textreferencemark': ['Insert', "\u203B"],
  'textlangle': ['Insert', "\u2329"],
  'textrangle': ['Insert', "\u232A"],
  'textlbrackdbl': ['Insert', "\u27E6"],
  'textrbrackdbl': ['Insert', "\u27E7"],
  'textlquill': ['Insert', "\u2045"],
  'textrquill': ['Insert', "\u2046"],
  'textcelsius': ['Insert', "\u2103"],
  'textdegree': ['Insert', "\xB0"],
  'textdiv': ['Insert', "\xF7"],
  'textdownarrow': ['Insert', "\u2193"],
  'textfractionsolidus': ['Insert', "\u2044"],
  'textleftarrow': ['Insert', "\u2190"],
  'textlnot': ['Insert', "\xAC"],
  'textmho': ['Insert', "\u2127"],
  'textminus': ['Insert', "\u2212"],
  'textmu': ['Insert', "\xB5"],
  'textohm': ['Insert', "\u2126"],
  'textonehalf': ['Insert', "\xBD"],
  'textonequarter': ['Insert', "\xBC"],
  'textonesuperior': ['Insert', "\xB9"],
  'textpm': ['Insert', "\xB1"],
  'textrightarrow': ['Insert', "\u2192"],
  'textsurd': ['Insert', "\u221A"],
  'textthreequarters': ['Insert', "\xBE"],
  'textthreesuperior': ['Insert', "\xB3"],
  'texttimes': ['Insert', "\xD7"],
  'texttwosuperior': ['Insert', "\xB2"],
  'textuparrow': ['Insert', "\u2191"],
  'textborn': ['Insert', "*"],
  'textdied': ['Insert', "\u2020"],
  'textdivorced': ['Insert', "\u26AE"],
  'textmarried': ['Insert', "\u26AD"],
  'textcentoldstyle': ['Insert', "\xA2", TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
  'textdollaroldstyle': ['Insert', "$", TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
  'textzerooldstyle': ['Insert', '0', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
  'textoneoldstyle': ['Insert', '1', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
  'texttwooldstyle': ['Insert', '2', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
  'textthreeoldstyle': ['Insert', '3', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
  'textfouroldstyle': ['Insert', '4', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
  'textfiveoldstyle': ['Insert', '5', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
  'textsixoldstyle': ['Insert', '6', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
  'textsevenoldstyle': ['Insert', '7', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
  'texteightoldstyle': ['Insert', '8', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
  'textnineoldstyle': ['Insert', '9', TexConstants_js_1.TexConstant.Variant.OLDSTYLE]
}, {
  Insert: function Insert(parser, name, c, font) {
    if (parser instanceof TextParser_js_1.TextParser) {
      if (!font) {
        TextMacrosMethods_js_1.TextMacrosMethods.Insert(parser, name, c);
        return;
      }

      parser.saveText();
    }

    parser.Push(ParseUtil_js_1.default.internalText(parser, c, font ? {
      mathvariant: font
    } : {}));
  }
});

/***/ }),

/***/ 8255:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.TextMacrosConfiguration = exports.TextBaseConfiguration = void 0;

var Configuration_js_1 = __webpack_require__(738);

var ParseOptions_js_1 = __webpack_require__(9856);

var Tags_js_1 = __webpack_require__(4363);

var BaseItems_js_1 = __webpack_require__(1811);

var TextParser_js_1 = __webpack_require__(4414);

var TextMacrosMethods_js_1 = __webpack_require__(7316);

__webpack_require__(5525);

exports.TextBaseConfiguration = Configuration_js_1.Configuration.create('text-base', {
  parser: 'text',
  handler: {
    character: ['command', 'text-special'],
    macro: ['text-macros']
  },
  fallback: {
    character: function character(parser, c) {
      parser.text += c;
    },
    macro: function macro(parser, name) {
      var texParser = parser.texParser;
      var macro = texParser.lookup('macro', name);

      if (macro && macro._func !== TextMacrosMethods_js_1.TextMacrosMethods.Macro) {
        parser.Error('MathMacro', '%1 is only supported in math mode', '\\' + name);
      }

      texParser.parse('macro', [parser, name]);
    }
  },
  items: (_a = {}, _a[BaseItems_js_1.StartItem.prototype.kind] = BaseItems_js_1.StartItem, _a[BaseItems_js_1.StopItem.prototype.kind] = BaseItems_js_1.StopItem, _a[BaseItems_js_1.MmlItem.prototype.kind] = BaseItems_js_1.MmlItem, _a[BaseItems_js_1.StyleItem.prototype.kind] = BaseItems_js_1.StyleItem, _a)
});

function internalMath(parser, text, level, mathvariant) {
  var config = parser.configuration.packageData.get('textmacros');

  if (!(parser instanceof TextParser_js_1.TextParser)) {
    config.texParser = parser;
  }

  return [new TextParser_js_1.TextParser(text, mathvariant ? {
    mathvariant: mathvariant
  } : {}, config.parseOptions, level).mml()];
}

exports.TextMacrosConfiguration = Configuration_js_1.Configuration.create('textmacros', {
  config: function config(_config, jax) {
    var textConf = new Configuration_js_1.ParserConfiguration(jax.parseOptions.options.textmacros.packages, ['tex', 'text']);
    textConf.init();
    var parseOptions = new ParseOptions_js_1.default(textConf, []);
    parseOptions.options = jax.parseOptions.options;
    textConf.config(jax);
    Tags_js_1.TagsFactory.addTags(textConf.tags);
    parseOptions.tags = Tags_js_1.TagsFactory.getDefault();
    parseOptions.tags.configuration = parseOptions;
    parseOptions.packageData = jax.parseOptions.packageData;
    parseOptions.packageData.set('textmacros', {
      parseOptions: parseOptions,
      jax: jax,
      texParser: null
    });
    parseOptions.options.internalMath = internalMath;
  },
  preprocessors: [function (data) {
    var config = data.data.packageData.get('textmacros');
    config.parseOptions.nodeFactory.setMmlFactory(config.jax.mmlFactory);
  }],
  options: {
    textmacros: {
      packages: ['text-base']
    }
  }
});

/***/ }),

/***/ 5525:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var SymbolMap_js_1 = __webpack_require__(1682);

var TexConstants_js_1 = __webpack_require__(7338);

var TextMacrosMethods_js_1 = __webpack_require__(7316);

var lengths_js_1 = __webpack_require__(5915);

new SymbolMap_js_1.MacroMap('text-special', {
  '$': 'Math',
  '%': 'Comment',
  '^': 'MathModeOnly',
  '_': 'MathModeOnly',
  '&': 'Misplaced',
  '#': 'Misplaced',
  '~': 'Tilde',
  ' ': 'Space',
  '\t': 'Space',
  '\r': 'Space',
  '\n': 'Space',
  "\xA0": 'Tilde',
  '{': 'OpenBrace',
  '}': 'CloseBrace',
  '`': 'OpenQuote',
  '\'': 'CloseQuote'
}, TextMacrosMethods_js_1.TextMacrosMethods);
new SymbolMap_js_1.CommandMap('text-macros', {
  '(': 'Math',
  '$': 'SelfQuote',
  '_': 'SelfQuote',
  '%': 'SelfQuote',
  '{': 'SelfQuote',
  '}': 'SelfQuote',
  ' ': 'SelfQuote',
  '&': 'SelfQuote',
  '#': 'SelfQuote',
  '\\': 'SelfQuote',
  '\'': ['Accent', "\xB4"],
  "\u2019": ['Accent', "\xB4"],
  '`': ['Accent', "`"],
  "\u2018": ['Accent', "`"],
  '^': ['Accent', '^'],
  '\"': ['Accent', "\xA8"],
  '~': ['Accent', '~'],
  '=': ['Accent', "\xAF"],
  '.': ['Accent', "\u02D9"],
  'u': ['Accent', "\u02D8"],
  'v': ['Accent', "\u02C7"],
  emph: 'Emph',
  rm: ['SetFont', TexConstants_js_1.TexConstant.Variant.NORMAL],
  mit: ['SetFont', TexConstants_js_1.TexConstant.Variant.ITALIC],
  oldstyle: ['SetFont', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
  cal: ['SetFont', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],
  it: ['SetFont', '-tex-mathit'],
  bf: ['SetFont', TexConstants_js_1.TexConstant.Variant.BOLD],
  bbFont: ['SetFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],
  scr: ['SetFont', TexConstants_js_1.TexConstant.Variant.SCRIPT],
  frak: ['SetFont', TexConstants_js_1.TexConstant.Variant.FRAKTUR],
  sf: ['SetFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],
  tt: ['SetFont', TexConstants_js_1.TexConstant.Variant.MONOSPACE],
  tiny: ['SetSize', 0.5],
  Tiny: ['SetSize', 0.6],
  scriptsize: ['SetSize', 0.7],
  small: ['SetSize', 0.85],
  normalsize: ['SetSize', 1.0],
  large: ['SetSize', 1.2],
  Large: ['SetSize', 1.44],
  LARGE: ['SetSize', 1.73],
  huge: ['SetSize', 2.07],
  Huge: ['SetSize', 2.49],
  Bbb: ['Macro', '{\\bbFont #1}', 1],
  textrm: ['Macro', '{\\rm #1}', 1],
  textit: ['Macro', '{\\it #1}', 1],
  textbf: ['Macro', '{\\bf #1}', 1],
  textsf: ['Macro', '{\\sf #1}', 1],
  texttt: ['Macro', '{\\tt #1}', 1],
  dagger: ['Insert', "\u2020"],
  ddagger: ['Insert', "\u2021"],
  S: ['Insert', "\xA7"],
  ',': ['Spacer', lengths_js_1.MATHSPACE.thinmathspace],
  ':': ['Spacer', lengths_js_1.MATHSPACE.mediummathspace],
  '>': ['Spacer', lengths_js_1.MATHSPACE.mediummathspace],
  ';': ['Spacer', lengths_js_1.MATHSPACE.thickmathspace],
  '!': ['Spacer', lengths_js_1.MATHSPACE.negativethinmathspace],
  enspace: ['Spacer', .5],
  quad: ['Spacer', 1],
  qquad: ['Spacer', 2],
  thinspace: ['Spacer', lengths_js_1.MATHSPACE.thinmathspace],
  negthinspace: ['Spacer', lengths_js_1.MATHSPACE.negativethinmathspace],
  hskip: 'Hskip',
  hspace: 'Hskip',
  kern: 'Hskip',
  mskip: 'Hskip',
  mspace: 'Hskip',
  mkern: 'Hskip',
  rule: 'rule',
  Rule: ['Rule'],
  Space: ['Rule', 'blank'],
  color: 'CheckAutoload',
  textcolor: 'CheckAutoload',
  colorbox: 'CheckAutoload',
  fcolorbox: 'CheckAutoload',
  href: 'CheckAutoload',
  style: 'CheckAutoload',
  class: 'CheckAutoload',
  cssId: 'CheckAutoload',
  unicode: 'CheckAutoload',
  ref: ['HandleRef', false],
  eqref: ['HandleRef', true]
}, TextMacrosMethods_js_1.TextMacrosMethods);

/***/ }),

/***/ 7316:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.TextMacrosMethods = void 0;

var TexParser_js_1 = __webpack_require__(9525);

var Retries_js_1 = __webpack_require__(6009);

var BaseMethods_js_1 = __webpack_require__(4807);

exports.TextMacrosMethods = {
  Comment: function Comment(parser, _c) {
    while (parser.i < parser.string.length && parser.string.charAt(parser.i) !== '\n') {
      parser.i++;
    }

    parser.i++;
  },
  Math: function Math(parser, open) {
    parser.saveText();
    var i = parser.i;
    var j, c;
    var braces = 0;

    while (c = parser.GetNext()) {
      j = parser.i++;

      switch (c) {
        case '\\':
          var cs = parser.GetCS();
          if (cs === ')') c = '\\(';

        case '$':
          if (braces === 0 && open === c) {
            var config = parser.texParser.configuration;
            var mml = new TexParser_js_1.default(parser.string.substr(i, j - i), parser.stack.env, config).mml();
            parser.PushMath(mml);
            return;
          }

          break;

        case '{':
          braces++;
          break;

        case '}':
          if (braces === 0) {
            parser.Error('ExtraCloseMissingOpen', 'Extra close brace or missing open brace');
          }

          braces--;
          break;
      }
    }

    parser.Error('MathNotTerminated', 'Math-mode is not properly terminated');
  },
  MathModeOnly: function MathModeOnly(parser, c) {
    parser.Error('MathModeOnly', '\'%1\' allowed only in math mode', c);
  },
  Misplaced: function Misplaced(parser, c) {
    parser.Error('Misplaced', '\'%1\' can not be used here', c);
  },
  OpenBrace: function OpenBrace(parser, _c) {
    var env = parser.stack.env;
    parser.envStack.push(env);
    parser.stack.env = Object.assign({}, env);
  },
  CloseBrace: function CloseBrace(parser, _c) {
    if (parser.envStack.length) {
      parser.saveText();
      parser.stack.env = parser.envStack.pop();
    } else {
      parser.Error('ExtraCloseMissingOpen', 'Extra close brace or missing open brace');
    }
  },
  OpenQuote: function OpenQuote(parser, c) {
    if (parser.string.charAt(parser.i) === c) {
      parser.text += "\u201C";
      parser.i++;
    } else {
      parser.text += "\u2018";
    }
  },
  CloseQuote: function CloseQuote(parser, c) {
    if (parser.string.charAt(parser.i) === c) {
      parser.text += "\u201D";
      parser.i++;
    } else {
      parser.text += "\u2019";
    }
  },
  Tilde: function Tilde(parser, _c) {
    parser.text += "\xA0";
  },
  Space: function Space(parser, _c) {
    parser.text += ' ';

    while (parser.GetNext().match(/\s/)) {
      parser.i++;
    }
  },
  SelfQuote: function SelfQuote(parser, name) {
    parser.text += name.substr(1);
  },
  Insert: function Insert(parser, _name, c) {
    parser.text += c;
  },
  Accent: function Accent(parser, name, c) {
    var base = parser.ParseArg(name);
    var accent = parser.create('token', 'mo', {}, c);
    parser.addAttributes(accent);
    parser.Push(parser.create('node', 'mover', [base, accent]));
  },
  Emph: function Emph(parser, name) {
    var variant = parser.stack.env.mathvariant === '-tex-mathit' ? 'normal' : '-tex-mathit';
    parser.Push(parser.ParseTextArg(name, {
      mathvariant: variant
    }));
  },
  SetFont: function SetFont(parser, _name, variant) {
    parser.saveText();
    parser.stack.env.mathvariant = variant;
  },
  SetSize: function SetSize(parser, _name, size) {
    parser.saveText();
    parser.stack.env.mathsize = size;
  },
  CheckAutoload: function CheckAutoload(parser, name) {
    var autoload = parser.configuration.packageData.get('autoload');
    var texParser = parser.texParser;
    name = name.slice(1);
    var macro = texParser.lookup('macro', name);

    if (!macro || autoload && macro._func === autoload.Autoload) {
      texParser.parse('macro', [texParser, name]);
      if (!macro) return;
      Retries_js_1.retryAfter(Promise.resolve());
    }

    texParser.parse('macro', [parser, name]);
  },
  Macro: BaseMethods_js_1.default.Macro,
  Spacer: BaseMethods_js_1.default.Spacer,
  Hskip: BaseMethods_js_1.default.Hskip,
  rule: BaseMethods_js_1.default.rule,
  Rule: BaseMethods_js_1.default.Rule,
  HandleRef: BaseMethods_js_1.default.HandleRef
};

/***/ }),

/***/ 4414:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.TextParser = void 0;

var TexParser_js_1 = __webpack_require__(9525);

var TexError_js_1 = __webpack_require__(9722);

var ParseUtil_js_1 = __webpack_require__(4632);

var MmlNode_js_1 = __webpack_require__(4653);

var NodeUtil_js_1 = __webpack_require__(8754);

var BaseItems_js_1 = __webpack_require__(1811);

var TextParser = function (_super) {
  __extends(TextParser, _super);

  function TextParser(text, env, configuration, level) {
    var _this = _super.call(this, text, env, configuration) || this;

    _this.level = level;
    return _this;
  }

  Object.defineProperty(TextParser.prototype, "texParser", {
    get: function get() {
      return this.configuration.packageData.get('textmacros').texParser;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TextParser.prototype, "tags", {
    get: function get() {
      return this.texParser.tags;
    },
    enumerable: false,
    configurable: true
  });

  TextParser.prototype.mml = function () {
    return this.level != null ? this.create('node', 'mstyle', this.nodes, {
      displaystyle: false,
      scriptlevel: this.level
    }) : this.nodes.length === 1 ? this.nodes[0] : this.create('node', 'mrow', this.nodes);
  };

  TextParser.prototype.Parse = function () {
    this.text = '';
    this.nodes = [];
    this.envStack = [];

    _super.prototype.Parse.call(this);
  };

  TextParser.prototype.saveText = function () {
    if (this.text) {
      var mathvariant = this.stack.env.mathvariant;
      var text = ParseUtil_js_1.default.internalText(this, this.text, mathvariant ? {
        mathvariant: mathvariant
      } : {});
      this.text = '';
      this.Push(text);
    }
  };

  TextParser.prototype.Push = function (mml) {
    if (this.text) {
      this.saveText();
    }

    if (mml instanceof BaseItems_js_1.StopItem) {
      return _super.prototype.Push.call(this, mml);
    }

    if (mml instanceof BaseItems_js_1.StyleItem) {
      this.stack.env.mathcolor = this.stack.env.color;
      return;
    }

    if (mml instanceof MmlNode_js_1.AbstractMmlNode) {
      this.addAttributes(mml);
      this.nodes.push(mml);
    }
  };

  TextParser.prototype.PushMath = function (mml) {
    var e_1, _a;

    var env = this.stack.env;

    try {
      for (var _b = __values(['mathsize', 'mathcolor']), _c = _b.next(); !_c.done; _c = _b.next()) {
        var name_1 = _c.value;

        if (env[name_1] && !mml.attributes.getExplicit(name_1)) {
          if (!mml.isToken && !mml.isKind('mstyle')) {
            mml = this.create('node', 'mstyle', [mml]);
          }

          NodeUtil_js_1.default.setAttribute(mml, name_1, env[name_1]);
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    if (mml.isInferred) {
      mml = this.create('node', 'mrow', mml.childNodes);
    }

    this.nodes.push(mml);
  };

  TextParser.prototype.addAttributes = function (mml) {
    var e_2, _a;

    var env = this.stack.env;
    if (!mml.isToken) return;

    try {
      for (var _b = __values(['mathsize', 'mathcolor', 'mathvariant']), _c = _b.next(); !_c.done; _c = _b.next()) {
        var name_2 = _c.value;

        if (env[name_2] && !mml.attributes.getExplicit(name_2)) {
          NodeUtil_js_1.default.setAttribute(mml, name_2, env[name_2]);
        }
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }
  };

  TextParser.prototype.ParseTextArg = function (name, env) {
    var text = this.GetArgument(name);
    env = Object.assign(Object.assign({}, this.stack.env), env);
    return new TextParser(text, env, this.configuration).mml();
  };

  TextParser.prototype.ParseArg = function (name) {
    return new TextParser(this.GetArgument(name), this.stack.env, this.configuration).mml();
  };

  TextParser.prototype.Error = function (id, message) {
    var args = [];

    for (var _i = 2; _i < arguments.length; _i++) {
      args[_i - 2] = arguments[_i];
    }

    throw new (TexError_js_1.default.bind.apply(TexError_js_1.default, __spreadArray([void 0, id, message], __read(args))))();
  };

  return TextParser;
}(TexParser_js_1.default);

exports.TextParser = TextParser;

/***/ }),

/***/ 4813:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.UnicodeConfiguration = exports.UnicodeMethods = void 0;

var Configuration_js_1 = __webpack_require__(738);

var TexError_js_1 = __webpack_require__(9722);

var SymbolMap_js_1 = __webpack_require__(1682);

var ParseUtil_js_1 = __webpack_require__(4632);

var NodeUtil_js_1 = __webpack_require__(8754);

var Entities_js_1 = __webpack_require__(3719);

exports.UnicodeMethods = {};
var UnicodeCache = {};

exports.UnicodeMethods.Unicode = function (parser, name) {
  var HD = parser.GetBrackets(name);
  var HDsplit = null;
  var font = null;

  if (HD) {
    if (HD.replace(/ /g, '').match(/^(\d+(\.\d*)?|\.\d+),(\d+(\.\d*)?|\.\d+)$/)) {
      HDsplit = HD.replace(/ /g, '').split(/,/);
      font = parser.GetBrackets(name);
    } else {
      font = HD;
    }
  }

  var n = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name)).replace(/^0x/, 'x');

  if (!n.match(/^(x[0-9A-Fa-f]+|[0-9]+)$/)) {
    throw new TexError_js_1.default('BadUnicode', "Argument to \\unicode must be a number");
  }

  var N = parseInt(n.match(/^x/) ? '0' + n : n);

  if (!UnicodeCache[N]) {
    UnicodeCache[N] = [800, 200, font, N];
  } else if (!font) {
    font = UnicodeCache[N][2];
  }

  if (HDsplit) {
    UnicodeCache[N][0] = Math.floor(parseFloat(HDsplit[0]) * 1000);
    UnicodeCache[N][1] = Math.floor(parseFloat(HDsplit[1]) * 1000);
  }

  var variant = parser.stack.env.font;
  var def = {};

  if (font) {
    UnicodeCache[N][2] = def.fontfamily = font.replace(/'/g, '\'');

    if (variant) {
      if (variant.match(/bold/)) {
        def.fontweight = 'bold';
      }

      if (variant.match(/italic|-mathit/)) {
        def.fontstyle = 'italic';
      }
    }
  } else if (variant) {
    def.mathvariant = variant;
  }

  var node = parser.create('token', 'mtext', def, Entities_js_1.numeric(n));
  NodeUtil_js_1.default.setProperty(node, 'unicode', true);
  parser.Push(node);
};

new SymbolMap_js_1.CommandMap('unicode', {
  unicode: 'Unicode'
}, exports.UnicodeMethods);
exports.UnicodeConfiguration = Configuration_js_1.Configuration.create('unicode', {
  handler: {
    macro: ['unicode']
  }
});

/***/ }),

/***/ 6493:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.UpgreekConfiguration = void 0;

var Configuration_js_1 = __webpack_require__(738);

var SymbolMap_js_1 = __webpack_require__(1682);

var TexConstants_js_1 = __webpack_require__(7338);

function mathchar0miNormal(parser, mchar) {
  var def = mchar.attributes || {};
  def.mathvariant = TexConstants_js_1.TexConstant.Variant.NORMAL;
  var node = parser.create('token', 'mi', def, mchar.char);
  parser.Push(node);
}

new SymbolMap_js_1.CharacterMap('upgreek', mathchar0miNormal, {
  upalpha: "\u03B1",
  upbeta: "\u03B2",
  upgamma: "\u03B3",
  updelta: "\u03B4",
  upepsilon: "\u03F5",
  upzeta: "\u03B6",
  upeta: "\u03B7",
  uptheta: "\u03B8",
  upiota: "\u03B9",
  upkappa: "\u03BA",
  uplambda: "\u03BB",
  upmu: "\u03BC",
  upnu: "\u03BD",
  upxi: "\u03BE",
  upomicron: "\u03BF",
  uppi: "\u03C0",
  uprho: "\u03C1",
  upsigma: "\u03C3",
  uptau: "\u03C4",
  upupsilon: "\u03C5",
  upphi: "\u03D5",
  upchi: "\u03C7",
  uppsi: "\u03C8",
  upomega: "\u03C9",
  upvarepsilon: "\u03B5",
  upvartheta: "\u03D1",
  upvarpi: "\u03D6",
  upvarrho: "\u03F1",
  upvarsigma: "\u03C2",
  upvarphi: "\u03C6",
  Upgamma: "\u0393",
  Updelta: "\u0394",
  Uptheta: "\u0398",
  Uplambda: "\u039B",
  Upxi: "\u039E",
  Uppi: "\u03A0",
  Upsigma: "\u03A3",
  Upupsilon: "\u03A5",
  Upphi: "\u03A6",
  Uppsi: "\u03A8",
  Upomega: "\u03A9"
});
exports.UpgreekConfiguration = Configuration_js_1.Configuration.create('upgreek', {
  handler: {
    macro: ['upgreek']
  }
});

/***/ }),

/***/ 9590:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.VerbConfiguration = exports.VerbMethods = void 0;

var Configuration_js_1 = __webpack_require__(738);

var TexConstants_js_1 = __webpack_require__(7338);

var SymbolMap_js_1 = __webpack_require__(1682);

var TexError_js_1 = __webpack_require__(9722);

exports.VerbMethods = {};

exports.VerbMethods.Verb = function (parser, name) {
  var c = parser.GetNext();
  var start = ++parser.i;

  if (c === '') {
    throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', name);
  }

  while (parser.i < parser.string.length && parser.string.charAt(parser.i) !== c) {
    parser.i++;
  }

  if (parser.i === parser.string.length) {
    throw new TexError_js_1.default('NoClosingDelim', 'Can\'t find closing delimiter for %1', parser.currentCS);
  }

  var text = parser.string.slice(start, parser.i).replace(/ /g, "\xA0");
  parser.i++;
  parser.Push(parser.create('token', 'mtext', {
    mathvariant: TexConstants_js_1.TexConstant.Variant.MONOSPACE
  }, text));
};

new SymbolMap_js_1.CommandMap('verb', {
  verb: 'Verb'
}, exports.VerbMethods);
exports.VerbConfiguration = Configuration_js_1.Configuration.create('verb', {
  handler: {
    macro: ['verb']
  }
});

/***/ }),

/***/ 5667:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.mathjax = void 0;

var HandlerList_js_1 = __webpack_require__(3820);

var Retries_js_1 = __webpack_require__(6009);

exports.mathjax = {
  version: '3.2.0',
  handlers: new HandlerList_js_1.HandlerList(),
  document: function document(_document, options) {
    return exports.mathjax.handlers.document(_document, options);
  },
  handleRetriesFor: Retries_js_1.handleRetriesFor,
  retryAfter: Retries_js_1.retryAfter,
  asyncLoad: null
};

/***/ }),

/***/ 4597:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTML = void 0;

var OutputJax_js_1 = __webpack_require__(263);

var StyleList_js_1 = __webpack_require__(401);

var WrapperFactory_js_1 = __webpack_require__(8561);

var Usage_js_1 = __webpack_require__(3278);

var tex_js_1 = __webpack_require__(6435);

var LENGTHS = __webpack_require__(5915);

var string_js_1 = __webpack_require__(4944);

var CHTML = function (_super) {
  __extends(CHTML, _super);

  function CHTML(options) {
    if (options === void 0) {
      options = null;
    }

    var _this = _super.call(this, options, WrapperFactory_js_1.CHTMLWrapperFactory, tex_js_1.TeXFont) || this;

    _this.chtmlStyles = null;

    _this.font.adaptiveCSS(_this.options.adaptiveCSS);

    _this.wrapperUsage = new Usage_js_1.Usage();
    return _this;
  }

  CHTML.prototype.escaped = function (math, html) {
    this.setDocument(html);
    return this.html('span', {}, [this.text(math.math)]);
  };

  CHTML.prototype.styleSheet = function (html) {
    if (this.chtmlStyles) {
      if (this.options.adaptiveCSS) {
        var styles = new StyleList_js_1.CssStyles();
        this.addWrapperStyles(styles);
        this.updateFontStyles(styles);
        this.adaptor.insertRules(this.chtmlStyles, styles.getStyleRules());
      }

      return this.chtmlStyles;
    }

    var sheet = this.chtmlStyles = _super.prototype.styleSheet.call(this, html);

    this.adaptor.setAttribute(sheet, 'id', CHTML.STYLESHEETID);
    this.wrapperUsage.update();
    return sheet;
  };

  CHTML.prototype.updateFontStyles = function (styles) {
    styles.addStyles(this.font.updateStyles({}));
  };

  CHTML.prototype.addWrapperStyles = function (styles) {
    var e_1, _a;

    if (!this.options.adaptiveCSS) {
      _super.prototype.addWrapperStyles.call(this, styles);

      return;
    }

    try {
      for (var _b = __values(this.wrapperUsage.update()), _c = _b.next(); !_c.done; _c = _b.next()) {
        var kind = _c.value;
        var wrapper = this.factory.getNodeClass(kind);
        wrapper && this.addClassStyles(wrapper, styles);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  };

  CHTML.prototype.addClassStyles = function (wrapper, styles) {
    var _a;

    var CLASS = wrapper;

    if (CLASS.autoStyle && CLASS.kind !== 'unknown') {
      styles.addStyles((_a = {}, _a['mjx-' + CLASS.kind] = {
        display: 'inline-block',
        'text-align': 'left'
      }, _a));
    }

    this.wrapperUsage.add(CLASS.kind);

    _super.prototype.addClassStyles.call(this, wrapper, styles);
  };

  CHTML.prototype.processMath = function (math, parent) {
    this.factory.wrap(math).toCHTML(parent);
  };

  CHTML.prototype.clearCache = function () {
    this.cssStyles.clear();
    this.font.clearCache();
    this.wrapperUsage.clear();
    this.chtmlStyles = null;
  };

  CHTML.prototype.reset = function () {
    this.clearCache();
  };

  CHTML.prototype.unknownText = function (text, variant, width) {
    if (width === void 0) {
      width = null;
    }

    var styles = {};
    var scale = 100 / this.math.metrics.scale;

    if (scale !== 100) {
      styles['font-size'] = this.fixed(scale, 1) + '%';
      styles.padding = LENGTHS.em(75 / scale) + ' 0 ' + LENGTHS.em(20 / scale) + ' 0';
    }

    if (variant !== '-explicitFont') {
      var c = string_js_1.unicodeChars(text);

      if (c.length !== 1 || c[0] < 0x1D400 || c[0] > 0x1D7FF) {
        this.cssFontStyles(this.font.getCssFont(variant), styles);
      }
    }

    if (width !== null) {
      var metrics = this.math.metrics;
      styles.width = Math.round(width * metrics.em * metrics.scale) + 'px';
    }

    return this.html('mjx-utext', {
      variant: variant,
      style: styles
    }, [this.text(text)]);
  };

  CHTML.prototype.measureTextNode = function (textNode) {
    var adaptor = this.adaptor;
    var text = adaptor.clone(textNode);
    adaptor.setStyle(text, 'font-family', adaptor.getStyle(text, 'font-family').replace(/MJXZERO, /g, ''));
    var style = {
      position: 'absolute',
      'white-space': 'nowrap'
    };
    var node = this.html('mjx-measure-text', {
      style: style
    }, [text]);
    adaptor.append(adaptor.parent(this.math.start.node), this.container);
    adaptor.append(this.container, node);
    var w = adaptor.nodeSize(text, this.math.metrics.em)[0] / this.math.metrics.scale;
    adaptor.remove(this.container);
    adaptor.remove(node);
    return {
      w: w,
      h: .75,
      d: .2
    };
  };

  CHTML.NAME = 'CHTML';
  CHTML.OPTIONS = __assign(__assign({}, OutputJax_js_1.CommonOutputJax.OPTIONS), {
    adaptiveCSS: true,
    matchFontHeight: true
  });
  CHTML.commonStyles = {
    'mjx-container[jax="CHTML"]': {
      'line-height': 0
    },
    'mjx-container [space="1"]': {
      'margin-left': '.111em'
    },
    'mjx-container [space="2"]': {
      'margin-left': '.167em'
    },
    'mjx-container [space="3"]': {
      'margin-left': '.222em'
    },
    'mjx-container [space="4"]': {
      'margin-left': '.278em'
    },
    'mjx-container [space="5"]': {
      'margin-left': '.333em'
    },
    'mjx-container [rspace="1"]': {
      'margin-right': '.111em'
    },
    'mjx-container [rspace="2"]': {
      'margin-right': '.167em'
    },
    'mjx-container [rspace="3"]': {
      'margin-right': '.222em'
    },
    'mjx-container [rspace="4"]': {
      'margin-right': '.278em'
    },
    'mjx-container [rspace="5"]': {
      'margin-right': '.333em'
    },
    'mjx-container [size="s"]': {
      'font-size': '70.7%'
    },
    'mjx-container [size="ss"]': {
      'font-size': '50%'
    },
    'mjx-container [size="Tn"]': {
      'font-size': '60%'
    },
    'mjx-container [size="sm"]': {
      'font-size': '85%'
    },
    'mjx-container [size="lg"]': {
      'font-size': '120%'
    },
    'mjx-container [size="Lg"]': {
      'font-size': '144%'
    },
    'mjx-container [size="LG"]': {
      'font-size': '173%'
    },
    'mjx-container [size="hg"]': {
      'font-size': '207%'
    },
    'mjx-container [size="HG"]': {
      'font-size': '249%'
    },
    'mjx-container [width="full"]': {
      width: '100%'
    },
    'mjx-box': {
      display: 'inline-block'
    },
    'mjx-block': {
      display: 'block'
    },
    'mjx-itable': {
      display: 'inline-table'
    },
    'mjx-row': {
      display: 'table-row'
    },
    'mjx-row > *': {
      display: 'table-cell'
    },
    'mjx-mtext': {
      display: 'inline-block'
    },
    'mjx-mstyle': {
      display: 'inline-block'
    },
    'mjx-merror': {
      display: 'inline-block',
      color: 'red',
      'background-color': 'yellow'
    },
    'mjx-mphantom': {
      visibility: 'hidden'
    },
    '_::-webkit-full-page-media, _:future, :root mjx-container': {
      'will-change': 'opacity'
    }
  };
  CHTML.STYLESHEETID = 'MJX-CHTML-styles';
  return CHTML;
}(OutputJax_js_1.CommonOutputJax);

exports.CHTML = CHTML;

/***/ }),

/***/ 6116:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) {
    if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
  }
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AddCSS = exports.CHTMLFontData = void 0;

var FontData_js_1 = __webpack_require__(5196);

var Usage_js_1 = __webpack_require__(3278);

var lengths_js_1 = __webpack_require__(5915);

__exportStar(__webpack_require__(5196), exports);

var CHTMLFontData = function (_super) {
  __extends(CHTMLFontData, _super);

  function CHTMLFontData() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.charUsage = new Usage_js_1.Usage();
    _this.delimUsage = new Usage_js_1.Usage();
    return _this;
  }

  CHTMLFontData.charOptions = function (font, n) {
    return _super.charOptions.call(this, font, n);
  };

  CHTMLFontData.prototype.adaptiveCSS = function (adapt) {
    this.options.adaptiveCSS = adapt;
  };

  CHTMLFontData.prototype.clearCache = function () {
    if (this.options.adaptiveCSS) {
      this.charUsage.clear();
      this.delimUsage.clear();
    }
  };

  CHTMLFontData.prototype.createVariant = function (name, inherit, link) {
    if (inherit === void 0) {
      inherit = null;
    }

    if (link === void 0) {
      link = null;
    }

    _super.prototype.createVariant.call(this, name, inherit, link);

    var CLASS = this.constructor;
    this.variant[name].classes = CLASS.defaultVariantClasses[name];
    this.variant[name].letter = CLASS.defaultVariantLetters[name];
  };

  CHTMLFontData.prototype.defineChars = function (name, chars) {
    var e_1, _a;

    _super.prototype.defineChars.call(this, name, chars);

    var letter = this.variant[name].letter;

    try {
      for (var _b = __values(Object.keys(chars)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var n = _c.value;
        var options = CHTMLFontData.charOptions(chars, parseInt(n));

        if (options.f === undefined) {
          options.f = letter;
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  };

  Object.defineProperty(CHTMLFontData.prototype, "styles", {
    get: function get() {
      var CLASS = this.constructor;

      var styles = __assign({}, CLASS.defaultStyles);

      this.addFontURLs(styles, CLASS.defaultFonts, this.options.fontURL);
      this.updateStyles(styles);
      return styles;
    },
    enumerable: false,
    configurable: true
  });

  CHTMLFontData.prototype.updateStyles = function (styles) {
    var e_2, _a, e_3, _b;

    try {
      for (var _c = __values(this.delimUsage.update()), _d = _c.next(); !_d.done; _d = _c.next()) {
        var N = _d.value;
        this.addDelimiterStyles(styles, N, this.delimiters[N]);
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_2) throw e_2.error;
      }
    }

    try {
      for (var _e = __values(this.charUsage.update()), _f = _e.next(); !_f.done; _f = _e.next()) {
        var _g = __read(_f.value, 2),
            name_1 = _g[0],
            N = _g[1];

        var variant = this.variant[name_1];
        this.addCharStyles(styles, variant.letter, N, variant.chars[N]);
      }
    } catch (e_3_1) {
      e_3 = {
        error: e_3_1
      };
    } finally {
      try {
        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
      } finally {
        if (e_3) throw e_3.error;
      }
    }

    return styles;
  };

  CHTMLFontData.prototype.addFontURLs = function (styles, fonts, url) {
    var e_4, _a;

    try {
      for (var _b = __values(Object.keys(fonts)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var name_2 = _c.value;

        var font = __assign({}, fonts[name_2]);

        font.src = font.src.replace(/%%URL%%/, url);
        styles[name_2] = font;
      }
    } catch (e_4_1) {
      e_4 = {
        error: e_4_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_4) throw e_4.error;
      }
    }
  };

  CHTMLFontData.prototype.addDelimiterStyles = function (styles, n, data) {
    var c = this.charSelector(n);

    if (data.c && data.c !== n) {
      c = this.charSelector(data.c);
      styles['.mjx-stretched mjx-c' + c + '::before'] = {
        content: this.charContent(data.c)
      };
    }

    if (!data.stretch) return;

    if (data.dir === 1) {
      this.addDelimiterVStyles(styles, c, data);
    } else {
      this.addDelimiterHStyles(styles, c, data);
    }
  };

  CHTMLFontData.prototype.addDelimiterVStyles = function (styles, c, data) {
    var HDW = data.HDW;

    var _a = __read(data.stretch, 4),
        beg = _a[0],
        ext = _a[1],
        end = _a[2],
        mid = _a[3];

    var Hb = this.addDelimiterVPart(styles, c, 'beg', beg, HDW);
    this.addDelimiterVPart(styles, c, 'ext', ext, HDW);
    var He = this.addDelimiterVPart(styles, c, 'end', end, HDW);
    var css = {};

    if (mid) {
      var Hm = this.addDelimiterVPart(styles, c, 'mid', mid, HDW);
      css.height = '50%';
      styles['mjx-stretchy-v' + c + ' > mjx-mid'] = {
        'margin-top': this.em(-Hm / 2),
        'margin-bottom': this.em(-Hm / 2)
      };
    }

    if (Hb) {
      css['border-top-width'] = this.em0(Hb - .03);
    }

    if (He) {
      css['border-bottom-width'] = this.em0(He - .03);
      styles['mjx-stretchy-v' + c + ' > mjx-end'] = {
        'margin-top': this.em(-He)
      };
    }

    if (Object.keys(css).length) {
      styles['mjx-stretchy-v' + c + ' > mjx-ext'] = css;
    }
  };

  CHTMLFontData.prototype.addDelimiterVPart = function (styles, c, part, n, HDW) {
    if (!n) return 0;
    var data = this.getDelimiterData(n);
    var dw = (HDW[2] - data[2]) / 2;
    var css = {
      content: this.charContent(n)
    };

    if (part !== 'ext') {
      css.padding = this.padding(data, dw);
    } else {
      css.width = this.em0(HDW[2]);

      if (dw) {
        css['padding-left'] = this.em0(dw);
      }
    }

    styles['mjx-stretchy-v' + c + ' mjx-' + part + ' mjx-c::before'] = css;
    return data[0] + data[1];
  };

  CHTMLFontData.prototype.addDelimiterHStyles = function (styles, c, data) {
    var _a = __read(data.stretch, 4),
        beg = _a[0],
        ext = _a[1],
        end = _a[2],
        mid = _a[3];

    var HDW = data.HDW;
    this.addDelimiterHPart(styles, c, 'beg', beg, HDW);
    this.addDelimiterHPart(styles, c, 'ext', ext, HDW);
    this.addDelimiterHPart(styles, c, 'end', end, HDW);

    if (mid) {
      this.addDelimiterHPart(styles, c, 'mid', mid, HDW);
      styles['mjx-stretchy-h' + c + ' > mjx-ext'] = {
        width: '50%'
      };
    }
  };

  CHTMLFontData.prototype.addDelimiterHPart = function (styles, c, part, n, HDW) {
    if (!n) return;
    var data = this.getDelimiterData(n);
    var options = data[3];
    var css = {
      content: options && options.c ? '"' + options.c + '"' : this.charContent(n)
    };
    css.padding = this.padding(HDW, 0, -HDW[2]);
    styles['mjx-stretchy-h' + c + ' mjx-' + part + ' mjx-c::before'] = css;
  };

  CHTMLFontData.prototype.addCharStyles = function (styles, vletter, n, data) {
    var options = data[3];
    var letter = options.f !== undefined ? options.f : vletter;
    var selector = 'mjx-c' + this.charSelector(n) + (letter ? '.TEX-' + letter : '');
    styles[selector + '::before'] = {
      padding: this.padding(data, 0, options.ic || 0),
      content: options.c != null ? '"' + options.c + '"' : this.charContent(n)
    };
  };

  CHTMLFontData.prototype.getDelimiterData = function (n) {
    return this.getChar('-smallop', n);
  };

  CHTMLFontData.prototype.em = function (n) {
    return lengths_js_1.em(n);
  };

  CHTMLFontData.prototype.em0 = function (n) {
    return lengths_js_1.em(Math.max(0, n));
  };

  CHTMLFontData.prototype.padding = function (_a, dw, ic) {
    var _b = __read(_a, 3),
        h = _b[0],
        d = _b[1],
        w = _b[2];

    if (dw === void 0) {
      dw = 0;
    }

    if (ic === void 0) {
      ic = 0;
    }

    return [h, w + ic, d, dw].map(this.em0).join(' ');
  };

  CHTMLFontData.prototype.charContent = function (n) {
    return '"' + (n >= 0x20 && n <= 0x7E && n !== 0x22 && n !== 0x27 && n !== 0x5C ? String.fromCharCode(n) : '\\' + n.toString(16).toUpperCase()) + '"';
  };

  CHTMLFontData.prototype.charSelector = function (n) {
    return '.mjx-c' + n.toString(16).toUpperCase();
  };

  CHTMLFontData.OPTIONS = __assign(__assign({}, FontData_js_1.FontData.OPTIONS), {
    fontURL: 'js/output/chtml/fonts/tex-woff-v2'
  });
  CHTMLFontData.defaultVariantClasses = {};
  CHTMLFontData.defaultVariantLetters = {};
  CHTMLFontData.defaultStyles = {
    'mjx-c::before': {
      display: 'block',
      width: 0
    }
  };
  CHTMLFontData.defaultFonts = {
    '@font-face /* 0 */': {
      'font-family': 'MJXZERO',
      src: 'url("%%URL%%/MathJax_Zero.woff") format("woff")'
    }
  };
  return CHTMLFontData;
}(FontData_js_1.FontData);

exports.CHTMLFontData = CHTMLFontData;

function AddCSS(font, options) {
  var e_5, _a;

  try {
    for (var _b = __values(Object.keys(options)), _c = _b.next(); !_c.done; _c = _b.next()) {
      var c = _c.value;
      var n = parseInt(c);
      Object.assign(FontData_js_1.FontData.charOptions(font, n), options[n]);
    }
  } catch (e_5_1) {
    e_5 = {
      error: e_5_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_5) throw e_5.error;
    }
  }

  return font;
}

exports.AddCSS = AddCSS;

/***/ }),

/***/ 6823:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) {
    if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
  }
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Arrow = exports.DiagonalArrow = exports.DiagonalStrike = exports.Border2 = exports.Border = exports.RenderElement = void 0;

var Notation = __webpack_require__(5798);

__exportStar(__webpack_require__(5798), exports);

var RenderElement = function RenderElement(name, offset) {
  if (offset === void 0) {
    offset = '';
  }

  return function (node, _child) {
    var shape = node.adjustBorder(node.html('mjx-' + name));

    if (offset) {
      var d = node.getOffset(offset);

      if (node.thickness !== Notation.THICKNESS || d) {
        var transform = "translate" + offset + "(" + node.em(node.thickness / 2 - d) + ")";
        node.adaptor.setStyle(shape, 'transform', transform);
      }
    }

    node.adaptor.append(node.chtml, shape);
  };
};

exports.RenderElement = RenderElement;

var Border = function Border(side) {
  return Notation.CommonBorder(function (node, child) {
    node.adaptor.setStyle(child, 'border-' + side, node.em(node.thickness) + ' solid');
  })(side);
};

exports.Border = Border;

var Border2 = function Border2(name, side1, side2) {
  return Notation.CommonBorder2(function (node, child) {
    var border = node.em(node.thickness) + ' solid';
    node.adaptor.setStyle(child, 'border-' + side1, border);
    node.adaptor.setStyle(child, 'border-' + side2, border);
  })(name, side1, side2);
};

exports.Border2 = Border2;

var DiagonalStrike = function DiagonalStrike(name, neg) {
  return Notation.CommonDiagonalStrike(function (cname) {
    return function (node, _child) {
      var _a = node.getBBox(),
          w = _a.w,
          h = _a.h,
          d = _a.d;

      var _b = __read(node.getArgMod(w, h + d), 2),
          a = _b[0],
          W = _b[1];

      var t = neg * node.thickness / 2;
      var strike = node.adjustBorder(node.html(cname, {
        style: {
          width: node.em(W),
          transform: 'rotate(' + node.fixed(-neg * a) + 'rad) translateY(' + t + 'em)'
        }
      }));
      node.adaptor.append(node.chtml, strike);
    };
  })(name);
};

exports.DiagonalStrike = DiagonalStrike;

var DiagonalArrow = function DiagonalArrow(name) {
  return Notation.CommonDiagonalArrow(function (node, arrow) {
    node.adaptor.append(node.chtml, arrow);
  })(name);
};

exports.DiagonalArrow = DiagonalArrow;

var Arrow = function Arrow(name) {
  return Notation.CommonArrow(function (node, arrow) {
    node.adaptor.append(node.chtml, arrow);
  })(name);
};

exports.Arrow = Arrow;

/***/ }),

/***/ 3278:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Usage = void 0;

var Usage = function () {
  function Usage() {
    this.used = new Set();
    this.needsUpdate = [];
  }

  Usage.prototype.add = function (item) {
    if (!this.used.has(item)) {
      this.needsUpdate.push(item);
    }

    this.used.add(item);
  };

  Usage.prototype.has = function (item) {
    return this.used.has(item);
  };

  Usage.prototype.clear = function () {
    this.used.clear();
    this.needsUpdate = [];
  };

  Usage.prototype.update = function () {
    var update = this.needsUpdate;
    this.needsUpdate = [];
    return update;
  };

  return Usage;
}();

exports.Usage = Usage;

/***/ }),

/***/ 5952:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLWrapper = exports.SPACE = exports.FONTSIZE = void 0;

var LENGTHS = __webpack_require__(5915);

var Wrapper_js_1 = __webpack_require__(3149);

var BBox_js_1 = __webpack_require__(8483);

exports.FONTSIZE = {
  '70.7%': 's',
  '70%': 's',
  '50%': 'ss',
  '60%': 'Tn',
  '85%': 'sm',
  '120%': 'lg',
  '144%': 'Lg',
  '173%': 'LG',
  '207%': 'hg',
  '249%': 'HG'
};
exports.SPACE = (_a = {}, _a[LENGTHS.em(2 / 18)] = '1', _a[LENGTHS.em(3 / 18)] = '2', _a[LENGTHS.em(4 / 18)] = '3', _a[LENGTHS.em(5 / 18)] = '4', _a[LENGTHS.em(6 / 18)] = '5', _a);

var CHTMLWrapper = function (_super) {
  __extends(CHTMLWrapper, _super);

  function CHTMLWrapper() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.chtml = null;
    return _this;
  }

  CHTMLWrapper.prototype.toCHTML = function (parent) {
    var e_1, _a;

    var chtml = this.standardCHTMLnode(parent);

    try {
      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;
        child.toCHTML(chtml);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  };

  CHTMLWrapper.prototype.standardCHTMLnode = function (parent) {
    this.markUsed();
    var chtml = this.createCHTMLnode(parent);
    this.handleStyles();
    this.handleVariant();
    this.handleScale();
    this.handleColor();
    this.handleSpace();
    this.handleAttributes();
    this.handlePWidth();
    return chtml;
  };

  CHTMLWrapper.prototype.markUsed = function () {
    this.jax.wrapperUsage.add(this.kind);
  };

  CHTMLWrapper.prototype.createCHTMLnode = function (parent) {
    var href = this.node.attributes.get('href');

    if (href) {
      parent = this.adaptor.append(parent, this.html('a', {
        href: href
      }));
    }

    this.chtml = this.adaptor.append(parent, this.html('mjx-' + this.node.kind));
    return this.chtml;
  };

  CHTMLWrapper.prototype.handleStyles = function () {
    if (!this.styles) return;
    var styles = this.styles.cssText;

    if (styles) {
      this.adaptor.setAttribute(this.chtml, 'style', styles);
      var family = this.styles.get('font-family');

      if (family) {
        this.adaptor.setStyle(this.chtml, 'font-family', 'MJXZERO, ' + family);
      }
    }
  };

  CHTMLWrapper.prototype.handleVariant = function () {
    if (this.node.isToken && this.variant !== '-explicitFont') {
      this.adaptor.setAttribute(this.chtml, 'class', (this.font.getVariant(this.variant) || this.font.getVariant('normal')).classes);
    }
  };

  CHTMLWrapper.prototype.handleScale = function () {
    this.setScale(this.chtml, this.bbox.rscale);
  };

  CHTMLWrapper.prototype.setScale = function (chtml, rscale) {
    var scale = Math.abs(rscale - 1) < .001 ? 1 : rscale;

    if (chtml && scale !== 1) {
      var size = this.percent(scale);

      if (exports.FONTSIZE[size]) {
        this.adaptor.setAttribute(chtml, 'size', exports.FONTSIZE[size]);
      } else {
        this.adaptor.setStyle(chtml, 'fontSize', size);
      }
    }

    return chtml;
  };

  CHTMLWrapper.prototype.handleSpace = function () {
    var e_2, _a;

    try {
      for (var _b = __values([[this.bbox.L, 'space', 'marginLeft'], [this.bbox.R, 'rspace', 'marginRight']]), _c = _b.next(); !_c.done; _c = _b.next()) {
        var data = _c.value;

        var _d = __read(data, 3),
            dimen = _d[0],
            name_1 = _d[1],
            margin = _d[2];

        if (dimen) {
          var space = this.em(dimen);

          if (exports.SPACE[space]) {
            this.adaptor.setAttribute(this.chtml, name_1, exports.SPACE[space]);
          } else {
            this.adaptor.setStyle(this.chtml, margin, space);
          }
        }
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }
  };

  CHTMLWrapper.prototype.handleColor = function () {
    var attributes = this.node.attributes;
    var mathcolor = attributes.getExplicit('mathcolor');
    var color = attributes.getExplicit('color');
    var mathbackground = attributes.getExplicit('mathbackground');
    var background = attributes.getExplicit('background');

    if (mathcolor || color) {
      this.adaptor.setStyle(this.chtml, 'color', mathcolor || color);
    }

    if (mathbackground || background) {
      this.adaptor.setStyle(this.chtml, 'backgroundColor', mathbackground || background);
    }
  };

  CHTMLWrapper.prototype.handleAttributes = function () {
    var e_3, _a, e_4, _b;

    var attributes = this.node.attributes;
    var defaults = attributes.getAllDefaults();
    var skip = CHTMLWrapper.skipAttributes;

    try {
      for (var _c = __values(attributes.getExplicitNames()), _d = _c.next(); !_d.done; _d = _c.next()) {
        var name_2 = _d.value;

        if (skip[name_2] === false || !(name_2 in defaults) && !skip[name_2] && !this.adaptor.hasAttribute(this.chtml, name_2)) {
          this.adaptor.setAttribute(this.chtml, name_2, attributes.getExplicit(name_2));
        }
      }
    } catch (e_3_1) {
      e_3 = {
        error: e_3_1
      };
    } finally {
      try {
        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_3) throw e_3.error;
      }
    }

    if (attributes.get('class')) {
      var names = attributes.get('class').trim().split(/ +/);

      try {
        for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
          var name_3 = names_1_1.value;
          this.adaptor.addClass(this.chtml, name_3);
        }
      } catch (e_4_1) {
        e_4 = {
          error: e_4_1
        };
      } finally {
        try {
          if (names_1_1 && !names_1_1.done && (_b = names_1.return)) _b.call(names_1);
        } finally {
          if (e_4) throw e_4.error;
        }
      }
    }
  };

  CHTMLWrapper.prototype.handlePWidth = function () {
    if (this.bbox.pwidth) {
      if (this.bbox.pwidth === BBox_js_1.BBox.fullWidth) {
        this.adaptor.setAttribute(this.chtml, 'width', 'full');
      } else {
        this.adaptor.setStyle(this.chtml, 'width', this.bbox.pwidth);
      }
    }
  };

  CHTMLWrapper.prototype.setIndent = function (chtml, align, shift) {
    var adaptor = this.adaptor;

    if (align === 'center' || align === 'left') {
      var L = this.getBBox().L;
      adaptor.setStyle(chtml, 'margin-left', this.em(shift + L));
    }

    if (align === 'center' || align === 'right') {
      var R = this.getBBox().R;
      adaptor.setStyle(chtml, 'margin-right', this.em(-shift + R));
    }
  };

  CHTMLWrapper.prototype.drawBBox = function () {
    var _a = this.getBBox(),
        w = _a.w,
        h = _a.h,
        d = _a.d,
        R = _a.R;

    var box = this.html('mjx-box', {
      style: {
        opacity: .25,
        'margin-left': this.em(-w - R)
      }
    }, [this.html('mjx-box', {
      style: {
        height: this.em(h),
        width: this.em(w),
        'background-color': 'red'
      }
    }), this.html('mjx-box', {
      style: {
        height: this.em(d),
        width: this.em(w),
        'margin-left': this.em(-w),
        'vertical-align': this.em(-d),
        'background-color': 'green'
      }
    })]);
    var node = this.chtml || this.parent.chtml;
    var size = this.adaptor.getAttribute(node, 'size');

    if (size) {
      this.adaptor.setAttribute(box, 'size', size);
    }

    var fontsize = this.adaptor.getStyle(node, 'fontSize');

    if (fontsize) {
      this.adaptor.setStyle(box, 'fontSize', fontsize);
    }

    this.adaptor.append(this.adaptor.parent(node), box);
    this.adaptor.setStyle(node, 'backgroundColor', '#FFEE00');
  };

  CHTMLWrapper.prototype.html = function (type, def, content) {
    if (def === void 0) {
      def = {};
    }

    if (content === void 0) {
      content = [];
    }

    return this.jax.html(type, def, content);
  };

  CHTMLWrapper.prototype.text = function (text) {
    return this.jax.text(text);
  };

  CHTMLWrapper.prototype.char = function (n) {
    return this.font.charSelector(n).substr(1);
  };

  CHTMLWrapper.kind = 'unknown';
  CHTMLWrapper.autoStyle = true;
  return CHTMLWrapper;
}(Wrapper_js_1.CommonWrapper);

exports.CHTMLWrapper = CHTMLWrapper;

/***/ }),

/***/ 8561:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLWrapperFactory = void 0;

var WrapperFactory_js_1 = __webpack_require__(3202);

var Wrappers_js_1 = __webpack_require__(589);

var CHTMLWrapperFactory = function (_super) {
  __extends(CHTMLWrapperFactory, _super);

  function CHTMLWrapperFactory() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLWrapperFactory.defaultNodes = Wrappers_js_1.CHTMLWrappers;
  return CHTMLWrapperFactory;
}(WrapperFactory_js_1.CommonWrapperFactory);

exports.CHTMLWrapperFactory = CHTMLWrapperFactory;

/***/ }),

/***/ 589:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLWrappers = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var math_js_1 = __webpack_require__(4462);

var mi_js_1 = __webpack_require__(5081);

var mo_js_1 = __webpack_require__(6466);

var mn_js_1 = __webpack_require__(4093);

var ms_js_1 = __webpack_require__(3803);

var mtext_js_1 = __webpack_require__(3816);

var mspace_js_1 = __webpack_require__(7925);

var mpadded_js_1 = __webpack_require__(3605);

var menclose_js_1 = __webpack_require__(9681);

var mrow_js_1 = __webpack_require__(867);

var mfenced_js_1 = __webpack_require__(4946);

var mfrac_js_1 = __webpack_require__(5840);

var msqrt_js_1 = __webpack_require__(3618);

var mroot_js_1 = __webpack_require__(6598);

var msubsup_js_1 = __webpack_require__(9606);

var munderover_js_1 = __webpack_require__(8734);

var mmultiscripts_js_1 = __webpack_require__(8516);

var mtable_js_1 = __webpack_require__(8612);

var mtr_js_1 = __webpack_require__(4851);

var mtd_js_1 = __webpack_require__(8931);

var maction_js_1 = __webpack_require__(976);

var mglyph_js_1 = __webpack_require__(8560);

var semantics_js_1 = __webpack_require__(723);

var TeXAtom_js_1 = __webpack_require__(7802);

var TextNode_js_1 = __webpack_require__(7310);

exports.CHTMLWrappers = (_a = {}, _a[math_js_1.CHTMLmath.kind] = math_js_1.CHTMLmath, _a[mrow_js_1.CHTMLmrow.kind] = mrow_js_1.CHTMLmrow, _a[mrow_js_1.CHTMLinferredMrow.kind] = mrow_js_1.CHTMLinferredMrow, _a[mi_js_1.CHTMLmi.kind] = mi_js_1.CHTMLmi, _a[mo_js_1.CHTMLmo.kind] = mo_js_1.CHTMLmo, _a[mn_js_1.CHTMLmn.kind] = mn_js_1.CHTMLmn, _a[ms_js_1.CHTMLms.kind] = ms_js_1.CHTMLms, _a[mtext_js_1.CHTMLmtext.kind] = mtext_js_1.CHTMLmtext, _a[mspace_js_1.CHTMLmspace.kind] = mspace_js_1.CHTMLmspace, _a[mpadded_js_1.CHTMLmpadded.kind] = mpadded_js_1.CHTMLmpadded, _a[menclose_js_1.CHTMLmenclose.kind] = menclose_js_1.CHTMLmenclose, _a[mfrac_js_1.CHTMLmfrac.kind] = mfrac_js_1.CHTMLmfrac, _a[msqrt_js_1.CHTMLmsqrt.kind] = msqrt_js_1.CHTMLmsqrt, _a[mroot_js_1.CHTMLmroot.kind] = mroot_js_1.CHTMLmroot, _a[msubsup_js_1.CHTMLmsub.kind] = msubsup_js_1.CHTMLmsub, _a[msubsup_js_1.CHTMLmsup.kind] = msubsup_js_1.CHTMLmsup, _a[msubsup_js_1.CHTMLmsubsup.kind] = msubsup_js_1.CHTMLmsubsup, _a[munderover_js_1.CHTMLmunder.kind] = munderover_js_1.CHTMLmunder, _a[munderover_js_1.CHTMLmover.kind] = munderover_js_1.CHTMLmover, _a[munderover_js_1.CHTMLmunderover.kind] = munderover_js_1.CHTMLmunderover, _a[mmultiscripts_js_1.CHTMLmmultiscripts.kind] = mmultiscripts_js_1.CHTMLmmultiscripts, _a[mfenced_js_1.CHTMLmfenced.kind] = mfenced_js_1.CHTMLmfenced, _a[mtable_js_1.CHTMLmtable.kind] = mtable_js_1.CHTMLmtable, _a[mtr_js_1.CHTMLmtr.kind] = mtr_js_1.CHTMLmtr, _a[mtr_js_1.CHTMLmlabeledtr.kind] = mtr_js_1.CHTMLmlabeledtr, _a[mtd_js_1.CHTMLmtd.kind] = mtd_js_1.CHTMLmtd, _a[maction_js_1.CHTMLmaction.kind] = maction_js_1.CHTMLmaction, _a[mglyph_js_1.CHTMLmglyph.kind] = mglyph_js_1.CHTMLmglyph, _a[semantics_js_1.CHTMLsemantics.kind] = semantics_js_1.CHTMLsemantics, _a[semantics_js_1.CHTMLannotation.kind] = semantics_js_1.CHTMLannotation, _a[semantics_js_1.CHTMLannotationXML.kind] = semantics_js_1.CHTMLannotationXML, _a[semantics_js_1.CHTMLxml.kind] = semantics_js_1.CHTMLxml, _a[TeXAtom_js_1.CHTMLTeXAtom.kind] = TeXAtom_js_1.CHTMLTeXAtom, _a[TextNode_js_1.CHTMLTextNode.kind] = TextNode_js_1.CHTMLTextNode, _a[Wrapper_js_1.CHTMLWrapper.kind] = Wrapper_js_1.CHTMLWrapper, _a);

/***/ }),

/***/ 7802:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLTeXAtom = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var TeXAtom_js_1 = __webpack_require__(5371);

var TeXAtom_js_2 = __webpack_require__(5500);

var MmlNode_js_1 = __webpack_require__(4653);

var CHTMLTeXAtom = function (_super) {
  __extends(CHTMLTeXAtom, _super);

  function CHTMLTeXAtom() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLTeXAtom.prototype.toCHTML = function (parent) {
    _super.prototype.toCHTML.call(this, parent);

    this.adaptor.setAttribute(this.chtml, 'texclass', MmlNode_js_1.TEXCLASSNAMES[this.node.texClass]);

    if (this.node.texClass === MmlNode_js_1.TEXCLASS.VCENTER) {
      var bbox = this.childNodes[0].getBBox();
      var h = bbox.h,
          d = bbox.d;
      var a = this.font.params.axis_height;
      var dh = (h + d) / 2 + a - h;
      this.adaptor.setStyle(this.chtml, 'verticalAlign', this.em(dh));
    }
  };

  CHTMLTeXAtom.kind = TeXAtom_js_2.TeXAtom.prototype.kind;
  return CHTMLTeXAtom;
}(TeXAtom_js_1.CommonTeXAtomMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLTeXAtom = CHTMLTeXAtom;

/***/ }),

/***/ 7310:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLTextNode = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

var Wrapper_js_1 = __webpack_require__(5952);

var TextNode_js_1 = __webpack_require__(8711);

var CHTMLTextNode = function (_super) {
  __extends(CHTMLTextNode, _super);

  function CHTMLTextNode() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLTextNode.prototype.toCHTML = function (parent) {
    var e_1, _a;

    this.markUsed();
    var adaptor = this.adaptor;
    var variant = this.parent.variant;
    var text = this.node.getText();

    if (variant === '-explicitFont') {
      adaptor.append(parent, this.jax.unknownText(text, variant, this.getBBox().w));
    } else {
      var chars = this.remappedText(text, variant);

      try {
        for (var chars_1 = __values(chars), chars_1_1 = chars_1.next(); !chars_1_1.done; chars_1_1 = chars_1.next()) {
          var n = chars_1_1.value;
          var data = this.getVariantChar(variant, n)[3];
          var font = data.f ? ' TEX-' + data.f : '';
          var node = data.unknown ? this.jax.unknownText(String.fromCodePoint(n), variant) : this.html('mjx-c', {
            class: this.char(n) + font
          });
          adaptor.append(parent, node);
          !data.unknown && this.font.charUsage.add([variant, n]);
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (chars_1_1 && !chars_1_1.done && (_a = chars_1.return)) _a.call(chars_1);
        } finally {
          if (e_1) throw e_1.error;
        }
      }
    }
  };

  CHTMLTextNode.kind = MmlNode_js_1.TextNode.prototype.kind;
  CHTMLTextNode.autoStyle = false;
  CHTMLTextNode.styles = {
    'mjx-c': {
      display: 'inline-block'
    },
    'mjx-utext': {
      display: 'inline-block',
      padding: '.75em 0 .2em 0'
    }
  };
  return CHTMLTextNode;
}(TextNode_js_1.CommonTextNodeMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLTextNode = CHTMLTextNode;

/***/ }),

/***/ 976:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmaction = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var maction_js_1 = __webpack_require__(6184);

var maction_js_2 = __webpack_require__(6184);

var maction_js_3 = __webpack_require__(6482);

var CHTMLmaction = function (_super) {
  __extends(CHTMLmaction, _super);

  function CHTMLmaction() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmaction.prototype.toCHTML = function (parent) {
    var chtml = this.standardCHTMLnode(parent);
    var child = this.selected;
    child.toCHTML(chtml);
    this.action(this, this.data);
  };

  CHTMLmaction.prototype.setEventHandler = function (type, handler) {
    this.chtml.addEventListener(type, handler);
  };

  CHTMLmaction.kind = maction_js_3.MmlMaction.prototype.kind;
  CHTMLmaction.styles = {
    'mjx-maction': {
      position: 'relative'
    },
    'mjx-maction > mjx-tool': {
      display: 'none',
      position: 'absolute',
      bottom: 0,
      right: 0,
      width: 0,
      height: 0,
      'z-index': 500
    },
    'mjx-tool > mjx-tip': {
      display: 'inline-block',
      padding: '.2em',
      border: '1px solid #888',
      'font-size': '70%',
      'background-color': '#F8F8F8',
      color: 'black',
      'box-shadow': '2px 2px 5px #AAAAAA'
    },
    'mjx-maction[toggle]': {
      cursor: 'pointer'
    },
    'mjx-status': {
      display: 'block',
      position: 'fixed',
      left: '1em',
      bottom: '1em',
      'min-width': '25%',
      padding: '.2em .4em',
      border: '1px solid #888',
      'font-size': '90%',
      'background-color': '#F8F8F8',
      color: 'black'
    }
  };
  CHTMLmaction.actions = new Map([['toggle', [function (node, _data) {
    node.adaptor.setAttribute(node.chtml, 'toggle', node.node.attributes.get('selection'));
    var math = node.factory.jax.math;
    var document = node.factory.jax.document;
    var mml = node.node;
    node.setEventHandler('click', function (event) {
      if (!math.end.node) {
        math.start.node = math.end.node = math.typesetRoot;
        math.start.n = math.end.n = 0;
      }

      mml.nextToggleSelection();
      math.rerender(document);
      event.stopPropagation();
    });
  }, {}]], ['tooltip', [function (node, data) {
    var tip = node.childNodes[1];
    if (!tip) return;

    if (tip.node.isKind('mtext')) {
      var text = tip.node.getText();
      node.adaptor.setAttribute(node.chtml, 'title', text);
    } else {
      var adaptor_1 = node.adaptor;
      var tool_1 = adaptor_1.append(node.chtml, node.html('mjx-tool', {
        style: {
          bottom: node.em(-node.dy),
          right: node.em(-node.dx)
        }
      }, [node.html('mjx-tip')]));
      tip.toCHTML(adaptor_1.firstChild(tool_1));
      node.setEventHandler('mouseover', function (event) {
        data.stopTimers(node, data);
        var timeout = setTimeout(function () {
          return adaptor_1.setStyle(tool_1, 'display', 'block');
        }, data.postDelay);
        data.hoverTimer.set(node, timeout);
        event.stopPropagation();
      });
      node.setEventHandler('mouseout', function (event) {
        data.stopTimers(node, data);
        var timeout = setTimeout(function () {
          return adaptor_1.setStyle(tool_1, 'display', '');
        }, data.clearDelay);
        data.clearTimer.set(node, timeout);
        event.stopPropagation();
      });
    }
  }, maction_js_2.TooltipData]], ['statusline', [function (node, data) {
    var tip = node.childNodes[1];
    if (!tip) return;

    if (tip.node.isKind('mtext')) {
      var adaptor_2 = node.adaptor;
      var text_1 = tip.node.getText();
      adaptor_2.setAttribute(node.chtml, 'statusline', text_1);
      node.setEventHandler('mouseover', function (event) {
        if (data.status === null) {
          var body = adaptor_2.body(adaptor_2.document);
          data.status = adaptor_2.append(body, node.html('mjx-status', {}, [node.text(text_1)]));
        }

        event.stopPropagation();
      });
      node.setEventHandler('mouseout', function (event) {
        if (data.status) {
          adaptor_2.remove(data.status);
          data.status = null;
        }

        event.stopPropagation();
      });
    }
  }, {
    status: null
  }]]]);
  return CHTMLmaction;
}(maction_js_1.CommonMactionMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmaction = CHTMLmaction;

/***/ }),

/***/ 4462:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmath = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var math_js_1 = __webpack_require__(3639);

var math_js_2 = __webpack_require__(7312);

var BBox_js_1 = __webpack_require__(8483);

var CHTMLmath = function (_super) {
  __extends(CHTMLmath, _super);

  function CHTMLmath() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmath.prototype.toCHTML = function (parent) {
    _super.prototype.toCHTML.call(this, parent);

    var chtml = this.chtml;
    var adaptor = this.adaptor;
    var display = this.node.attributes.get('display') === 'block';

    if (display) {
      adaptor.setAttribute(chtml, 'display', 'true');
      adaptor.setAttribute(parent, 'display', 'true');
      this.handleDisplay(parent);
    } else {
      this.handleInline(parent);
    }

    adaptor.addClass(chtml, 'MJX-TEX');
  };

  CHTMLmath.prototype.handleDisplay = function (parent) {
    var adaptor = this.adaptor;

    var _a = __read(this.getAlignShift(), 2),
        align = _a[0],
        shift = _a[1];

    if (align !== 'center') {
      adaptor.setAttribute(parent, 'justify', align);
    }

    if (this.bbox.pwidth === BBox_js_1.BBox.fullWidth) {
      adaptor.setAttribute(parent, 'width', 'full');

      if (this.jax.table) {
        var _b = this.jax.table.getBBox(),
            L = _b.L,
            w = _b.w,
            R = _b.R;

        if (align === 'right') {
          R = Math.max(R || -shift, -shift);
        } else if (align === 'left') {
          L = Math.max(L || shift, shift);
        } else if (align === 'center') {
          w += 2 * Math.abs(shift);
        }

        var W = this.em(Math.max(0, L + w + R));
        adaptor.setStyle(parent, 'min-width', W);
        adaptor.setStyle(this.jax.table.chtml, 'min-width', W);
      }
    } else {
      this.setIndent(this.chtml, align, shift);
    }
  };

  CHTMLmath.prototype.handleInline = function (parent) {
    var adaptor = this.adaptor;
    var margin = adaptor.getStyle(this.chtml, 'margin-right');

    if (margin) {
      adaptor.setStyle(this.chtml, 'margin-right', '');
      adaptor.setStyle(parent, 'margin-right', margin);
      adaptor.setStyle(parent, 'width', '0');
    }
  };

  CHTMLmath.prototype.setChildPWidths = function (recompute, w, clear) {
    if (w === void 0) {
      w = null;
    }

    if (clear === void 0) {
      clear = true;
    }

    return this.parent ? _super.prototype.setChildPWidths.call(this, recompute, w, clear) : false;
  };

  CHTMLmath.kind = math_js_2.MmlMath.prototype.kind;
  CHTMLmath.styles = {
    'mjx-math': {
      'line-height': 0,
      'text-align': 'left',
      'text-indent': 0,
      'font-style': 'normal',
      'font-weight': 'normal',
      'font-size': '100%',
      'font-size-adjust': 'none',
      'letter-spacing': 'normal',
      'word-wrap': 'normal',
      'word-spacing': 'normal',
      'white-space': 'nowrap',
      'direction': 'ltr',
      'padding': '1px 0'
    },
    'mjx-container[jax="CHTML"][display="true"]': {
      display: 'block',
      'text-align': 'center',
      margin: '1em 0'
    },
    'mjx-container[jax="CHTML"][display="true"][width="full"]': {
      display: 'flex'
    },
    'mjx-container[jax="CHTML"][display="true"] mjx-math': {
      padding: 0
    },
    'mjx-container[jax="CHTML"][justify="left"]': {
      'text-align': 'left'
    },
    'mjx-container[jax="CHTML"][justify="right"]': {
      'text-align': 'right'
    }
  };
  return CHTMLmath;
}(math_js_1.CommonMathMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmath = CHTMLmath;

/***/ }),

/***/ 9681:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmenclose = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var menclose_js_1 = __webpack_require__(7170);

var Notation = __webpack_require__(6823);

var menclose_js_2 = __webpack_require__(2895);

var lengths_js_1 = __webpack_require__(5915);

function Angle(x, y) {
  return Math.atan2(x, y).toFixed(3).replace(/\.?0+$/, '');
}

var ANGLE = Angle(Notation.ARROWDX, Notation.ARROWY);

var CHTMLmenclose = function (_super) {
  __extends(CHTMLmenclose, _super);

  function CHTMLmenclose() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmenclose.prototype.toCHTML = function (parent) {
    var e_1, _a, e_2, _b;

    var adaptor = this.adaptor;
    var chtml = this.standardCHTMLnode(parent);
    var block = adaptor.append(chtml, this.html('mjx-box'));

    if (this.renderChild) {
      this.renderChild(this, block);
    } else {
      this.childNodes[0].toCHTML(block);
    }

    try {
      for (var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()) {
        var name_1 = _d.value;
        var notation = this.notations[name_1];
        !notation.renderChild && notation.renderer(this, block);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    var pbox = this.getPadding();

    try {
      for (var _e = __values(Notation.sideNames), _f = _e.next(); !_f.done; _f = _e.next()) {
        var name_2 = _f.value;
        var i = Notation.sideIndex[name_2];
        pbox[i] > 0 && adaptor.setStyle(block, 'padding-' + name_2, this.em(pbox[i]));
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
      } finally {
        if (e_2) throw e_2.error;
      }
    }
  };

  CHTMLmenclose.prototype.arrow = function (w, a, double, offset, dist) {
    if (offset === void 0) {
      offset = '';
    }

    if (dist === void 0) {
      dist = 0;
    }

    var W = this.getBBox().w;
    var style = {
      width: this.em(w)
    };

    if (W !== w) {
      style.left = this.em((W - w) / 2);
    }

    if (a) {
      style.transform = 'rotate(' + this.fixed(a) + 'rad)';
    }

    var arrow = this.html('mjx-arrow', {
      style: style
    }, [this.html('mjx-aline'), this.html('mjx-rthead'), this.html('mjx-rbhead')]);

    if (double) {
      this.adaptor.append(arrow, this.html('mjx-lthead'));
      this.adaptor.append(arrow, this.html('mjx-lbhead'));
      this.adaptor.setAttribute(arrow, 'double', 'true');
    }

    this.adjustArrow(arrow, double);
    this.moveArrow(arrow, offset, dist);
    return arrow;
  };

  CHTMLmenclose.prototype.adjustArrow = function (arrow, double) {
    var _this = this;

    var t = this.thickness;
    var head = this.arrowhead;
    if (head.x === Notation.ARROWX && head.y === Notation.ARROWY && head.dx === Notation.ARROWDX && t === Notation.THICKNESS) return;

    var _a = __read([t * head.x, t * head.y].map(function (x) {
      return _this.em(x);
    }), 2),
        x = _a[0],
        y = _a[1];

    var a = Angle(head.dx, head.y);

    var _b = __read(this.adaptor.childNodes(arrow), 5),
        line = _b[0],
        rthead = _b[1],
        rbhead = _b[2],
        lthead = _b[3],
        lbhead = _b[4];

    this.adjustHead(rthead, [y, '0', '1px', x], a);
    this.adjustHead(rbhead, ['1px', '0', y, x], '-' + a);
    this.adjustHead(lthead, [y, x, '1px', '0'], '-' + a);
    this.adjustHead(lbhead, ['1px', x, y, '0'], a);
    this.adjustLine(line, t, head.x, double);
  };

  CHTMLmenclose.prototype.adjustHead = function (head, border, a) {
    if (head) {
      this.adaptor.setStyle(head, 'border-width', border.join(' '));
      this.adaptor.setStyle(head, 'transform', 'skewX(' + a + 'rad)');
    }
  };

  CHTMLmenclose.prototype.adjustLine = function (line, t, x, double) {
    this.adaptor.setStyle(line, 'borderTop', this.em(t) + ' solid');
    this.adaptor.setStyle(line, 'top', this.em(-t / 2));
    this.adaptor.setStyle(line, 'right', this.em(t * (x - 1)));

    if (double) {
      this.adaptor.setStyle(line, 'left', this.em(t * (x - 1)));
    }
  };

  CHTMLmenclose.prototype.moveArrow = function (arrow, offset, d) {
    if (!d) return;
    var transform = this.adaptor.getStyle(arrow, 'transform');
    this.adaptor.setStyle(arrow, 'transform', "translate" + offset + "(" + this.em(-d) + ")" + (transform ? ' ' + transform : ''));
  };

  CHTMLmenclose.prototype.adjustBorder = function (node) {
    if (this.thickness !== Notation.THICKNESS) {
      this.adaptor.setStyle(node, 'borderWidth', this.em(this.thickness));
    }

    return node;
  };

  CHTMLmenclose.prototype.adjustThickness = function (shape) {
    if (this.thickness !== Notation.THICKNESS) {
      this.adaptor.setStyle(shape, 'strokeWidth', this.fixed(this.thickness));
    }

    return shape;
  };

  CHTMLmenclose.prototype.fixed = function (m, n) {
    if (n === void 0) {
      n = 3;
    }

    if (Math.abs(m) < .0006) {
      return '0';
    }

    return m.toFixed(n).replace(/\.?0+$/, '');
  };

  CHTMLmenclose.prototype.em = function (m) {
    return _super.prototype.em.call(this, m);
  };

  CHTMLmenclose.kind = menclose_js_2.MmlMenclose.prototype.kind;
  CHTMLmenclose.styles = {
    'mjx-menclose': {
      position: 'relative'
    },
    'mjx-menclose > mjx-dstrike': {
      display: 'inline-block',
      left: 0,
      top: 0,
      position: 'absolute',
      'border-top': Notation.SOLID,
      'transform-origin': 'top left'
    },
    'mjx-menclose > mjx-ustrike': {
      display: 'inline-block',
      left: 0,
      bottom: 0,
      position: 'absolute',
      'border-top': Notation.SOLID,
      'transform-origin': 'bottom left'
    },
    'mjx-menclose > mjx-hstrike': {
      'border-top': Notation.SOLID,
      position: 'absolute',
      left: 0,
      right: 0,
      bottom: '50%',
      transform: 'translateY(' + lengths_js_1.em(Notation.THICKNESS / 2) + ')'
    },
    'mjx-menclose > mjx-vstrike': {
      'border-left': Notation.SOLID,
      position: 'absolute',
      top: 0,
      bottom: 0,
      right: '50%',
      transform: 'translateX(' + lengths_js_1.em(Notation.THICKNESS / 2) + ')'
    },
    'mjx-menclose > mjx-rbox': {
      position: 'absolute',
      top: 0,
      bottom: 0,
      right: 0,
      left: 0,
      'border': Notation.SOLID,
      'border-radius': lengths_js_1.em(Notation.THICKNESS + Notation.PADDING)
    },
    'mjx-menclose > mjx-cbox': {
      position: 'absolute',
      top: 0,
      bottom: 0,
      right: 0,
      left: 0,
      'border': Notation.SOLID,
      'border-radius': '50%'
    },
    'mjx-menclose > mjx-arrow': {
      position: 'absolute',
      left: 0,
      bottom: '50%',
      height: 0,
      width: 0
    },
    'mjx-menclose > mjx-arrow > *': {
      display: 'block',
      position: 'absolute',
      'transform-origin': 'bottom',
      'border-left': lengths_js_1.em(Notation.THICKNESS * Notation.ARROWX) + ' solid',
      'border-right': 0,
      'box-sizing': 'border-box'
    },
    'mjx-menclose > mjx-arrow > mjx-aline': {
      left: 0,
      top: lengths_js_1.em(-Notation.THICKNESS / 2),
      right: lengths_js_1.em(Notation.THICKNESS * (Notation.ARROWX - 1)),
      height: 0,
      'border-top': lengths_js_1.em(Notation.THICKNESS) + ' solid',
      'border-left': 0
    },
    'mjx-menclose > mjx-arrow[double] > mjx-aline': {
      left: lengths_js_1.em(Notation.THICKNESS * (Notation.ARROWX - 1)),
      height: 0
    },
    'mjx-menclose > mjx-arrow > mjx-rthead': {
      transform: 'skewX(' + ANGLE + 'rad)',
      right: 0,
      bottom: '-1px',
      'border-bottom': '1px solid transparent',
      'border-top': lengths_js_1.em(Notation.THICKNESS * Notation.ARROWY) + ' solid transparent'
    },
    'mjx-menclose > mjx-arrow > mjx-rbhead': {
      transform: 'skewX(-' + ANGLE + 'rad)',
      'transform-origin': 'top',
      right: 0,
      top: '-1px',
      'border-top': '1px solid transparent',
      'border-bottom': lengths_js_1.em(Notation.THICKNESS * Notation.ARROWY) + ' solid transparent'
    },
    'mjx-menclose > mjx-arrow > mjx-lthead': {
      transform: 'skewX(-' + ANGLE + 'rad)',
      left: 0,
      bottom: '-1px',
      'border-left': 0,
      'border-right': lengths_js_1.em(Notation.THICKNESS * Notation.ARROWX) + ' solid',
      'border-bottom': '1px solid transparent',
      'border-top': lengths_js_1.em(Notation.THICKNESS * Notation.ARROWY) + ' solid transparent'
    },
    'mjx-menclose > mjx-arrow > mjx-lbhead': {
      transform: 'skewX(' + ANGLE + 'rad)',
      'transform-origin': 'top',
      left: 0,
      top: '-1px',
      'border-left': 0,
      'border-right': lengths_js_1.em(Notation.THICKNESS * Notation.ARROWX) + ' solid',
      'border-top': '1px solid transparent',
      'border-bottom': lengths_js_1.em(Notation.THICKNESS * Notation.ARROWY) + ' solid transparent'
    },
    'mjx-menclose > dbox': {
      position: 'absolute',
      top: 0,
      bottom: 0,
      left: lengths_js_1.em(-1.5 * Notation.PADDING),
      width: lengths_js_1.em(3 * Notation.PADDING),
      border: lengths_js_1.em(Notation.THICKNESS) + ' solid',
      'border-radius': '50%',
      'clip-path': 'inset(0 0 0 ' + lengths_js_1.em(1.5 * Notation.PADDING) + ')',
      'box-sizing': 'border-box'
    }
  };
  CHTMLmenclose.notations = new Map([Notation.Border('top'), Notation.Border('right'), Notation.Border('bottom'), Notation.Border('left'), Notation.Border2('actuarial', 'top', 'right'), Notation.Border2('madruwb', 'bottom', 'right'), Notation.DiagonalStrike('up', 1), Notation.DiagonalStrike('down', -1), ['horizontalstrike', {
    renderer: Notation.RenderElement('hstrike', 'Y'),
    bbox: function bbox(node) {
      return [0, node.padding, 0, node.padding];
    }
  }], ['verticalstrike', {
    renderer: Notation.RenderElement('vstrike', 'X'),
    bbox: function bbox(node) {
      return [node.padding, 0, node.padding, 0];
    }
  }], ['box', {
    renderer: function renderer(node, child) {
      node.adaptor.setStyle(child, 'border', node.em(node.thickness) + ' solid');
    },
    bbox: Notation.fullBBox,
    border: Notation.fullBorder,
    remove: 'left right top bottom'
  }], ['roundedbox', {
    renderer: Notation.RenderElement('rbox'),
    bbox: Notation.fullBBox
  }], ['circle', {
    renderer: Notation.RenderElement('cbox'),
    bbox: Notation.fullBBox
  }], ['phasorangle', {
    renderer: function renderer(node, child) {
      var _a = node.getBBox(),
          h = _a.h,
          d = _a.d;

      var _b = __read(node.getArgMod(1.75 * node.padding, h + d), 2),
          a = _b[0],
          W = _b[1];

      var t = node.thickness * Math.sin(a) * .9;
      node.adaptor.setStyle(child, 'border-bottom', node.em(node.thickness) + ' solid');
      var strike = node.adjustBorder(node.html('mjx-ustrike', {
        style: {
          width: node.em(W),
          transform: 'translateX(' + node.em(t) + ') rotate(' + node.fixed(-a) + 'rad)'
        }
      }));
      node.adaptor.append(node.chtml, strike);
    },
    bbox: function bbox(node) {
      var p = node.padding / 2;
      var t = node.thickness;
      return [2 * p, p, p + t, 3 * p + t];
    },
    border: function border(node) {
      return [0, 0, node.thickness, 0];
    },
    remove: 'bottom'
  }], Notation.Arrow('up'), Notation.Arrow('down'), Notation.Arrow('left'), Notation.Arrow('right'), Notation.Arrow('updown'), Notation.Arrow('leftright'), Notation.DiagonalArrow('updiagonal'), Notation.DiagonalArrow('northeast'), Notation.DiagonalArrow('southeast'), Notation.DiagonalArrow('northwest'), Notation.DiagonalArrow('southwest'), Notation.DiagonalArrow('northeastsouthwest'), Notation.DiagonalArrow('northwestsoutheast'), ['longdiv', {
    renderer: function renderer(node, child) {
      var adaptor = node.adaptor;
      adaptor.setStyle(child, 'border-top', node.em(node.thickness) + ' solid');
      var arc = adaptor.append(node.chtml, node.html('dbox'));
      var t = node.thickness;
      var p = node.padding;

      if (t !== Notation.THICKNESS) {
        adaptor.setStyle(arc, 'border-width', node.em(t));
      }

      if (p !== Notation.PADDING) {
        adaptor.setStyle(arc, 'left', node.em(-1.5 * p));
        adaptor.setStyle(arc, 'width', node.em(3 * p));
        adaptor.setStyle(arc, 'clip-path', 'inset(0 0 0 ' + node.em(1.5 * p) + ')');
      }
    },
    bbox: function bbox(node) {
      var p = node.padding;
      var t = node.thickness;
      return [p + t, p, p, 2 * p + t / 2];
    }
  }], ['radical', {
    renderer: function renderer(node, child) {
      node.msqrt.toCHTML(child);
      var TRBL = node.sqrtTRBL();
      node.adaptor.setStyle(node.msqrt.chtml, 'margin', TRBL.map(function (x) {
        return node.em(-x);
      }).join(' '));
    },
    init: function init(node) {
      node.msqrt = node.createMsqrt(node.childNodes[0]);
    },
    bbox: function bbox(node) {
      return node.sqrtTRBL();
    },
    renderChild: true
  }]]);
  return CHTMLmenclose;
}(menclose_js_1.CommonMencloseMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmenclose = CHTMLmenclose;

/***/ }),

/***/ 4946:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmfenced = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var mfenced_js_1 = __webpack_require__(8554);

var mfenced_js_2 = __webpack_require__(5356);

var CHTMLmfenced = function (_super) {
  __extends(CHTMLmfenced, _super);

  function CHTMLmfenced() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmfenced.prototype.toCHTML = function (parent) {
    var chtml = this.standardCHTMLnode(parent);
    this.mrow.toCHTML(chtml);
  };

  CHTMLmfenced.kind = mfenced_js_2.MmlMfenced.prototype.kind;
  return CHTMLmfenced;
}(mfenced_js_1.CommonMfencedMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmfenced = CHTMLmfenced;

/***/ }),

/***/ 5840:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmfrac = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var mfrac_js_1 = __webpack_require__(7133);

var mfrac_js_2 = __webpack_require__(487);

var CHTMLmfrac = function (_super) {
  __extends(CHTMLmfrac, _super);

  function CHTMLmfrac() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmfrac.prototype.toCHTML = function (parent) {
    this.standardCHTMLnode(parent);

    var _a = this.node.attributes.getList('linethickness', 'bevelled'),
        linethickness = _a.linethickness,
        bevelled = _a.bevelled;

    var display = this.isDisplay();

    if (bevelled) {
      this.makeBevelled(display);
    } else {
      var thickness = this.length2em(String(linethickness), .06);

      if (thickness === 0) {
        this.makeAtop(display);
      } else {
        this.makeFraction(display, thickness);
      }
    }
  };

  CHTMLmfrac.prototype.makeFraction = function (display, t) {
    var _a = this.node.attributes.getList('numalign', 'denomalign'),
        numalign = _a.numalign,
        denomalign = _a.denomalign;

    var withDelims = this.node.getProperty('withDelims');
    var attr = display ? {
      type: 'd'
    } : {};
    var fattr = withDelims ? __assign(__assign({}, attr), {
      delims: 'true'
    }) : __assign({}, attr);
    var nattr = numalign !== 'center' ? {
      align: numalign
    } : {};
    var dattr = denomalign !== 'center' ? {
      align: denomalign
    } : {};

    var dsattr = __assign({}, attr),
        nsattr = __assign({}, attr);

    var tex = this.font.params;

    if (t !== .06) {
      var a = tex.axis_height;
      var tEm = this.em(t);

      var _b = this.getTUV(display, t),
          T = _b.T,
          u = _b.u,
          v = _b.v;

      var m = (display ? this.em(3 * t) : tEm) + ' -.1em';
      attr.style = {
        height: tEm,
        'border-top': tEm + ' solid',
        margin: m
      };
      var nh = this.em(Math.max(0, u));
      nsattr.style = {
        height: nh,
        'vertical-align': '-' + nh
      };
      dsattr.style = {
        height: this.em(Math.max(0, v))
      };
      fattr.style = {
        'vertical-align': this.em(a - T)
      };
    }

    var num, den;
    this.adaptor.append(this.chtml, this.html('mjx-frac', fattr, [num = this.html('mjx-num', nattr, [this.html('mjx-nstrut', nsattr)]), this.html('mjx-dbox', {}, [this.html('mjx-dtable', {}, [this.html('mjx-line', attr), this.html('mjx-row', {}, [den = this.html('mjx-den', dattr, [this.html('mjx-dstrut', dsattr)])])])])]));
    this.childNodes[0].toCHTML(num);
    this.childNodes[1].toCHTML(den);
  };

  CHTMLmfrac.prototype.makeAtop = function (display) {
    var _a = this.node.attributes.getList('numalign', 'denomalign'),
        numalign = _a.numalign,
        denomalign = _a.denomalign;

    var withDelims = this.node.getProperty('withDelims');
    var attr = display ? {
      type: 'd',
      atop: true
    } : {
      atop: true
    };
    var fattr = withDelims ? __assign(__assign({}, attr), {
      delims: true
    }) : __assign({}, attr);
    var nattr = numalign !== 'center' ? {
      align: numalign
    } : {};
    var dattr = denomalign !== 'center' ? {
      align: denomalign
    } : {};

    var _b = this.getUVQ(display),
        v = _b.v,
        q = _b.q;

    nattr.style = {
      'padding-bottom': this.em(q)
    };
    fattr.style = {
      'vertical-align': this.em(-v)
    };
    var num, den;
    this.adaptor.append(this.chtml, this.html('mjx-frac', fattr, [num = this.html('mjx-num', nattr), den = this.html('mjx-den', dattr)]));
    this.childNodes[0].toCHTML(num);
    this.childNodes[1].toCHTML(den);
  };

  CHTMLmfrac.prototype.makeBevelled = function (display) {
    var adaptor = this.adaptor;
    adaptor.setAttribute(this.chtml, 'bevelled', 'ture');
    var num = adaptor.append(this.chtml, this.html('mjx-num'));
    this.childNodes[0].toCHTML(num);
    this.bevel.toCHTML(this.chtml);
    var den = adaptor.append(this.chtml, this.html('mjx-den'));
    this.childNodes[1].toCHTML(den);

    var _a = this.getBevelData(display),
        u = _a.u,
        v = _a.v,
        delta = _a.delta,
        nbox = _a.nbox,
        dbox = _a.dbox;

    if (u) {
      adaptor.setStyle(num, 'verticalAlign', this.em(u / nbox.scale));
    }

    if (v) {
      adaptor.setStyle(den, 'verticalAlign', this.em(v / dbox.scale));
    }

    var dx = this.em(-delta / 2);
    adaptor.setStyle(this.bevel.chtml, 'marginLeft', dx);
    adaptor.setStyle(this.bevel.chtml, 'marginRight', dx);
  };

  CHTMLmfrac.kind = mfrac_js_2.MmlMfrac.prototype.kind;
  CHTMLmfrac.styles = {
    'mjx-frac': {
      display: 'inline-block',
      'vertical-align': '0.17em',
      padding: '0 .22em'
    },
    'mjx-frac[type="d"]': {
      'vertical-align': '.04em'
    },
    'mjx-frac[delims]': {
      padding: '0 .1em'
    },
    'mjx-frac[atop]': {
      padding: '0 .12em'
    },
    'mjx-frac[atop][delims]': {
      padding: '0'
    },
    'mjx-dtable': {
      display: 'inline-table',
      width: '100%'
    },
    'mjx-dtable > *': {
      'font-size': '2000%'
    },
    'mjx-dbox': {
      display: 'block',
      'font-size': '5%'
    },
    'mjx-num': {
      display: 'block',
      'text-align': 'center'
    },
    'mjx-den': {
      display: 'block',
      'text-align': 'center'
    },
    'mjx-mfrac[bevelled] > mjx-num': {
      display: 'inline-block'
    },
    'mjx-mfrac[bevelled] > mjx-den': {
      display: 'inline-block'
    },
    'mjx-den[align="right"], mjx-num[align="right"]': {
      'text-align': 'right'
    },
    'mjx-den[align="left"], mjx-num[align="left"]': {
      'text-align': 'left'
    },
    'mjx-nstrut': {
      display: 'inline-block',
      height: '.054em',
      width: 0,
      'vertical-align': '-.054em'
    },
    'mjx-nstrut[type="d"]': {
      height: '.217em',
      'vertical-align': '-.217em'
    },
    'mjx-dstrut': {
      display: 'inline-block',
      height: '.505em',
      width: 0
    },
    'mjx-dstrut[type="d"]': {
      height: '.726em'
    },
    'mjx-line': {
      display: 'block',
      'box-sizing': 'border-box',
      'min-height': '1px',
      height: '.06em',
      'border-top': '.06em solid',
      margin: '.06em -.1em',
      overflow: 'hidden'
    },
    'mjx-line[type="d"]': {
      margin: '.18em -.1em'
    }
  };
  return CHTMLmfrac;
}(mfrac_js_1.CommonMfracMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmfrac = CHTMLmfrac;

/***/ }),

/***/ 8560:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmglyph = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var mglyph_js_1 = __webpack_require__(875);

var mglyph_js_2 = __webpack_require__(6912);

var CHTMLmglyph = function (_super) {
  __extends(CHTMLmglyph, _super);

  function CHTMLmglyph() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmglyph.prototype.toCHTML = function (parent) {
    var chtml = this.standardCHTMLnode(parent);

    var _a = this.node.attributes.getList('src', 'alt'),
        src = _a.src,
        alt = _a.alt;

    var styles = {
      width: this.em(this.width),
      height: this.em(this.height)
    };

    if (this.valign) {
      styles.verticalAlign = this.em(this.valign);
    }

    var img = this.html('img', {
      src: src,
      style: styles,
      alt: alt,
      title: alt
    });
    this.adaptor.append(chtml, img);
  };

  CHTMLmglyph.kind = mglyph_js_2.MmlMglyph.prototype.kind;
  CHTMLmglyph.styles = {
    'mjx-mglyph > img': {
      display: 'inline-block',
      border: 0,
      padding: 0
    }
  };
  return CHTMLmglyph;
}(mglyph_js_1.CommonMglyphMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmglyph = CHTMLmglyph;

/***/ }),

/***/ 5081:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmi = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var mi_js_1 = __webpack_require__(1294);

var mi_js_2 = __webpack_require__(219);

var CHTMLmi = function (_super) {
  __extends(CHTMLmi, _super);

  function CHTMLmi() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmi.kind = mi_js_2.MmlMi.prototype.kind;
  return CHTMLmi;
}(mi_js_1.CommonMiMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmi = CHTMLmi;

/***/ }),

/***/ 8516:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmmultiscripts = void 0;

var msubsup_js_1 = __webpack_require__(9606);

var mmultiscripts_js_1 = __webpack_require__(8123);

var mmultiscripts_js_2 = __webpack_require__(5114);

var CHTMLmmultiscripts = function (_super) {
  __extends(CHTMLmmultiscripts, _super);

  function CHTMLmmultiscripts() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmmultiscripts.prototype.toCHTML = function (parent) {
    var chtml = this.standardCHTMLnode(parent);
    var data = this.scriptData;
    var sub = this.combinePrePost(data.sub, data.psub);
    var sup = this.combinePrePost(data.sup, data.psup);

    var _a = __read(this.getUVQ(sub, sup), 2),
        u = _a[0],
        v = _a[1];

    if (data.numPrescripts) {
      this.addScripts(u, -v, true, data.psub, data.psup, this.firstPrescript, data.numPrescripts);
    }

    this.childNodes[0].toCHTML(chtml);

    if (data.numScripts) {
      this.addScripts(u, -v, false, data.sub, data.sup, 1, data.numScripts);
    }
  };

  CHTMLmmultiscripts.prototype.addScripts = function (u, v, isPre, sub, sup, i, n) {
    var adaptor = this.adaptor;
    var q = u - sup.d + (v - sub.h);
    var U = u < 0 && v === 0 ? sub.h + u : u;
    var rowdef = q > 0 ? {
      style: {
        height: this.em(q)
      }
    } : {};
    var tabledef = U ? {
      style: {
        'vertical-align': this.em(U)
      }
    } : {};
    var supRow = this.html('mjx-row');
    var sepRow = this.html('mjx-row', rowdef);
    var subRow = this.html('mjx-row');
    var name = 'mjx-' + (isPre ? 'pre' : '') + 'scripts';
    adaptor.append(this.chtml, this.html(name, tabledef, [supRow, sepRow, subRow]));
    var m = i + 2 * n;

    while (i < m) {
      this.childNodes[i++].toCHTML(adaptor.append(subRow, this.html('mjx-cell')));
      this.childNodes[i++].toCHTML(adaptor.append(supRow, this.html('mjx-cell')));
    }
  };

  CHTMLmmultiscripts.kind = mmultiscripts_js_2.MmlMmultiscripts.prototype.kind;
  CHTMLmmultiscripts.styles = {
    'mjx-prescripts': {
      display: 'inline-table',
      'padding-left': '.05em'
    },
    'mjx-scripts': {
      display: 'inline-table',
      'padding-right': '.05em'
    },
    'mjx-prescripts > mjx-row > mjx-cell': {
      'text-align': 'right'
    }
  };
  return CHTMLmmultiscripts;
}(mmultiscripts_js_1.CommonMmultiscriptsMixin(msubsup_js_1.CHTMLmsubsup));

exports.CHTMLmmultiscripts = CHTMLmmultiscripts;

/***/ }),

/***/ 4093:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmn = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var mn_js_1 = __webpack_require__(2425);

var mn_js_2 = __webpack_require__(1843);

var CHTMLmn = function (_super) {
  __extends(CHTMLmn, _super);

  function CHTMLmn() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmn.kind = mn_js_2.MmlMn.prototype.kind;
  return CHTMLmn;
}(mn_js_1.CommonMnMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmn = CHTMLmn;

/***/ }),

/***/ 6466:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmo = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var mo_js_1 = __webpack_require__(8241);

var mo_js_2 = __webpack_require__(5);

var CHTMLmo = function (_super) {
  __extends(CHTMLmo, _super);

  function CHTMLmo() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmo.prototype.toCHTML = function (parent) {
    var e_1, _a;

    var attributes = this.node.attributes;
    var symmetric = attributes.get('symmetric') && this.stretch.dir !== 2;
    var stretchy = this.stretch.dir !== 0;

    if (stretchy && this.size === null) {
      this.getStretchedVariant([]);
    }

    var chtml = this.standardCHTMLnode(parent);

    if (stretchy && this.size < 0) {
      this.stretchHTML(chtml);
    } else {
      if (symmetric || attributes.get('largeop')) {
        var u = this.em(this.getCenterOffset());

        if (u !== '0') {
          this.adaptor.setStyle(chtml, 'verticalAlign', u);
        }
      }

      if (this.node.getProperty('mathaccent')) {
        this.adaptor.setStyle(chtml, 'width', '0');
        this.adaptor.setStyle(chtml, 'margin-left', this.em(this.getAccentOffset()));
      }

      try {
        for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
          var child = _c.value;
          child.toCHTML(chtml);
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_1) throw e_1.error;
        }
      }
    }
  };

  CHTMLmo.prototype.stretchHTML = function (chtml) {
    var c = this.getText().codePointAt(0);
    this.font.delimUsage.add(c);
    this.childNodes[0].markUsed();
    var delim = this.stretch;
    var stretch = delim.stretch;
    var content = [];

    if (stretch[0]) {
      content.push(this.html('mjx-beg', {}, [this.html('mjx-c')]));
    }

    content.push(this.html('mjx-ext', {}, [this.html('mjx-c')]));

    if (stretch.length === 4) {
      content.push(this.html('mjx-mid', {}, [this.html('mjx-c')]), this.html('mjx-ext', {}, [this.html('mjx-c')]));
    }

    if (stretch[2]) {
      content.push(this.html('mjx-end', {}, [this.html('mjx-c')]));
    }

    var styles = {};
    var _a = this.bbox,
        h = _a.h,
        d = _a.d,
        w = _a.w;

    if (delim.dir === 1) {
      content.push(this.html('mjx-mark'));
      styles.height = this.em(h + d);
      styles.verticalAlign = this.em(-d);
    } else {
      styles.width = this.em(w);
    }

    var dir = mo_js_1.DirectionVH[delim.dir];
    var properties = {
      class: this.char(delim.c || c),
      style: styles
    };
    var html = this.html('mjx-stretchy-' + dir, properties, content);
    this.adaptor.append(chtml, html);
  };

  CHTMLmo.kind = mo_js_2.MmlMo.prototype.kind;
  CHTMLmo.styles = {
    'mjx-stretchy-h': {
      display: 'inline-table',
      width: '100%'
    },
    'mjx-stretchy-h > *': {
      display: 'table-cell',
      width: 0
    },
    'mjx-stretchy-h > * > mjx-c': {
      display: 'inline-block',
      transform: 'scalex(1.0000001)'
    },
    'mjx-stretchy-h > * > mjx-c::before': {
      display: 'inline-block',
      width: 'initial'
    },
    'mjx-stretchy-h > mjx-ext': {
      '/* IE */ overflow': 'hidden',
      '/* others */ overflow': 'clip visible',
      width: '100%'
    },
    'mjx-stretchy-h > mjx-ext > mjx-c::before': {
      transform: 'scalex(500)'
    },
    'mjx-stretchy-h > mjx-ext > mjx-c': {
      width: 0
    },
    'mjx-stretchy-h > mjx-beg > mjx-c': {
      'margin-right': '-.1em'
    },
    'mjx-stretchy-h > mjx-end > mjx-c': {
      'margin-left': '-.1em'
    },
    'mjx-stretchy-v': {
      display: 'inline-block'
    },
    'mjx-stretchy-v > *': {
      display: 'block'
    },
    'mjx-stretchy-v > mjx-beg': {
      height: 0
    },
    'mjx-stretchy-v > mjx-end > mjx-c': {
      display: 'block'
    },
    'mjx-stretchy-v > * > mjx-c': {
      transform: 'scaley(1.0000001)',
      'transform-origin': 'left center',
      overflow: 'hidden'
    },
    'mjx-stretchy-v > mjx-ext': {
      display: 'block',
      height: '100%',
      'box-sizing': 'border-box',
      border: '0px solid transparent',
      '/* IE */ overflow': 'hidden',
      '/* others */ overflow': 'visible clip'
    },
    'mjx-stretchy-v > mjx-ext > mjx-c::before': {
      width: 'initial',
      'box-sizing': 'border-box'
    },
    'mjx-stretchy-v > mjx-ext > mjx-c': {
      transform: 'scaleY(500) translateY(.075em)',
      overflow: 'visible'
    },
    'mjx-mark': {
      display: 'inline-block',
      height: '0px'
    }
  };
  return CHTMLmo;
}(mo_js_1.CommonMoMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmo = CHTMLmo;

/***/ }),

/***/ 3605:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmpadded = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var mpadded_js_1 = __webpack_require__(1644);

var mpadded_js_2 = __webpack_require__(3063);

var CHTMLmpadded = function (_super) {
  __extends(CHTMLmpadded, _super);

  function CHTMLmpadded() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmpadded.prototype.toCHTML = function (parent) {
    var e_1, _a;

    var chtml = this.standardCHTMLnode(parent);
    var content = [];
    var style = {};

    var _b = __read(this.getDimens(), 9),
        W = _b[2],
        dh = _b[3],
        dd = _b[4],
        dw = _b[5],
        x = _b[6],
        y = _b[7],
        dx = _b[8];

    if (dw) {
      style.width = this.em(W + dw);
    }

    if (dh || dd) {
      style.margin = this.em(dh) + ' 0 ' + this.em(dd);
    }

    if (x + dx || y) {
      style.position = 'relative';
      var rbox = this.html('mjx-rbox', {
        style: {
          left: this.em(x + dx),
          top: this.em(-y),
          'max-width': style.width
        }
      });

      if (x + dx && this.childNodes[0].getBBox().pwidth) {
        this.adaptor.setAttribute(rbox, 'width', 'full');
        this.adaptor.setStyle(rbox, 'left', this.em(x));
      }

      content.push(rbox);
    }

    chtml = this.adaptor.append(chtml, this.html('mjx-block', {
      style: style
    }, content));

    try {
      for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
        var child = _d.value;
        child.toCHTML(content[0] || chtml);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  };

  CHTMLmpadded.kind = mpadded_js_2.MmlMpadded.prototype.kind;
  CHTMLmpadded.styles = {
    'mjx-mpadded': {
      display: 'inline-block'
    },
    'mjx-rbox': {
      display: 'inline-block',
      position: 'relative'
    }
  };
  return CHTMLmpadded;
}(mpadded_js_1.CommonMpaddedMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmpadded = CHTMLmpadded;

/***/ }),

/***/ 6598:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmroot = void 0;

var msqrt_js_1 = __webpack_require__(3618);

var mroot_js_1 = __webpack_require__(730);

var mroot_js_2 = __webpack_require__(7400);

var CHTMLmroot = function (_super) {
  __extends(CHTMLmroot, _super);

  function CHTMLmroot() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmroot.prototype.addRoot = function (ROOT, root, sbox, H) {
    root.toCHTML(ROOT);

    var _a = __read(this.getRootDimens(sbox, H), 3),
        x = _a[0],
        h = _a[1],
        dx = _a[2];

    this.adaptor.setStyle(ROOT, 'verticalAlign', this.em(h));
    this.adaptor.setStyle(ROOT, 'width', this.em(x));

    if (dx) {
      this.adaptor.setStyle(this.adaptor.firstChild(ROOT), 'paddingLeft', this.em(dx));
    }
  };

  CHTMLmroot.kind = mroot_js_2.MmlMroot.prototype.kind;
  return CHTMLmroot;
}(mroot_js_1.CommonMrootMixin(msqrt_js_1.CHTMLmsqrt));

exports.CHTMLmroot = CHTMLmroot;

/***/ }),

/***/ 867:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLinferredMrow = exports.CHTMLmrow = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var mrow_js_1 = __webpack_require__(3250);

var mrow_js_2 = __webpack_require__(3250);

var mrow_js_3 = __webpack_require__(7931);

var CHTMLmrow = function (_super) {
  __extends(CHTMLmrow, _super);

  function CHTMLmrow() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmrow.prototype.toCHTML = function (parent) {
    var e_1, _a;

    var chtml = this.node.isInferred ? this.chtml = parent : this.standardCHTMLnode(parent);
    var hasNegative = false;

    try {
      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;
        child.toCHTML(chtml);

        if (child.bbox.w < 0) {
          hasNegative = true;
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    if (hasNegative) {
      var w = this.getBBox().w;

      if (w) {
        this.adaptor.setStyle(chtml, 'width', this.em(Math.max(0, w)));

        if (w < 0) {
          this.adaptor.setStyle(chtml, 'marginRight', this.em(w));
        }
      }
    }
  };

  CHTMLmrow.kind = mrow_js_3.MmlMrow.prototype.kind;
  return CHTMLmrow;
}(mrow_js_1.CommonMrowMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmrow = CHTMLmrow;

var CHTMLinferredMrow = function (_super) {
  __extends(CHTMLinferredMrow, _super);

  function CHTMLinferredMrow() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLinferredMrow.kind = mrow_js_3.MmlInferredMrow.prototype.kind;
  return CHTMLinferredMrow;
}(mrow_js_2.CommonInferredMrowMixin(CHTMLmrow));

exports.CHTMLinferredMrow = CHTMLinferredMrow;

/***/ }),

/***/ 3803:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLms = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var ms_js_1 = __webpack_require__(4326);

var ms_js_2 = __webpack_require__(2147);

var CHTMLms = function (_super) {
  __extends(CHTMLms, _super);

  function CHTMLms() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLms.kind = ms_js_2.MmlMs.prototype.kind;
  return CHTMLms;
}(ms_js_1.CommonMsMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLms = CHTMLms;

/***/ }),

/***/ 7925:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmspace = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var mspace_js_1 = __webpack_require__(7832);

var mspace_js_2 = __webpack_require__(4073);

var CHTMLmspace = function (_super) {
  __extends(CHTMLmspace, _super);

  function CHTMLmspace() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmspace.prototype.toCHTML = function (parent) {
    var chtml = this.standardCHTMLnode(parent);

    var _a = this.getBBox(),
        w = _a.w,
        h = _a.h,
        d = _a.d;

    if (w < 0) {
      this.adaptor.setStyle(chtml, 'marginRight', this.em(w));
      w = 0;
    }

    if (w) {
      this.adaptor.setStyle(chtml, 'width', this.em(w));
    }

    h = Math.max(0, h + d);

    if (h) {
      this.adaptor.setStyle(chtml, 'height', this.em(Math.max(0, h)));
    }

    if (d) {
      this.adaptor.setStyle(chtml, 'verticalAlign', this.em(-d));
    }
  };

  CHTMLmspace.kind = mspace_js_2.MmlMspace.prototype.kind;
  return CHTMLmspace;
}(mspace_js_1.CommonMspaceMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmspace = CHTMLmspace;

/***/ }),

/***/ 3618:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmsqrt = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var msqrt_js_1 = __webpack_require__(289);

var msqrt_js_2 = __webpack_require__(9926);

var CHTMLmsqrt = function (_super) {
  __extends(CHTMLmsqrt, _super);

  function CHTMLmsqrt() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmsqrt.prototype.toCHTML = function (parent) {
    var surd = this.childNodes[this.surd];
    var base = this.childNodes[this.base];
    var sbox = surd.getBBox();
    var bbox = base.getBBox();

    var _a = __read(this.getPQ(sbox), 2),
        q = _a[1];

    var t = this.font.params.rule_thickness;
    var H = bbox.h + q + t;
    var CHTML = this.standardCHTMLnode(parent);
    var SURD, BASE, ROOT, root;

    if (this.root != null) {
      ROOT = this.adaptor.append(CHTML, this.html('mjx-root'));
      root = this.childNodes[this.root];
    }

    var SQRT = this.adaptor.append(CHTML, this.html('mjx-sqrt', {}, [SURD = this.html('mjx-surd'), BASE = this.html('mjx-box', {
      style: {
        paddingTop: this.em(q)
      }
    })]));
    this.addRoot(ROOT, root, sbox, H);
    surd.toCHTML(SURD);
    base.toCHTML(BASE);

    if (surd.size < 0) {
      this.adaptor.addClass(SQRT, 'mjx-tall');
    }
  };

  CHTMLmsqrt.prototype.addRoot = function (_ROOT, _root, _sbox, _H) {};

  CHTMLmsqrt.kind = msqrt_js_2.MmlMsqrt.prototype.kind;
  CHTMLmsqrt.styles = {
    'mjx-root': {
      display: 'inline-block',
      'white-space': 'nowrap'
    },
    'mjx-surd': {
      display: 'inline-block',
      'vertical-align': 'top'
    },
    'mjx-sqrt': {
      display: 'inline-block',
      'padding-top': '.07em'
    },
    'mjx-sqrt > mjx-box': {
      'border-top': '.07em solid'
    },
    'mjx-sqrt.mjx-tall > mjx-box': {
      'padding-left': '.3em',
      'margin-left': '-.3em'
    }
  };
  return CHTMLmsqrt;
}(msqrt_js_1.CommonMsqrtMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmsqrt = CHTMLmsqrt;

/***/ }),

/***/ 9606:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmsubsup = exports.CHTMLmsup = exports.CHTMLmsub = void 0;

var scriptbase_js_1 = __webpack_require__(4323);

var msubsup_js_1 = __webpack_require__(7100);

var msubsup_js_2 = __webpack_require__(7100);

var msubsup_js_3 = __webpack_require__(7100);

var msubsup_js_4 = __webpack_require__(1432);

var CHTMLmsub = function (_super) {
  __extends(CHTMLmsub, _super);

  function CHTMLmsub() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmsub.kind = msubsup_js_4.MmlMsub.prototype.kind;
  return CHTMLmsub;
}(msubsup_js_1.CommonMsubMixin(scriptbase_js_1.CHTMLscriptbase));

exports.CHTMLmsub = CHTMLmsub;

var CHTMLmsup = function (_super) {
  __extends(CHTMLmsup, _super);

  function CHTMLmsup() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmsup.kind = msubsup_js_4.MmlMsup.prototype.kind;
  return CHTMLmsup;
}(msubsup_js_2.CommonMsupMixin(scriptbase_js_1.CHTMLscriptbase));

exports.CHTMLmsup = CHTMLmsup;

var CHTMLmsubsup = function (_super) {
  __extends(CHTMLmsubsup, _super);

  function CHTMLmsubsup() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmsubsup.prototype.toCHTML = function (parent) {
    var adaptor = this.adaptor;
    var chtml = this.standardCHTMLnode(parent);

    var _a = __read([this.baseChild, this.supChild, this.subChild], 3),
        base = _a[0],
        sup = _a[1],
        sub = _a[2];

    var _b = __read(this.getUVQ(), 3),
        v = _b[1],
        q = _b[2];

    var style = {
      'vertical-align': this.em(v)
    };
    base.toCHTML(chtml);
    var stack = adaptor.append(chtml, this.html('mjx-script', {
      style: style
    }));
    sup.toCHTML(stack);
    adaptor.append(stack, this.html('mjx-spacer', {
      style: {
        'margin-top': this.em(q)
      }
    }));
    sub.toCHTML(stack);
    var ic = this.getAdjustedIc();

    if (ic) {
      adaptor.setStyle(sup.chtml, 'marginLeft', this.em(ic / sup.bbox.rscale));
    }

    if (this.baseRemoveIc) {
      adaptor.setStyle(stack, 'marginLeft', this.em(-this.baseIc));
    }
  };

  CHTMLmsubsup.kind = msubsup_js_4.MmlMsubsup.prototype.kind;
  CHTMLmsubsup.styles = {
    'mjx-script': {
      display: 'inline-block',
      'padding-right': '.05em',
      'padding-left': '.033em'
    },
    'mjx-script > *': {
      display: 'block'
    }
  };
  return CHTMLmsubsup;
}(msubsup_js_3.CommonMsubsupMixin(scriptbase_js_1.CHTMLscriptbase));

exports.CHTMLmsubsup = CHTMLmsubsup;

/***/ }),

/***/ 8612:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmtable = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var mtable_js_1 = __webpack_require__(8849);

var mtable_js_2 = __webpack_require__(2444);

var string_js_1 = __webpack_require__(4944);

var CHTMLmtable = function (_super) {
  __extends(CHTMLmtable, _super);

  function CHTMLmtable(factory, node, parent) {
    if (parent === void 0) {
      parent = null;
    }

    var _this = _super.call(this, factory, node, parent) || this;

    _this.itable = _this.html('mjx-itable');
    _this.labels = _this.html('mjx-itable');
    return _this;
  }

  CHTMLmtable.prototype.getAlignShift = function () {
    var data = _super.prototype.getAlignShift.call(this);

    if (!this.isTop) {
      data[1] = 0;
    }

    return data;
  };

  CHTMLmtable.prototype.toCHTML = function (parent) {
    var e_1, _a;

    var chtml = this.standardCHTMLnode(parent);
    this.adaptor.append(chtml, this.html('mjx-table', {}, [this.itable]));

    try {
      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;
        child.toCHTML(this.itable);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    this.padRows();
    this.handleColumnSpacing();
    this.handleColumnLines();
    this.handleColumnWidths();
    this.handleRowSpacing();
    this.handleRowLines();
    this.handleRowHeights();
    this.handleFrame();
    this.handleWidth();
    this.handleLabels();
    this.handleAlign();
    this.handleJustify();
    this.shiftColor();
  };

  CHTMLmtable.prototype.shiftColor = function () {
    var adaptor = this.adaptor;
    var color = adaptor.getStyle(this.chtml, 'backgroundColor');

    if (color) {
      adaptor.setStyle(this.chtml, 'backgroundColor', '');
      adaptor.setStyle(this.itable, 'backgroundColor', color);
    }
  };

  CHTMLmtable.prototype.padRows = function () {
    var e_2, _a;

    var adaptor = this.adaptor;

    try {
      for (var _b = __values(adaptor.childNodes(this.itable)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var row = _c.value;

        while (adaptor.childNodes(row).length < this.numCols) {
          adaptor.append(row, this.html('mjx-mtd', {
            'extra': true
          }));
        }
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }
  };

  CHTMLmtable.prototype.handleColumnSpacing = function () {
    var e_3, _a, e_4, _b;

    var scale = this.childNodes[0] ? 1 / this.childNodes[0].getBBox().rscale : 1;
    var spacing = this.getEmHalfSpacing(this.fSpace[0], this.cSpace, scale);
    var frame = this.frame;

    try {
      for (var _c = __values(this.tableRows), _d = _c.next(); !_d.done; _d = _c.next()) {
        var row = _d.value;
        var i = 0;

        try {
          for (var _e = (e_4 = void 0, __values(row.tableCells)), _f = _e.next(); !_f.done; _f = _e.next()) {
            var cell = _f.value;
            var lspace = spacing[i++];
            var rspace = spacing[i];
            var styleNode = cell ? cell.chtml : this.adaptor.childNodes(row.chtml)[i];

            if (i > 1 && lspace !== '0.4em' || frame && i === 1) {
              this.adaptor.setStyle(styleNode, 'paddingLeft', lspace);
            }

            if (i < this.numCols && rspace !== '0.4em' || frame && i === this.numCols) {
              this.adaptor.setStyle(styleNode, 'paddingRight', rspace);
            }
          }
        } catch (e_4_1) {
          e_4 = {
            error: e_4_1
          };
        } finally {
          try {
            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
          } finally {
            if (e_4) throw e_4.error;
          }
        }
      }
    } catch (e_3_1) {
      e_3 = {
        error: e_3_1
      };
    } finally {
      try {
        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_3) throw e_3.error;
      }
    }
  };

  CHTMLmtable.prototype.handleColumnLines = function () {
    var e_5, _a, e_6, _b;

    if (this.node.attributes.get('columnlines') === 'none') return;
    var lines = this.getColumnAttributes('columnlines');

    try {
      for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
        var row = _d.value;
        var i = 0;

        try {
          for (var _e = (e_6 = void 0, __values(this.adaptor.childNodes(row.chtml).slice(1))), _f = _e.next(); !_f.done; _f = _e.next()) {
            var cell = _f.value;
            var line = lines[i++];
            if (line === 'none') continue;
            this.adaptor.setStyle(cell, 'borderLeft', '.07em ' + line);
          }
        } catch (e_6_1) {
          e_6 = {
            error: e_6_1
          };
        } finally {
          try {
            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
          } finally {
            if (e_6) throw e_6.error;
          }
        }
      }
    } catch (e_5_1) {
      e_5 = {
        error: e_5_1
      };
    } finally {
      try {
        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_5) throw e_5.error;
      }
    }
  };

  CHTMLmtable.prototype.handleColumnWidths = function () {
    var e_7, _a, e_8, _b;

    try {
      for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
        var row = _d.value;
        var i = 0;

        try {
          for (var _e = (e_8 = void 0, __values(this.adaptor.childNodes(row.chtml))), _f = _e.next(); !_f.done; _f = _e.next()) {
            var cell = _f.value;
            var w = this.cWidths[i++];

            if (w !== null) {
              var width = typeof w === 'number' ? this.em(w) : w;
              this.adaptor.setStyle(cell, 'width', width);
              this.adaptor.setStyle(cell, 'maxWidth', width);
              this.adaptor.setStyle(cell, 'minWidth', width);
            }
          }
        } catch (e_8_1) {
          e_8 = {
            error: e_8_1
          };
        } finally {
          try {
            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
          } finally {
            if (e_8) throw e_8.error;
          }
        }
      }
    } catch (e_7_1) {
      e_7 = {
        error: e_7_1
      };
    } finally {
      try {
        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_7) throw e_7.error;
      }
    }
  };

  CHTMLmtable.prototype.handleRowSpacing = function () {
    var e_9, _a, e_10, _b;

    var scale = this.childNodes[0] ? 1 / this.childNodes[0].getBBox().rscale : 1;
    var spacing = this.getEmHalfSpacing(this.fSpace[1], this.rSpace, scale);
    var frame = this.frame;
    var i = 0;

    try {
      for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
        var row = _d.value;
        var tspace = spacing[i++];
        var bspace = spacing[i];

        try {
          for (var _e = (e_10 = void 0, __values(row.childNodes)), _f = _e.next(); !_f.done; _f = _e.next()) {
            var cell = _f.value;

            if (i > 1 && tspace !== '0.215em' || frame && i === 1) {
              this.adaptor.setStyle(cell.chtml, 'paddingTop', tspace);
            }

            if (i < this.numRows && bspace !== '0.215em' || frame && i === this.numRows) {
              this.adaptor.setStyle(cell.chtml, 'paddingBottom', bspace);
            }
          }
        } catch (e_10_1) {
          e_10 = {
            error: e_10_1
          };
        } finally {
          try {
            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
          } finally {
            if (e_10) throw e_10.error;
          }
        }
      }
    } catch (e_9_1) {
      e_9 = {
        error: e_9_1
      };
    } finally {
      try {
        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_9) throw e_9.error;
      }
    }
  };

  CHTMLmtable.prototype.handleRowLines = function () {
    var e_11, _a, e_12, _b;

    if (this.node.attributes.get('rowlines') === 'none') return;
    var lines = this.getRowAttributes('rowlines');
    var i = 0;

    try {
      for (var _c = __values(this.childNodes.slice(1)), _d = _c.next(); !_d.done; _d = _c.next()) {
        var row = _d.value;
        var line = lines[i++];
        if (line === 'none') continue;

        try {
          for (var _e = (e_12 = void 0, __values(this.adaptor.childNodes(row.chtml))), _f = _e.next(); !_f.done; _f = _e.next()) {
            var cell = _f.value;
            this.adaptor.setStyle(cell, 'borderTop', '.07em ' + line);
          }
        } catch (e_12_1) {
          e_12 = {
            error: e_12_1
          };
        } finally {
          try {
            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
          } finally {
            if (e_12) throw e_12.error;
          }
        }
      }
    } catch (e_11_1) {
      e_11 = {
        error: e_11_1
      };
    } finally {
      try {
        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_11) throw e_11.error;
      }
    }
  };

  CHTMLmtable.prototype.handleRowHeights = function () {
    if (this.node.attributes.get('equalrows')) {
      this.handleEqualRows();
    }
  };

  CHTMLmtable.prototype.handleEqualRows = function () {
    var space = this.getRowHalfSpacing();

    var _a = this.getTableData(),
        H = _a.H,
        D = _a.D,
        NH = _a.NH,
        ND = _a.ND;

    var HD = this.getEqualRowHeight();

    for (var i = 0; i < this.numRows; i++) {
      var row = this.childNodes[i];
      this.setRowHeight(row, HD + space[i] + space[i + 1] + this.rLines[i]);

      if (HD !== NH[i] + ND[i]) {
        this.setRowBaseline(row, HD, (HD - H[i] + D[i]) / 2);
      }
    }
  };

  CHTMLmtable.prototype.setRowHeight = function (row, HD) {
    this.adaptor.setStyle(row.chtml, 'height', this.em(HD));
  };

  CHTMLmtable.prototype.setRowBaseline = function (row, HD, D) {
    var e_13, _a;

    var ralign = row.node.attributes.get('rowalign');

    try {
      for (var _b = __values(row.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var cell = _c.value;
        if (this.setCellBaseline(cell, ralign, HD, D)) break;
      }
    } catch (e_13_1) {
      e_13 = {
        error: e_13_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_13) throw e_13.error;
      }
    }
  };

  CHTMLmtable.prototype.setCellBaseline = function (cell, ralign, HD, D) {
    var calign = cell.node.attributes.get('rowalign');

    if (calign === 'baseline' || calign === 'axis') {
      var adaptor = this.adaptor;
      var child = adaptor.lastChild(cell.chtml);
      adaptor.setStyle(child, 'height', this.em(HD));
      adaptor.setStyle(child, 'verticalAlign', this.em(-D));
      var row = cell.parent;

      if ((!row.node.isKind('mlabeledtr') || cell !== row.childNodes[0]) && (ralign === 'baseline' || ralign === 'axis')) {
        return true;
      }
    }

    return false;
  };

  CHTMLmtable.prototype.handleFrame = function () {
    if (this.frame && this.fLine) {
      this.adaptor.setStyle(this.itable, 'border', '.07em ' + this.node.attributes.get('frame'));
    }
  };

  CHTMLmtable.prototype.handleWidth = function () {
    var adaptor = this.adaptor;

    var _a = this.getBBox(),
        w = _a.w,
        L = _a.L,
        R = _a.R;

    adaptor.setStyle(this.chtml, 'minWidth', this.em(L + w + R));
    var W = this.node.attributes.get('width');

    if (string_js_1.isPercent(W)) {
      adaptor.setStyle(this.chtml, 'width', '');
      adaptor.setAttribute(this.chtml, 'width', 'full');
    } else if (!this.hasLabels) {
      if (W === 'auto') return;
      W = this.em(this.length2em(W) + 2 * this.fLine);
    }

    var table = adaptor.firstChild(this.chtml);
    adaptor.setStyle(table, 'width', W);
    adaptor.setStyle(table, 'minWidth', this.em(w));

    if (L || R) {
      adaptor.setStyle(this.chtml, 'margin', '');
      var style = this.node.attributes.get('data-width-includes-label') ? 'padding' : 'margin';

      if (L === R) {
        adaptor.setStyle(table, style, '0 ' + this.em(R));
      } else {
        adaptor.setStyle(table, style, '0 ' + this.em(R) + ' 0 ' + this.em(L));
      }
    }

    adaptor.setAttribute(this.itable, 'width', 'full');
  };

  CHTMLmtable.prototype.handleAlign = function () {
    var _a = __read(this.getAlignmentRow(), 2),
        align = _a[0],
        row = _a[1];

    if (row === null) {
      if (align !== 'axis') {
        this.adaptor.setAttribute(this.chtml, 'align', align);
      }
    } else {
      var y = this.getVerticalPosition(row, align);
      this.adaptor.setAttribute(this.chtml, 'align', 'top');
      this.adaptor.setStyle(this.chtml, 'verticalAlign', this.em(y));
    }
  };

  CHTMLmtable.prototype.handleJustify = function () {
    var align = this.getAlignShift()[0];

    if (align !== 'center') {
      this.adaptor.setAttribute(this.chtml, 'justify', align);
    }
  };

  CHTMLmtable.prototype.handleLabels = function () {
    if (!this.hasLabels) return;
    var labels = this.labels;
    var attributes = this.node.attributes;
    var adaptor = this.adaptor;
    var side = attributes.get('side');
    adaptor.setAttribute(this.chtml, 'side', side);
    adaptor.setAttribute(labels, 'align', side);
    adaptor.setStyle(labels, side, '0');

    var _a = __read(this.addLabelPadding(side), 2),
        align = _a[0],
        shift = _a[1];

    if (shift) {
      var table = adaptor.firstChild(this.chtml);
      this.setIndent(table, align, shift);
    }

    this.updateRowHeights();
    this.addLabelSpacing();
  };

  CHTMLmtable.prototype.addLabelPadding = function (side) {
    var _a = __read(this.getPadAlignShift(side), 3),
        align = _a[1],
        shift = _a[2];

    var styles = {};

    if (side === 'right' && !this.node.attributes.get('data-width-includes-label')) {
      var W = this.node.attributes.get('width');

      var _b = this.getBBox(),
          w = _b.w,
          L = _b.L,
          R = _b.R;

      styles.style = {
        width: string_js_1.isPercent(W) ? 'calc(' + W + ' + ' + this.em(L + R) + ')' : this.em(L + w + R)
      };
    }

    this.adaptor.append(this.chtml, this.html('mjx-labels', styles, [this.labels]));
    return [align, shift];
  };

  CHTMLmtable.prototype.updateRowHeights = function () {
    var _a = this.getTableData(),
        H = _a.H,
        D = _a.D,
        NH = _a.NH,
        ND = _a.ND;

    var space = this.getRowHalfSpacing();

    for (var i = 0; i < this.numRows; i++) {
      var row = this.childNodes[i];
      this.setRowHeight(row, H[i] + D[i] + space[i] + space[i + 1] + this.rLines[i]);

      if (H[i] !== NH[i] || D[i] !== ND[i]) {
        this.setRowBaseline(row, H[i] + D[i], D[i]);
      } else if (row.node.isKind('mlabeledtr')) {
        this.setCellBaseline(row.childNodes[0], '', H[i] + D[i], D[i]);
      }
    }
  };

  CHTMLmtable.prototype.addLabelSpacing = function () {
    var adaptor = this.adaptor;
    var equal = this.node.attributes.get('equalrows');

    var _a = this.getTableData(),
        H = _a.H,
        D = _a.D;

    var HD = equal ? this.getEqualRowHeight() : 0;
    var space = this.getRowHalfSpacing();
    var h = this.fLine;
    var current = adaptor.firstChild(this.labels);

    for (var i = 0; i < this.numRows; i++) {
      var row = this.childNodes[i];

      if (row.node.isKind('mlabeledtr')) {
        h && adaptor.insert(this.html('mjx-mtr', {
          style: {
            height: this.em(h)
          }
        }), current);
        adaptor.setStyle(current, 'height', this.em((equal ? HD : H[i] + D[i]) + space[i] + space[i + 1]));
        current = adaptor.next(current);
        h = this.rLines[i];
      } else {
        h += space[i] + (equal ? HD : H[i] + D[i]) + space[i + 1] + this.rLines[i];
      }
    }
  };

  CHTMLmtable.kind = mtable_js_2.MmlMtable.prototype.kind;
  CHTMLmtable.styles = {
    'mjx-mtable': {
      'vertical-align': '.25em',
      'text-align': 'center',
      'position': 'relative',
      'box-sizing': 'border-box',
      'border-spacing': 0,
      'border-collapse': 'collapse'
    },
    'mjx-mstyle[size="s"] mjx-mtable': {
      'vertical-align': '.354em'
    },
    'mjx-labels': {
      position: 'absolute',
      left: 0,
      top: 0
    },
    'mjx-table': {
      'display': 'inline-block',
      'vertical-align': '-.5ex',
      'box-sizing': 'border-box'
    },
    'mjx-table > mjx-itable': {
      'vertical-align': 'middle',
      'text-align': 'left',
      'box-sizing': 'border-box'
    },
    'mjx-labels > mjx-itable': {
      position: 'absolute',
      top: 0
    },
    'mjx-mtable[justify="left"]': {
      'text-align': 'left'
    },
    'mjx-mtable[justify="right"]': {
      'text-align': 'right'
    },
    'mjx-mtable[justify="left"][side="left"]': {
      'padding-right': '0 ! important'
    },
    'mjx-mtable[justify="left"][side="right"]': {
      'padding-left': '0 ! important'
    },
    'mjx-mtable[justify="right"][side="left"]': {
      'padding-right': '0 ! important'
    },
    'mjx-mtable[justify="right"][side="right"]': {
      'padding-left': '0 ! important'
    },
    'mjx-mtable[align]': {
      'vertical-align': 'baseline'
    },
    'mjx-mtable[align="top"] > mjx-table': {
      'vertical-align': 'top'
    },
    'mjx-mtable[align="bottom"] > mjx-table': {
      'vertical-align': 'bottom'
    },
    'mjx-mtable[side="right"] mjx-labels': {
      'min-width': '100%'
    }
  };
  return CHTMLmtable;
}(mtable_js_1.CommonMtableMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmtable = CHTMLmtable;

/***/ }),

/***/ 8931:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmtd = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var mtd_js_1 = __webpack_require__(9562);

var mtd_js_2 = __webpack_require__(6195);

var CHTMLmtd = function (_super) {
  __extends(CHTMLmtd, _super);

  function CHTMLmtd() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmtd.prototype.toCHTML = function (parent) {
    _super.prototype.toCHTML.call(this, parent);

    var ralign = this.node.attributes.get('rowalign');
    var calign = this.node.attributes.get('columnalign');
    var palign = this.parent.node.attributes.get('rowalign');

    if (ralign !== palign) {
      this.adaptor.setAttribute(this.chtml, 'rowalign', ralign);
    }

    if (calign !== 'center' && (this.parent.kind !== 'mlabeledtr' || this !== this.parent.childNodes[0] || calign !== this.parent.parent.node.attributes.get('side'))) {
      this.adaptor.setStyle(this.chtml, 'textAlign', calign);
    }

    if (this.parent.parent.node.getProperty('useHeight')) {
      this.adaptor.append(this.chtml, this.html('mjx-tstrut'));
    }
  };

  CHTMLmtd.kind = mtd_js_2.MmlMtd.prototype.kind;
  CHTMLmtd.styles = {
    'mjx-mtd': {
      display: 'table-cell',
      'text-align': 'center',
      'padding': '.215em .4em'
    },
    'mjx-mtd:first-child': {
      'padding-left': 0
    },
    'mjx-mtd:last-child': {
      'padding-right': 0
    },
    'mjx-mtable > * > mjx-itable > *:first-child > mjx-mtd': {
      'padding-top': 0
    },
    'mjx-mtable > * > mjx-itable > *:last-child > mjx-mtd': {
      'padding-bottom': 0
    },
    'mjx-tstrut': {
      display: 'inline-block',
      height: '1em',
      'vertical-align': '-.25em'
    },
    'mjx-labels[align="left"] > mjx-mtr > mjx-mtd': {
      'text-align': 'left'
    },
    'mjx-labels[align="right"] > mjx-mtr > mjx-mtd': {
      'text-align': 'right'
    },
    'mjx-mtd[extra]': {
      padding: 0
    },
    'mjx-mtd[rowalign="top"]': {
      'vertical-align': 'top'
    },
    'mjx-mtd[rowalign="center"]': {
      'vertical-align': 'middle'
    },
    'mjx-mtd[rowalign="bottom"]': {
      'vertical-align': 'bottom'
    },
    'mjx-mtd[rowalign="baseline"]': {
      'vertical-align': 'baseline'
    },
    'mjx-mtd[rowalign="axis"]': {
      'vertical-align': '.25em'
    }
  };
  return CHTMLmtd;
}(mtd_js_1.CommonMtdMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmtd = CHTMLmtd;

/***/ }),

/***/ 3816:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmtext = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var mtext_js_1 = __webpack_require__(1862);

var mtext_js_2 = __webpack_require__(3006);

var CHTMLmtext = function (_super) {
  __extends(CHTMLmtext, _super);

  function CHTMLmtext() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmtext.kind = mtext_js_2.MmlMtext.prototype.kind;
  return CHTMLmtext;
}(mtext_js_1.CommonMtextMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmtext = CHTMLmtext;

/***/ }),

/***/ 4851:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmlabeledtr = exports.CHTMLmtr = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var mtr_js_1 = __webpack_require__(9184);

var mtr_js_2 = __webpack_require__(9184);

var mtr_js_3 = __webpack_require__(3640);

var CHTMLmtr = function (_super) {
  __extends(CHTMLmtr, _super);

  function CHTMLmtr() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmtr.prototype.toCHTML = function (parent) {
    _super.prototype.toCHTML.call(this, parent);

    var align = this.node.attributes.get('rowalign');

    if (align !== 'baseline') {
      this.adaptor.setAttribute(this.chtml, 'rowalign', align);
    }
  };

  CHTMLmtr.kind = mtr_js_3.MmlMtr.prototype.kind;
  CHTMLmtr.styles = {
    'mjx-mtr': {
      display: 'table-row'
    },
    'mjx-mtr[rowalign="top"] > mjx-mtd': {
      'vertical-align': 'top'
    },
    'mjx-mtr[rowalign="center"] > mjx-mtd': {
      'vertical-align': 'middle'
    },
    'mjx-mtr[rowalign="bottom"] > mjx-mtd': {
      'vertical-align': 'bottom'
    },
    'mjx-mtr[rowalign="baseline"] > mjx-mtd': {
      'vertical-align': 'baseline'
    },
    'mjx-mtr[rowalign="axis"] > mjx-mtd': {
      'vertical-align': '.25em'
    }
  };
  return CHTMLmtr;
}(mtr_js_1.CommonMtrMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLmtr = CHTMLmtr;

var CHTMLmlabeledtr = function (_super) {
  __extends(CHTMLmlabeledtr, _super);

  function CHTMLmlabeledtr() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmlabeledtr.prototype.toCHTML = function (parent) {
    _super.prototype.toCHTML.call(this, parent);

    var child = this.adaptor.firstChild(this.chtml);

    if (child) {
      this.adaptor.remove(child);
      var align = this.node.attributes.get('rowalign');
      var attr = align !== 'baseline' && align !== 'axis' ? {
        rowalign: align
      } : {};
      var row = this.html('mjx-mtr', attr, [child]);
      this.adaptor.append(this.parent.labels, row);
    }
  };

  CHTMLmlabeledtr.prototype.markUsed = function () {
    _super.prototype.markUsed.call(this);

    this.jax.wrapperUsage.add(CHTMLmtr.kind);
  };

  CHTMLmlabeledtr.kind = mtr_js_3.MmlMlabeledtr.prototype.kind;
  CHTMLmlabeledtr.styles = {
    'mjx-mlabeledtr': {
      display: 'table-row'
    },
    'mjx-mlabeledtr[rowalign="top"] > mjx-mtd': {
      'vertical-align': 'top'
    },
    'mjx-mlabeledtr[rowalign="center"] > mjx-mtd': {
      'vertical-align': 'middle'
    },
    'mjx-mlabeledtr[rowalign="bottom"] > mjx-mtd': {
      'vertical-align': 'bottom'
    },
    'mjx-mlabeledtr[rowalign="baseline"] > mjx-mtd': {
      'vertical-align': 'baseline'
    },
    'mjx-mlabeledtr[rowalign="axis"] > mjx-mtd': {
      'vertical-align': '.25em'
    }
  };
  return CHTMLmlabeledtr;
}(mtr_js_2.CommonMlabeledtrMixin(CHTMLmtr));

exports.CHTMLmlabeledtr = CHTMLmlabeledtr;

/***/ }),

/***/ 8734:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLmunderover = exports.CHTMLmover = exports.CHTMLmunder = void 0;

var msubsup_js_1 = __webpack_require__(9606);

var munderover_js_1 = __webpack_require__(450);

var munderover_js_2 = __webpack_require__(450);

var munderover_js_3 = __webpack_require__(450);

var munderover_js_4 = __webpack_require__(4389);

var CHTMLmunder = function (_super) {
  __extends(CHTMLmunder, _super);

  function CHTMLmunder() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmunder.prototype.toCHTML = function (parent) {
    if (this.hasMovableLimits()) {
      _super.prototype.toCHTML.call(this, parent);

      this.adaptor.setAttribute(this.chtml, 'limits', 'false');
      return;
    }

    this.chtml = this.standardCHTMLnode(parent);
    var base = this.adaptor.append(this.adaptor.append(this.chtml, this.html('mjx-row')), this.html('mjx-base'));
    var under = this.adaptor.append(this.adaptor.append(this.chtml, this.html('mjx-row')), this.html('mjx-under'));
    this.baseChild.toCHTML(base);
    this.scriptChild.toCHTML(under);
    var basebox = this.baseChild.getBBox();
    var underbox = this.scriptChild.getBBox();
    var k = this.getUnderKV(basebox, underbox)[0];
    var delta = this.isLineBelow ? 0 : this.getDelta(true);
    this.adaptor.setStyle(under, 'paddingTop', this.em(k));
    this.setDeltaW([base, under], this.getDeltaW([basebox, underbox], [0, -delta]));
    this.adjustUnderDepth(under, underbox);
  };

  CHTMLmunder.kind = munderover_js_4.MmlMunder.prototype.kind;
  CHTMLmunder.styles = {
    'mjx-over': {
      'text-align': 'left'
    },
    'mjx-munder:not([limits="false"])': {
      display: 'inline-table'
    },
    'mjx-munder > mjx-row': {
      'text-align': 'left'
    },
    'mjx-under': {
      'padding-bottom': '.1em'
    }
  };
  return CHTMLmunder;
}(munderover_js_1.CommonMunderMixin(msubsup_js_1.CHTMLmsub));

exports.CHTMLmunder = CHTMLmunder;

var CHTMLmover = function (_super) {
  __extends(CHTMLmover, _super);

  function CHTMLmover() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmover.prototype.toCHTML = function (parent) {
    if (this.hasMovableLimits()) {
      _super.prototype.toCHTML.call(this, parent);

      this.adaptor.setAttribute(this.chtml, 'limits', 'false');
      return;
    }

    this.chtml = this.standardCHTMLnode(parent);
    var over = this.adaptor.append(this.chtml, this.html('mjx-over'));
    var base = this.adaptor.append(this.chtml, this.html('mjx-base'));
    this.scriptChild.toCHTML(over);
    this.baseChild.toCHTML(base);
    var overbox = this.scriptChild.getBBox();
    var basebox = this.baseChild.getBBox();
    var k = this.getOverKU(basebox, overbox)[0];
    var delta = this.isLineAbove ? 0 : this.getDelta();
    this.adaptor.setStyle(over, 'paddingBottom', this.em(k));
    this.setDeltaW([base, over], this.getDeltaW([basebox, overbox], [0, delta]));
    this.adjustOverDepth(over, overbox);
  };

  CHTMLmover.kind = munderover_js_4.MmlMover.prototype.kind;
  CHTMLmover.styles = {
    'mjx-mover:not([limits="false"])': {
      'padding-top': '.1em'
    },
    'mjx-mover:not([limits="false"]) > *': {
      display: 'block',
      'text-align': 'left'
    }
  };
  return CHTMLmover;
}(munderover_js_2.CommonMoverMixin(msubsup_js_1.CHTMLmsup));

exports.CHTMLmover = CHTMLmover;

var CHTMLmunderover = function (_super) {
  __extends(CHTMLmunderover, _super);

  function CHTMLmunderover() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLmunderover.prototype.toCHTML = function (parent) {
    if (this.hasMovableLimits()) {
      _super.prototype.toCHTML.call(this, parent);

      this.adaptor.setAttribute(this.chtml, 'limits', 'false');
      return;
    }

    this.chtml = this.standardCHTMLnode(parent);
    var over = this.adaptor.append(this.chtml, this.html('mjx-over'));
    var table = this.adaptor.append(this.adaptor.append(this.chtml, this.html('mjx-box')), this.html('mjx-munder'));
    var base = this.adaptor.append(this.adaptor.append(table, this.html('mjx-row')), this.html('mjx-base'));
    var under = this.adaptor.append(this.adaptor.append(table, this.html('mjx-row')), this.html('mjx-under'));
    this.overChild.toCHTML(over);
    this.baseChild.toCHTML(base);
    this.underChild.toCHTML(under);
    var overbox = this.overChild.getBBox();
    var basebox = this.baseChild.getBBox();
    var underbox = this.underChild.getBBox();
    var ok = this.getOverKU(basebox, overbox)[0];
    var uk = this.getUnderKV(basebox, underbox)[0];
    var delta = this.getDelta();
    this.adaptor.setStyle(over, 'paddingBottom', this.em(ok));
    this.adaptor.setStyle(under, 'paddingTop', this.em(uk));
    this.setDeltaW([base, under, over], this.getDeltaW([basebox, underbox, overbox], [0, this.isLineBelow ? 0 : -delta, this.isLineAbove ? 0 : delta]));
    this.adjustOverDepth(over, overbox);
    this.adjustUnderDepth(under, underbox);
  };

  CHTMLmunderover.prototype.markUsed = function () {
    _super.prototype.markUsed.call(this);

    this.jax.wrapperUsage.add(msubsup_js_1.CHTMLmsubsup.kind);
  };

  CHTMLmunderover.kind = munderover_js_4.MmlMunderover.prototype.kind;
  CHTMLmunderover.styles = {
    'mjx-munderover:not([limits="false"])': {
      'padding-top': '.1em'
    },
    'mjx-munderover:not([limits="false"]) > *': {
      display: 'block'
    }
  };
  return CHTMLmunderover;
}(munderover_js_3.CommonMunderoverMixin(msubsup_js_1.CHTMLmsubsup));

exports.CHTMLmunderover = CHTMLmunderover;

/***/ }),

/***/ 4323:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLscriptbase = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var scriptbase_js_1 = __webpack_require__(7550);

var CHTMLscriptbase = function (_super) {
  __extends(CHTMLscriptbase, _super);

  function CHTMLscriptbase() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLscriptbase.prototype.toCHTML = function (parent) {
    this.chtml = this.standardCHTMLnode(parent);

    var _a = __read(this.getOffset(), 2),
        x = _a[0],
        v = _a[1];

    var dx = x - (this.baseRemoveIc ? this.baseIc : 0);
    var style = {
      'vertical-align': this.em(v)
    };

    if (dx) {
      style['margin-left'] = this.em(dx);
    }

    this.baseChild.toCHTML(this.chtml);
    this.scriptChild.toCHTML(this.adaptor.append(this.chtml, this.html('mjx-script', {
      style: style
    })));
  };

  CHTMLscriptbase.prototype.setDeltaW = function (nodes, dx) {
    for (var i = 0; i < dx.length; i++) {
      if (dx[i]) {
        this.adaptor.setStyle(nodes[i], 'paddingLeft', this.em(dx[i]));
      }
    }
  };

  CHTMLscriptbase.prototype.adjustOverDepth = function (over, overbox) {
    if (overbox.d >= 0) return;
    this.adaptor.setStyle(over, 'marginBottom', this.em(overbox.d * overbox.rscale));
  };

  CHTMLscriptbase.prototype.adjustUnderDepth = function (under, underbox) {
    var e_1, _a;

    if (underbox.d >= 0) return;
    var adaptor = this.adaptor;
    var v = this.em(underbox.d);
    var box = this.html('mjx-box', {
      style: {
        'margin-bottom': v,
        'vertical-align': v
      }
    });

    try {
      for (var _b = __values(adaptor.childNodes(adaptor.firstChild(under))), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;
        adaptor.append(box, child);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    adaptor.append(adaptor.firstChild(under), box);
  };

  CHTMLscriptbase.kind = 'scriptbase';
  return CHTMLscriptbase;
}(scriptbase_js_1.CommonScriptbaseMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLscriptbase = CHTMLscriptbase;

/***/ }),

/***/ 723:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CHTMLxml = exports.CHTMLannotationXML = exports.CHTMLannotation = exports.CHTMLsemantics = void 0;

var Wrapper_js_1 = __webpack_require__(5952);

var semantics_js_1 = __webpack_require__(3166);

var semantics_js_2 = __webpack_require__(176);

var MmlNode_js_1 = __webpack_require__(4653);

var CHTMLsemantics = function (_super) {
  __extends(CHTMLsemantics, _super);

  function CHTMLsemantics() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLsemantics.prototype.toCHTML = function (parent) {
    var chtml = this.standardCHTMLnode(parent);

    if (this.childNodes.length) {
      this.childNodes[0].toCHTML(chtml);
    }
  };

  CHTMLsemantics.kind = semantics_js_2.MmlSemantics.prototype.kind;
  return CHTMLsemantics;
}(semantics_js_1.CommonSemanticsMixin(Wrapper_js_1.CHTMLWrapper));

exports.CHTMLsemantics = CHTMLsemantics;

var CHTMLannotation = function (_super) {
  __extends(CHTMLannotation, _super);

  function CHTMLannotation() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLannotation.prototype.toCHTML = function (parent) {
    _super.prototype.toCHTML.call(this, parent);
  };

  CHTMLannotation.prototype.computeBBox = function () {
    return this.bbox;
  };

  CHTMLannotation.kind = semantics_js_2.MmlAnnotation.prototype.kind;
  return CHTMLannotation;
}(Wrapper_js_1.CHTMLWrapper);

exports.CHTMLannotation = CHTMLannotation;

var CHTMLannotationXML = function (_super) {
  __extends(CHTMLannotationXML, _super);

  function CHTMLannotationXML() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLannotationXML.kind = semantics_js_2.MmlAnnotationXML.prototype.kind;
  CHTMLannotationXML.styles = {
    'mjx-annotation-xml': {
      'font-family': 'initial',
      'line-height': 'normal'
    }
  };
  return CHTMLannotationXML;
}(Wrapper_js_1.CHTMLWrapper);

exports.CHTMLannotationXML = CHTMLannotationXML;

var CHTMLxml = function (_super) {
  __extends(CHTMLxml, _super);

  function CHTMLxml() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CHTMLxml.prototype.toCHTML = function (parent) {
    this.chtml = this.adaptor.append(parent, this.adaptor.clone(this.node.getXML()));
  };

  CHTMLxml.prototype.computeBBox = function (bbox, _recompute) {
    if (_recompute === void 0) {
      _recompute = false;
    }

    var _a = this.jax.measureXMLnode(this.node.getXML()),
        w = _a.w,
        h = _a.h,
        d = _a.d;

    bbox.w = w;
    bbox.h = h;
    bbox.d = d;
  };

  CHTMLxml.prototype.getStyles = function () {};

  CHTMLxml.prototype.getScale = function () {};

  CHTMLxml.prototype.getVariant = function () {};

  CHTMLxml.kind = MmlNode_js_1.XMLNode.prototype.kind;
  CHTMLxml.autoStyle = false;
  return CHTMLxml;
}(Wrapper_js_1.CHTMLWrapper);

exports.CHTMLxml = CHTMLxml;

/***/ }),

/***/ 6435:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.TeXFont = void 0;

var FontData_js_1 = __webpack_require__(6116);

var tex_js_1 = __webpack_require__(944);

var bold_italic_js_1 = __webpack_require__(9372);

var bold_js_1 = __webpack_require__(4168);

var double_struck_js_1 = __webpack_require__(2645);

var fraktur_bold_js_1 = __webpack_require__(7736);

var fraktur_js_1 = __webpack_require__(1159);

var italic_js_1 = __webpack_require__(4872);

var largeop_js_1 = __webpack_require__(3963);

var monospace_js_1 = __webpack_require__(5581);

var normal_js_1 = __webpack_require__(1329);

var sans_serif_bold_italic_js_1 = __webpack_require__(3472);

var sans_serif_bold_js_1 = __webpack_require__(1336);

var sans_serif_italic_js_1 = __webpack_require__(6518);

var sans_serif_js_1 = __webpack_require__(6563);

var script_bold_js_1 = __webpack_require__(2116);

var script_js_1 = __webpack_require__(3504);

var smallop_js_1 = __webpack_require__(8152);

var tex_calligraphic_bold_js_1 = __webpack_require__(4491);

var tex_calligraphic_js_1 = __webpack_require__(4420);

var tex_mathit_js_1 = __webpack_require__(139);

var tex_oldstyle_bold_js_1 = __webpack_require__(2075);

var tex_oldstyle_js_1 = __webpack_require__(2582);

var tex_size3_js_1 = __webpack_require__(1962);

var tex_size4_js_1 = __webpack_require__(5593);

var tex_variant_js_1 = __webpack_require__(7187);

var delimiters_js_1 = __webpack_require__(7528);

var TeXFont = function (_super) {
  __extends(TeXFont, _super);

  function TeXFont() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  TeXFont.defaultCssFamilyPrefix = 'MJXZERO';
  TeXFont.defaultVariantClasses = {
    'normal': 'mjx-n',
    'bold': 'mjx-b',
    'italic': 'mjx-i',
    'bold-italic': 'mjx-b mjx-i',
    'double-struck': 'mjx-ds mjx-b',
    'fraktur': 'mjx-fr',
    'bold-fraktur': 'mjx-fr mjx-b',
    'script': 'mjx-sc mjx-i',
    'bold-script': 'mjx-sc mjx-b mjx-i',
    'sans-serif': 'mjx-ss',
    'bold-sans-serif': 'mjx-ss mjx-b',
    'sans-serif-italic': 'mjx-ss mjx-i',
    'sans-serif-bold-italic': 'mjx-ss mjx-b mjx-i',
    'monospace': 'mjx-ty',
    '-smallop': 'mjx-sop',
    '-largeop': 'mjx-lop',
    '-size3': 'mjx-s3',
    '-size4': 'mjx-s4',
    '-tex-calligraphic': 'mjx-cal mjx-i',
    '-tex-bold-calligraphic': 'mjx-cal mjx-b',
    '-tex-mathit': 'mjx-mit mjx-i',
    '-tex-oldstyle': 'mjx-os',
    '-tex-bold-oldstyle': 'mjx-os mjx-b',
    '-tex-variant': 'mjx-var'
  };
  TeXFont.defaultVariantLetters = {
    'normal': '',
    'bold': 'B',
    'italic': 'MI',
    'bold-italic': 'BI',
    'double-struck': 'A',
    'fraktur': 'FR',
    'bold-fraktur': 'FRB',
    'script': 'SC',
    'bold-script': 'SCB',
    'sans-serif': 'SS',
    'bold-sans-serif': 'SSB',
    'sans-serif-italic': 'SSI',
    'sans-serif-bold-italic': 'SSBI',
    'monospace': 'T',
    '-smallop': 'S1',
    '-largeop': 'S2',
    '-size3': 'S3',
    '-size4': 'S4',
    '-tex-calligraphic': 'C',
    '-tex-bold-calligraphic': 'CB',
    '-tex-mathit': 'MI',
    '-tex-oldstyle': 'C',
    '-tex-bold-oldstyle': 'CB',
    '-tex-variant': 'A'
  };
  TeXFont.defaultDelimiters = delimiters_js_1.delimiters;
  TeXFont.defaultChars = {
    'normal': normal_js_1.normal,
    'bold': bold_js_1.bold,
    'italic': italic_js_1.italic,
    'bold-italic': bold_italic_js_1.boldItalic,
    'double-struck': double_struck_js_1.doubleStruck,
    'fraktur': fraktur_js_1.fraktur,
    'bold-fraktur': fraktur_bold_js_1.frakturBold,
    'script': script_js_1.script,
    'bold-script': script_bold_js_1.scriptBold,
    'sans-serif': sans_serif_js_1.sansSerif,
    'bold-sans-serif': sans_serif_bold_js_1.sansSerifBold,
    'sans-serif-italic': sans_serif_italic_js_1.sansSerifItalic,
    'sans-serif-bold-italic': sans_serif_bold_italic_js_1.sansSerifBoldItalic,
    'monospace': monospace_js_1.monospace,
    '-smallop': smallop_js_1.smallop,
    '-largeop': largeop_js_1.largeop,
    '-size3': tex_size3_js_1.texSize3,
    '-size4': tex_size4_js_1.texSize4,
    '-tex-calligraphic': tex_calligraphic_js_1.texCalligraphic,
    '-tex-bold-calligraphic': tex_calligraphic_bold_js_1.texCalligraphicBold,
    '-tex-mathit': tex_mathit_js_1.texMathit,
    '-tex-oldstyle': tex_oldstyle_js_1.texOldstyle,
    '-tex-bold-oldstyle': tex_oldstyle_bold_js_1.texOldstyleBold,
    '-tex-variant': tex_variant_js_1.texVariant
  };
  TeXFont.defaultStyles = __assign(__assign({}, FontData_js_1.CHTMLFontData.defaultStyles), {
    '.MJX-TEX': {
      'font-family': 'MJXZERO, MJXTEX'
    },
    '.TEX-B': {
      'font-family': 'MJXZERO, MJXTEX-B'
    },
    '.TEX-I': {
      'font-family': 'MJXZERO, MJXTEX-I'
    },
    '.TEX-MI': {
      'font-family': 'MJXZERO, MJXTEX-MI'
    },
    '.TEX-BI': {
      'font-family': 'MJXZERO, MJXTEX-BI'
    },
    '.TEX-S1': {
      'font-family': 'MJXZERO, MJXTEX-S1'
    },
    '.TEX-S2': {
      'font-family': 'MJXZERO, MJXTEX-S2'
    },
    '.TEX-S3': {
      'font-family': 'MJXZERO, MJXTEX-S3'
    },
    '.TEX-S4': {
      'font-family': 'MJXZERO, MJXTEX-S4'
    },
    '.TEX-A': {
      'font-family': 'MJXZERO, MJXTEX-A'
    },
    '.TEX-C': {
      'font-family': 'MJXZERO, MJXTEX-C'
    },
    '.TEX-CB': {
      'font-family': 'MJXZERO, MJXTEX-CB'
    },
    '.TEX-FR': {
      'font-family': 'MJXZERO, MJXTEX-FR'
    },
    '.TEX-FRB': {
      'font-family': 'MJXZERO, MJXTEX-FRB'
    },
    '.TEX-SS': {
      'font-family': 'MJXZERO, MJXTEX-SS'
    },
    '.TEX-SSB': {
      'font-family': 'MJXZERO, MJXTEX-SSB'
    },
    '.TEX-SSI': {
      'font-family': 'MJXZERO, MJXTEX-SSI'
    },
    '.TEX-SC': {
      'font-family': 'MJXZERO, MJXTEX-SC'
    },
    '.TEX-T': {
      'font-family': 'MJXZERO, MJXTEX-T'
    },
    '.TEX-V': {
      'font-family': 'MJXZERO, MJXTEX-V'
    },
    '.TEX-VB': {
      'font-family': 'MJXZERO, MJXTEX-VB'
    },
    'mjx-stretchy-v mjx-c, mjx-stretchy-h mjx-c': {
      'font-family': 'MJXZERO, MJXTEX-S1, MJXTEX-S4, MJXTEX, MJXTEX-A ! important'
    }
  });
  TeXFont.defaultFonts = __assign(__assign({}, FontData_js_1.CHTMLFontData.defaultFonts), {
    '@font-face /* 1 */': {
      'font-family': 'MJXTEX',
      src: 'url("%%URL%%/MathJax_Main-Regular.woff") format("woff")'
    },
    '@font-face /* 2 */': {
      'font-family': 'MJXTEX-B',
      src: 'url("%%URL%%/MathJax_Main-Bold.woff") format("woff")'
    },
    '@font-face /* 3 */': {
      'font-family': 'MJXTEX-I',
      src: 'url("%%URL%%/MathJax_Math-Italic.woff") format("woff")'
    },
    '@font-face /* 4 */': {
      'font-family': 'MJXTEX-MI',
      src: 'url("%%URL%%/MathJax_Main-Italic.woff") format("woff")'
    },
    '@font-face /* 5 */': {
      'font-family': 'MJXTEX-BI',
      src: 'url("%%URL%%/MathJax_Math-BoldItalic.woff") format("woff")'
    },
    '@font-face /* 6 */': {
      'font-family': 'MJXTEX-S1',
      src: 'url("%%URL%%/MathJax_Size1-Regular.woff") format("woff")'
    },
    '@font-face /* 7 */': {
      'font-family': 'MJXTEX-S2',
      src: 'url("%%URL%%/MathJax_Size2-Regular.woff") format("woff")'
    },
    '@font-face /* 8 */': {
      'font-family': 'MJXTEX-S3',
      src: 'url("%%URL%%/MathJax_Size3-Regular.woff") format("woff")'
    },
    '@font-face /* 9 */': {
      'font-family': 'MJXTEX-S4',
      src: 'url("%%URL%%/MathJax_Size4-Regular.woff") format("woff")'
    },
    '@font-face /* 10 */': {
      'font-family': 'MJXTEX-A',
      src: 'url("%%URL%%/MathJax_AMS-Regular.woff") format("woff")'
    },
    '@font-face /* 11 */': {
      'font-family': 'MJXTEX-C',
      src: 'url("%%URL%%/MathJax_Calligraphic-Regular.woff") format("woff")'
    },
    '@font-face /* 12 */': {
      'font-family': 'MJXTEX-CB',
      src: 'url("%%URL%%/MathJax_Calligraphic-Bold.woff") format("woff")'
    },
    '@font-face /* 13 */': {
      'font-family': 'MJXTEX-FR',
      src: 'url("%%URL%%/MathJax_Fraktur-Regular.woff") format("woff")'
    },
    '@font-face /* 14 */': {
      'font-family': 'MJXTEX-FRB',
      src: 'url("%%URL%%/MathJax_Fraktur-Bold.woff") format("woff")'
    },
    '@font-face /* 15 */': {
      'font-family': 'MJXTEX-SS',
      src: 'url("%%URL%%/MathJax_SansSerif-Regular.woff") format("woff")'
    },
    '@font-face /* 16 */': {
      'font-family': 'MJXTEX-SSB',
      src: 'url("%%URL%%/MathJax_SansSerif-Bold.woff") format("woff")'
    },
    '@font-face /* 17 */': {
      'font-family': 'MJXTEX-SSI',
      src: 'url("%%URL%%/MathJax_SansSerif-Italic.woff") format("woff")'
    },
    '@font-face /* 18 */': {
      'font-family': 'MJXTEX-SC',
      src: 'url("%%URL%%/MathJax_Script-Regular.woff") format("woff")'
    },
    '@font-face /* 19 */': {
      'font-family': 'MJXTEX-T',
      src: 'url("%%URL%%/MathJax_Typewriter-Regular.woff") format("woff")'
    },
    '@font-face /* 20 */': {
      'font-family': 'MJXTEX-V',
      src: 'url("%%URL%%/MathJax_Vector-Regular.woff") format("woff")'
    },
    '@font-face /* 21 */': {
      'font-family': 'MJXTEX-VB',
      src: 'url("%%URL%%/MathJax_Vector-Bold.woff") format("woff")'
    }
  });
  return TeXFont;
}(tex_js_1.CommonTeXFontMixin(FontData_js_1.CHTMLFontData));

exports.TeXFont = TeXFont;

/***/ }),

/***/ 9372:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.boldItalic = void 0;

var FontData_js_1 = __webpack_require__(6116);

var bold_italic_js_1 = __webpack_require__(6043);

exports.boldItalic = FontData_js_1.AddCSS(bold_italic_js_1.boldItalic, {
  0x131: {
    f: 'B'
  },
  0x237: {
    f: 'B'
  },
  0x2044: {
    c: '/'
  },
  0x2206: {
    c: '\\394'
  },
  0x29F8: {
    c: '/'
  }
});

/***/ }),

/***/ 4168:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.bold = void 0;

var FontData_js_1 = __webpack_require__(6116);

var bold_js_1 = __webpack_require__(3283);

exports.bold = FontData_js_1.AddCSS(bold_js_1.bold, {
  0xB7: {
    c: '\\22C5'
  },
  0x131: {
    f: ''
  },
  0x237: {
    f: ''
  },
  0x2B9: {
    c: '\\2032'
  },
  0x2002: {
    c: ''
  },
  0x2003: {
    c: ''
  },
  0x2004: {
    c: ''
  },
  0x2005: {
    c: ''
  },
  0x2006: {
    c: ''
  },
  0x2009: {
    c: ''
  },
  0x200A: {
    c: ''
  },
  0x2015: {
    c: '\\2014'
  },
  0x2016: {
    c: '\\2225'
  },
  0x2017: {
    c: '_'
  },
  0x2022: {
    c: '\\2219'
  },
  0x2033: {
    c: '\\2032\\2032'
  },
  0x2034: {
    c: '\\2032\\2032\\2032'
  },
  0x203E: {
    c: '\\2C9'
  },
  0x2044: {
    c: '/'
  },
  0x2057: {
    c: '\\2032\\2032\\2032\\2032'
  },
  0x20D7: {
    c: '\\2192',
    f: 'VB'
  },
  0x219A: {
    c: '\\2190\\338'
  },
  0x219B: {
    c: '\\2192\\338'
  },
  0x21AE: {
    c: '\\2194\\338'
  },
  0x21CD: {
    c: '\\21D0\\338'
  },
  0x21CE: {
    c: '\\21D4\\338'
  },
  0x21CF: {
    c: '\\21D2\\338'
  },
  0x2204: {
    c: '\\2203\\338'
  },
  0x2206: {
    c: '\\394'
  },
  0x220C: {
    c: '\\220B\\338'
  },
  0x2224: {
    c: '\\2223\\338'
  },
  0x2226: {
    c: '\\2225\\338'
  },
  0x2241: {
    c: '\\223C\\338'
  },
  0x2244: {
    c: '\\2243\\338'
  },
  0x2247: {
    c: '\\2245\\338'
  },
  0x2249: {
    c: '\\2248\\338'
  },
  0x2262: {
    c: '\\2261\\338'
  },
  0x226D: {
    c: '\\224D\\338'
  },
  0x226E: {
    c: '<\\338'
  },
  0x226F: {
    c: '>\\338'
  },
  0x2270: {
    c: '\\2264\\338'
  },
  0x2271: {
    c: '\\2265\\338'
  },
  0x2280: {
    c: '\\227A\\338'
  },
  0x2281: {
    c: '\\227B\\338'
  },
  0x2284: {
    c: '\\2282\\338'
  },
  0x2285: {
    c: '\\2283\\338'
  },
  0x2288: {
    c: '\\2286\\338'
  },
  0x2289: {
    c: '\\2287\\338'
  },
  0x22AC: {
    c: '\\22A2\\338'
  },
  0x22AD: {
    c: '\\22A8\\338'
  },
  0x22E2: {
    c: '\\2291\\338'
  },
  0x22E3: {
    c: '\\2292\\338'
  },
  0x2329: {
    c: '\\27E8'
  },
  0x232A: {
    c: '\\27E9'
  },
  0x25B5: {
    c: '\\25B3'
  },
  0x25BF: {
    c: '\\25BD'
  },
  0x2758: {
    c: '\\2223'
  },
  0x29F8: {
    c: '/',
    f: 'BI'
  },
  0x2A2F: {
    c: '\\D7'
  },
  0x3008: {
    c: '\\27E8'
  },
  0x3009: {
    c: '\\27E9'
  }
});

/***/ }),

/***/ 2645:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.doubleStruck = void 0;

var double_struck_js_1 = __webpack_require__(2251);

Object.defineProperty(exports, "doubleStruck", ({
  enumerable: true,
  get: function get() {
    return double_struck_js_1.doubleStruck;
  }
}));

/***/ }),

/***/ 7736:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.frakturBold = void 0;

var FontData_js_1 = __webpack_require__(6116);

var fraktur_bold_js_1 = __webpack_require__(654);

exports.frakturBold = FontData_js_1.AddCSS(fraktur_bold_js_1.frakturBold, {
  0x2044: {
    c: '/'
  }
});

/***/ }),

/***/ 1159:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.fraktur = void 0;

var FontData_js_1 = __webpack_require__(6116);

var fraktur_js_1 = __webpack_require__(4210);

exports.fraktur = FontData_js_1.AddCSS(fraktur_js_1.fraktur, {
  0x2044: {
    c: '/'
  }
});

/***/ }),

/***/ 4872:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.italic = void 0;

var FontData_js_1 = __webpack_require__(6116);

var italic_js_1 = __webpack_require__(5271);

exports.italic = FontData_js_1.AddCSS(italic_js_1.italic, {
  0x2F: {
    f: 'I'
  },
  0x3DD: {
    c: '\\E008',
    f: 'A'
  },
  0x2015: {
    c: '\\2014'
  },
  0x2017: {
    c: '_'
  },
  0x2044: {
    c: '/',
    f: 'I'
  },
  0x2206: {
    c: '\\394',
    f: 'I'
  },
  0x29F8: {
    c: '/',
    f: 'I'
  }
});

/***/ }),

/***/ 3963:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.largeop = void 0;

var FontData_js_1 = __webpack_require__(6116);

var largeop_js_1 = __webpack_require__(2115);

exports.largeop = FontData_js_1.AddCSS(largeop_js_1.largeop, {
  0x2016: {
    f: 'S1'
  },
  0x2044: {
    c: '/'
  },
  0x2191: {
    f: 'S1'
  },
  0x2193: {
    f: 'S1'
  },
  0x21D1: {
    f: 'S1'
  },
  0x21D3: {
    f: 'S1'
  },
  0x2223: {
    f: 'S1'
  },
  0x2225: {
    f: 'S1'
  },
  0x2329: {
    c: '\\27E8'
  },
  0x232A: {
    c: '\\27E9'
  },
  0x23D0: {
    f: 'S1'
  },
  0x2758: {
    c: '\\2223',
    f: 'S1'
  },
  0x2A0C: {
    c: '\\222C\\222C'
  },
  0x3008: {
    c: '\\27E8'
  },
  0x3009: {
    c: '\\27E9'
  }
});

/***/ }),

/***/ 5581:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.monospace = void 0;

var FontData_js_1 = __webpack_require__(6116);

var monospace_js_1 = __webpack_require__(7389);

exports.monospace = FontData_js_1.AddCSS(monospace_js_1.monospace, {
  0x2B9: {
    c: '\\2032'
  },
  0x391: {
    c: 'A'
  },
  0x392: {
    c: 'B'
  },
  0x395: {
    c: 'E'
  },
  0x396: {
    c: 'Z'
  },
  0x397: {
    c: 'H'
  },
  0x399: {
    c: 'I'
  },
  0x39A: {
    c: 'K'
  },
  0x39C: {
    c: 'M'
  },
  0x39D: {
    c: 'N'
  },
  0x39F: {
    c: 'O'
  },
  0x3A1: {
    c: 'P'
  },
  0x3A4: {
    c: 'T'
  },
  0x3A7: {
    c: 'X'
  },
  0x2017: {
    c: '_'
  },
  0x2033: {
    c: '\\2032\\2032'
  },
  0x2034: {
    c: '\\2032\\2032\\2032'
  },
  0x2044: {
    c: '/'
  },
  0x2057: {
    c: '\\2032\\2032\\2032\\2032'
  },
  0x2206: {
    c: '\\394'
  }
});

/***/ }),

/***/ 1329:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.normal = void 0;

var FontData_js_1 = __webpack_require__(6116);

var normal_js_1 = __webpack_require__(3245);

exports.normal = FontData_js_1.AddCSS(normal_js_1.normal, {
  0xA3: {
    f: 'MI'
  },
  0xA5: {
    f: 'A'
  },
  0xAE: {
    f: 'A'
  },
  0xB7: {
    c: '\\22C5'
  },
  0xF0: {
    f: 'A'
  },
  0x2B9: {
    c: '\\2032'
  },
  0x391: {
    c: 'A'
  },
  0x392: {
    c: 'B'
  },
  0x395: {
    c: 'E'
  },
  0x396: {
    c: 'Z'
  },
  0x397: {
    c: 'H'
  },
  0x399: {
    c: 'I'
  },
  0x39A: {
    c: 'K'
  },
  0x39C: {
    c: 'M'
  },
  0x39D: {
    c: 'N'
  },
  0x39F: {
    c: 'O'
  },
  0x3A1: {
    c: 'P'
  },
  0x3A4: {
    c: 'T'
  },
  0x3A7: {
    c: 'X'
  },
  0x2000: {
    c: ''
  },
  0x2001: {
    c: ''
  },
  0x2002: {
    c: ''
  },
  0x2003: {
    c: ''
  },
  0x2004: {
    c: ''
  },
  0x2005: {
    c: ''
  },
  0x2006: {
    c: ''
  },
  0x2009: {
    c: ''
  },
  0x200A: {
    c: ''
  },
  0x200B: {
    c: ''
  },
  0x200C: {
    c: ''
  },
  0x2015: {
    c: '\\2014'
  },
  0x2016: {
    c: '\\2225'
  },
  0x2017: {
    c: '_'
  },
  0x2022: {
    c: '\\2219'
  },
  0x2033: {
    c: '\\2032\\2032'
  },
  0x2034: {
    c: '\\2032\\2032\\2032'
  },
  0x2035: {
    f: 'A'
  },
  0x2036: {
    c: '\\2035\\2035',
    f: 'A'
  },
  0x2037: {
    c: '\\2035\\2035\\2035',
    f: 'A'
  },
  0x203E: {
    c: '\\2C9'
  },
  0x2044: {
    c: '/'
  },
  0x2057: {
    c: '\\2032\\2032\\2032\\2032'
  },
  0x2060: {
    c: ''
  },
  0x2061: {
    c: ''
  },
  0x2062: {
    c: ''
  },
  0x2063: {
    c: ''
  },
  0x2064: {
    c: ''
  },
  0x20D7: {
    c: '\\2192',
    f: 'V'
  },
  0x2102: {
    c: 'C',
    f: 'A'
  },
  0x210B: {
    c: 'H',
    f: 'SC'
  },
  0x210C: {
    c: 'H',
    f: 'FR'
  },
  0x210D: {
    c: 'H',
    f: 'A'
  },
  0x210E: {
    c: 'h',
    f: 'I'
  },
  0x210F: {
    f: 'A'
  },
  0x2110: {
    c: 'I',
    f: 'SC'
  },
  0x2111: {
    c: 'I',
    f: 'FR'
  },
  0x2112: {
    c: 'L',
    f: 'SC'
  },
  0x2115: {
    c: 'N',
    f: 'A'
  },
  0x2119: {
    c: 'P',
    f: 'A'
  },
  0x211A: {
    c: 'Q',
    f: 'A'
  },
  0x211B: {
    c: 'R',
    f: 'SC'
  },
  0x211C: {
    c: 'R',
    f: 'FR'
  },
  0x211D: {
    c: 'R',
    f: 'A'
  },
  0x2124: {
    c: 'Z',
    f: 'A'
  },
  0x2126: {
    c: '\\3A9'
  },
  0x2127: {
    f: 'A'
  },
  0x2128: {
    c: 'Z',
    f: 'FR'
  },
  0x212C: {
    c: 'B',
    f: 'SC'
  },
  0x212D: {
    c: 'C',
    f: 'FR'
  },
  0x2130: {
    c: 'E',
    f: 'SC'
  },
  0x2131: {
    c: 'F',
    f: 'SC'
  },
  0x2132: {
    f: 'A'
  },
  0x2133: {
    c: 'M',
    f: 'SC'
  },
  0x2136: {
    f: 'A'
  },
  0x2137: {
    f: 'A'
  },
  0x2138: {
    f: 'A'
  },
  0x2141: {
    f: 'A'
  },
  0x219A: {
    f: 'A'
  },
  0x219B: {
    f: 'A'
  },
  0x219E: {
    f: 'A'
  },
  0x21A0: {
    f: 'A'
  },
  0x21A2: {
    f: 'A'
  },
  0x21A3: {
    f: 'A'
  },
  0x21AB: {
    f: 'A'
  },
  0x21AC: {
    f: 'A'
  },
  0x21AD: {
    f: 'A'
  },
  0x21AE: {
    f: 'A'
  },
  0x21B0: {
    f: 'A'
  },
  0x21B1: {
    f: 'A'
  },
  0x21B6: {
    f: 'A'
  },
  0x21B7: {
    f: 'A'
  },
  0x21BA: {
    f: 'A'
  },
  0x21BB: {
    f: 'A'
  },
  0x21BE: {
    f: 'A'
  },
  0x21BF: {
    f: 'A'
  },
  0x21C2: {
    f: 'A'
  },
  0x21C3: {
    f: 'A'
  },
  0x21C4: {
    f: 'A'
  },
  0x21C6: {
    f: 'A'
  },
  0x21C7: {
    f: 'A'
  },
  0x21C8: {
    f: 'A'
  },
  0x21C9: {
    f: 'A'
  },
  0x21CA: {
    f: 'A'
  },
  0x21CB: {
    f: 'A'
  },
  0x21CD: {
    f: 'A'
  },
  0x21CE: {
    f: 'A'
  },
  0x21CF: {
    f: 'A'
  },
  0x21DA: {
    f: 'A'
  },
  0x21DB: {
    f: 'A'
  },
  0x21DD: {
    f: 'A'
  },
  0x21E0: {
    f: 'A'
  },
  0x21E2: {
    f: 'A'
  },
  0x2201: {
    f: 'A'
  },
  0x2204: {
    c: '\\2203\\338'
  },
  0x2206: {
    c: '\\394'
  },
  0x220C: {
    c: '\\220B\\338'
  },
  0x220D: {
    f: 'A'
  },
  0x220F: {
    f: 'S1'
  },
  0x2210: {
    f: 'S1'
  },
  0x2211: {
    f: 'S1'
  },
  0x2214: {
    f: 'A'
  },
  0x2221: {
    f: 'A'
  },
  0x2222: {
    f: 'A'
  },
  0x2224: {
    f: 'A'
  },
  0x2226: {
    f: 'A'
  },
  0x222C: {
    f: 'S1'
  },
  0x222D: {
    f: 'S1'
  },
  0x222E: {
    f: 'S1'
  },
  0x2234: {
    f: 'A'
  },
  0x2235: {
    f: 'A'
  },
  0x223D: {
    f: 'A'
  },
  0x2241: {
    f: 'A'
  },
  0x2242: {
    f: 'A'
  },
  0x2244: {
    c: '\\2243\\338'
  },
  0x2247: {
    c: '\\2246',
    f: 'A'
  },
  0x2249: {
    c: '\\2248\\338'
  },
  0x224A: {
    f: 'A'
  },
  0x224E: {
    f: 'A'
  },
  0x224F: {
    f: 'A'
  },
  0x2251: {
    f: 'A'
  },
  0x2252: {
    f: 'A'
  },
  0x2253: {
    f: 'A'
  },
  0x2256: {
    f: 'A'
  },
  0x2257: {
    f: 'A'
  },
  0x225C: {
    f: 'A'
  },
  0x2262: {
    c: '\\2261\\338'
  },
  0x2266: {
    f: 'A'
  },
  0x2267: {
    f: 'A'
  },
  0x2268: {
    f: 'A'
  },
  0x2269: {
    f: 'A'
  },
  0x226C: {
    f: 'A'
  },
  0x226D: {
    c: '\\224D\\338'
  },
  0x226E: {
    f: 'A'
  },
  0x226F: {
    f: 'A'
  },
  0x2270: {
    f: 'A'
  },
  0x2271: {
    f: 'A'
  },
  0x2272: {
    f: 'A'
  },
  0x2273: {
    f: 'A'
  },
  0x2274: {
    c: '\\2272\\338'
  },
  0x2275: {
    c: '\\2273\\338'
  },
  0x2276: {
    f: 'A'
  },
  0x2277: {
    f: 'A'
  },
  0x2278: {
    c: '\\2276\\338'
  },
  0x2279: {
    c: '\\2277\\338'
  },
  0x227C: {
    f: 'A'
  },
  0x227D: {
    f: 'A'
  },
  0x227E: {
    f: 'A'
  },
  0x227F: {
    f: 'A'
  },
  0x2280: {
    f: 'A'
  },
  0x2281: {
    f: 'A'
  },
  0x2284: {
    c: '\\2282\\338'
  },
  0x2285: {
    c: '\\2283\\338'
  },
  0x2288: {
    f: 'A'
  },
  0x2289: {
    f: 'A'
  },
  0x228A: {
    f: 'A'
  },
  0x228B: {
    f: 'A'
  },
  0x228F: {
    f: 'A'
  },
  0x2290: {
    f: 'A'
  },
  0x229A: {
    f: 'A'
  },
  0x229B: {
    f: 'A'
  },
  0x229D: {
    f: 'A'
  },
  0x229E: {
    f: 'A'
  },
  0x229F: {
    f: 'A'
  },
  0x22A0: {
    f: 'A'
  },
  0x22A1: {
    f: 'A'
  },
  0x22A9: {
    f: 'A'
  },
  0x22AA: {
    f: 'A'
  },
  0x22AC: {
    f: 'A'
  },
  0x22AD: {
    f: 'A'
  },
  0x22AE: {
    f: 'A'
  },
  0x22AF: {
    f: 'A'
  },
  0x22B2: {
    f: 'A'
  },
  0x22B3: {
    f: 'A'
  },
  0x22B4: {
    f: 'A'
  },
  0x22B5: {
    f: 'A'
  },
  0x22B8: {
    f: 'A'
  },
  0x22BA: {
    f: 'A'
  },
  0x22BB: {
    f: 'A'
  },
  0x22BC: {
    f: 'A'
  },
  0x22C0: {
    f: 'S1'
  },
  0x22C1: {
    f: 'S1'
  },
  0x22C2: {
    f: 'S1'
  },
  0x22C3: {
    f: 'S1'
  },
  0x22C7: {
    f: 'A'
  },
  0x22C9: {
    f: 'A'
  },
  0x22CA: {
    f: 'A'
  },
  0x22CB: {
    f: 'A'
  },
  0x22CC: {
    f: 'A'
  },
  0x22CD: {
    f: 'A'
  },
  0x22CE: {
    f: 'A'
  },
  0x22CF: {
    f: 'A'
  },
  0x22D0: {
    f: 'A'
  },
  0x22D1: {
    f: 'A'
  },
  0x22D2: {
    f: 'A'
  },
  0x22D3: {
    f: 'A'
  },
  0x22D4: {
    f: 'A'
  },
  0x22D6: {
    f: 'A'
  },
  0x22D7: {
    f: 'A'
  },
  0x22D8: {
    f: 'A'
  },
  0x22D9: {
    f: 'A'
  },
  0x22DA: {
    f: 'A'
  },
  0x22DB: {
    f: 'A'
  },
  0x22DE: {
    f: 'A'
  },
  0x22DF: {
    f: 'A'
  },
  0x22E0: {
    f: 'A'
  },
  0x22E1: {
    f: 'A'
  },
  0x22E2: {
    c: '\\2291\\338'
  },
  0x22E3: {
    c: '\\2292\\338'
  },
  0x22E6: {
    f: 'A'
  },
  0x22E7: {
    f: 'A'
  },
  0x22E8: {
    f: 'A'
  },
  0x22E9: {
    f: 'A'
  },
  0x22EA: {
    f: 'A'
  },
  0x22EB: {
    f: 'A'
  },
  0x22EC: {
    f: 'A'
  },
  0x22ED: {
    f: 'A'
  },
  0x2305: {
    c: '\\22BC',
    f: 'A'
  },
  0x2306: {
    c: '\\2A5E',
    f: 'A'
  },
  0x231C: {
    c: '\\250C',
    f: 'A'
  },
  0x231D: {
    c: '\\2510',
    f: 'A'
  },
  0x231E: {
    c: '\\2514',
    f: 'A'
  },
  0x231F: {
    c: '\\2518',
    f: 'A'
  },
  0x2329: {
    c: '\\27E8'
  },
  0x232A: {
    c: '\\27E9'
  },
  0x23D0: {
    f: 'S1'
  },
  0x24C8: {
    f: 'A'
  },
  0x250C: {
    f: 'A'
  },
  0x2510: {
    f: 'A'
  },
  0x2514: {
    f: 'A'
  },
  0x2518: {
    f: 'A'
  },
  0x2571: {
    f: 'A'
  },
  0x2572: {
    f: 'A'
  },
  0x25A0: {
    f: 'A'
  },
  0x25A1: {
    f: 'A'
  },
  0x25AA: {
    c: '\\25A0',
    f: 'A'
  },
  0x25B2: {
    f: 'A'
  },
  0x25B4: {
    c: '\\25B2',
    f: 'A'
  },
  0x25B5: {
    c: '\\25B3'
  },
  0x25B6: {
    f: 'A'
  },
  0x25B8: {
    c: '\\25B6',
    f: 'A'
  },
  0x25BC: {
    f: 'A'
  },
  0x25BE: {
    c: '\\25BC',
    f: 'A'
  },
  0x25BF: {
    c: '\\25BD'
  },
  0x25C0: {
    f: 'A'
  },
  0x25C2: {
    c: '\\25C0',
    f: 'A'
  },
  0x25CA: {
    f: 'A'
  },
  0x25FB: {
    c: '\\25A1',
    f: 'A'
  },
  0x25FC: {
    c: '\\25A0',
    f: 'A'
  },
  0x2605: {
    f: 'A'
  },
  0x2713: {
    f: 'A'
  },
  0x2720: {
    f: 'A'
  },
  0x2758: {
    c: '\\2223'
  },
  0x29EB: {
    f: 'A'
  },
  0x29F8: {
    c: '/',
    f: 'I'
  },
  0x2A00: {
    f: 'S1'
  },
  0x2A01: {
    f: 'S1'
  },
  0x2A02: {
    f: 'S1'
  },
  0x2A04: {
    f: 'S1'
  },
  0x2A06: {
    f: 'S1'
  },
  0x2A0C: {
    c: '\\222C\\222C',
    f: 'S1'
  },
  0x2A2F: {
    c: '\\D7'
  },
  0x2A5E: {
    f: 'A'
  },
  0x2A7D: {
    f: 'A'
  },
  0x2A7E: {
    f: 'A'
  },
  0x2A85: {
    f: 'A'
  },
  0x2A86: {
    f: 'A'
  },
  0x2A87: {
    f: 'A'
  },
  0x2A88: {
    f: 'A'
  },
  0x2A89: {
    f: 'A'
  },
  0x2A8A: {
    f: 'A'
  },
  0x2A8B: {
    f: 'A'
  },
  0x2A8C: {
    f: 'A'
  },
  0x2A95: {
    f: 'A'
  },
  0x2A96: {
    f: 'A'
  },
  0x2AB5: {
    f: 'A'
  },
  0x2AB6: {
    f: 'A'
  },
  0x2AB7: {
    f: 'A'
  },
  0x2AB8: {
    f: 'A'
  },
  0x2AB9: {
    f: 'A'
  },
  0x2ABA: {
    f: 'A'
  },
  0x2AC5: {
    f: 'A'
  },
  0x2AC6: {
    f: 'A'
  },
  0x2ACB: {
    f: 'A'
  },
  0x2ACC: {
    f: 'A'
  },
  0x3008: {
    c: '\\27E8'
  },
  0x3009: {
    c: '\\27E9'
  },
  0xE006: {
    f: 'A'
  },
  0xE007: {
    f: 'A'
  },
  0xE008: {
    f: 'A'
  },
  0xE009: {
    f: 'A'
  },
  0xE00C: {
    f: 'A'
  },
  0xE00D: {
    f: 'A'
  },
  0xE00E: {
    f: 'A'
  },
  0xE00F: {
    f: 'A'
  },
  0xE010: {
    f: 'A'
  },
  0xE011: {
    f: 'A'
  },
  0xE016: {
    f: 'A'
  },
  0xE017: {
    f: 'A'
  },
  0xE018: {
    f: 'A'
  },
  0xE019: {
    f: 'A'
  },
  0xE01A: {
    f: 'A'
  },
  0xE01B: {
    f: 'A'
  },
  0x1D400: {
    c: 'A',
    f: 'B'
  },
  0x1D401: {
    c: 'B',
    f: 'B'
  },
  0x1D402: {
    c: 'C',
    f: 'B'
  },
  0x1D403: {
    c: 'D',
    f: 'B'
  },
  0x1D404: {
    c: 'E',
    f: 'B'
  },
  0x1D405: {
    c: 'F',
    f: 'B'
  },
  0x1D406: {
    c: 'G',
    f: 'B'
  },
  0x1D407: {
    c: 'H',
    f: 'B'
  },
  0x1D408: {
    c: 'I',
    f: 'B'
  },
  0x1D409: {
    c: 'J',
    f: 'B'
  },
  0x1D40A: {
    c: 'K',
    f: 'B'
  },
  0x1D40B: {
    c: 'L',
    f: 'B'
  },
  0x1D40C: {
    c: 'M',
    f: 'B'
  },
  0x1D40D: {
    c: 'N',
    f: 'B'
  },
  0x1D40E: {
    c: 'O',
    f: 'B'
  },
  0x1D40F: {
    c: 'P',
    f: 'B'
  },
  0x1D410: {
    c: 'Q',
    f: 'B'
  },
  0x1D411: {
    c: 'R',
    f: 'B'
  },
  0x1D412: {
    c: 'S',
    f: 'B'
  },
  0x1D413: {
    c: 'T',
    f: 'B'
  },
  0x1D414: {
    c: 'U',
    f: 'B'
  },
  0x1D415: {
    c: 'V',
    f: 'B'
  },
  0x1D416: {
    c: 'W',
    f: 'B'
  },
  0x1D417: {
    c: 'X',
    f: 'B'
  },
  0x1D418: {
    c: 'Y',
    f: 'B'
  },
  0x1D419: {
    c: 'Z',
    f: 'B'
  },
  0x1D41A: {
    c: 'a',
    f: 'B'
  },
  0x1D41B: {
    c: 'b',
    f: 'B'
  },
  0x1D41C: {
    c: 'c',
    f: 'B'
  },
  0x1D41D: {
    c: 'd',
    f: 'B'
  },
  0x1D41E: {
    c: 'e',
    f: 'B'
  },
  0x1D41F: {
    c: 'f',
    f: 'B'
  },
  0x1D420: {
    c: 'g',
    f: 'B'
  },
  0x1D421: {
    c: 'h',
    f: 'B'
  },
  0x1D422: {
    c: 'i',
    f: 'B'
  },
  0x1D423: {
    c: 'j',
    f: 'B'
  },
  0x1D424: {
    c: 'k',
    f: 'B'
  },
  0x1D425: {
    c: 'l',
    f: 'B'
  },
  0x1D426: {
    c: 'm',
    f: 'B'
  },
  0x1D427: {
    c: 'n',
    f: 'B'
  },
  0x1D428: {
    c: 'o',
    f: 'B'
  },
  0x1D429: {
    c: 'p',
    f: 'B'
  },
  0x1D42A: {
    c: 'q',
    f: 'B'
  },
  0x1D42B: {
    c: 'r',
    f: 'B'
  },
  0x1D42C: {
    c: 's',
    f: 'B'
  },
  0x1D42D: {
    c: 't',
    f: 'B'
  },
  0x1D42E: {
    c: 'u',
    f: 'B'
  },
  0x1D42F: {
    c: 'v',
    f: 'B'
  },
  0x1D430: {
    c: 'w',
    f: 'B'
  },
  0x1D431: {
    c: 'x',
    f: 'B'
  },
  0x1D432: {
    c: 'y',
    f: 'B'
  },
  0x1D433: {
    c: 'z',
    f: 'B'
  },
  0x1D434: {
    c: 'A',
    f: 'I'
  },
  0x1D435: {
    c: 'B',
    f: 'I'
  },
  0x1D436: {
    c: 'C',
    f: 'I'
  },
  0x1D437: {
    c: 'D',
    f: 'I'
  },
  0x1D438: {
    c: 'E',
    f: 'I'
  },
  0x1D439: {
    c: 'F',
    f: 'I'
  },
  0x1D43A: {
    c: 'G',
    f: 'I'
  },
  0x1D43B: {
    c: 'H',
    f: 'I'
  },
  0x1D43C: {
    c: 'I',
    f: 'I'
  },
  0x1D43D: {
    c: 'J',
    f: 'I'
  },
  0x1D43E: {
    c: 'K',
    f: 'I'
  },
  0x1D43F: {
    c: 'L',
    f: 'I'
  },
  0x1D440: {
    c: 'M',
    f: 'I'
  },
  0x1D441: {
    c: 'N',
    f: 'I'
  },
  0x1D442: {
    c: 'O',
    f: 'I'
  },
  0x1D443: {
    c: 'P',
    f: 'I'
  },
  0x1D444: {
    c: 'Q',
    f: 'I'
  },
  0x1D445: {
    c: 'R',
    f: 'I'
  },
  0x1D446: {
    c: 'S',
    f: 'I'
  },
  0x1D447: {
    c: 'T',
    f: 'I'
  },
  0x1D448: {
    c: 'U',
    f: 'I'
  },
  0x1D449: {
    c: 'V',
    f: 'I'
  },
  0x1D44A: {
    c: 'W',
    f: 'I'
  },
  0x1D44B: {
    c: 'X',
    f: 'I'
  },
  0x1D44C: {
    c: 'Y',
    f: 'I'
  },
  0x1D44D: {
    c: 'Z',
    f: 'I'
  },
  0x1D44E: {
    c: 'a',
    f: 'I'
  },
  0x1D44F: {
    c: 'b',
    f: 'I'
  },
  0x1D450: {
    c: 'c',
    f: 'I'
  },
  0x1D451: {
    c: 'd',
    f: 'I'
  },
  0x1D452: {
    c: 'e',
    f: 'I'
  },
  0x1D453: {
    c: 'f',
    f: 'I'
  },
  0x1D454: {
    c: 'g',
    f: 'I'
  },
  0x1D456: {
    c: 'i',
    f: 'I'
  },
  0x1D457: {
    c: 'j',
    f: 'I'
  },
  0x1D458: {
    c: 'k',
    f: 'I'
  },
  0x1D459: {
    c: 'l',
    f: 'I'
  },
  0x1D45A: {
    c: 'm',
    f: 'I'
  },
  0x1D45B: {
    c: 'n',
    f: 'I'
  },
  0x1D45C: {
    c: 'o',
    f: 'I'
  },
  0x1D45D: {
    c: 'p',
    f: 'I'
  },
  0x1D45E: {
    c: 'q',
    f: 'I'
  },
  0x1D45F: {
    c: 'r',
    f: 'I'
  },
  0x1D460: {
    c: 's',
    f: 'I'
  },
  0x1D461: {
    c: 't',
    f: 'I'
  },
  0x1D462: {
    c: 'u',
    f: 'I'
  },
  0x1D463: {
    c: 'v',
    f: 'I'
  },
  0x1D464: {
    c: 'w',
    f: 'I'
  },
  0x1D465: {
    c: 'x',
    f: 'I'
  },
  0x1D466: {
    c: 'y',
    f: 'I'
  },
  0x1D467: {
    c: 'z',
    f: 'I'
  },
  0x1D468: {
    c: 'A',
    f: 'BI'
  },
  0x1D469: {
    c: 'B',
    f: 'BI'
  },
  0x1D46A: {
    c: 'C',
    f: 'BI'
  },
  0x1D46B: {
    c: 'D',
    f: 'BI'
  },
  0x1D46C: {
    c: 'E',
    f: 'BI'
  },
  0x1D46D: {
    c: 'F',
    f: 'BI'
  },
  0x1D46E: {
    c: 'G',
    f: 'BI'
  },
  0x1D46F: {
    c: 'H',
    f: 'BI'
  },
  0x1D470: {
    c: 'I',
    f: 'BI'
  },
  0x1D471: {
    c: 'J',
    f: 'BI'
  },
  0x1D472: {
    c: 'K',
    f: 'BI'
  },
  0x1D473: {
    c: 'L',
    f: 'BI'
  },
  0x1D474: {
    c: 'M',
    f: 'BI'
  },
  0x1D475: {
    c: 'N',
    f: 'BI'
  },
  0x1D476: {
    c: 'O',
    f: 'BI'
  },
  0x1D477: {
    c: 'P',
    f: 'BI'
  },
  0x1D478: {
    c: 'Q',
    f: 'BI'
  },
  0x1D479: {
    c: 'R',
    f: 'BI'
  },
  0x1D47A: {
    c: 'S',
    f: 'BI'
  },
  0x1D47B: {
    c: 'T',
    f: 'BI'
  },
  0x1D47C: {
    c: 'U',
    f: 'BI'
  },
  0x1D47D: {
    c: 'V',
    f: 'BI'
  },
  0x1D47E: {
    c: 'W',
    f: 'BI'
  },
  0x1D47F: {
    c: 'X',
    f: 'BI'
  },
  0x1D480: {
    c: 'Y',
    f: 'BI'
  },
  0x1D481: {
    c: 'Z',
    f: 'BI'
  },
  0x1D482: {
    c: 'a',
    f: 'BI'
  },
  0x1D483: {
    c: 'b',
    f: 'BI'
  },
  0x1D484: {
    c: 'c',
    f: 'BI'
  },
  0x1D485: {
    c: 'd',
    f: 'BI'
  },
  0x1D486: {
    c: 'e',
    f: 'BI'
  },
  0x1D487: {
    c: 'f',
    f: 'BI'
  },
  0x1D488: {
    c: 'g',
    f: 'BI'
  },
  0x1D489: {
    c: 'h',
    f: 'BI'
  },
  0x1D48A: {
    c: 'i',
    f: 'BI'
  },
  0x1D48B: {
    c: 'j',
    f: 'BI'
  },
  0x1D48C: {
    c: 'k',
    f: 'BI'
  },
  0x1D48D: {
    c: 'l',
    f: 'BI'
  },
  0x1D48E: {
    c: 'm',
    f: 'BI'
  },
  0x1D48F: {
    c: 'n',
    f: 'BI'
  },
  0x1D490: {
    c: 'o',
    f: 'BI'
  },
  0x1D491: {
    c: 'p',
    f: 'BI'
  },
  0x1D492: {
    c: 'q',
    f: 'BI'
  },
  0x1D493: {
    c: 'r',
    f: 'BI'
  },
  0x1D494: {
    c: 's',
    f: 'BI'
  },
  0x1D495: {
    c: 't',
    f: 'BI'
  },
  0x1D496: {
    c: 'u',
    f: 'BI'
  },
  0x1D497: {
    c: 'v',
    f: 'BI'
  },
  0x1D498: {
    c: 'w',
    f: 'BI'
  },
  0x1D499: {
    c: 'x',
    f: 'BI'
  },
  0x1D49A: {
    c: 'y',
    f: 'BI'
  },
  0x1D49B: {
    c: 'z',
    f: 'BI'
  },
  0x1D49C: {
    c: 'A',
    f: 'SC'
  },
  0x1D49E: {
    c: 'C',
    f: 'SC'
  },
  0x1D49F: {
    c: 'D',
    f: 'SC'
  },
  0x1D4A2: {
    c: 'G',
    f: 'SC'
  },
  0x1D4A5: {
    c: 'J',
    f: 'SC'
  },
  0x1D4A6: {
    c: 'K',
    f: 'SC'
  },
  0x1D4A9: {
    c: 'N',
    f: 'SC'
  },
  0x1D4AA: {
    c: 'O',
    f: 'SC'
  },
  0x1D4AB: {
    c: 'P',
    f: 'SC'
  },
  0x1D4AC: {
    c: 'Q',
    f: 'SC'
  },
  0x1D4AE: {
    c: 'S',
    f: 'SC'
  },
  0x1D4AF: {
    c: 'T',
    f: 'SC'
  },
  0x1D4B0: {
    c: 'U',
    f: 'SC'
  },
  0x1D4B1: {
    c: 'V',
    f: 'SC'
  },
  0x1D4B2: {
    c: 'W',
    f: 'SC'
  },
  0x1D4B3: {
    c: 'X',
    f: 'SC'
  },
  0x1D4B4: {
    c: 'Y',
    f: 'SC'
  },
  0x1D4B5: {
    c: 'Z',
    f: 'SC'
  },
  0x1D504: {
    c: 'A',
    f: 'FR'
  },
  0x1D505: {
    c: 'B',
    f: 'FR'
  },
  0x1D507: {
    c: 'D',
    f: 'FR'
  },
  0x1D508: {
    c: 'E',
    f: 'FR'
  },
  0x1D509: {
    c: 'F',
    f: 'FR'
  },
  0x1D50A: {
    c: 'G',
    f: 'FR'
  },
  0x1D50D: {
    c: 'J',
    f: 'FR'
  },
  0x1D50E: {
    c: 'K',
    f: 'FR'
  },
  0x1D50F: {
    c: 'L',
    f: 'FR'
  },
  0x1D510: {
    c: 'M',
    f: 'FR'
  },
  0x1D511: {
    c: 'N',
    f: 'FR'
  },
  0x1D512: {
    c: 'O',
    f: 'FR'
  },
  0x1D513: {
    c: 'P',
    f: 'FR'
  },
  0x1D514: {
    c: 'Q',
    f: 'FR'
  },
  0x1D516: {
    c: 'S',
    f: 'FR'
  },
  0x1D517: {
    c: 'T',
    f: 'FR'
  },
  0x1D518: {
    c: 'U',
    f: 'FR'
  },
  0x1D519: {
    c: 'V',
    f: 'FR'
  },
  0x1D51A: {
    c: 'W',
    f: 'FR'
  },
  0x1D51B: {
    c: 'X',
    f: 'FR'
  },
  0x1D51C: {
    c: 'Y',
    f: 'FR'
  },
  0x1D51E: {
    c: 'a',
    f: 'FR'
  },
  0x1D51F: {
    c: 'b',
    f: 'FR'
  },
  0x1D520: {
    c: 'c',
    f: 'FR'
  },
  0x1D521: {
    c: 'd',
    f: 'FR'
  },
  0x1D522: {
    c: 'e',
    f: 'FR'
  },
  0x1D523: {
    c: 'f',
    f: 'FR'
  },
  0x1D524: {
    c: 'g',
    f: 'FR'
  },
  0x1D525: {
    c: 'h',
    f: 'FR'
  },
  0x1D526: {
    c: 'i',
    f: 'FR'
  },
  0x1D527: {
    c: 'j',
    f: 'FR'
  },
  0x1D528: {
    c: 'k',
    f: 'FR'
  },
  0x1D529: {
    c: 'l',
    f: 'FR'
  },
  0x1D52A: {
    c: 'm',
    f: 'FR'
  },
  0x1D52B: {
    c: 'n',
    f: 'FR'
  },
  0x1D52C: {
    c: 'o',
    f: 'FR'
  },
  0x1D52D: {
    c: 'p',
    f: 'FR'
  },
  0x1D52E: {
    c: 'q',
    f: 'FR'
  },
  0x1D52F: {
    c: 'r',
    f: 'FR'
  },
  0x1D530: {
    c: 's',
    f: 'FR'
  },
  0x1D531: {
    c: 't',
    f: 'FR'
  },
  0x1D532: {
    c: 'u',
    f: 'FR'
  },
  0x1D533: {
    c: 'v',
    f: 'FR'
  },
  0x1D534: {
    c: 'w',
    f: 'FR'
  },
  0x1D535: {
    c: 'x',
    f: 'FR'
  },
  0x1D536: {
    c: 'y',
    f: 'FR'
  },
  0x1D537: {
    c: 'z',
    f: 'FR'
  },
  0x1D538: {
    c: 'A',
    f: 'A'
  },
  0x1D539: {
    c: 'B',
    f: 'A'
  },
  0x1D53B: {
    c: 'D',
    f: 'A'
  },
  0x1D53C: {
    c: 'E',
    f: 'A'
  },
  0x1D53D: {
    c: 'F',
    f: 'A'
  },
  0x1D53E: {
    c: 'G',
    f: 'A'
  },
  0x1D540: {
    c: 'I',
    f: 'A'
  },
  0x1D541: {
    c: 'J',
    f: 'A'
  },
  0x1D542: {
    c: 'K',
    f: 'A'
  },
  0x1D543: {
    c: 'L',
    f: 'A'
  },
  0x1D544: {
    c: 'M',
    f: 'A'
  },
  0x1D546: {
    c: 'O',
    f: 'A'
  },
  0x1D54A: {
    c: 'S',
    f: 'A'
  },
  0x1D54B: {
    c: 'T',
    f: 'A'
  },
  0x1D54C: {
    c: 'U',
    f: 'A'
  },
  0x1D54D: {
    c: 'V',
    f: 'A'
  },
  0x1D54E: {
    c: 'W',
    f: 'A'
  },
  0x1D54F: {
    c: 'X',
    f: 'A'
  },
  0x1D550: {
    c: 'Y',
    f: 'A'
  },
  0x1D56C: {
    c: 'A',
    f: 'FRB'
  },
  0x1D56D: {
    c: 'B',
    f: 'FRB'
  },
  0x1D56E: {
    c: 'C',
    f: 'FRB'
  },
  0x1D56F: {
    c: 'D',
    f: 'FRB'
  },
  0x1D570: {
    c: 'E',
    f: 'FRB'
  },
  0x1D571: {
    c: 'F',
    f: 'FRB'
  },
  0x1D572: {
    c: 'G',
    f: 'FRB'
  },
  0x1D573: {
    c: 'H',
    f: 'FRB'
  },
  0x1D574: {
    c: 'I',
    f: 'FRB'
  },
  0x1D575: {
    c: 'J',
    f: 'FRB'
  },
  0x1D576: {
    c: 'K',
    f: 'FRB'
  },
  0x1D577: {
    c: 'L',
    f: 'FRB'
  },
  0x1D578: {
    c: 'M',
    f: 'FRB'
  },
  0x1D579: {
    c: 'N',
    f: 'FRB'
  },
  0x1D57A: {
    c: 'O',
    f: 'FRB'
  },
  0x1D57B: {
    c: 'P',
    f: 'FRB'
  },
  0x1D57C: {
    c: 'Q',
    f: 'FRB'
  },
  0x1D57D: {
    c: 'R',
    f: 'FRB'
  },
  0x1D57E: {
    c: 'S',
    f: 'FRB'
  },
  0x1D57F: {
    c: 'T',
    f: 'FRB'
  },
  0x1D580: {
    c: 'U',
    f: 'FRB'
  },
  0x1D581: {
    c: 'V',
    f: 'FRB'
  },
  0x1D582: {
    c: 'W',
    f: 'FRB'
  },
  0x1D583: {
    c: 'X',
    f: 'FRB'
  },
  0x1D584: {
    c: 'Y',
    f: 'FRB'
  },
  0x1D585: {
    c: 'Z',
    f: 'FRB'
  },
  0x1D586: {
    c: 'a',
    f: 'FRB'
  },
  0x1D587: {
    c: 'b',
    f: 'FRB'
  },
  0x1D588: {
    c: 'c',
    f: 'FRB'
  },
  0x1D589: {
    c: 'd',
    f: 'FRB'
  },
  0x1D58A: {
    c: 'e',
    f: 'FRB'
  },
  0x1D58B: {
    c: 'f',
    f: 'FRB'
  },
  0x1D58C: {
    c: 'g',
    f: 'FRB'
  },
  0x1D58D: {
    c: 'h',
    f: 'FRB'
  },
  0x1D58E: {
    c: 'i',
    f: 'FRB'
  },
  0x1D58F: {
    c: 'j',
    f: 'FRB'
  },
  0x1D590: {
    c: 'k',
    f: 'FRB'
  },
  0x1D591: {
    c: 'l',
    f: 'FRB'
  },
  0x1D592: {
    c: 'm',
    f: 'FRB'
  },
  0x1D593: {
    c: 'n',
    f: 'FRB'
  },
  0x1D594: {
    c: 'o',
    f: 'FRB'
  },
  0x1D595: {
    c: 'p',
    f: 'FRB'
  },
  0x1D596: {
    c: 'q',
    f: 'FRB'
  },
  0x1D597: {
    c: 'r',
    f: 'FRB'
  },
  0x1D598: {
    c: 's',
    f: 'FRB'
  },
  0x1D599: {
    c: 't',
    f: 'FRB'
  },
  0x1D59A: {
    c: 'u',
    f: 'FRB'
  },
  0x1D59B: {
    c: 'v',
    f: 'FRB'
  },
  0x1D59C: {
    c: 'w',
    f: 'FRB'
  },
  0x1D59D: {
    c: 'x',
    f: 'FRB'
  },
  0x1D59E: {
    c: 'y',
    f: 'FRB'
  },
  0x1D59F: {
    c: 'z',
    f: 'FRB'
  },
  0x1D5A0: {
    c: 'A',
    f: 'SS'
  },
  0x1D5A1: {
    c: 'B',
    f: 'SS'
  },
  0x1D5A2: {
    c: 'C',
    f: 'SS'
  },
  0x1D5A3: {
    c: 'D',
    f: 'SS'
  },
  0x1D5A4: {
    c: 'E',
    f: 'SS'
  },
  0x1D5A5: {
    c: 'F',
    f: 'SS'
  },
  0x1D5A6: {
    c: 'G',
    f: 'SS'
  },
  0x1D5A7: {
    c: 'H',
    f: 'SS'
  },
  0x1D5A8: {
    c: 'I',
    f: 'SS'
  },
  0x1D5A9: {
    c: 'J',
    f: 'SS'
  },
  0x1D5AA: {
    c: 'K',
    f: 'SS'
  },
  0x1D5AB: {
    c: 'L',
    f: 'SS'
  },
  0x1D5AC: {
    c: 'M',
    f: 'SS'
  },
  0x1D5AD: {
    c: 'N',
    f: 'SS'
  },
  0x1D5AE: {
    c: 'O',
    f: 'SS'
  },
  0x1D5AF: {
    c: 'P',
    f: 'SS'
  },
  0x1D5B0: {
    c: 'Q',
    f: 'SS'
  },
  0x1D5B1: {
    c: 'R',
    f: 'SS'
  },
  0x1D5B2: {
    c: 'S',
    f: 'SS'
  },
  0x1D5B3: {
    c: 'T',
    f: 'SS'
  },
  0x1D5B4: {
    c: 'U',
    f: 'SS'
  },
  0x1D5B5: {
    c: 'V',
    f: 'SS'
  },
  0x1D5B6: {
    c: 'W',
    f: 'SS'
  },
  0x1D5B7: {
    c: 'X',
    f: 'SS'
  },
  0x1D5B8: {
    c: 'Y',
    f: 'SS'
  },
  0x1D5B9: {
    c: 'Z',
    f: 'SS'
  },
  0x1D5BA: {
    c: 'a',
    f: 'SS'
  },
  0x1D5BB: {
    c: 'b',
    f: 'SS'
  },
  0x1D5BC: {
    c: 'c',
    f: 'SS'
  },
  0x1D5BD: {
    c: 'd',
    f: 'SS'
  },
  0x1D5BE: {
    c: 'e',
    f: 'SS'
  },
  0x1D5BF: {
    c: 'f',
    f: 'SS'
  },
  0x1D5C0: {
    c: 'g',
    f: 'SS'
  },
  0x1D5C1: {
    c: 'h',
    f: 'SS'
  },
  0x1D5C2: {
    c: 'i',
    f: 'SS'
  },
  0x1D5C3: {
    c: 'j',
    f: 'SS'
  },
  0x1D5C4: {
    c: 'k',
    f: 'SS'
  },
  0x1D5C5: {
    c: 'l',
    f: 'SS'
  },
  0x1D5C6: {
    c: 'm',
    f: 'SS'
  },
  0x1D5C7: {
    c: 'n',
    f: 'SS'
  },
  0x1D5C8: {
    c: 'o',
    f: 'SS'
  },
  0x1D5C9: {
    c: 'p',
    f: 'SS'
  },
  0x1D5CA: {
    c: 'q',
    f: 'SS'
  },
  0x1D5CB: {
    c: 'r',
    f: 'SS'
  },
  0x1D5CC: {
    c: 's',
    f: 'SS'
  },
  0x1D5CD: {
    c: 't',
    f: 'SS'
  },
  0x1D5CE: {
    c: 'u',
    f: 'SS'
  },
  0x1D5CF: {
    c: 'v',
    f: 'SS'
  },
  0x1D5D0: {
    c: 'w',
    f: 'SS'
  },
  0x1D5D1: {
    c: 'x',
    f: 'SS'
  },
  0x1D5D2: {
    c: 'y',
    f: 'SS'
  },
  0x1D5D3: {
    c: 'z',
    f: 'SS'
  },
  0x1D5D4: {
    c: 'A',
    f: 'SSB'
  },
  0x1D5D5: {
    c: 'B',
    f: 'SSB'
  },
  0x1D5D6: {
    c: 'C',
    f: 'SSB'
  },
  0x1D5D7: {
    c: 'D',
    f: 'SSB'
  },
  0x1D5D8: {
    c: 'E',
    f: 'SSB'
  },
  0x1D5D9: {
    c: 'F',
    f: 'SSB'
  },
  0x1D5DA: {
    c: 'G',
    f: 'SSB'
  },
  0x1D5DB: {
    c: 'H',
    f: 'SSB'
  },
  0x1D5DC: {
    c: 'I',
    f: 'SSB'
  },
  0x1D5DD: {
    c: 'J',
    f: 'SSB'
  },
  0x1D5DE: {
    c: 'K',
    f: 'SSB'
  },
  0x1D5DF: {
    c: 'L',
    f: 'SSB'
  },
  0x1D5E0: {
    c: 'M',
    f: 'SSB'
  },
  0x1D5E1: {
    c: 'N',
    f: 'SSB'
  },
  0x1D5E2: {
    c: 'O',
    f: 'SSB'
  },
  0x1D5E3: {
    c: 'P',
    f: 'SSB'
  },
  0x1D5E4: {
    c: 'Q',
    f: 'SSB'
  },
  0x1D5E5: {
    c: 'R',
    f: 'SSB'
  },
  0x1D5E6: {
    c: 'S',
    f: 'SSB'
  },
  0x1D5E7: {
    c: 'T',
    f: 'SSB'
  },
  0x1D5E8: {
    c: 'U',
    f: 'SSB'
  },
  0x1D5E9: {
    c: 'V',
    f: 'SSB'
  },
  0x1D5EA: {
    c: 'W',
    f: 'SSB'
  },
  0x1D5EB: {
    c: 'X',
    f: 'SSB'
  },
  0x1D5EC: {
    c: 'Y',
    f: 'SSB'
  },
  0x1D5ED: {
    c: 'Z',
    f: 'SSB'
  },
  0x1D5EE: {
    c: 'a',
    f: 'SSB'
  },
  0x1D5EF: {
    c: 'b',
    f: 'SSB'
  },
  0x1D5F0: {
    c: 'c',
    f: 'SSB'
  },
  0x1D5F1: {
    c: 'd',
    f: 'SSB'
  },
  0x1D5F2: {
    c: 'e',
    f: 'SSB'
  },
  0x1D5F3: {
    c: 'f',
    f: 'SSB'
  },
  0x1D5F4: {
    c: 'g',
    f: 'SSB'
  },
  0x1D5F5: {
    c: 'h',
    f: 'SSB'
  },
  0x1D5F6: {
    c: 'i',
    f: 'SSB'
  },
  0x1D5F7: {
    c: 'j',
    f: 'SSB'
  },
  0x1D5F8: {
    c: 'k',
    f: 'SSB'
  },
  0x1D5F9: {
    c: 'l',
    f: 'SSB'
  },
  0x1D5FA: {
    c: 'm',
    f: 'SSB'
  },
  0x1D5FB: {
    c: 'n',
    f: 'SSB'
  },
  0x1D5FC: {
    c: 'o',
    f: 'SSB'
  },
  0x1D5FD: {
    c: 'p',
    f: 'SSB'
  },
  0x1D5FE: {
    c: 'q',
    f: 'SSB'
  },
  0x1D5FF: {
    c: 'r',
    f: 'SSB'
  },
  0x1D600: {
    c: 's',
    f: 'SSB'
  },
  0x1D601: {
    c: 't',
    f: 'SSB'
  },
  0x1D602: {
    c: 'u',
    f: 'SSB'
  },
  0x1D603: {
    c: 'v',
    f: 'SSB'
  },
  0x1D604: {
    c: 'w',
    f: 'SSB'
  },
  0x1D605: {
    c: 'x',
    f: 'SSB'
  },
  0x1D606: {
    c: 'y',
    f: 'SSB'
  },
  0x1D607: {
    c: 'z',
    f: 'SSB'
  },
  0x1D608: {
    c: 'A',
    f: 'SSI'
  },
  0x1D609: {
    c: 'B',
    f: 'SSI'
  },
  0x1D60A: {
    c: 'C',
    f: 'SSI'
  },
  0x1D60B: {
    c: 'D',
    f: 'SSI'
  },
  0x1D60C: {
    c: 'E',
    f: 'SSI'
  },
  0x1D60D: {
    c: 'F',
    f: 'SSI'
  },
  0x1D60E: {
    c: 'G',
    f: 'SSI'
  },
  0x1D60F: {
    c: 'H',
    f: 'SSI'
  },
  0x1D610: {
    c: 'I',
    f: 'SSI'
  },
  0x1D611: {
    c: 'J',
    f: 'SSI'
  },
  0x1D612: {
    c: 'K',
    f: 'SSI'
  },
  0x1D613: {
    c: 'L',
    f: 'SSI'
  },
  0x1D614: {
    c: 'M',
    f: 'SSI'
  },
  0x1D615: {
    c: 'N',
    f: 'SSI'
  },
  0x1D616: {
    c: 'O',
    f: 'SSI'
  },
  0x1D617: {
    c: 'P',
    f: 'SSI'
  },
  0x1D618: {
    c: 'Q',
    f: 'SSI'
  },
  0x1D619: {
    c: 'R',
    f: 'SSI'
  },
  0x1D61A: {
    c: 'S',
    f: 'SSI'
  },
  0x1D61B: {
    c: 'T',
    f: 'SSI'
  },
  0x1D61C: {
    c: 'U',
    f: 'SSI'
  },
  0x1D61D: {
    c: 'V',
    f: 'SSI'
  },
  0x1D61E: {
    c: 'W',
    f: 'SSI'
  },
  0x1D61F: {
    c: 'X',
    f: 'SSI'
  },
  0x1D620: {
    c: 'Y',
    f: 'SSI'
  },
  0x1D621: {
    c: 'Z',
    f: 'SSI'
  },
  0x1D622: {
    c: 'a',
    f: 'SSI'
  },
  0x1D623: {
    c: 'b',
    f: 'SSI'
  },
  0x1D624: {
    c: 'c',
    f: 'SSI'
  },
  0x1D625: {
    c: 'd',
    f: 'SSI'
  },
  0x1D626: {
    c: 'e',
    f: 'SSI'
  },
  0x1D627: {
    c: 'f',
    f: 'SSI'
  },
  0x1D628: {
    c: 'g',
    f: 'SSI'
  },
  0x1D629: {
    c: 'h',
    f: 'SSI'
  },
  0x1D62A: {
    c: 'i',
    f: 'SSI'
  },
  0x1D62B: {
    c: 'j',
    f: 'SSI'
  },
  0x1D62C: {
    c: 'k',
    f: 'SSI'
  },
  0x1D62D: {
    c: 'l',
    f: 'SSI'
  },
  0x1D62E: {
    c: 'm',
    f: 'SSI'
  },
  0x1D62F: {
    c: 'n',
    f: 'SSI'
  },
  0x1D630: {
    c: 'o',
    f: 'SSI'
  },
  0x1D631: {
    c: 'p',
    f: 'SSI'
  },
  0x1D632: {
    c: 'q',
    f: 'SSI'
  },
  0x1D633: {
    c: 'r',
    f: 'SSI'
  },
  0x1D634: {
    c: 's',
    f: 'SSI'
  },
  0x1D635: {
    c: 't',
    f: 'SSI'
  },
  0x1D636: {
    c: 'u',
    f: 'SSI'
  },
  0x1D637: {
    c: 'v',
    f: 'SSI'
  },
  0x1D638: {
    c: 'w',
    f: 'SSI'
  },
  0x1D639: {
    c: 'x',
    f: 'SSI'
  },
  0x1D63A: {
    c: 'y',
    f: 'SSI'
  },
  0x1D63B: {
    c: 'z',
    f: 'SSI'
  },
  0x1D670: {
    c: 'A',
    f: 'T'
  },
  0x1D671: {
    c: 'B',
    f: 'T'
  },
  0x1D672: {
    c: 'C',
    f: 'T'
  },
  0x1D673: {
    c: 'D',
    f: 'T'
  },
  0x1D674: {
    c: 'E',
    f: 'T'
  },
  0x1D675: {
    c: 'F',
    f: 'T'
  },
  0x1D676: {
    c: 'G',
    f: 'T'
  },
  0x1D677: {
    c: 'H',
    f: 'T'
  },
  0x1D678: {
    c: 'I',
    f: 'T'
  },
  0x1D679: {
    c: 'J',
    f: 'T'
  },
  0x1D67A: {
    c: 'K',
    f: 'T'
  },
  0x1D67B: {
    c: 'L',
    f: 'T'
  },
  0x1D67C: {
    c: 'M',
    f: 'T'
  },
  0x1D67D: {
    c: 'N',
    f: 'T'
  },
  0x1D67E: {
    c: 'O',
    f: 'T'
  },
  0x1D67F: {
    c: 'P',
    f: 'T'
  },
  0x1D680: {
    c: 'Q',
    f: 'T'
  },
  0x1D681: {
    c: 'R',
    f: 'T'
  },
  0x1D682: {
    c: 'S',
    f: 'T'
  },
  0x1D683: {
    c: 'T',
    f: 'T'
  },
  0x1D684: {
    c: 'U',
    f: 'T'
  },
  0x1D685: {
    c: 'V',
    f: 'T'
  },
  0x1D686: {
    c: 'W',
    f: 'T'
  },
  0x1D687: {
    c: 'X',
    f: 'T'
  },
  0x1D688: {
    c: 'Y',
    f: 'T'
  },
  0x1D689: {
    c: 'Z',
    f: 'T'
  },
  0x1D68A: {
    c: 'a',
    f: 'T'
  },
  0x1D68B: {
    c: 'b',
    f: 'T'
  },
  0x1D68C: {
    c: 'c',
    f: 'T'
  },
  0x1D68D: {
    c: 'd',
    f: 'T'
  },
  0x1D68E: {
    c: 'e',
    f: 'T'
  },
  0x1D68F: {
    c: 'f',
    f: 'T'
  },
  0x1D690: {
    c: 'g',
    f: 'T'
  },
  0x1D691: {
    c: 'h',
    f: 'T'
  },
  0x1D692: {
    c: 'i',
    f: 'T'
  },
  0x1D693: {
    c: 'j',
    f: 'T'
  },
  0x1D694: {
    c: 'k',
    f: 'T'
  },
  0x1D695: {
    c: 'l',
    f: 'T'
  },
  0x1D696: {
    c: 'm',
    f: 'T'
  },
  0x1D697: {
    c: 'n',
    f: 'T'
  },
  0x1D698: {
    c: 'o',
    f: 'T'
  },
  0x1D699: {
    c: 'p',
    f: 'T'
  },
  0x1D69A: {
    c: 'q',
    f: 'T'
  },
  0x1D69B: {
    c: 'r',
    f: 'T'
  },
  0x1D69C: {
    c: 's',
    f: 'T'
  },
  0x1D69D: {
    c: 't',
    f: 'T'
  },
  0x1D69E: {
    c: 'u',
    f: 'T'
  },
  0x1D69F: {
    c: 'v',
    f: 'T'
  },
  0x1D6A0: {
    c: 'w',
    f: 'T'
  },
  0x1D6A1: {
    c: 'x',
    f: 'T'
  },
  0x1D6A2: {
    c: 'y',
    f: 'T'
  },
  0x1D6A3: {
    c: 'z',
    f: 'T'
  },
  0x1D6A8: {
    c: 'A',
    f: 'B'
  },
  0x1D6A9: {
    c: 'B',
    f: 'B'
  },
  0x1D6AA: {
    c: '\\393',
    f: 'B'
  },
  0x1D6AB: {
    c: '\\394',
    f: 'B'
  },
  0x1D6AC: {
    c: 'E',
    f: 'B'
  },
  0x1D6AD: {
    c: 'Z',
    f: 'B'
  },
  0x1D6AE: {
    c: 'H',
    f: 'B'
  },
  0x1D6AF: {
    c: '\\398',
    f: 'B'
  },
  0x1D6B0: {
    c: 'I',
    f: 'B'
  },
  0x1D6B1: {
    c: 'K',
    f: 'B'
  },
  0x1D6B2: {
    c: '\\39B',
    f: 'B'
  },
  0x1D6B3: {
    c: 'M',
    f: 'B'
  },
  0x1D6B4: {
    c: 'N',
    f: 'B'
  },
  0x1D6B5: {
    c: '\\39E',
    f: 'B'
  },
  0x1D6B6: {
    c: 'O',
    f: 'B'
  },
  0x1D6B7: {
    c: '\\3A0',
    f: 'B'
  },
  0x1D6B8: {
    c: 'P',
    f: 'B'
  },
  0x1D6BA: {
    c: '\\3A3',
    f: 'B'
  },
  0x1D6BB: {
    c: 'T',
    f: 'B'
  },
  0x1D6BC: {
    c: '\\3A5',
    f: 'B'
  },
  0x1D6BD: {
    c: '\\3A6',
    f: 'B'
  },
  0x1D6BE: {
    c: 'X',
    f: 'B'
  },
  0x1D6BF: {
    c: '\\3A8',
    f: 'B'
  },
  0x1D6C0: {
    c: '\\3A9',
    f: 'B'
  },
  0x1D6C1: {
    c: '\\2207',
    f: 'B'
  },
  0x1D6E2: {
    c: 'A',
    f: 'I'
  },
  0x1D6E3: {
    c: 'B',
    f: 'I'
  },
  0x1D6E4: {
    c: '\\393',
    f: 'I'
  },
  0x1D6E5: {
    c: '\\394',
    f: 'I'
  },
  0x1D6E6: {
    c: 'E',
    f: 'I'
  },
  0x1D6E7: {
    c: 'Z',
    f: 'I'
  },
  0x1D6E8: {
    c: 'H',
    f: 'I'
  },
  0x1D6E9: {
    c: '\\398',
    f: 'I'
  },
  0x1D6EA: {
    c: 'I',
    f: 'I'
  },
  0x1D6EB: {
    c: 'K',
    f: 'I'
  },
  0x1D6EC: {
    c: '\\39B',
    f: 'I'
  },
  0x1D6ED: {
    c: 'M',
    f: 'I'
  },
  0x1D6EE: {
    c: 'N',
    f: 'I'
  },
  0x1D6EF: {
    c: '\\39E',
    f: 'I'
  },
  0x1D6F0: {
    c: 'O',
    f: 'I'
  },
  0x1D6F1: {
    c: '\\3A0',
    f: 'I'
  },
  0x1D6F2: {
    c: 'P',
    f: 'I'
  },
  0x1D6F4: {
    c: '\\3A3',
    f: 'I'
  },
  0x1D6F5: {
    c: 'T',
    f: 'I'
  },
  0x1D6F6: {
    c: '\\3A5',
    f: 'I'
  },
  0x1D6F7: {
    c: '\\3A6',
    f: 'I'
  },
  0x1D6F8: {
    c: 'X',
    f: 'I'
  },
  0x1D6F9: {
    c: '\\3A8',
    f: 'I'
  },
  0x1D6FA: {
    c: '\\3A9',
    f: 'I'
  },
  0x1D6FC: {
    c: '\\3B1',
    f: 'I'
  },
  0x1D6FD: {
    c: '\\3B2',
    f: 'I'
  },
  0x1D6FE: {
    c: '\\3B3',
    f: 'I'
  },
  0x1D6FF: {
    c: '\\3B4',
    f: 'I'
  },
  0x1D700: {
    c: '\\3B5',
    f: 'I'
  },
  0x1D701: {
    c: '\\3B6',
    f: 'I'
  },
  0x1D702: {
    c: '\\3B7',
    f: 'I'
  },
  0x1D703: {
    c: '\\3B8',
    f: 'I'
  },
  0x1D704: {
    c: '\\3B9',
    f: 'I'
  },
  0x1D705: {
    c: '\\3BA',
    f: 'I'
  },
  0x1D706: {
    c: '\\3BB',
    f: 'I'
  },
  0x1D707: {
    c: '\\3BC',
    f: 'I'
  },
  0x1D708: {
    c: '\\3BD',
    f: 'I'
  },
  0x1D709: {
    c: '\\3BE',
    f: 'I'
  },
  0x1D70A: {
    c: '\\3BF',
    f: 'I'
  },
  0x1D70B: {
    c: '\\3C0',
    f: 'I'
  },
  0x1D70C: {
    c: '\\3C1',
    f: 'I'
  },
  0x1D70D: {
    c: '\\3C2',
    f: 'I'
  },
  0x1D70E: {
    c: '\\3C3',
    f: 'I'
  },
  0x1D70F: {
    c: '\\3C4',
    f: 'I'
  },
  0x1D710: {
    c: '\\3C5',
    f: 'I'
  },
  0x1D711: {
    c: '\\3C6',
    f: 'I'
  },
  0x1D712: {
    c: '\\3C7',
    f: 'I'
  },
  0x1D713: {
    c: '\\3C8',
    f: 'I'
  },
  0x1D714: {
    c: '\\3C9',
    f: 'I'
  },
  0x1D715: {
    c: '\\2202'
  },
  0x1D716: {
    c: '\\3F5',
    f: 'I'
  },
  0x1D717: {
    c: '\\3D1',
    f: 'I'
  },
  0x1D718: {
    c: '\\E009',
    f: 'A'
  },
  0x1D719: {
    c: '\\3D5',
    f: 'I'
  },
  0x1D71A: {
    c: '\\3F1',
    f: 'I'
  },
  0x1D71B: {
    c: '\\3D6',
    f: 'I'
  },
  0x1D71C: {
    c: 'A',
    f: 'BI'
  },
  0x1D71D: {
    c: 'B',
    f: 'BI'
  },
  0x1D71E: {
    c: '\\393',
    f: 'BI'
  },
  0x1D71F: {
    c: '\\394',
    f: 'BI'
  },
  0x1D720: {
    c: 'E',
    f: 'BI'
  },
  0x1D721: {
    c: 'Z',
    f: 'BI'
  },
  0x1D722: {
    c: 'H',
    f: 'BI'
  },
  0x1D723: {
    c: '\\398',
    f: 'BI'
  },
  0x1D724: {
    c: 'I',
    f: 'BI'
  },
  0x1D725: {
    c: 'K',
    f: 'BI'
  },
  0x1D726: {
    c: '\\39B',
    f: 'BI'
  },
  0x1D727: {
    c: 'M',
    f: 'BI'
  },
  0x1D728: {
    c: 'N',
    f: 'BI'
  },
  0x1D729: {
    c: '\\39E',
    f: 'BI'
  },
  0x1D72A: {
    c: 'O',
    f: 'BI'
  },
  0x1D72B: {
    c: '\\3A0',
    f: 'BI'
  },
  0x1D72C: {
    c: 'P',
    f: 'BI'
  },
  0x1D72E: {
    c: '\\3A3',
    f: 'BI'
  },
  0x1D72F: {
    c: 'T',
    f: 'BI'
  },
  0x1D730: {
    c: '\\3A5',
    f: 'BI'
  },
  0x1D731: {
    c: '\\3A6',
    f: 'BI'
  },
  0x1D732: {
    c: 'X',
    f: 'BI'
  },
  0x1D733: {
    c: '\\3A8',
    f: 'BI'
  },
  0x1D734: {
    c: '\\3A9',
    f: 'BI'
  },
  0x1D736: {
    c: '\\3B1',
    f: 'BI'
  },
  0x1D737: {
    c: '\\3B2',
    f: 'BI'
  },
  0x1D738: {
    c: '\\3B3',
    f: 'BI'
  },
  0x1D739: {
    c: '\\3B4',
    f: 'BI'
  },
  0x1D73A: {
    c: '\\3B5',
    f: 'BI'
  },
  0x1D73B: {
    c: '\\3B6',
    f: 'BI'
  },
  0x1D73C: {
    c: '\\3B7',
    f: 'BI'
  },
  0x1D73D: {
    c: '\\3B8',
    f: 'BI'
  },
  0x1D73E: {
    c: '\\3B9',
    f: 'BI'
  },
  0x1D73F: {
    c: '\\3BA',
    f: 'BI'
  },
  0x1D740: {
    c: '\\3BB',
    f: 'BI'
  },
  0x1D741: {
    c: '\\3BC',
    f: 'BI'
  },
  0x1D742: {
    c: '\\3BD',
    f: 'BI'
  },
  0x1D743: {
    c: '\\3BE',
    f: 'BI'
  },
  0x1D744: {
    c: '\\3BF',
    f: 'BI'
  },
  0x1D745: {
    c: '\\3C0',
    f: 'BI'
  },
  0x1D746: {
    c: '\\3C1',
    f: 'BI'
  },
  0x1D747: {
    c: '\\3C2',
    f: 'BI'
  },
  0x1D748: {
    c: '\\3C3',
    f: 'BI'
  },
  0x1D749: {
    c: '\\3C4',
    f: 'BI'
  },
  0x1D74A: {
    c: '\\3C5',
    f: 'BI'
  },
  0x1D74B: {
    c: '\\3C6',
    f: 'BI'
  },
  0x1D74C: {
    c: '\\3C7',
    f: 'BI'
  },
  0x1D74D: {
    c: '\\3C8',
    f: 'BI'
  },
  0x1D74E: {
    c: '\\3C9',
    f: 'BI'
  },
  0x1D74F: {
    c: '\\2202',
    f: 'B'
  },
  0x1D750: {
    c: '\\3F5',
    f: 'BI'
  },
  0x1D751: {
    c: '\\3D1',
    f: 'BI'
  },
  0x1D752: {
    c: '\\E009',
    f: 'A'
  },
  0x1D753: {
    c: '\\3D5',
    f: 'BI'
  },
  0x1D754: {
    c: '\\3F1',
    f: 'BI'
  },
  0x1D755: {
    c: '\\3D6',
    f: 'BI'
  },
  0x1D756: {
    c: 'A',
    f: 'SSB'
  },
  0x1D757: {
    c: 'B',
    f: 'SSB'
  },
  0x1D758: {
    c: '\\393',
    f: 'SSB'
  },
  0x1D759: {
    c: '\\394',
    f: 'SSB'
  },
  0x1D75A: {
    c: 'E',
    f: 'SSB'
  },
  0x1D75B: {
    c: 'Z',
    f: 'SSB'
  },
  0x1D75C: {
    c: 'H',
    f: 'SSB'
  },
  0x1D75D: {
    c: '\\398',
    f: 'SSB'
  },
  0x1D75E: {
    c: 'I',
    f: 'SSB'
  },
  0x1D75F: {
    c: 'K',
    f: 'SSB'
  },
  0x1D760: {
    c: '\\39B',
    f: 'SSB'
  },
  0x1D761: {
    c: 'M',
    f: 'SSB'
  },
  0x1D762: {
    c: 'N',
    f: 'SSB'
  },
  0x1D763: {
    c: '\\39E',
    f: 'SSB'
  },
  0x1D764: {
    c: 'O',
    f: 'SSB'
  },
  0x1D765: {
    c: '\\3A0',
    f: 'SSB'
  },
  0x1D766: {
    c: 'P',
    f: 'SSB'
  },
  0x1D768: {
    c: '\\3A3',
    f: 'SSB'
  },
  0x1D769: {
    c: 'T',
    f: 'SSB'
  },
  0x1D76A: {
    c: '\\3A5',
    f: 'SSB'
  },
  0x1D76B: {
    c: '\\3A6',
    f: 'SSB'
  },
  0x1D76C: {
    c: 'X',
    f: 'SSB'
  },
  0x1D76D: {
    c: '\\3A8',
    f: 'SSB'
  },
  0x1D76E: {
    c: '\\3A9',
    f: 'SSB'
  },
  0x1D7CE: {
    c: '0',
    f: 'B'
  },
  0x1D7CF: {
    c: '1',
    f: 'B'
  },
  0x1D7D0: {
    c: '2',
    f: 'B'
  },
  0x1D7D1: {
    c: '3',
    f: 'B'
  },
  0x1D7D2: {
    c: '4',
    f: 'B'
  },
  0x1D7D3: {
    c: '5',
    f: 'B'
  },
  0x1D7D4: {
    c: '6',
    f: 'B'
  },
  0x1D7D5: {
    c: '7',
    f: 'B'
  },
  0x1D7D6: {
    c: '8',
    f: 'B'
  },
  0x1D7D7: {
    c: '9',
    f: 'B'
  },
  0x1D7E2: {
    c: '0',
    f: 'SS'
  },
  0x1D7E3: {
    c: '1',
    f: 'SS'
  },
  0x1D7E4: {
    c: '2',
    f: 'SS'
  },
  0x1D7E5: {
    c: '3',
    f: 'SS'
  },
  0x1D7E6: {
    c: '4',
    f: 'SS'
  },
  0x1D7E7: {
    c: '5',
    f: 'SS'
  },
  0x1D7E8: {
    c: '6',
    f: 'SS'
  },
  0x1D7E9: {
    c: '7',
    f: 'SS'
  },
  0x1D7EA: {
    c: '8',
    f: 'SS'
  },
  0x1D7EB: {
    c: '9',
    f: 'SS'
  },
  0x1D7EC: {
    c: '0',
    f: 'SSB'
  },
  0x1D7ED: {
    c: '1',
    f: 'SSB'
  },
  0x1D7EE: {
    c: '2',
    f: 'SSB'
  },
  0x1D7EF: {
    c: '3',
    f: 'SSB'
  },
  0x1D7F0: {
    c: '4',
    f: 'SSB'
  },
  0x1D7F1: {
    c: '5',
    f: 'SSB'
  },
  0x1D7F2: {
    c: '6',
    f: 'SSB'
  },
  0x1D7F3: {
    c: '7',
    f: 'SSB'
  },
  0x1D7F4: {
    c: '8',
    f: 'SSB'
  },
  0x1D7F5: {
    c: '9',
    f: 'SSB'
  },
  0x1D7F6: {
    c: '0',
    f: 'T'
  },
  0x1D7F7: {
    c: '1',
    f: 'T'
  },
  0x1D7F8: {
    c: '2',
    f: 'T'
  },
  0x1D7F9: {
    c: '3',
    f: 'T'
  },
  0x1D7FA: {
    c: '4',
    f: 'T'
  },
  0x1D7FB: {
    c: '5',
    f: 'T'
  },
  0x1D7FC: {
    c: '6',
    f: 'T'
  },
  0x1D7FD: {
    c: '7',
    f: 'T'
  },
  0x1D7FE: {
    c: '8',
    f: 'T'
  },
  0x1D7FF: {
    c: '9',
    f: 'T'
  }
});

/***/ }),

/***/ 3472:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.sansSerifBoldItalic = void 0;

var FontData_js_1 = __webpack_require__(6116);

var sans_serif_bold_italic_js_1 = __webpack_require__(5978);

exports.sansSerifBoldItalic = FontData_js_1.AddCSS(sans_serif_bold_italic_js_1.sansSerifBoldItalic, {
  0x131: {
    f: 'SSB'
  },
  0x237: {
    f: 'SSB'
  }
});

/***/ }),

/***/ 1336:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.sansSerifBold = void 0;

var FontData_js_1 = __webpack_require__(6116);

var sans_serif_bold_js_1 = __webpack_require__(5855);

exports.sansSerifBold = FontData_js_1.AddCSS(sans_serif_bold_js_1.sansSerifBold, {
  0x2015: {
    c: '\\2014'
  },
  0x2017: {
    c: '_'
  },
  0x2044: {
    c: '/'
  },
  0x2206: {
    c: '\\394'
  }
});

/***/ }),

/***/ 6518:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.sansSerifItalic = void 0;

var FontData_js_1 = __webpack_require__(6116);

var sans_serif_italic_js_1 = __webpack_require__(5030);

exports.sansSerifItalic = FontData_js_1.AddCSS(sans_serif_italic_js_1.sansSerifItalic, {
  0x391: {
    c: 'A'
  },
  0x392: {
    c: 'B'
  },
  0x395: {
    c: 'E'
  },
  0x396: {
    c: 'Z'
  },
  0x397: {
    c: 'H'
  },
  0x399: {
    c: 'I'
  },
  0x39A: {
    c: 'K'
  },
  0x39C: {
    c: 'M'
  },
  0x39D: {
    c: 'N'
  },
  0x39F: {
    c: 'O'
  },
  0x3A1: {
    c: 'P'
  },
  0x3A4: {
    c: 'T'
  },
  0x3A7: {
    c: 'X'
  },
  0x2015: {
    c: '\\2014'
  },
  0x2017: {
    c: '_'
  },
  0x2044: {
    c: '/'
  },
  0x2206: {
    c: '\\394'
  }
});

/***/ }),

/***/ 6563:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.sansSerif = void 0;

var FontData_js_1 = __webpack_require__(6116);

var sans_serif_js_1 = __webpack_require__(6807);

exports.sansSerif = FontData_js_1.AddCSS(sans_serif_js_1.sansSerif, {
  0x391: {
    c: 'A'
  },
  0x392: {
    c: 'B'
  },
  0x395: {
    c: 'E'
  },
  0x396: {
    c: 'Z'
  },
  0x397: {
    c: 'H'
  },
  0x399: {
    c: 'I'
  },
  0x39A: {
    c: 'K'
  },
  0x39C: {
    c: 'M'
  },
  0x39D: {
    c: 'N'
  },
  0x39F: {
    c: 'O'
  },
  0x3A1: {
    c: 'P'
  },
  0x3A4: {
    c: 'T'
  },
  0x3A7: {
    c: 'X'
  },
  0x2015: {
    c: '\\2014'
  },
  0x2017: {
    c: '_'
  },
  0x2044: {
    c: '/'
  },
  0x2206: {
    c: '\\394'
  }
});

/***/ }),

/***/ 2116:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.scriptBold = void 0;

var script_bold_js_1 = __webpack_require__(9728);

Object.defineProperty(exports, "scriptBold", ({
  enumerable: true,
  get: function get() {
    return script_bold_js_1.scriptBold;
  }
}));

/***/ }),

/***/ 3504:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.script = void 0;

var script_js_1 = __webpack_require__(3849);

Object.defineProperty(exports, "script", ({
  enumerable: true,
  get: function get() {
    return script_js_1.script;
  }
}));

/***/ }),

/***/ 8152:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.smallop = void 0;

var FontData_js_1 = __webpack_require__(6116);

var smallop_js_1 = __webpack_require__(3794);

exports.smallop = FontData_js_1.AddCSS(smallop_js_1.smallop, {
  0x2044: {
    c: '/'
  },
  0x2329: {
    c: '\\27E8'
  },
  0x232A: {
    c: '\\27E9'
  },
  0x2758: {
    c: '\\2223'
  },
  0x2A0C: {
    c: '\\222C\\222C'
  },
  0x3008: {
    c: '\\27E8'
  },
  0x3009: {
    c: '\\27E9'
  }
});

/***/ }),

/***/ 4491:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.texCalligraphicBold = void 0;

var FontData_js_1 = __webpack_require__(6116);

var tex_calligraphic_bold_js_1 = __webpack_require__(3787);

exports.texCalligraphicBold = FontData_js_1.AddCSS(tex_calligraphic_bold_js_1.texCalligraphicBold, {
  0x131: {
    f: 'B'
  },
  0x237: {
    f: 'B'
  }
});

/***/ }),

/***/ 4420:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.texCalligraphic = void 0;

var tex_calligraphic_js_1 = __webpack_require__(7664);

Object.defineProperty(exports, "texCalligraphic", ({
  enumerable: true,
  get: function get() {
    return tex_calligraphic_js_1.texCalligraphic;
  }
}));

/***/ }),

/***/ 139:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.texMathit = void 0;

var tex_mathit_js_1 = __webpack_require__(211);

Object.defineProperty(exports, "texMathit", ({
  enumerable: true,
  get: function get() {
    return tex_mathit_js_1.texMathit;
  }
}));

/***/ }),

/***/ 2075:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.texOldstyleBold = void 0;

var tex_oldstyle_bold_js_1 = __webpack_require__(4277);

Object.defineProperty(exports, "texOldstyleBold", ({
  enumerable: true,
  get: function get() {
    return tex_oldstyle_bold_js_1.texOldstyleBold;
  }
}));

/***/ }),

/***/ 2582:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.texOldstyle = void 0;

var tex_oldstyle_js_1 = __webpack_require__(2950);

Object.defineProperty(exports, "texOldstyle", ({
  enumerable: true,
  get: function get() {
    return tex_oldstyle_js_1.texOldstyle;
  }
}));

/***/ }),

/***/ 1962:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.texSize3 = void 0;

var FontData_js_1 = __webpack_require__(6116);

var tex_size3_js_1 = __webpack_require__(3698);

exports.texSize3 = FontData_js_1.AddCSS(tex_size3_js_1.texSize3, {
  0x2044: {
    c: '/'
  },
  0x2329: {
    c: '\\27E8'
  },
  0x232A: {
    c: '\\27E9'
  },
  0x3008: {
    c: '\\27E8'
  },
  0x3009: {
    c: '\\27E9'
  }
});

/***/ }),

/***/ 5593:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.texSize4 = void 0;

var FontData_js_1 = __webpack_require__(6116);

var tex_size4_js_1 = __webpack_require__(1540);

exports.texSize4 = FontData_js_1.AddCSS(tex_size4_js_1.texSize4, {
  0x2044: {
    c: '/'
  },
  0x2329: {
    c: '\\27E8'
  },
  0x232A: {
    c: '\\27E9'
  },
  0x3008: {
    c: '\\27E8'
  },
  0x3009: {
    c: '\\27E9'
  },
  0xE155: {
    c: '\\E153\\E152'
  },
  0xE156: {
    c: '\\E151\\E150'
  }
});

/***/ }),

/***/ 7187:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.texVariant = void 0;

var FontData_js_1 = __webpack_require__(6116);

var tex_variant_js_1 = __webpack_require__(7408);

exports.texVariant = FontData_js_1.AddCSS(tex_variant_js_1.texVariant, {
  0x3F0: {
    c: '\\E009'
  },
  0x210F: {
    f: ''
  },
  0x2224: {
    c: '\\E006'
  },
  0x2226: {
    c: '\\E007'
  },
  0x2268: {
    c: '\\E00C'
  },
  0x2269: {
    c: '\\E00D'
  },
  0x2270: {
    c: '\\E011'
  },
  0x2271: {
    c: '\\E00E'
  },
  0x2288: {
    c: '\\E016'
  },
  0x2289: {
    c: '\\E018'
  },
  0x228A: {
    c: '\\E01A'
  },
  0x228B: {
    c: '\\E01B'
  },
  0x2A87: {
    c: '\\E010'
  },
  0x2A88: {
    c: '\\E00F'
  },
  0x2ACB: {
    c: '\\E017'
  },
  0x2ACC: {
    c: '\\E019'
  }
});

/***/ }),

/***/ 5196:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.FontData = exports.NOSTRETCH = exports.H = exports.V = void 0;

var Options_js_1 = __webpack_require__(5698);

exports.V = 1;
exports.H = 2;
exports.NOSTRETCH = {
  dir: 0
};

var FontData = function () {
  function FontData(options) {
    var e_1, _a, e_2, _b;

    if (options === void 0) {
      options = null;
    }

    this.variant = {};
    this.delimiters = {};
    this.cssFontMap = {};
    this.remapChars = {};
    this.skewIcFactor = .75;
    var CLASS = this.constructor;
    this.options = Options_js_1.userOptions(Options_js_1.defaultOptions({}, CLASS.OPTIONS), options);
    this.params = __assign({}, CLASS.defaultParams);
    this.sizeVariants = __spreadArray([], __read(CLASS.defaultSizeVariants));
    this.stretchVariants = __spreadArray([], __read(CLASS.defaultStretchVariants));
    this.cssFontMap = __assign({}, CLASS.defaultCssFonts);

    try {
      for (var _c = __values(Object.keys(this.cssFontMap)), _d = _c.next(); !_d.done; _d = _c.next()) {
        var name_1 = _d.value;

        if (this.cssFontMap[name_1][0] === 'unknown') {
          this.cssFontMap[name_1][0] = this.options.unknownFamily;
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    this.cssFamilyPrefix = CLASS.defaultCssFamilyPrefix;
    this.createVariants(CLASS.defaultVariants);
    this.defineDelimiters(CLASS.defaultDelimiters);

    try {
      for (var _e = __values(Object.keys(CLASS.defaultChars)), _f = _e.next(); !_f.done; _f = _e.next()) {
        var name_2 = _f.value;
        this.defineChars(name_2, CLASS.defaultChars[name_2]);
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
      } finally {
        if (e_2) throw e_2.error;
      }
    }

    this.defineRemap('accent', CLASS.defaultAccentMap);
    this.defineRemap('mo', CLASS.defaultMoMap);
    this.defineRemap('mn', CLASS.defaultMnMap);
  }

  FontData.charOptions = function (font, n) {
    var char = font[n];

    if (char.length === 3) {
      char[3] = {};
    }

    return char[3];
  };

  Object.defineProperty(FontData.prototype, "styles", {
    get: function get() {
      return this._styles;
    },
    set: function set(style) {
      this._styles = style;
    },
    enumerable: false,
    configurable: true
  });

  FontData.prototype.createVariant = function (name, inherit, link) {
    if (inherit === void 0) {
      inherit = null;
    }

    if (link === void 0) {
      link = null;
    }

    var variant = {
      linked: [],
      chars: inherit ? Object.create(this.variant[inherit].chars) : {}
    };

    if (link && this.variant[link]) {
      Object.assign(variant.chars, this.variant[link].chars);
      this.variant[link].linked.push(variant.chars);
      variant.chars = Object.create(variant.chars);
    }

    this.remapSmpChars(variant.chars, name);
    this.variant[name] = variant;
  };

  FontData.prototype.remapSmpChars = function (chars, name) {
    var e_3, _a, e_4, _b;

    var CLASS = this.constructor;

    if (CLASS.VariantSmp[name]) {
      var SmpRemap = CLASS.SmpRemap;
      var SmpGreek = [null, null, CLASS.SmpRemapGreekU, CLASS.SmpRemapGreekL];

      try {
        for (var _c = __values(CLASS.SmpRanges), _d = _c.next(); !_d.done; _d = _c.next()) {
          var _e = __read(_d.value, 3),
              i = _e[0],
              lo = _e[1],
              hi = _e[2];

          var base = CLASS.VariantSmp[name][i];
          if (!base) continue;

          for (var n = lo; n <= hi; n++) {
            if (n === 0x3A2) continue;
            var smp = base + n - lo;
            chars[n] = this.smpChar(SmpRemap[smp] || smp);
          }

          if (SmpGreek[i]) {
            try {
              for (var _f = (e_4 = void 0, __values(Object.keys(SmpGreek[i]).map(function (x) {
                return parseInt(x);
              }))), _g = _f.next(); !_g.done; _g = _f.next()) {
                var n = _g.value;
                chars[n] = this.smpChar(base + SmpGreek[i][n]);
              }
            } catch (e_4_1) {
              e_4 = {
                error: e_4_1
              };
            } finally {
              try {
                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
              } finally {
                if (e_4) throw e_4.error;
              }
            }
          }
        }
      } catch (e_3_1) {
        e_3 = {
          error: e_3_1
        };
      } finally {
        try {
          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
        } finally {
          if (e_3) throw e_3.error;
        }
      }
    }

    if (name === 'bold') {
      chars[0x3DC] = this.smpChar(0x1D7CA);
      chars[0x3DD] = this.smpChar(0x1D7CB);
    }
  };

  FontData.prototype.smpChar = function (n) {
    return [,,, {
      smp: n
    }];
  };

  FontData.prototype.createVariants = function (variants) {
    var e_5, _a;

    try {
      for (var variants_1 = __values(variants), variants_1_1 = variants_1.next(); !variants_1_1.done; variants_1_1 = variants_1.next()) {
        var variant = variants_1_1.value;
        this.createVariant(variant[0], variant[1], variant[2]);
      }
    } catch (e_5_1) {
      e_5 = {
        error: e_5_1
      };
    } finally {
      try {
        if (variants_1_1 && !variants_1_1.done && (_a = variants_1.return)) _a.call(variants_1);
      } finally {
        if (e_5) throw e_5.error;
      }
    }
  };

  FontData.prototype.defineChars = function (name, chars) {
    var e_6, _a;

    var variant = this.variant[name];
    Object.assign(variant.chars, chars);

    try {
      for (var _b = __values(variant.linked), _c = _b.next(); !_c.done; _c = _b.next()) {
        var link = _c.value;
        Object.assign(link, chars);
      }
    } catch (e_6_1) {
      e_6 = {
        error: e_6_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_6) throw e_6.error;
      }
    }
  };

  FontData.prototype.defineDelimiters = function (delims) {
    Object.assign(this.delimiters, delims);
  };

  FontData.prototype.defineRemap = function (name, remap) {
    if (!this.remapChars.hasOwnProperty(name)) {
      this.remapChars[name] = {};
    }

    Object.assign(this.remapChars[name], remap);
  };

  FontData.prototype.getDelimiter = function (n) {
    return this.delimiters[n];
  };

  FontData.prototype.getSizeVariant = function (n, i) {
    if (this.delimiters[n].variants) {
      i = this.delimiters[n].variants[i];
    }

    return this.sizeVariants[i];
  };

  FontData.prototype.getStretchVariant = function (n, i) {
    return this.stretchVariants[this.delimiters[n].stretchv ? this.delimiters[n].stretchv[i] : 0];
  };

  FontData.prototype.getChar = function (name, n) {
    return this.variant[name].chars[n];
  };

  FontData.prototype.getVariant = function (name) {
    return this.variant[name];
  };

  FontData.prototype.getCssFont = function (variant) {
    return this.cssFontMap[variant] || ['serif', false, false];
  };

  FontData.prototype.getFamily = function (family) {
    return this.cssFamilyPrefix ? this.cssFamilyPrefix + ', ' + family : family;
  };

  FontData.prototype.getRemappedChar = function (name, c) {
    var map = this.remapChars[name] || {};
    return map[c];
  };

  FontData.OPTIONS = {
    unknownFamily: 'serif'
  };
  FontData.defaultVariants = [['normal'], ['bold', 'normal'], ['italic', 'normal'], ['bold-italic', 'italic', 'bold'], ['double-struck', 'bold'], ['fraktur', 'normal'], ['bold-fraktur', 'bold', 'fraktur'], ['script', 'italic'], ['bold-script', 'bold-italic', 'script'], ['sans-serif', 'normal'], ['bold-sans-serif', 'bold', 'sans-serif'], ['sans-serif-italic', 'italic', 'sans-serif'], ['sans-serif-bold-italic', 'bold-italic', 'bold-sans-serif'], ['monospace', 'normal']];
  FontData.defaultCssFonts = {
    normal: ['unknown', false, false],
    bold: ['unknown', false, true],
    italic: ['unknown', true, false],
    'bold-italic': ['unknown', true, true],
    'double-struck': ['unknown', false, true],
    fraktur: ['unknown', false, false],
    'bold-fraktur': ['unknown', false, true],
    script: ['cursive', false, false],
    'bold-script': ['cursive', false, true],
    'sans-serif': ['sans-serif', false, false],
    'bold-sans-serif': ['sans-serif', false, true],
    'sans-serif-italic': ['sans-serif', true, false],
    'sans-serif-bold-italic': ['sans-serif', true, true],
    monospace: ['monospace', false, false]
  };
  FontData.defaultCssFamilyPrefix = '';
  FontData.VariantSmp = {
    bold: [0x1D400, 0x1D41A, 0x1D6A8, 0x1D6C2, 0x1D7CE],
    italic: [0x1D434, 0x1D44E, 0x1D6E2, 0x1D6FC],
    'bold-italic': [0x1D468, 0x1D482, 0x1D71C, 0x1D736],
    script: [0x1D49C, 0x1D4B6],
    'bold-script': [0x1D4D0, 0x1D4EA],
    fraktur: [0x1D504, 0x1D51E],
    'double-struck': [0x1D538, 0x1D552,,, 0x1D7D8],
    'bold-fraktur': [0x1D56C, 0x1D586],
    'sans-serif': [0x1D5A0, 0x1D5BA,,, 0x1D7E2],
    'bold-sans-serif': [0x1D5D4, 0x1D5EE, 0x1D756, 0x1D770, 0x1D7EC],
    'sans-serif-italic': [0x1D608, 0x1D622],
    'sans-serif-bold-italic': [0x1D63C, 0x1D656, 0x1D790, 0x1D7AA],
    'monospace': [0x1D670, 0x1D68A,,, 0x1D7F6]
  };
  FontData.SmpRanges = [[0, 0x41, 0x5A], [1, 0x61, 0x7A], [2, 0x391, 0x3A9], [3, 0x3B1, 0x3C9], [4, 0x30, 0x39]];
  FontData.SmpRemap = {
    0x1D455: 0x210E,
    0x1D49D: 0x212C,
    0x1D4A0: 0x2130,
    0x1D4A1: 0x2131,
    0x1D4A3: 0x210B,
    0x1D4A4: 0x2110,
    0x1D4A7: 0x2112,
    0x1D4A8: 0x2133,
    0x1D4AD: 0x211B,
    0x1D4BA: 0x212F,
    0x1D4BC: 0x210A,
    0x1D4C4: 0x2134,
    0x1D506: 0x212D,
    0x1D50B: 0x210C,
    0x1D50C: 0x2111,
    0x1D515: 0x211C,
    0x1D51D: 0x2128,
    0x1D53A: 0x2102,
    0x1D53F: 0x210D,
    0x1D545: 0x2115,
    0x1D547: 0x2119,
    0x1D548: 0x211A,
    0x1D549: 0x211D,
    0x1D551: 0x2124
  };
  FontData.SmpRemapGreekU = {
    0x2207: 0x19,
    0x03F4: 0x11
  };
  FontData.SmpRemapGreekL = {
    0x3D1: 0x1B,
    0x3D5: 0x1D,
    0x3D6: 0x1F,
    0x3F0: 0x1C,
    0x3F1: 0x1E,
    0x3F5: 0x1A,
    0x2202: 0x19
  };
  FontData.defaultAccentMap = {
    0x0300: "\u02CB",
    0x0301: "\u02CA",
    0x0302: "\u02C6",
    0x0303: "\u02DC",
    0x0304: "\u02C9",
    0x0306: "\u02D8",
    0x0307: "\u02D9",
    0x0308: "\xA8",
    0x030A: "\u02DA",
    0x030C: "\u02C7",
    0x2192: "\u20D7",
    0x2032: '\'',
    0x2033: '\'\'',
    0x2034: '\'\'\'',
    0x2035: '`',
    0x2036: '``',
    0x2037: '```',
    0x2057: '\'\'\'\'',
    0x20D0: "\u21BC",
    0x20D1: "\u21C0",
    0x20D6: "\u2190",
    0x20E1: "\u2194",
    0x20F0: '*',
    0x20DB: '...',
    0x20DC: '....',
    0x20EC: "\u21C1",
    0x20ED: "\u21BD",
    0x20EE: "\u2190",
    0x20EF: "\u2192"
  };
  FontData.defaultMoMap = {
    0x002D: "\u2212"
  };
  FontData.defaultMnMap = {
    0x002D: "\u2212"
  };
  FontData.defaultParams = {
    x_height: .442,
    quad: 1,
    num1: .676,
    num2: .394,
    num3: .444,
    denom1: .686,
    denom2: .345,
    sup1: .413,
    sup2: .363,
    sup3: .289,
    sub1: .15,
    sub2: .247,
    sup_drop: .386,
    sub_drop: .05,
    delim1: 2.39,
    delim2: 1.0,
    axis_height: .25,
    rule_thickness: .06,
    big_op_spacing1: .111,
    big_op_spacing2: .167,
    big_op_spacing3: .2,
    big_op_spacing4: .6,
    big_op_spacing5: .1,
    surd_height: .075,
    scriptspace: .05,
    nulldelimiterspace: .12,
    delimiterfactor: 901,
    delimitershortfall: .3,
    min_rule_thickness: 1.25,
    separation_factor: 1.75,
    extra_ic: .033
  };
  FontData.defaultDelimiters = {};
  FontData.defaultChars = {};
  FontData.defaultSizeVariants = [];
  FontData.defaultStretchVariants = [];
  return FontData;
}();

exports.FontData = FontData;

/***/ }),

/***/ 5798:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonArrow = exports.CommonDiagonalArrow = exports.CommonDiagonalStrike = exports.CommonBorder2 = exports.CommonBorder = exports.arrowBBox = exports.diagonalArrowDef = exports.arrowDef = exports.arrowBBoxW = exports.arrowBBoxHD = exports.arrowHead = exports.fullBorder = exports.fullPadding = exports.fullBBox = exports.sideNames = exports.sideIndex = exports.SOLID = exports.PADDING = exports.THICKNESS = exports.ARROWY = exports.ARROWDX = exports.ARROWX = void 0;
exports.ARROWX = 4, exports.ARROWDX = 1, exports.ARROWY = 2;
exports.THICKNESS = .067;
exports.PADDING = .2;
exports.SOLID = exports.THICKNESS + 'em solid';
exports.sideIndex = {
  top: 0,
  right: 1,
  bottom: 2,
  left: 3
};
exports.sideNames = Object.keys(exports.sideIndex);

exports.fullBBox = function (node) {
  return new Array(4).fill(node.thickness + node.padding);
};

exports.fullPadding = function (node) {
  return new Array(4).fill(node.padding);
};

exports.fullBorder = function (node) {
  return new Array(4).fill(node.thickness);
};

var arrowHead = function arrowHead(node) {
  return Math.max(node.padding, node.thickness * (node.arrowhead.x + node.arrowhead.dx + 1));
};

exports.arrowHead = arrowHead;

var arrowBBoxHD = function arrowBBoxHD(node, TRBL) {
  if (node.childNodes[0]) {
    var _a = node.childNodes[0].getBBox(),
        h = _a.h,
        d = _a.d;

    TRBL[0] = TRBL[2] = Math.max(0, node.thickness * node.arrowhead.y - (h + d) / 2);
  }

  return TRBL;
};

exports.arrowBBoxHD = arrowBBoxHD;

var arrowBBoxW = function arrowBBoxW(node, TRBL) {
  if (node.childNodes[0]) {
    var w = node.childNodes[0].getBBox().w;
    TRBL[1] = TRBL[3] = Math.max(0, node.thickness * node.arrowhead.y - w / 2);
  }

  return TRBL;
};

exports.arrowBBoxW = arrowBBoxW;
exports.arrowDef = {
  up: [-Math.PI / 2, false, true, 'verticalstrike'],
  down: [Math.PI / 2, false, true, 'verticakstrike'],
  right: [0, false, false, 'horizontalstrike'],
  left: [Math.PI, false, false, 'horizontalstrike'],
  updown: [Math.PI / 2, true, true, 'verticalstrike uparrow downarrow'],
  leftright: [0, true, false, 'horizontalstrike leftarrow rightarrow']
};
exports.diagonalArrowDef = {
  updiagonal: [-1, 0, false, 'updiagonalstrike northeastarrow'],
  northeast: [-1, 0, false, 'updiagonalstrike updiagonalarrow'],
  southeast: [1, 0, false, 'downdiagonalstrike'],
  northwest: [1, Math.PI, false, 'downdiagonalstrike'],
  southwest: [-1, Math.PI, false, 'updiagonalstrike'],
  northeastsouthwest: [-1, 0, true, 'updiagonalstrike northeastarrow updiagonalarrow southwestarrow'],
  northwestsoutheast: [1, 0, true, 'downdiagonalstrike northwestarrow southeastarrow']
};
exports.arrowBBox = {
  up: function up(node) {
    return exports.arrowBBoxW(node, [exports.arrowHead(node), 0, node.padding, 0]);
  },
  down: function down(node) {
    return exports.arrowBBoxW(node, [node.padding, 0, exports.arrowHead(node), 0]);
  },
  right: function right(node) {
    return exports.arrowBBoxHD(node, [0, exports.arrowHead(node), 0, node.padding]);
  },
  left: function left(node) {
    return exports.arrowBBoxHD(node, [0, node.padding, 0, exports.arrowHead(node)]);
  },
  updown: function updown(node) {
    return exports.arrowBBoxW(node, [exports.arrowHead(node), 0, exports.arrowHead(node), 0]);
  },
  leftright: function leftright(node) {
    return exports.arrowBBoxHD(node, [0, exports.arrowHead(node), 0, exports.arrowHead(node)]);
  }
};

var CommonBorder = function CommonBorder(render) {
  return function (side) {
    var i = exports.sideIndex[side];
    return [side, {
      renderer: render,
      bbox: function bbox(node) {
        var bbox = [0, 0, 0, 0];
        bbox[i] = node.thickness + node.padding;
        return bbox;
      },
      border: function border(node) {
        var bbox = [0, 0, 0, 0];
        bbox[i] = node.thickness;
        return bbox;
      }
    }];
  };
};

exports.CommonBorder = CommonBorder;

var CommonBorder2 = function CommonBorder2(render) {
  return function (name, side1, side2) {
    var i1 = exports.sideIndex[side1];
    var i2 = exports.sideIndex[side2];
    return [name, {
      renderer: render,
      bbox: function bbox(node) {
        var t = node.thickness + node.padding;
        var bbox = [0, 0, 0, 0];
        bbox[i1] = bbox[i2] = t;
        return bbox;
      },
      border: function border(node) {
        var bbox = [0, 0, 0, 0];
        bbox[i1] = bbox[i2] = node.thickness;
        return bbox;
      },
      remove: side1 + ' ' + side2
    }];
  };
};

exports.CommonBorder2 = CommonBorder2;

var CommonDiagonalStrike = function CommonDiagonalStrike(render) {
  return function (name) {
    var cname = 'mjx-' + name.charAt(0) + 'strike';
    return [name + 'diagonalstrike', {
      renderer: render(cname),
      bbox: exports.fullBBox
    }];
  };
};

exports.CommonDiagonalStrike = CommonDiagonalStrike;

var CommonDiagonalArrow = function CommonDiagonalArrow(render) {
  return function (name) {
    var _a = __read(exports.diagonalArrowDef[name], 4),
        c = _a[0],
        pi = _a[1],
        double = _a[2],
        remove = _a[3];

    return [name + 'arrow', {
      renderer: function renderer(node, _child) {
        var _a = __read(node.arrowAW(), 2),
            a = _a[0],
            W = _a[1];

        var arrow = node.arrow(W, c * (a - pi), double);
        render(node, arrow);
      },
      bbox: function bbox(node) {
        var _a = node.arrowData(),
            a = _a.a,
            x = _a.x,
            y = _a.y;

        var _b = __read([node.arrowhead.x, node.arrowhead.y, node.arrowhead.dx], 3),
            ax = _b[0],
            ay = _b[1],
            adx = _b[2];

        var _c = __read(node.getArgMod(ax + adx, ay), 2),
            b = _c[0],
            ar = _c[1];

        var dy = y + (b > a ? node.thickness * ar * Math.sin(b - a) : 0);
        var dx = x + (b > Math.PI / 2 - a ? node.thickness * ar * Math.sin(b + a - Math.PI / 2) : 0);
        return [dy, dx, dy, dx];
      },
      remove: remove
    }];
  };
};

exports.CommonDiagonalArrow = CommonDiagonalArrow;

var CommonArrow = function CommonArrow(render) {
  return function (name) {
    var _a = __read(exports.arrowDef[name], 4),
        angle = _a[0],
        double = _a[1],
        isVertical = _a[2],
        remove = _a[3];

    return [name + 'arrow', {
      renderer: function renderer(node, _child) {
        var _a = node.getBBox(),
            w = _a.w,
            h = _a.h,
            d = _a.d;

        var _b = __read(isVertical ? [h + d, 'X'] : [w, 'Y'], 2),
            W = _b[0],
            offset = _b[1];

        var dd = node.getOffset(offset);
        var arrow = node.arrow(W, angle, double, offset, dd);
        render(node, arrow);
      },
      bbox: exports.arrowBBox[name],
      remove: remove
    }];
  };
};

exports.CommonArrow = CommonArrow;

/***/ }),

/***/ 263:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonOutputJax = void 0;

var OutputJax_js_1 = __webpack_require__(1556);

var MathItem_js_1 = __webpack_require__(6712);

var Options_js_1 = __webpack_require__(5698);

var lengths_js_1 = __webpack_require__(5915);

var Styles_js_1 = __webpack_require__(9124);

var StyleList_js_1 = __webpack_require__(401);

var CommonOutputJax = function (_super) {
  __extends(CommonOutputJax, _super);

  function CommonOutputJax(options, defaultFactory, defaultFont) {
    if (options === void 0) {
      options = null;
    }

    if (defaultFactory === void 0) {
      defaultFactory = null;
    }

    if (defaultFont === void 0) {
      defaultFont = null;
    }

    var _this = this;

    var _a = __read(Options_js_1.separateOptions(options, defaultFont.OPTIONS), 2),
        jaxOptions = _a[0],
        fontOptions = _a[1];

    _this = _super.call(this, jaxOptions) || this;
    _this.factory = _this.options.wrapperFactory || new defaultFactory();
    _this.factory.jax = _this;
    _this.cssStyles = _this.options.cssStyles || new StyleList_js_1.CssStyles();
    _this.font = _this.options.font || new defaultFont(fontOptions);
    _this.unknownCache = new Map();
    return _this;
  }

  CommonOutputJax.prototype.typeset = function (math, html) {
    this.setDocument(html);
    var node = this.createNode();
    this.toDOM(math, node, html);
    return node;
  };

  CommonOutputJax.prototype.createNode = function () {
    var jax = this.constructor.NAME;
    return this.html('mjx-container', {
      'class': 'MathJax',
      jax: jax
    });
  };

  CommonOutputJax.prototype.setScale = function (node) {
    var scale = this.math.metrics.scale * this.options.scale;

    if (scale !== 1) {
      this.adaptor.setStyle(node, 'fontSize', lengths_js_1.percent(scale));
    }
  };

  CommonOutputJax.prototype.toDOM = function (math, node, html) {
    if (html === void 0) {
      html = null;
    }

    this.setDocument(html);
    this.math = math;
    this.pxPerEm = math.metrics.ex / this.font.params.x_height;
    math.root.setTeXclass(null);
    this.setScale(node);
    this.nodeMap = new Map();
    this.container = node;
    this.processMath(math.root, node);
    this.nodeMap = null;
    this.executeFilters(this.postFilters, math, html, node);
  };

  CommonOutputJax.prototype.getBBox = function (math, html) {
    this.setDocument(html);
    this.math = math;
    math.root.setTeXclass(null);
    this.nodeMap = new Map();
    var bbox = this.factory.wrap(math.root).getBBox();
    this.nodeMap = null;
    return bbox;
  };

  CommonOutputJax.prototype.getMetrics = function (html) {
    var e_1, _a;

    this.setDocument(html);
    var adaptor = this.adaptor;
    var maps = this.getMetricMaps(html);

    try {
      for (var _b = __values(html.math), _c = _b.next(); !_c.done; _c = _b.next()) {
        var math = _c.value;
        var parent_1 = adaptor.parent(math.start.node);

        if (math.state() < MathItem_js_1.STATE.METRICS && parent_1) {
          var map = maps[math.display ? 1 : 0];

          var _d = map.get(parent_1),
              em = _d.em,
              ex = _d.ex,
              containerWidth = _d.containerWidth,
              lineWidth = _d.lineWidth,
              scale = _d.scale,
              family = _d.family;

          math.setMetrics(em, ex, containerWidth, lineWidth, scale);

          if (this.options.mtextInheritFont) {
            math.outputData.mtextFamily = family;
          }

          if (this.options.merrorInheritFont) {
            math.outputData.merrorFamily = family;
          }

          math.state(MathItem_js_1.STATE.METRICS);
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  };

  CommonOutputJax.prototype.getMetricsFor = function (node, display) {
    var getFamily = this.options.mtextInheritFont || this.options.merrorInheritFont;
    var test = this.getTestElement(node, display);
    var metrics = this.measureMetrics(test, getFamily);
    this.adaptor.remove(test);
    return metrics;
  };

  CommonOutputJax.prototype.getMetricMaps = function (html) {
    var e_2, _a, e_3, _b, e_4, _c, e_5, _d, e_6, _e;

    var adaptor = this.adaptor;
    var domMaps = [new Map(), new Map()];

    try {
      for (var _f = __values(html.math), _g = _f.next(); !_g.done; _g = _f.next()) {
        var math = _g.value;
        var node = adaptor.parent(math.start.node);

        if (node && math.state() < MathItem_js_1.STATE.METRICS) {
          var map = domMaps[math.display ? 1 : 0];

          if (!map.has(node)) {
            map.set(node, this.getTestElement(node, math.display));
          }
        }
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);
      } finally {
        if (e_2) throw e_2.error;
      }
    }

    var getFamily = this.options.mtextInheritFont || this.options.merrorInheritFont;
    var maps = [new Map(), new Map()];

    try {
      for (var _h = __values(maps.keys()), _j = _h.next(); !_j.done; _j = _h.next()) {
        var i = _j.value;

        try {
          for (var _k = (e_4 = void 0, __values(domMaps[i].keys())), _l = _k.next(); !_l.done; _l = _k.next()) {
            var node = _l.value;
            maps[i].set(node, this.measureMetrics(domMaps[i].get(node), getFamily));
          }
        } catch (e_4_1) {
          e_4 = {
            error: e_4_1
          };
        } finally {
          try {
            if (_l && !_l.done && (_c = _k.return)) _c.call(_k);
          } finally {
            if (e_4) throw e_4.error;
          }
        }
      }
    } catch (e_3_1) {
      e_3 = {
        error: e_3_1
      };
    } finally {
      try {
        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);
      } finally {
        if (e_3) throw e_3.error;
      }
    }

    try {
      for (var _m = __values(maps.keys()), _o = _m.next(); !_o.done; _o = _m.next()) {
        var i = _o.value;

        try {
          for (var _p = (e_6 = void 0, __values(domMaps[i].values())), _q = _p.next(); !_q.done; _q = _p.next()) {
            var node = _q.value;
            adaptor.remove(node);
          }
        } catch (e_6_1) {
          e_6 = {
            error: e_6_1
          };
        } finally {
          try {
            if (_q && !_q.done && (_e = _p.return)) _e.call(_p);
          } finally {
            if (e_6) throw e_6.error;
          }
        }
      }
    } catch (e_5_1) {
      e_5 = {
        error: e_5_1
      };
    } finally {
      try {
        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);
      } finally {
        if (e_5) throw e_5.error;
      }
    }

    return maps;
  };

  CommonOutputJax.prototype.getTestElement = function (node, display) {
    var adaptor = this.adaptor;

    if (!this.testInline) {
      this.testInline = this.html('mjx-test', {
        style: {
          display: 'inline-block',
          width: '100%',
          'font-style': 'normal',
          'font-weight': 'normal',
          'font-size': '100%',
          'font-size-adjust': 'none',
          'text-indent': 0,
          'text-transform': 'none',
          'letter-spacing': 'normal',
          'word-spacing': 'normal',
          overflow: 'hidden',
          height: '1px',
          'margin-right': '-1px'
        }
      }, [this.html('mjx-left-box', {
        style: {
          display: 'inline-block',
          width: 0,
          'float': 'left'
        }
      }), this.html('mjx-ex-box', {
        style: {
          position: 'absolute',
          overflow: 'hidden',
          width: '1px',
          height: '60ex'
        }
      }), this.html('mjx-right-box', {
        style: {
          display: 'inline-block',
          width: 0,
          'float': 'right'
        }
      })]);
      this.testDisplay = adaptor.clone(this.testInline);
      adaptor.setStyle(this.testDisplay, 'display', 'table');
      adaptor.setStyle(this.testDisplay, 'margin-right', '');
      adaptor.setStyle(adaptor.firstChild(this.testDisplay), 'display', 'none');
      var right = adaptor.lastChild(this.testDisplay);
      adaptor.setStyle(right, 'display', 'table-cell');
      adaptor.setStyle(right, 'width', '10000em');
      adaptor.setStyle(right, 'float', '');
    }

    return adaptor.append(node, adaptor.clone(display ? this.testDisplay : this.testInline));
  };

  CommonOutputJax.prototype.measureMetrics = function (node, getFamily) {
    var adaptor = this.adaptor;
    var family = getFamily ? adaptor.fontFamily(node) : '';
    var em = adaptor.fontSize(node);

    var _a = __read(adaptor.nodeSize(adaptor.childNode(node, 1)), 2),
        w = _a[0],
        h = _a[1];

    var ex = w ? h / 60 : em * this.options.exFactor;
    var containerWidth = !w ? 1000000 : adaptor.getStyle(node, 'display') === 'table' ? adaptor.nodeSize(adaptor.lastChild(node))[0] - 1 : adaptor.nodeBBox(adaptor.lastChild(node)).left - adaptor.nodeBBox(adaptor.firstChild(node)).left - 2;
    var scale = Math.max(this.options.minScale, this.options.matchFontHeight ? ex / this.font.params.x_height / em : 1);
    var lineWidth = 1000000;
    return {
      em: em,
      ex: ex,
      containerWidth: containerWidth,
      lineWidth: lineWidth,
      scale: scale,
      family: family
    };
  };

  CommonOutputJax.prototype.styleSheet = function (html) {
    var e_7, _a;

    this.setDocument(html);
    this.cssStyles.clear();
    this.cssStyles.addStyles(this.constructor.commonStyles);

    if ('getStyles' in html) {
      try {
        for (var _b = __values(html.getStyles()), _c = _b.next(); !_c.done; _c = _b.next()) {
          var styles = _c.value;
          this.cssStyles.addStyles(styles);
        }
      } catch (e_7_1) {
        e_7 = {
          error: e_7_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_7) throw e_7.error;
        }
      }
    }

    this.addWrapperStyles(this.cssStyles);
    this.addFontStyles(this.cssStyles);
    var sheet = this.html('style', {
      id: 'MJX-styles'
    }, [this.text('\n' + this.cssStyles.cssText + '\n')]);
    return sheet;
  };

  CommonOutputJax.prototype.addFontStyles = function (styles) {
    styles.addStyles(this.font.styles);
  };

  CommonOutputJax.prototype.addWrapperStyles = function (styles) {
    var e_8, _a;

    try {
      for (var _b = __values(this.factory.getKinds()), _c = _b.next(); !_c.done; _c = _b.next()) {
        var kind = _c.value;
        this.addClassStyles(this.factory.getNodeClass(kind), styles);
      }
    } catch (e_8_1) {
      e_8 = {
        error: e_8_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_8) throw e_8.error;
      }
    }
  };

  CommonOutputJax.prototype.addClassStyles = function (CLASS, styles) {
    styles.addStyles(CLASS.styles);
  };

  CommonOutputJax.prototype.setDocument = function (html) {
    if (html) {
      this.document = html;
      this.adaptor.document = html.document;
    }
  };

  CommonOutputJax.prototype.html = function (type, def, content, ns) {
    if (def === void 0) {
      def = {};
    }

    if (content === void 0) {
      content = [];
    }

    return this.adaptor.node(type, def, content, ns);
  };

  CommonOutputJax.prototype.text = function (text) {
    return this.adaptor.text(text);
  };

  CommonOutputJax.prototype.fixed = function (m, n) {
    if (n === void 0) {
      n = 3;
    }

    if (Math.abs(m) < .0006) {
      return '0';
    }

    return m.toFixed(n).replace(/\.?0+$/, '');
  };

  CommonOutputJax.prototype.measureText = function (text, variant, font) {
    if (font === void 0) {
      font = ['', false, false];
    }

    var node = this.unknownText(text, variant);

    if (variant === '-explicitFont') {
      var styles = this.cssFontStyles(font);
      this.adaptor.setAttributes(node, {
        style: styles
      });
    }

    return this.measureTextNodeWithCache(node, text, variant, font);
  };

  CommonOutputJax.prototype.measureTextNodeWithCache = function (text, chars, variant, font) {
    if (font === void 0) {
      font = ['', false, false];
    }

    if (variant === '-explicitFont') {
      variant = [font[0], font[1] ? 'T' : 'F', font[2] ? 'T' : 'F', ''].join('-');
    }

    if (!this.unknownCache.has(variant)) {
      this.unknownCache.set(variant, new Map());
    }

    var map = this.unknownCache.get(variant);
    var cached = map.get(chars);
    if (cached) return cached;
    var bbox = this.measureTextNode(text);
    map.set(chars, bbox);
    return bbox;
  };

  CommonOutputJax.prototype.measureXMLnode = function (xml) {
    var adaptor = this.adaptor;
    var content = this.html('mjx-xml-block', {
      style: {
        display: 'inline-block'
      }
    }, [adaptor.clone(xml)]);
    var base = this.html('mjx-baseline', {
      style: {
        display: 'inline-block',
        width: 0,
        height: 0
      }
    });
    var style = {
      position: 'absolute',
      display: 'inline-block',
      'font-family': 'initial',
      'line-height': 'normal'
    };
    var node = this.html('mjx-measure-xml', {
      style: style
    }, [base, content]);
    adaptor.append(adaptor.parent(this.math.start.node), this.container);
    adaptor.append(this.container, node);
    var em = this.math.metrics.em * this.math.metrics.scale;

    var _a = adaptor.nodeBBox(content),
        left = _a.left,
        right = _a.right,
        bottom = _a.bottom,
        top = _a.top;

    var w = (right - left) / em;
    var h = (adaptor.nodeBBox(base).top - top) / em;
    var d = (bottom - top) / em - h;
    adaptor.remove(this.container);
    adaptor.remove(node);
    return {
      w: w,
      h: h,
      d: d
    };
  };

  CommonOutputJax.prototype.cssFontStyles = function (font, styles) {
    if (styles === void 0) {
      styles = {};
    }

    var _a = __read(font, 3),
        family = _a[0],
        italic = _a[1],
        bold = _a[2];

    styles['font-family'] = this.font.getFamily(family);
    if (italic) styles['font-style'] = 'italic';
    if (bold) styles['font-weight'] = 'bold';
    return styles;
  };

  CommonOutputJax.prototype.getFontData = function (styles) {
    if (!styles) {
      styles = new Styles_js_1.Styles();
    }

    return [this.font.getFamily(styles.get('font-family')), styles.get('font-style') === 'italic', styles.get('font-weight') === 'bold'];
  };

  CommonOutputJax.NAME = 'Common';
  CommonOutputJax.OPTIONS = __assign(__assign({}, OutputJax_js_1.AbstractOutputJax.OPTIONS), {
    scale: 1,
    minScale: .5,
    mtextInheritFont: false,
    merrorInheritFont: false,
    mtextFont: '',
    merrorFont: 'serif',
    mathmlSpacing: false,
    skipAttributes: {},
    exFactor: .5,
    displayAlign: 'center',
    displayIndent: '0',
    wrapperFactory: null,
    font: null,
    cssStyles: null
  });
  CommonOutputJax.commonStyles = {};
  return CommonOutputJax;
}(OutputJax_js_1.AbstractOutputJax);

exports.CommonOutputJax = CommonOutputJax;

/***/ }),

/***/ 3149:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonWrapper = void 0;

var Wrapper_js_1 = __webpack_require__(1770);

var MmlNode_js_1 = __webpack_require__(4653);

var string_js_1 = __webpack_require__(4944);

var LENGTHS = __webpack_require__(5915);

var Styles_js_1 = __webpack_require__(9124);

var BBox_js_1 = __webpack_require__(8483);

var FontData_js_1 = __webpack_require__(5196);

var SMALLSIZE = 2 / 18;

function MathMLSpace(script, size) {
  return script ? size < SMALLSIZE ? 0 : SMALLSIZE : size;
}

var CommonWrapper = function (_super) {
  __extends(CommonWrapper, _super);

  function CommonWrapper(factory, node, parent) {
    if (parent === void 0) {
      parent = null;
    }

    var _this = _super.call(this, factory, node) || this;

    _this.parent = null;
    _this.removedStyles = null;
    _this.styles = null;
    _this.variant = '';
    _this.bboxComputed = false;
    _this.stretch = FontData_js_1.NOSTRETCH;
    _this.font = null;
    _this.parent = parent;
    _this.font = factory.jax.font;
    _this.bbox = BBox_js_1.BBox.zero();

    _this.getStyles();

    _this.getVariant();

    _this.getScale();

    _this.getSpace();

    _this.childNodes = node.childNodes.map(function (child) {
      var wrapped = _this.wrap(child);

      if (wrapped.bbox.pwidth && (node.notParent || node.isKind('math'))) {
        _this.bbox.pwidth = BBox_js_1.BBox.fullWidth;
      }

      return wrapped;
    });
    return _this;
  }

  Object.defineProperty(CommonWrapper.prototype, "jax", {
    get: function get() {
      return this.factory.jax;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(CommonWrapper.prototype, "adaptor", {
    get: function get() {
      return this.factory.jax.adaptor;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(CommonWrapper.prototype, "metrics", {
    get: function get() {
      return this.factory.jax.math.metrics;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(CommonWrapper.prototype, "fixesPWidth", {
    get: function get() {
      return !this.node.notParent && !this.node.isToken;
    },
    enumerable: false,
    configurable: true
  });

  CommonWrapper.prototype.wrap = function (node, parent) {
    if (parent === void 0) {
      parent = null;
    }

    var wrapped = this.factory.wrap(node, parent || this);

    if (parent) {
      parent.childNodes.push(wrapped);
    }

    this.jax.nodeMap.set(node, wrapped);
    return wrapped;
  };

  CommonWrapper.prototype.getBBox = function (save) {
    if (save === void 0) {
      save = true;
    }

    if (this.bboxComputed) {
      return this.bbox;
    }

    var bbox = save ? this.bbox : BBox_js_1.BBox.zero();
    this.computeBBox(bbox);
    this.bboxComputed = save;
    return bbox;
  };

  CommonWrapper.prototype.computeBBox = function (bbox, recompute) {
    var e_1, _a;

    if (recompute === void 0) {
      recompute = false;
    }

    bbox.empty();

    try {
      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;
        bbox.append(child.getBBox());
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    bbox.clean();

    if (this.fixesPWidth && this.setChildPWidths(recompute)) {
      this.computeBBox(bbox, true);
    }
  };

  CommonWrapper.prototype.setChildPWidths = function (recompute, w, clear) {
    var e_2, _a;

    if (w === void 0) {
      w = null;
    }

    if (clear === void 0) {
      clear = true;
    }

    if (recompute) {
      return false;
    }

    if (clear) {
      this.bbox.pwidth = '';
    }

    var changed = false;

    try {
      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;
        var cbox = child.getBBox();

        if (cbox.pwidth && child.setChildPWidths(recompute, w === null ? cbox.w : w, clear)) {
          changed = true;
        }
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }

    return changed;
  };

  CommonWrapper.prototype.invalidateBBox = function () {
    if (this.bboxComputed) {
      this.bboxComputed = false;

      if (this.parent) {
        this.parent.invalidateBBox();
      }
    }
  };

  CommonWrapper.prototype.copySkewIC = function (bbox) {
    var first = this.childNodes[0];

    if (first === null || first === void 0 ? void 0 : first.bbox.sk) {
      bbox.sk = first.bbox.sk;
    }

    if (first === null || first === void 0 ? void 0 : first.bbox.dx) {
      bbox.dx = first.bbox.dx;
    }

    var last = this.childNodes[this.childNodes.length - 1];

    if (last === null || last === void 0 ? void 0 : last.bbox.ic) {
      bbox.ic = last.bbox.ic;
      bbox.w += bbox.ic;
    }
  };

  CommonWrapper.prototype.getStyles = function () {
    var styleString = this.node.attributes.getExplicit('style');
    if (!styleString) return;
    var style = this.styles = new Styles_js_1.Styles(styleString);

    for (var i = 0, m = CommonWrapper.removeStyles.length; i < m; i++) {
      var id = CommonWrapper.removeStyles[i];

      if (style.get(id)) {
        if (!this.removedStyles) this.removedStyles = {};
        this.removedStyles[id] = style.get(id);
        style.set(id, '');
      }
    }
  };

  CommonWrapper.prototype.getVariant = function () {
    if (!this.node.isToken) return;
    var attributes = this.node.attributes;
    var variant = attributes.get('mathvariant');

    if (!attributes.getExplicit('mathvariant')) {
      var values = attributes.getList('fontfamily', 'fontweight', 'fontstyle');

      if (this.removedStyles) {
        var style = this.removedStyles;
        if (style.fontFamily) values.family = style.fontFamily;
        if (style.fontWeight) values.weight = style.fontWeight;
        if (style.fontStyle) values.style = style.fontStyle;
      }

      if (values.fontfamily) values.family = values.fontfamily;
      if (values.fontweight) values.weight = values.fontweight;
      if (values.fontstyle) values.style = values.fontstyle;

      if (values.weight && values.weight.match(/^\d+$/)) {
        values.weight = parseInt(values.weight) > 600 ? 'bold' : 'normal';
      }

      if (values.family) {
        variant = this.explicitVariant(values.family, values.weight, values.style);
      } else {
        if (this.node.getProperty('variantForm')) variant = '-tex-variant';
        variant = (CommonWrapper.BOLDVARIANTS[values.weight] || {})[variant] || variant;
        variant = (CommonWrapper.ITALICVARIANTS[values.style] || {})[variant] || variant;
      }
    }

    this.variant = variant;
  };

  CommonWrapper.prototype.explicitVariant = function (fontFamily, fontWeight, fontStyle) {
    var style = this.styles;
    if (!style) style = this.styles = new Styles_js_1.Styles();
    style.set('fontFamily', fontFamily);
    if (fontWeight) style.set('fontWeight', fontWeight);
    if (fontStyle) style.set('fontStyle', fontStyle);
    return '-explicitFont';
  };

  CommonWrapper.prototype.getScale = function () {
    var scale = 1,
        parent = this.parent;
    var pscale = parent ? parent.bbox.scale : 1;
    var attributes = this.node.attributes;
    var scriptlevel = Math.min(attributes.get('scriptlevel'), 2);
    var fontsize = attributes.get('fontsize');
    var mathsize = this.node.isToken || this.node.isKind('mstyle') ? attributes.get('mathsize') : attributes.getInherited('mathsize');

    if (scriptlevel !== 0) {
      scale = Math.pow(attributes.get('scriptsizemultiplier'), scriptlevel);
      var scriptminsize = this.length2em(attributes.get('scriptminsize'), .8, 1);
      if (scale < scriptminsize) scale = scriptminsize;
    }

    if (this.removedStyles && this.removedStyles.fontSize && !fontsize) {
      fontsize = this.removedStyles.fontSize;
    }

    if (fontsize && !attributes.getExplicit('mathsize')) {
      mathsize = fontsize;
    }

    if (mathsize !== '1') {
      scale *= this.length2em(mathsize, 1, 1);
    }

    this.bbox.scale = scale;
    this.bbox.rscale = scale / pscale;
  };

  CommonWrapper.prototype.getSpace = function () {
    var isTop = this.isTopEmbellished();
    var hasSpacing = this.node.hasSpacingAttributes();

    if (this.jax.options.mathmlSpacing || hasSpacing) {
      isTop && this.getMathMLSpacing();
    } else {
      this.getTeXSpacing(isTop, hasSpacing);
    }
  };

  CommonWrapper.prototype.getMathMLSpacing = function () {
    var node = this.node.coreMO();
    var child = node.coreParent();
    var parent = child.parent;
    if (!parent || !parent.isKind('mrow') || parent.childNodes.length === 1) return;
    var attributes = node.attributes;
    var isScript = attributes.get('scriptlevel') > 0;
    this.bbox.L = attributes.isSet('lspace') ? Math.max(0, this.length2em(attributes.get('lspace'))) : MathMLSpace(isScript, node.lspace);
    this.bbox.R = attributes.isSet('rspace') ? Math.max(0, this.length2em(attributes.get('rspace'))) : MathMLSpace(isScript, node.rspace);
    var n = parent.childIndex(child);
    if (n === 0) return;
    var prev = parent.childNodes[n - 1];
    if (!prev.isEmbellished) return;
    var bbox = this.jax.nodeMap.get(prev).getBBox();

    if (bbox.R) {
      this.bbox.L = Math.max(0, this.bbox.L - bbox.R);
    }
  };

  CommonWrapper.prototype.getTeXSpacing = function (isTop, hasSpacing) {
    if (!hasSpacing) {
      var space = this.node.texSpacing();

      if (space) {
        this.bbox.L = this.length2em(space);
      }
    }

    if (isTop || hasSpacing) {
      var attributes = this.node.coreMO().attributes;

      if (attributes.isSet('lspace')) {
        this.bbox.L = Math.max(0, this.length2em(attributes.get('lspace')));
      }

      if (attributes.isSet('rspace')) {
        this.bbox.R = Math.max(0, this.length2em(attributes.get('rspace')));
      }
    }
  };

  CommonWrapper.prototype.isTopEmbellished = function () {
    return this.node.isEmbellished && !(this.node.parent && this.node.parent.isEmbellished);
  };

  CommonWrapper.prototype.core = function () {
    return this.jax.nodeMap.get(this.node.core());
  };

  CommonWrapper.prototype.coreMO = function () {
    return this.jax.nodeMap.get(this.node.coreMO());
  };

  CommonWrapper.prototype.getText = function () {
    var e_3, _a;

    var text = '';

    if (this.node.isToken) {
      try {
        for (var _b = __values(this.node.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
          var child = _c.value;

          if (child instanceof MmlNode_js_1.TextNode) {
            text += child.getText();
          }
        }
      } catch (e_3_1) {
        e_3 = {
          error: e_3_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_3) throw e_3.error;
        }
      }
    }

    return text;
  };

  CommonWrapper.prototype.canStretch = function (direction) {
    this.stretch = FontData_js_1.NOSTRETCH;

    if (this.node.isEmbellished) {
      var core = this.core();

      if (core && core.node !== this.node) {
        if (core.canStretch(direction)) {
          this.stretch = core.stretch;
        }
      }
    }

    return this.stretch.dir !== 0;
  };

  CommonWrapper.prototype.getAlignShift = function () {
    var _a;

    var _b = (_a = this.node.attributes).getList.apply(_a, __spreadArray([], __read(MmlNode_js_1.indentAttributes))),
        indentalign = _b.indentalign,
        indentshift = _b.indentshift,
        indentalignfirst = _b.indentalignfirst,
        indentshiftfirst = _b.indentshiftfirst;

    if (indentalignfirst !== 'indentalign') {
      indentalign = indentalignfirst;
    }

    if (indentalign === 'auto') {
      indentalign = this.jax.options.displayAlign;
    }

    if (indentshiftfirst !== 'indentshift') {
      indentshift = indentshiftfirst;
    }

    if (indentshift === 'auto') {
      indentshift = this.jax.options.displayIndent;

      if (indentalign === 'right' && !indentshift.match(/^\s*0[a-z]*\s*$/)) {
        indentshift = ('-' + indentshift.trim()).replace(/^--/, '');
      }
    }

    var shift = this.length2em(indentshift, this.metrics.containerWidth);
    return [indentalign, shift];
  };

  CommonWrapper.prototype.getAlignX = function (W, bbox, align) {
    return align === 'right' ? W - (bbox.w + bbox.R) * bbox.rscale : align === 'left' ? bbox.L * bbox.rscale : (W - bbox.w * bbox.rscale) / 2;
  };

  CommonWrapper.prototype.getAlignY = function (H, D, h, d, align) {
    return align === 'top' ? H - h : align === 'bottom' ? d - D : align === 'center' ? (H - h - (D - d)) / 2 : 0;
  };

  CommonWrapper.prototype.getWrapWidth = function (i) {
    return this.childNodes[i].getBBox().w;
  };

  CommonWrapper.prototype.getChildAlign = function (_i) {
    return 'left';
  };

  CommonWrapper.prototype.percent = function (m) {
    return LENGTHS.percent(m);
  };

  CommonWrapper.prototype.em = function (m) {
    return LENGTHS.em(m);
  };

  CommonWrapper.prototype.px = function (m, M) {
    if (M === void 0) {
      M = -LENGTHS.BIGDIMEN;
    }

    return LENGTHS.px(m, M, this.metrics.em);
  };

  CommonWrapper.prototype.length2em = function (length, size, scale) {
    if (size === void 0) {
      size = 1;
    }

    if (scale === void 0) {
      scale = null;
    }

    if (scale === null) {
      scale = this.bbox.scale;
    }

    return LENGTHS.length2em(length, size, scale, this.jax.pxPerEm);
  };

  CommonWrapper.prototype.unicodeChars = function (text, name) {
    if (name === void 0) {
      name = this.variant;
    }

    var chars = string_js_1.unicodeChars(text);
    var variant = this.font.getVariant(name);

    if (variant && variant.chars) {
      var map_1 = variant.chars;
      chars = chars.map(function (n) {
        return ((map_1[n] || [])[3] || {}).smp || n;
      });
    }

    return chars;
  };

  CommonWrapper.prototype.remapChars = function (chars) {
    return chars;
  };

  CommonWrapper.prototype.mmlText = function (text) {
    return this.node.factory.create('text').setText(text);
  };

  CommonWrapper.prototype.mmlNode = function (kind, properties, children) {
    if (properties === void 0) {
      properties = {};
    }

    if (children === void 0) {
      children = [];
    }

    return this.node.factory.create(kind, properties, children);
  };

  CommonWrapper.prototype.createMo = function (text) {
    var mmlFactory = this.node.factory;
    var textNode = mmlFactory.create('text').setText(text);
    var mml = mmlFactory.create('mo', {
      stretchy: true
    }, [textNode]);
    mml.inheritAttributesFrom(this.node);
    var node = this.wrap(mml);
    node.parent = this;
    return node;
  };

  CommonWrapper.prototype.getVariantChar = function (variant, n) {
    var char = this.font.getChar(variant, n) || [0, 0, 0, {
      unknown: true
    }];

    if (char.length === 3) {
      char[3] = {};
    }

    return char;
  };

  CommonWrapper.kind = 'unknown';
  CommonWrapper.styles = {};
  CommonWrapper.removeStyles = ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'fontVariant', 'font'];
  CommonWrapper.skipAttributes = {
    fontfamily: true,
    fontsize: true,
    fontweight: true,
    fontstyle: true,
    color: true,
    background: true,
    'class': true,
    href: true,
    style: true,
    xmlns: true
  };
  CommonWrapper.BOLDVARIANTS = {
    bold: {
      normal: 'bold',
      italic: 'bold-italic',
      fraktur: 'bold-fraktur',
      script: 'bold-script',
      'sans-serif': 'bold-sans-serif',
      'sans-serif-italic': 'sans-serif-bold-italic'
    },
    normal: {
      bold: 'normal',
      'bold-italic': 'italic',
      'bold-fraktur': 'fraktur',
      'bold-script': 'script',
      'bold-sans-serif': 'sans-serif',
      'sans-serif-bold-italic': 'sans-serif-italic'
    }
  };
  CommonWrapper.ITALICVARIANTS = {
    italic: {
      normal: 'italic',
      bold: 'bold-italic',
      'sans-serif': 'sans-serif-italic',
      'bold-sans-serif': 'sans-serif-bold-italic'
    },
    normal: {
      italic: 'normal',
      'bold-italic': 'bold',
      'sans-serif-italic': 'sans-serif',
      'sans-serif-bold-italic': 'bold-sans-serif'
    }
  };
  return CommonWrapper;
}(Wrapper_js_1.AbstractWrapper);

exports.CommonWrapper = CommonWrapper;

/***/ }),

/***/ 3202:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonWrapperFactory = void 0;

var WrapperFactory_js_1 = __webpack_require__(2322);

var CommonWrapperFactory = function (_super) {
  __extends(CommonWrapperFactory, _super);

  function CommonWrapperFactory() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.jax = null;
    return _this;
  }

  Object.defineProperty(CommonWrapperFactory.prototype, "Wrappers", {
    get: function get() {
      return this.node;
    },
    enumerable: false,
    configurable: true
  });
  CommonWrapperFactory.defaultNodes = {};
  return CommonWrapperFactory;
}(WrapperFactory_js_1.AbstractWrapperFactory);

exports.CommonWrapperFactory = CommonWrapperFactory;

/***/ }),

/***/ 5371:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonTeXAtomMixin = void 0;

var MmlNode_js_1 = __webpack_require__(4653);

function CommonTeXAtomMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    class_1.prototype.computeBBox = function (bbox, recompute) {
      if (recompute === void 0) {
        recompute = false;
      }

      _super.prototype.computeBBox.call(this, bbox, recompute);

      if (this.childNodes[0] && this.childNodes[0].bbox.ic) {
        bbox.ic = this.childNodes[0].bbox.ic;
      }

      if (this.node.texClass === MmlNode_js_1.TEXCLASS.VCENTER) {
        var h = bbox.h,
            d = bbox.d;
        var a = this.font.params.axis_height;
        var dh = (h + d) / 2 + a - h;
        bbox.h += dh;
        bbox.d -= dh;
      }
    };

    return class_1;
  }(Base);
}

exports.CommonTeXAtomMixin = CommonTeXAtomMixin;

/***/ }),

/***/ 8711:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonTextNodeMixin = void 0;

function CommonTextNodeMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    class_1.prototype.computeBBox = function (bbox, _recompute) {
      var e_1, _a;

      if (_recompute === void 0) {
        _recompute = false;
      }

      var variant = this.parent.variant;
      var text = this.node.getText();

      if (variant === '-explicitFont') {
        var font = this.jax.getFontData(this.parent.styles);

        var _b = this.jax.measureText(text, variant, font),
            w = _b.w,
            h = _b.h,
            d = _b.d;

        bbox.h = h;
        bbox.d = d;
        bbox.w = w;
      } else {
        var chars = this.remappedText(text, variant);
        bbox.empty();

        try {
          for (var chars_1 = __values(chars), chars_1_1 = chars_1.next(); !chars_1_1.done; chars_1_1 = chars_1.next()) {
            var char = chars_1_1.value;

            var _c = __read(this.getVariantChar(variant, char), 4),
                h = _c[0],
                d = _c[1],
                w = _c[2],
                data = _c[3];

            if (data.unknown) {
              var cbox = this.jax.measureText(String.fromCodePoint(char), variant);
              w = cbox.w;
              h = cbox.h;
              d = cbox.d;
            }

            bbox.w += w;
            if (h > bbox.h) bbox.h = h;
            if (d > bbox.d) bbox.d = d;
            bbox.ic = data.ic || 0;
            bbox.sk = data.sk || 0;
            bbox.dx = data.dx || 0;
          }
        } catch (e_1_1) {
          e_1 = {
            error: e_1_1
          };
        } finally {
          try {
            if (chars_1_1 && !chars_1_1.done && (_a = chars_1.return)) _a.call(chars_1);
          } finally {
            if (e_1) throw e_1.error;
          }
        }

        if (chars.length > 1) {
          bbox.sk = 0;
        }

        bbox.clean();
      }
    };

    class_1.prototype.remappedText = function (text, variant) {
      var c = this.parent.stretch.c;
      return c ? [c] : this.parent.remapChars(this.unicodeChars(text, variant));
    };

    class_1.prototype.getStyles = function () {};

    class_1.prototype.getVariant = function () {};

    class_1.prototype.getScale = function () {};

    class_1.prototype.getSpace = function () {};

    return class_1;
  }(Base);
}

exports.CommonTextNodeMixin = CommonTextNodeMixin;

/***/ }),

/***/ 6184:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMactionMixin = exports.TooltipData = void 0;

var string_js_1 = __webpack_require__(4944);

exports.TooltipData = {
  dx: '.2em',
  dy: '.1em',
  postDelay: 600,
  clearDelay: 100,
  hoverTimer: new Map(),
  clearTimer: new Map(),
  stopTimers: function stopTimers(node, data) {
    if (data.clearTimer.has(node)) {
      clearTimeout(data.clearTimer.get(node));
      data.clearTimer.delete(node);
    }

    if (data.hoverTimer.has(node)) {
      clearTimeout(data.hoverTimer.get(node));
      data.hoverTimer.delete(node);
    }
  }
};

function CommonMactionMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;

      var actions = _this.constructor.actions;

      var action = _this.node.attributes.get('actiontype');

      var _a = __read(actions.get(action) || [function (_node, _data) {}, {}], 2),
          handler = _a[0],
          data = _a[1];

      _this.action = handler;
      _this.data = data;

      _this.getParameters();

      return _this;
    }

    Object.defineProperty(class_1.prototype, "selected", {
      get: function get() {
        var selection = this.node.attributes.get('selection');
        var i = Math.max(1, Math.min(this.childNodes.length, selection)) - 1;
        return this.childNodes[i] || this.wrap(this.node.selected);
      },
      enumerable: false,
      configurable: true
    });

    class_1.prototype.getParameters = function () {
      var offsets = this.node.attributes.get('data-offsets');

      var _a = __read(string_js_1.split(offsets || ''), 2),
          dx = _a[0],
          dy = _a[1];

      this.dx = this.length2em(dx || exports.TooltipData.dx);
      this.dy = this.length2em(dy || exports.TooltipData.dy);
    };

    class_1.prototype.computeBBox = function (bbox, recompute) {
      if (recompute === void 0) {
        recompute = false;
      }

      bbox.updateFrom(this.selected.getBBox());
      this.selected.setChildPWidths(recompute);
    };

    return class_1;
  }(Base);
}

exports.CommonMactionMixin = CommonMactionMixin;

/***/ }),

/***/ 3639:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMathMixin = void 0;

function CommonMathMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    class_1.prototype.getWrapWidth = function (_i) {
      return this.parent ? this.getBBox().w : this.metrics.containerWidth / this.jax.pxPerEm;
    };

    return class_1;
  }(Base);
}

exports.CommonMathMixin = CommonMathMixin;

/***/ }),

/***/ 7170:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMencloseMixin = void 0;

var Notation = __webpack_require__(5798);

var string_js_1 = __webpack_require__(4944);

function CommonMencloseMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;

      _this.notations = {};
      _this.renderChild = null;
      _this.msqrt = null;
      _this.padding = Notation.PADDING;
      _this.thickness = Notation.THICKNESS;
      _this.arrowhead = {
        x: Notation.ARROWX,
        y: Notation.ARROWY,
        dx: Notation.ARROWDX
      };
      _this.TRBL = [0, 0, 0, 0];

      _this.getParameters();

      _this.getNotations();

      _this.removeRedundantNotations();

      _this.initializeNotations();

      _this.TRBL = _this.getBBoxExtenders();
      return _this;
    }

    class_1.prototype.getParameters = function () {
      var attributes = this.node.attributes;
      var padding = attributes.get('data-padding');

      if (padding !== undefined) {
        this.padding = this.length2em(padding, Notation.PADDING);
      }

      var thickness = attributes.get('data-thickness');

      if (thickness !== undefined) {
        this.thickness = this.length2em(thickness, Notation.THICKNESS);
      }

      var arrowhead = attributes.get('data-arrowhead');

      if (arrowhead !== undefined) {
        var _b = __read(string_js_1.split(arrowhead), 3),
            x = _b[0],
            y = _b[1],
            dx = _b[2];

        this.arrowhead = {
          x: x ? parseFloat(x) : Notation.ARROWX,
          y: y ? parseFloat(y) : Notation.ARROWY,
          dx: dx ? parseFloat(dx) : Notation.ARROWDX
        };
      }
    };

    class_1.prototype.getNotations = function () {
      var e_1, _b;

      var Notations = this.constructor.notations;

      try {
        for (var _c = __values(string_js_1.split(this.node.attributes.get('notation'))), _d = _c.next(); !_d.done; _d = _c.next()) {
          var name_1 = _d.value;
          var notation = Notations.get(name_1);

          if (notation) {
            this.notations[name_1] = notation;

            if (notation.renderChild) {
              this.renderChild = notation.renderer;
            }
          }
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
        } finally {
          if (e_1) throw e_1.error;
        }
      }
    };

    class_1.prototype.removeRedundantNotations = function () {
      var e_2, _b, e_3, _c;

      try {
        for (var _d = __values(Object.keys(this.notations)), _e = _d.next(); !_e.done; _e = _d.next()) {
          var name_2 = _e.value;

          if (this.notations[name_2]) {
            var remove = this.notations[name_2].remove || '';

            try {
              for (var _f = (e_3 = void 0, __values(remove.split(/ /))), _g = _f.next(); !_g.done; _g = _f.next()) {
                var notation = _g.value;
                delete this.notations[notation];
              }
            } catch (e_3_1) {
              e_3 = {
                error: e_3_1
              };
            } finally {
              try {
                if (_g && !_g.done && (_c = _f.return)) _c.call(_f);
              } finally {
                if (e_3) throw e_3.error;
              }
            }
          }
        }
      } catch (e_2_1) {
        e_2 = {
          error: e_2_1
        };
      } finally {
        try {
          if (_e && !_e.done && (_b = _d.return)) _b.call(_d);
        } finally {
          if (e_2) throw e_2.error;
        }
      }
    };

    class_1.prototype.initializeNotations = function () {
      var e_4, _b;

      try {
        for (var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()) {
          var name_3 = _d.value;
          var init = this.notations[name_3].init;
          init && init(this);
        }
      } catch (e_4_1) {
        e_4 = {
          error: e_4_1
        };
      } finally {
        try {
          if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
        } finally {
          if (e_4) throw e_4.error;
        }
      }
    };

    class_1.prototype.computeBBox = function (bbox, recompute) {
      if (recompute === void 0) {
        recompute = false;
      }

      var _b = __read(this.TRBL, 4),
          T = _b[0],
          R = _b[1],
          B = _b[2],
          L = _b[3];

      var child = this.childNodes[0].getBBox();
      bbox.combine(child, L, 0);
      bbox.h += T;
      bbox.d += B;
      bbox.w += R;
      this.setChildPWidths(recompute);
    };

    class_1.prototype.getBBoxExtenders = function () {
      var e_5, _b;

      var TRBL = [0, 0, 0, 0];

      try {
        for (var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()) {
          var name_4 = _d.value;
          this.maximizeEntries(TRBL, this.notations[name_4].bbox(this));
        }
      } catch (e_5_1) {
        e_5 = {
          error: e_5_1
        };
      } finally {
        try {
          if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
        } finally {
          if (e_5) throw e_5.error;
        }
      }

      return TRBL;
    };

    class_1.prototype.getPadding = function () {
      var e_6, _b;

      var _this = this;

      var BTRBL = [0, 0, 0, 0];

      try {
        for (var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()) {
          var name_5 = _d.value;
          var border = this.notations[name_5].border;

          if (border) {
            this.maximizeEntries(BTRBL, border(this));
          }
        }
      } catch (e_6_1) {
        e_6 = {
          error: e_6_1
        };
      } finally {
        try {
          if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
        } finally {
          if (e_6) throw e_6.error;
        }
      }

      return [0, 1, 2, 3].map(function (i) {
        return _this.TRBL[i] - BTRBL[i];
      });
    };

    class_1.prototype.maximizeEntries = function (X, Y) {
      for (var i = 0; i < X.length; i++) {
        if (X[i] < Y[i]) {
          X[i] = Y[i];
        }
      }
    };

    class_1.prototype.getOffset = function (direction) {
      var _b = __read(this.TRBL, 4),
          T = _b[0],
          R = _b[1],
          B = _b[2],
          L = _b[3];

      var d = (direction === 'X' ? R - L : B - T) / 2;
      return Math.abs(d) > .001 ? d : 0;
    };

    class_1.prototype.getArgMod = function (w, h) {
      return [Math.atan2(h, w), Math.sqrt(w * w + h * h)];
    };

    class_1.prototype.arrow = function (_w, _a, _double, _offset, _dist) {
      if (_offset === void 0) {
        _offset = '';
      }

      if (_dist === void 0) {
        _dist = 0;
      }

      return null;
    };

    class_1.prototype.arrowData = function () {
      var _b = __read([this.padding, this.thickness], 2),
          p = _b[0],
          t = _b[1];

      var r = t * (this.arrowhead.x + Math.max(1, this.arrowhead.dx));

      var _c = this.childNodes[0].getBBox(),
          h = _c.h,
          d = _c.d,
          w = _c.w;

      var H = h + d;
      var R = Math.sqrt(H * H + w * w);
      var x = Math.max(p, r * w / R);
      var y = Math.max(p, r * H / R);

      var _d = __read(this.getArgMod(w + 2 * x, H + 2 * y), 2),
          a = _d[0],
          W = _d[1];

      return {
        a: a,
        W: W,
        x: x,
        y: y
      };
    };

    class_1.prototype.arrowAW = function () {
      var _b = this.childNodes[0].getBBox(),
          h = _b.h,
          d = _b.d,
          w = _b.w;

      var _c = __read(this.TRBL, 4),
          T = _c[0],
          R = _c[1],
          B = _c[2],
          L = _c[3];

      return this.getArgMod(L + w + R, T + h + d + B);
    };

    class_1.prototype.createMsqrt = function (child) {
      var mmlFactory = this.node.factory;
      var mml = mmlFactory.create('msqrt');
      mml.inheritAttributesFrom(this.node);
      mml.childNodes[0] = child.node;
      var node = this.wrap(mml);
      node.parent = this;
      return node;
    };

    class_1.prototype.sqrtTRBL = function () {
      var bbox = this.msqrt.getBBox();
      var cbox = this.msqrt.childNodes[0].getBBox();
      return [bbox.h - cbox.h, 0, bbox.d - cbox.d, bbox.w - cbox.w];
    };

    return class_1;
  }(Base);
}

exports.CommonMencloseMixin = CommonMencloseMixin;

/***/ }),

/***/ 8554:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMfencedMixin = void 0;

function CommonMfencedMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;

      _this.mrow = null;

      _this.createMrow();

      _this.addMrowChildren();

      return _this;
    }

    class_1.prototype.createMrow = function () {
      var mmlFactory = this.node.factory;
      var mrow = mmlFactory.create('inferredMrow');
      mrow.inheritAttributesFrom(this.node);
      this.mrow = this.wrap(mrow);
      this.mrow.parent = this;
    };

    class_1.prototype.addMrowChildren = function () {
      var e_1, _a;

      var mfenced = this.node;
      var mrow = this.mrow;
      this.addMo(mfenced.open);

      if (this.childNodes.length) {
        mrow.childNodes.push(this.childNodes[0]);
      }

      var i = 0;

      try {
        for (var _b = __values(this.childNodes.slice(1)), _c = _b.next(); !_c.done; _c = _b.next()) {
          var child = _c.value;
          this.addMo(mfenced.separators[i++]);
          mrow.childNodes.push(child);
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_1) throw e_1.error;
        }
      }

      this.addMo(mfenced.close);
      mrow.stretchChildren();
    };

    class_1.prototype.addMo = function (node) {
      if (!node) return;
      var mo = this.wrap(node);
      this.mrow.childNodes.push(mo);
      mo.parent = this.mrow;
    };

    class_1.prototype.computeBBox = function (bbox, recompute) {
      if (recompute === void 0) {
        recompute = false;
      }

      bbox.updateFrom(this.mrow.getBBox());
      this.setChildPWidths(recompute);
    };

    return class_1;
  }(Base);
}

exports.CommonMfencedMixin = CommonMfencedMixin;

/***/ }),

/***/ 7133:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMfracMixin = void 0;

function CommonMfracMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;

      _this.bevel = null;
      _this.pad = _this.node.getProperty('withDelims') ? 0 : _this.font.params.nulldelimiterspace;

      if (_this.node.attributes.get('bevelled')) {
        var H = _this.getBevelData(_this.isDisplay()).H;

        var bevel = _this.bevel = _this.createMo('/');

        bevel.node.attributes.set('symmetric', true);
        bevel.canStretch(1);
        bevel.getStretchedVariant([H], true);
      }

      return _this;
    }

    class_1.prototype.computeBBox = function (bbox, recompute) {
      if (recompute === void 0) {
        recompute = false;
      }

      bbox.empty();

      var _a = this.node.attributes.getList('linethickness', 'bevelled'),
          linethickness = _a.linethickness,
          bevelled = _a.bevelled;

      var display = this.isDisplay();
      var w = null;

      if (bevelled) {
        this.getBevelledBBox(bbox, display);
      } else {
        var thickness = this.length2em(String(linethickness), .06);
        w = -2 * this.pad;

        if (thickness === 0) {
          this.getAtopBBox(bbox, display);
        } else {
          this.getFractionBBox(bbox, display, thickness);
          w -= .2;
        }

        w += bbox.w;
      }

      bbox.clean();
      this.setChildPWidths(recompute, w);
    };

    class_1.prototype.getFractionBBox = function (bbox, display, t) {
      var nbox = this.childNodes[0].getBBox();
      var dbox = this.childNodes[1].getBBox();
      var tex = this.font.params;
      var a = tex.axis_height;

      var _a = this.getTUV(display, t),
          T = _a.T,
          u = _a.u,
          v = _a.v;

      bbox.combine(nbox, 0, a + T + Math.max(nbox.d * nbox.rscale, u));
      bbox.combine(dbox, 0, a - T - Math.max(dbox.h * dbox.rscale, v));
      bbox.w += 2 * this.pad + .2;
    };

    class_1.prototype.getTUV = function (display, t) {
      var tex = this.font.params;
      var a = tex.axis_height;
      var T = (display ? 3.5 : 1.5) * t;
      return {
        T: (display ? 3.5 : 1.5) * t,
        u: (display ? tex.num1 : tex.num2) - a - T,
        v: (display ? tex.denom1 : tex.denom2) + a - T
      };
    };

    class_1.prototype.getAtopBBox = function (bbox, display) {
      var _a = this.getUVQ(display),
          u = _a.u,
          v = _a.v,
          nbox = _a.nbox,
          dbox = _a.dbox;

      bbox.combine(nbox, 0, u);
      bbox.combine(dbox, 0, -v);
      bbox.w += 2 * this.pad;
    };

    class_1.prototype.getUVQ = function (display) {
      var nbox = this.childNodes[0].getBBox();
      var dbox = this.childNodes[1].getBBox();
      var tex = this.font.params;

      var _a = __read(display ? [tex.num1, tex.denom1] : [tex.num3, tex.denom2], 2),
          u = _a[0],
          v = _a[1];

      var p = (display ? 7 : 3) * tex.rule_thickness;
      var q = u - nbox.d * nbox.scale - (dbox.h * dbox.scale - v);

      if (q < p) {
        u += (p - q) / 2;
        v += (p - q) / 2;
        q = p;
      }

      return {
        u: u,
        v: v,
        q: q,
        nbox: nbox,
        dbox: dbox
      };
    };

    class_1.prototype.getBevelledBBox = function (bbox, display) {
      var _a = this.getBevelData(display),
          u = _a.u,
          v = _a.v,
          delta = _a.delta,
          nbox = _a.nbox,
          dbox = _a.dbox;

      var lbox = this.bevel.getBBox();
      bbox.combine(nbox, 0, u);
      bbox.combine(lbox, bbox.w - delta / 2, 0);
      bbox.combine(dbox, bbox.w - delta / 2, v);
    };

    class_1.prototype.getBevelData = function (display) {
      var nbox = this.childNodes[0].getBBox();
      var dbox = this.childNodes[1].getBBox();
      var delta = display ? .4 : .15;
      var H = Math.max(nbox.scale * (nbox.h + nbox.d), dbox.scale * (dbox.h + dbox.d)) + 2 * delta;
      var a = this.font.params.axis_height;
      var u = nbox.scale * (nbox.d - nbox.h) / 2 + a + delta;
      var v = dbox.scale * (dbox.d - dbox.h) / 2 + a - delta;
      return {
        H: H,
        delta: delta,
        u: u,
        v: v,
        nbox: nbox,
        dbox: dbox
      };
    };

    class_1.prototype.canStretch = function (_direction) {
      return false;
    };

    class_1.prototype.isDisplay = function () {
      var _a = this.node.attributes.getList('displaystyle', 'scriptlevel'),
          displaystyle = _a.displaystyle,
          scriptlevel = _a.scriptlevel;

      return displaystyle && scriptlevel === 0;
    };

    class_1.prototype.getWrapWidth = function (i) {
      var attributes = this.node.attributes;

      if (attributes.get('bevelled')) {
        return this.childNodes[i].getBBox().w;
      }

      var w = this.getBBox().w;
      var thickness = this.length2em(attributes.get('linethickness'));
      return w - (thickness ? .2 : 0) - 2 * this.pad;
    };

    class_1.prototype.getChildAlign = function (i) {
      var attributes = this.node.attributes;
      return attributes.get('bevelled') ? 'left' : attributes.get(['numalign', 'denomalign'][i]);
    };

    return class_1;
  }(Base);
}

exports.CommonMfracMixin = CommonMfracMixin;

/***/ }),

/***/ 875:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMglyphMixin = void 0;

function CommonMglyphMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;

      _this.getParameters();

      return _this;
    }

    class_1.prototype.getParameters = function () {
      var _a = this.node.attributes.getList('width', 'height', 'valign'),
          width = _a.width,
          height = _a.height,
          valign = _a.valign;

      this.width = width === 'auto' ? 1 : this.length2em(width);
      this.height = height === 'auto' ? 1 : this.length2em(height);
      this.valign = this.length2em(valign || '0');
    };

    class_1.prototype.computeBBox = function (bbox, _recompute) {
      if (_recompute === void 0) {
        _recompute = false;
      }

      bbox.w = this.width;
      bbox.h = this.height + this.valign;
      bbox.d = -this.valign;
    };

    return class_1;
  }(Base);
}

exports.CommonMglyphMixin = CommonMglyphMixin;

/***/ }),

/***/ 1294:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMiMixin = void 0;

function CommonMiMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    class_1.prototype.computeBBox = function (bbox, _recompute) {
      if (_recompute === void 0) {
        _recompute = false;
      }

      _super.prototype.computeBBox.call(this, bbox);

      this.copySkewIC(bbox);
    };

    return class_1;
  }(Base);
}

exports.CommonMiMixin = CommonMiMixin;

/***/ }),

/***/ 8123:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMmultiscriptsMixin = exports.ScriptNames = exports.NextScript = void 0;

var BBox_js_1 = __webpack_require__(8483);

exports.NextScript = {
  base: 'subList',
  subList: 'supList',
  supList: 'subList',
  psubList: 'psupList',
  psupList: 'psubList'
};
exports.ScriptNames = ['sup', 'sup', 'psup', 'psub'];

function CommonMmultiscriptsMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;

      _this.scriptData = null;
      _this.firstPrescript = 0;

      _this.getScriptData();

      return _this;
    }

    class_1.prototype.combinePrePost = function (pre, post) {
      var bbox = new BBox_js_1.BBox(pre);
      bbox.combine(post, 0, 0);
      return bbox;
    };

    class_1.prototype.computeBBox = function (bbox, recompute) {
      if (recompute === void 0) {
        recompute = false;
      }

      var scriptspace = this.font.params.scriptspace;
      var data = this.scriptData;
      var sub = this.combinePrePost(data.sub, data.psub);
      var sup = this.combinePrePost(data.sup, data.psup);

      var _a = __read(this.getUVQ(sub, sup), 2),
          u = _a[0],
          v = _a[1];

      bbox.empty();

      if (data.numPrescripts) {
        bbox.combine(data.psup, scriptspace, u);
        bbox.combine(data.psub, scriptspace, v);
      }

      bbox.append(data.base);

      if (data.numScripts) {
        var w = bbox.w;
        bbox.combine(data.sup, w, u);
        bbox.combine(data.sub, w, v);
        bbox.w += scriptspace;
      }

      bbox.clean();
      this.setChildPWidths(recompute);
    };

    class_1.prototype.getScriptData = function () {
      var data = this.scriptData = {
        base: null,
        sub: BBox_js_1.BBox.empty(),
        sup: BBox_js_1.BBox.empty(),
        psub: BBox_js_1.BBox.empty(),
        psup: BBox_js_1.BBox.empty(),
        numPrescripts: 0,
        numScripts: 0
      };
      var lists = this.getScriptBBoxLists();
      this.combineBBoxLists(data.sub, data.sup, lists.subList, lists.supList);
      this.combineBBoxLists(data.psub, data.psup, lists.psubList, lists.psupList);
      data.base = lists.base[0];
      data.numPrescripts = lists.psubList.length;
      data.numScripts = lists.subList.length;
    };

    class_1.prototype.getScriptBBoxLists = function () {
      var e_1, _a;

      var lists = {
        base: [],
        subList: [],
        supList: [],
        psubList: [],
        psupList: []
      };
      var script = 'base';

      try {
        for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
          var child = _c.value;

          if (child.node.isKind('mprescripts')) {
            script = 'psubList';
          } else {
            lists[script].push(child.getBBox());
            script = exports.NextScript[script];
          }
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_1) throw e_1.error;
        }
      }

      this.firstPrescript = lists.subList.length + lists.supList.length + 2;
      this.padLists(lists.subList, lists.supList);
      this.padLists(lists.psubList, lists.psupList);
      return lists;
    };

    class_1.prototype.padLists = function (list1, list2) {
      if (list1.length > list2.length) {
        list2.push(BBox_js_1.BBox.empty());
      }
    };

    class_1.prototype.combineBBoxLists = function (bbox1, bbox2, list1, list2) {
      for (var i = 0; i < list1.length; i++) {
        var _a = __read(this.getScaledWHD(list1[i]), 3),
            w1 = _a[0],
            h1 = _a[1],
            d1 = _a[2];

        var _b = __read(this.getScaledWHD(list2[i]), 3),
            w2 = _b[0],
            h2 = _b[1],
            d2 = _b[2];

        var w = Math.max(w1, w2);
        bbox1.w += w;
        bbox2.w += w;
        if (h1 > bbox1.h) bbox1.h = h1;
        if (d1 > bbox1.d) bbox1.d = d1;
        if (h2 > bbox2.h) bbox2.h = h2;
        if (d2 > bbox2.d) bbox2.d = d2;
      }
    };

    class_1.prototype.getScaledWHD = function (bbox) {
      var w = bbox.w,
          h = bbox.h,
          d = bbox.d,
          rscale = bbox.rscale;
      return [w * rscale, h * rscale, d * rscale];
    };

    class_1.prototype.getUVQ = function (subbox, supbox) {
      var _a;

      if (!this.UVQ) {
        var _b = __read([0, 0, 0], 3),
            u = _b[0],
            v = _b[1],
            q = _b[2];

        if (subbox.h === 0 && subbox.d === 0) {
          u = this.getU();
        } else if (supbox.h === 0 && supbox.d === 0) {
          u = -this.getV();
        } else {
          _a = __read(_super.prototype.getUVQ.call(this, subbox, supbox), 3), u = _a[0], v = _a[1], q = _a[2];
        }

        this.UVQ = [u, v, q];
      }

      return this.UVQ;
    };

    return class_1;
  }(Base);
}

exports.CommonMmultiscriptsMixin = CommonMmultiscriptsMixin;

/***/ }),

/***/ 2425:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMnMixin = void 0;

function CommonMnMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    class_1.prototype.remapChars = function (chars) {
      if (chars.length) {
        var text = this.font.getRemappedChar('mn', chars[0]);

        if (text) {
          var c = this.unicodeChars(text, this.variant);

          if (c.length === 1) {
            chars[0] = c[0];
          } else {
            chars = c.concat(chars.slice(1));
          }
        }
      }

      return chars;
    };

    return class_1;
  }(Base);
}

exports.CommonMnMixin = CommonMnMixin;

/***/ }),

/***/ 8241:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var _a;

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMoMixin = exports.DirectionVH = void 0;

var BBox_js_1 = __webpack_require__(8483);

var string_js_1 = __webpack_require__(4944);

var FontData_js_1 = __webpack_require__(5196);

exports.DirectionVH = (_a = {}, _a[1] = 'v', _a[2] = 'h', _a);

function CommonMoMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;

      _this.size = null;
      _this.isAccent = _this.node.isAccent;
      return _this;
    }

    class_1.prototype.computeBBox = function (bbox, _recompute) {
      if (_recompute === void 0) {
        _recompute = false;
      }

      this.protoBBox(bbox);

      if (this.node.attributes.get('symmetric') && this.stretch.dir !== 2) {
        var d = this.getCenterOffset(bbox);
        bbox.h += d;
        bbox.d -= d;
      }

      if (this.node.getProperty('mathaccent') && (this.stretch.dir === 0 || this.size >= 0)) {
        bbox.w = 0;
      }
    };

    class_1.prototype.protoBBox = function (bbox) {
      var stretchy = this.stretch.dir !== 0;

      if (stretchy && this.size === null) {
        this.getStretchedVariant([0]);
      }

      if (stretchy && this.size < 0) return;

      _super.prototype.computeBBox.call(this, bbox);

      this.copySkewIC(bbox);
    };

    class_1.prototype.getAccentOffset = function () {
      var bbox = BBox_js_1.BBox.empty();
      this.protoBBox(bbox);
      return -bbox.w / 2;
    };

    class_1.prototype.getCenterOffset = function (bbox) {
      if (bbox === void 0) {
        bbox = null;
      }

      if (!bbox) {
        bbox = BBox_js_1.BBox.empty();

        _super.prototype.computeBBox.call(this, bbox);
      }

      return (bbox.h + bbox.d) / 2 + this.font.params.axis_height - bbox.h;
    };

    class_1.prototype.getVariant = function () {
      if (this.node.attributes.get('largeop')) {
        this.variant = this.node.attributes.get('displaystyle') ? '-largeop' : '-smallop';
        return;
      }

      if (!this.node.attributes.getExplicit('mathvariant') && this.node.getProperty('pseudoscript') === false) {
        this.variant = '-tex-variant';
        return;
      }

      _super.prototype.getVariant.call(this);
    };

    class_1.prototype.canStretch = function (direction) {
      if (this.stretch.dir !== 0) {
        return this.stretch.dir === direction;
      }

      var attributes = this.node.attributes;
      if (!attributes.get('stretchy')) return false;
      var c = this.getText();
      if (Array.from(c).length !== 1) return false;
      var delim = this.font.getDelimiter(c.codePointAt(0));
      this.stretch = delim && delim.dir === direction ? delim : FontData_js_1.NOSTRETCH;
      return this.stretch.dir !== 0;
    };

    class_1.prototype.getStretchedVariant = function (WH, exact) {
      var e_1, _a;

      if (exact === void 0) {
        exact = false;
      }

      if (this.stretch.dir !== 0) {
        var D = this.getWH(WH);
        var min = this.getSize('minsize', 0);
        var max = this.getSize('maxsize', Infinity);
        var mathaccent = this.node.getProperty('mathaccent');
        D = Math.max(min, Math.min(max, D));
        var df = this.font.params.delimiterfactor / 1000;
        var ds = this.font.params.delimitershortfall;
        var m = min || exact ? D : mathaccent ? Math.min(D / df, D + ds) : Math.max(D * df, D - ds);
        var delim = this.stretch;
        var c = delim.c || this.getText().codePointAt(0);
        var i = 0;

        if (delim.sizes) {
          try {
            for (var _b = __values(delim.sizes), _c = _b.next(); !_c.done; _c = _b.next()) {
              var d = _c.value;

              if (d >= m) {
                if (mathaccent && i) {
                  i--;
                }

                this.variant = this.font.getSizeVariant(c, i);
                this.size = i;

                if (delim.schar && delim.schar[i]) {
                  this.stretch = __assign(__assign({}, this.stretch), {
                    c: delim.schar[i]
                  });
                }

                return;
              }

              i++;
            }
          } catch (e_1_1) {
            e_1 = {
              error: e_1_1
            };
          } finally {
            try {
              if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            } finally {
              if (e_1) throw e_1.error;
            }
          }
        }

        if (delim.stretch) {
          this.size = -1;
          this.invalidateBBox();
          this.getStretchBBox(WH, this.checkExtendedHeight(D, delim), delim);
        } else {
          this.variant = this.font.getSizeVariant(c, i - 1);
          this.size = i - 1;
        }
      }
    };

    class_1.prototype.getSize = function (name, value) {
      var attributes = this.node.attributes;

      if (attributes.isSet(name)) {
        value = this.length2em(attributes.get(name), 1, 1);
      }

      return value;
    };

    class_1.prototype.getWH = function (WH) {
      if (WH.length === 0) return 0;
      if (WH.length === 1) return WH[0];

      var _a = __read(WH, 2),
          H = _a[0],
          D = _a[1];

      var a = this.font.params.axis_height;
      return this.node.attributes.get('symmetric') ? 2 * Math.max(H - a, D + a) : H + D;
    };

    class_1.prototype.getStretchBBox = function (WHD, D, C) {
      var _a;

      if (C.hasOwnProperty('min') && C.min > D) {
        D = C.min;
      }

      var _b = __read(C.HDW, 3),
          h = _b[0],
          d = _b[1],
          w = _b[2];

      if (this.stretch.dir === 1) {
        _a = __read(this.getBaseline(WHD, D, C), 2), h = _a[0], d = _a[1];
      } else {
        w = D;
      }

      this.bbox.h = h;
      this.bbox.d = d;
      this.bbox.w = w;
    };

    class_1.prototype.getBaseline = function (WHD, HD, C) {
      var hasWHD = WHD.length === 2 && WHD[0] + WHD[1] === HD;
      var symmetric = this.node.attributes.get('symmetric');

      var _a = __read(hasWHD ? WHD : [HD, 0], 2),
          H = _a[0],
          D = _a[1];

      var _b = __read([H + D, 0], 2),
          h = _b[0],
          d = _b[1];

      if (symmetric) {
        var a = this.font.params.axis_height;

        if (hasWHD) {
          h = 2 * Math.max(H - a, D + a);
        }

        d = h / 2 - a;
      } else if (hasWHD) {
        d = D;
      } else {
        var _c = __read(C.HDW || [.75, .25], 2),
            ch = _c[0],
            cd = _c[1];

        d = cd * (h / (ch + cd));
      }

      return [h - d, d];
    };

    class_1.prototype.checkExtendedHeight = function (D, C) {
      if (C.fullExt) {
        var _a = __read(C.fullExt, 2),
            extSize = _a[0],
            endSize = _a[1];

        var n = Math.ceil(Math.max(0, D - endSize) / extSize);
        D = endSize + n * extSize;
      }

      return D;
    };

    class_1.prototype.remapChars = function (chars) {
      var primes = this.node.getProperty('primes');

      if (primes) {
        return string_js_1.unicodeChars(primes);
      }

      if (chars.length === 1) {
        var parent_1 = this.node.coreParent().parent;
        var isAccent = this.isAccent && !parent_1.isKind('mrow');
        var map = isAccent ? 'accent' : 'mo';
        var text = this.font.getRemappedChar(map, chars[0]);

        if (text) {
          chars = this.unicodeChars(text, this.variant);
        }
      }

      return chars;
    };

    return class_1;
  }(Base);
}

exports.CommonMoMixin = CommonMoMixin;

/***/ }),

/***/ 1644:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMpaddedMixin = void 0;

function CommonMpaddedMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    class_1.prototype.getDimens = function () {
      var values = this.node.attributes.getList('width', 'height', 'depth', 'lspace', 'voffset');
      var bbox = this.childNodes[0].getBBox();
      var w = bbox.w,
          h = bbox.h,
          d = bbox.d;
      var W = w,
          H = h,
          D = d,
          x = 0,
          y = 0,
          dx = 0;
      if (values.width !== '') w = this.dimen(values.width, bbox, 'w', 0);
      if (values.height !== '') h = this.dimen(values.height, bbox, 'h', 0);
      if (values.depth !== '') d = this.dimen(values.depth, bbox, 'd', 0);
      if (values.voffset !== '') y = this.dimen(values.voffset, bbox);
      if (values.lspace !== '') x = this.dimen(values.lspace, bbox);
      var align = this.node.attributes.get('data-align');

      if (align) {
        dx = this.getAlignX(w, bbox, align);
      }

      return [H, D, W, h - H, d - D, w - W, x, y, dx];
    };

    class_1.prototype.dimen = function (length, bbox, d, m) {
      if (d === void 0) {
        d = '';
      }

      if (m === void 0) {
        m = null;
      }

      length = String(length);
      var match = length.match(/width|height|depth/);
      var size = match ? bbox[match[0].charAt(0)] : d ? bbox[d] : 0;
      var dimen = this.length2em(length, size) || 0;

      if (length.match(/^[-+]/) && d) {
        dimen += size;
      }

      if (m != null) {
        dimen = Math.max(m, dimen);
      }

      return dimen;
    };

    class_1.prototype.computeBBox = function (bbox, recompute) {
      if (recompute === void 0) {
        recompute = false;
      }

      var _a = __read(this.getDimens(), 6),
          H = _a[0],
          D = _a[1],
          W = _a[2],
          dh = _a[3],
          dd = _a[4],
          dw = _a[5];

      bbox.w = W + dw;
      bbox.h = H + dh;
      bbox.d = D + dd;
      this.setChildPWidths(recompute, bbox.w);
    };

    class_1.prototype.getWrapWidth = function (_i) {
      return this.getBBox().w;
    };

    class_1.prototype.getChildAlign = function (_i) {
      return this.node.attributes.get('data-align') || 'left';
    };

    return class_1;
  }(Base);
}

exports.CommonMpaddedMixin = CommonMpaddedMixin;

/***/ }),

/***/ 730:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMrootMixin = void 0;

function CommonMrootMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    Object.defineProperty(class_1.prototype, "surd", {
      get: function get() {
        return 2;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(class_1.prototype, "root", {
      get: function get() {
        return 1;
      },
      enumerable: false,
      configurable: true
    });

    class_1.prototype.combineRootBBox = function (BBOX, sbox, H) {
      var bbox = this.childNodes[this.root].getBBox();
      var h = this.getRootDimens(sbox, H)[1];
      BBOX.combine(bbox, 0, h);
    };

    class_1.prototype.getRootDimens = function (sbox, H) {
      var surd = this.childNodes[this.surd];
      var bbox = this.childNodes[this.root].getBBox();
      var offset = (surd.size < 0 ? .5 : .6) * sbox.w;
      var w = bbox.w,
          rscale = bbox.rscale;
      var W = Math.max(w, offset / rscale);
      var dx = Math.max(0, W - w);
      var h = this.rootHeight(bbox, sbox, surd.size, H);
      var x = W * rscale - offset;
      return [x, h, dx];
    };

    class_1.prototype.rootHeight = function (rbox, sbox, size, H) {
      var h = sbox.h + sbox.d;
      var b = (size < 0 ? 1.9 : .55 * h) - (h - H);
      return b + Math.max(0, rbox.d * rbox.rscale);
    };

    return class_1;
  }(Base);
}

exports.CommonMrootMixin = CommonMrootMixin;

/***/ }),

/***/ 3250:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonInferredMrowMixin = exports.CommonMrowMixin = void 0;

var BBox_js_1 = __webpack_require__(8483);

function CommonMrowMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      var e_1, _a;

      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;

      _this.stretchChildren();

      try {
        for (var _b = __values(_this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
          var child = _c.value;

          if (child.bbox.pwidth) {
            _this.bbox.pwidth = BBox_js_1.BBox.fullWidth;
            break;
          }
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_1) throw e_1.error;
        }
      }

      return _this;
    }

    Object.defineProperty(class_1.prototype, "fixesPWidth", {
      get: function get() {
        return false;
      },
      enumerable: false,
      configurable: true
    });

    class_1.prototype.stretchChildren = function () {
      var e_2, _a, e_3, _b, e_4, _c;

      var stretchy = [];

      try {
        for (var _d = __values(this.childNodes), _e = _d.next(); !_e.done; _e = _d.next()) {
          var child = _e.value;

          if (child.canStretch(1)) {
            stretchy.push(child);
          }
        }
      } catch (e_2_1) {
        e_2 = {
          error: e_2_1
        };
      } finally {
        try {
          if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
        } finally {
          if (e_2) throw e_2.error;
        }
      }

      var count = stretchy.length;
      var nodeCount = this.childNodes.length;

      if (count && nodeCount > 1) {
        var H = 0,
            D = 0;
        var all = count > 1 && count === nodeCount;

        try {
          for (var _f = __values(this.childNodes), _g = _f.next(); !_g.done; _g = _f.next()) {
            var child = _g.value;
            var noStretch = child.stretch.dir === 0;

            if (all || noStretch) {
              var _h = child.getBBox(noStretch),
                  h = _h.h,
                  d = _h.d,
                  rscale = _h.rscale;

              h *= rscale;
              d *= rscale;
              if (h > H) H = h;
              if (d > D) D = d;
            }
          }
        } catch (e_3_1) {
          e_3 = {
            error: e_3_1
          };
        } finally {
          try {
            if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
          } finally {
            if (e_3) throw e_3.error;
          }
        }

        try {
          for (var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()) {
            var child = stretchy_1_1.value;
            child.coreMO().getStretchedVariant([H, D]);
          }
        } catch (e_4_1) {
          e_4 = {
            error: e_4_1
          };
        } finally {
          try {
            if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);
          } finally {
            if (e_4) throw e_4.error;
          }
        }
      }
    };

    return class_1;
  }(Base);
}

exports.CommonMrowMixin = CommonMrowMixin;

function CommonInferredMrowMixin(Base) {
  return function (_super) {
    __extends(class_2, _super);

    function class_2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    class_2.prototype.getScale = function () {
      this.bbox.scale = this.parent.bbox.scale;
      this.bbox.rscale = 1;
    };

    return class_2;
  }(Base);
}

exports.CommonInferredMrowMixin = CommonInferredMrowMixin;

/***/ }),

/***/ 4326:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMsMixin = void 0;

function CommonMsMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;

      var attributes = _this.node.attributes;
      var quotes = attributes.getList('lquote', 'rquote');

      if (_this.variant !== 'monospace') {
        if (!attributes.isSet('lquote') && quotes.lquote === '"') quotes.lquote = "\u201C";
        if (!attributes.isSet('rquote') && quotes.rquote === '"') quotes.rquote = "\u201D";
      }

      _this.childNodes.unshift(_this.createText(quotes.lquote));

      _this.childNodes.push(_this.createText(quotes.rquote));

      return _this;
    }

    class_1.prototype.createText = function (text) {
      var node = this.wrap(this.mmlText(text));
      node.parent = this;
      return node;
    };

    return class_1;
  }(Base);
}

exports.CommonMsMixin = CommonMsMixin;

/***/ }),

/***/ 7832:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMspaceMixin = void 0;

function CommonMspaceMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    class_1.prototype.computeBBox = function (bbox, _recompute) {
      if (_recompute === void 0) {
        _recompute = false;
      }

      var attributes = this.node.attributes;
      bbox.w = this.length2em(attributes.get('width'), 0);
      bbox.h = this.length2em(attributes.get('height'), 0);
      bbox.d = this.length2em(attributes.get('depth'), 0);
    };

    class_1.prototype.handleVariant = function () {};

    return class_1;
  }(Base);
}

exports.CommonMspaceMixin = CommonMspaceMixin;

/***/ }),

/***/ 289:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMsqrtMixin = void 0;

var BBox_js_1 = __webpack_require__(8483);

function CommonMsqrtMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;

      var surd = _this.createMo("\u221A");

      surd.canStretch(1);

      var _a = _this.childNodes[_this.base].getBBox(),
          h = _a.h,
          d = _a.d;

      var t = _this.font.params.rule_thickness;
      var p = _this.node.attributes.get('displaystyle') ? _this.font.params.x_height : t;
      _this.surdH = h + d + 2 * t + p / 4;
      surd.getStretchedVariant([_this.surdH - d, d], true);
      return _this;
    }

    Object.defineProperty(class_1.prototype, "base", {
      get: function get() {
        return 0;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(class_1.prototype, "surd", {
      get: function get() {
        return 1;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(class_1.prototype, "root", {
      get: function get() {
        return null;
      },
      enumerable: false,
      configurable: true
    });

    class_1.prototype.createMo = function (text) {
      var node = _super.prototype.createMo.call(this, text);

      this.childNodes.push(node);
      return node;
    };

    class_1.prototype.computeBBox = function (bbox, recompute) {
      if (recompute === void 0) {
        recompute = false;
      }

      var surdbox = this.childNodes[this.surd].getBBox();
      var basebox = new BBox_js_1.BBox(this.childNodes[this.base].getBBox());
      var q = this.getPQ(surdbox)[1];
      var t = this.font.params.rule_thickness;
      var H = basebox.h + q + t;

      var _a = __read(this.getRootDimens(surdbox, H), 1),
          x = _a[0];

      bbox.h = H + t;
      this.combineRootBBox(bbox, surdbox, H);
      bbox.combine(surdbox, x, H - surdbox.h);
      bbox.combine(basebox, x + surdbox.w, 0);
      bbox.clean();
      this.setChildPWidths(recompute);
    };

    class_1.prototype.combineRootBBox = function (_bbox, _sbox, _H) {};

    class_1.prototype.getPQ = function (sbox) {
      var t = this.font.params.rule_thickness;
      var p = this.node.attributes.get('displaystyle') ? this.font.params.x_height : t;
      var q = sbox.h + sbox.d > this.surdH ? (sbox.h + sbox.d - (this.surdH - 2 * t - p / 2)) / 2 : t + p / 4;
      return [p, q];
    };

    class_1.prototype.getRootDimens = function (_sbox, _H) {
      return [0, 0, 0, 0];
    };

    return class_1;
  }(Base);
}

exports.CommonMsqrtMixin = CommonMsqrtMixin;

/***/ }),

/***/ 7100:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMsubsupMixin = exports.CommonMsupMixin = exports.CommonMsubMixin = void 0;

function CommonMsubMixin(Base) {
  var _a;

  return _a = function (_super) {
    __extends(class_1, _super);

    function class_1() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    Object.defineProperty(class_1.prototype, "scriptChild", {
      get: function get() {
        return this.childNodes[this.node.sub];
      },
      enumerable: false,
      configurable: true
    });

    class_1.prototype.getOffset = function () {
      return [0, -this.getV()];
    };

    return class_1;
  }(Base), _a.useIC = false, _a;
}

exports.CommonMsubMixin = CommonMsubMixin;

function CommonMsupMixin(Base) {
  return function (_super) {
    __extends(class_2, _super);

    function class_2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    Object.defineProperty(class_2.prototype, "scriptChild", {
      get: function get() {
        return this.childNodes[this.node.sup];
      },
      enumerable: false,
      configurable: true
    });

    class_2.prototype.getOffset = function () {
      var x = this.getAdjustedIc() - (this.baseRemoveIc ? 0 : this.baseIc);
      return [x, this.getU()];
    };

    return class_2;
  }(Base);
}

exports.CommonMsupMixin = CommonMsupMixin;

function CommonMsubsupMixin(Base) {
  var _a;

  return _a = function (_super) {
    __extends(class_3, _super);

    function class_3() {
      var _this = _super !== null && _super.apply(this, arguments) || this;

      _this.UVQ = null;
      return _this;
    }

    Object.defineProperty(class_3.prototype, "subChild", {
      get: function get() {
        return this.childNodes[this.node.sub];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(class_3.prototype, "supChild", {
      get: function get() {
        return this.childNodes[this.node.sup];
      },
      enumerable: false,
      configurable: true
    });

    class_3.prototype.computeBBox = function (bbox, recompute) {
      if (recompute === void 0) {
        recompute = false;
      }

      var basebox = this.baseChild.getBBox();

      var _a = __read([this.subChild.getBBox(), this.supChild.getBBox()], 2),
          subbox = _a[0],
          supbox = _a[1];

      bbox.empty();
      bbox.append(basebox);
      var w = this.getBaseWidth();
      var x = this.getAdjustedIc();

      var _b = __read(this.getUVQ(), 2),
          u = _b[0],
          v = _b[1];

      bbox.combine(subbox, w, v);
      bbox.combine(supbox, w + x, u);
      bbox.w += this.font.params.scriptspace;
      bbox.clean();
      this.setChildPWidths(recompute);
    };

    class_3.prototype.getUVQ = function (subbox, supbox) {
      if (subbox === void 0) {
        subbox = this.subChild.getBBox();
      }

      if (supbox === void 0) {
        supbox = this.supChild.getBBox();
      }

      var basebox = this.baseCore.getBBox();
      if (this.UVQ) return this.UVQ;
      var tex = this.font.params;
      var t = 3 * tex.rule_thickness;
      var subscriptshift = this.length2em(this.node.attributes.get('subscriptshift'), tex.sub2);
      var drop = this.baseCharZero(basebox.d * this.baseScale + tex.sub_drop * subbox.rscale);

      var _a = __read([this.getU(), Math.max(drop, subscriptshift)], 2),
          u = _a[0],
          v = _a[1];

      var q = u - supbox.d * supbox.rscale - (subbox.h * subbox.rscale - v);

      if (q < t) {
        v += t - q;
        var p = 4 / 5 * tex.x_height - (u - supbox.d * supbox.rscale);

        if (p > 0) {
          u += p;
          v -= p;
        }
      }

      u = Math.max(this.length2em(this.node.attributes.get('superscriptshift'), u), u);
      v = Math.max(this.length2em(this.node.attributes.get('subscriptshift'), v), v);
      q = u - supbox.d * supbox.rscale - (subbox.h * subbox.rscale - v);
      this.UVQ = [u, -v, q];
      return this.UVQ;
    };

    return class_3;
  }(Base), _a.useIC = false, _a;
}

exports.CommonMsubsupMixin = CommonMsubsupMixin;

/***/ }),

/***/ 8849:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMtableMixin = void 0;

var BBox_js_1 = __webpack_require__(8483);

var string_js_1 = __webpack_require__(4944);

var numeric_js_1 = __webpack_require__(6504);

function CommonMtableMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;

      _this.numCols = 0;
      _this.numRows = 0;
      _this.data = null;
      _this.pwidthCells = [];
      _this.pWidth = 0;
      _this.numCols = numeric_js_1.max(_this.tableRows.map(function (row) {
        return row.numCells;
      }));
      _this.numRows = _this.childNodes.length;
      _this.hasLabels = _this.childNodes.reduce(function (value, row) {
        return value || row.node.isKind('mlabeledtr');
      }, false);

      _this.findContainer();

      _this.isTop = !_this.container || _this.container.node.isKind('math') && !_this.container.parent;

      if (_this.isTop) {
        _this.jax.table = _this;
      }

      _this.getPercentageWidth();

      var attributes = _this.node.attributes;
      _this.frame = attributes.get('frame') !== 'none';
      _this.fLine = _this.frame && attributes.get('frame') ? .07 : 0;
      _this.fSpace = _this.frame ? _this.convertLengths(_this.getAttributeArray('framespacing')) : [0, 0];
      _this.cSpace = _this.convertLengths(_this.getColumnAttributes('columnspacing'));
      _this.rSpace = _this.convertLengths(_this.getRowAttributes('rowspacing'));
      _this.cLines = _this.getColumnAttributes('columnlines').map(function (x) {
        return x === 'none' ? 0 : .07;
      });
      _this.rLines = _this.getRowAttributes('rowlines').map(function (x) {
        return x === 'none' ? 0 : .07;
      });
      _this.cWidths = _this.getColumnWidths();

      _this.stretchRows();

      _this.stretchColumns();

      return _this;
    }

    Object.defineProperty(class_1.prototype, "tableRows", {
      get: function get() {
        return this.childNodes;
      },
      enumerable: false,
      configurable: true
    });

    class_1.prototype.findContainer = function () {
      var node = this;
      var parent = node.parent;

      while (parent && (parent.node.notParent || parent.node.isKind('mrow'))) {
        node = parent;
        parent = parent.parent;
      }

      this.container = parent;
      this.containerI = node.node.childPosition();
    };

    class_1.prototype.getPercentageWidth = function () {
      if (this.hasLabels) {
        this.bbox.pwidth = BBox_js_1.BBox.fullWidth;
      } else {
        var width = this.node.attributes.get('width');

        if (string_js_1.isPercent(width)) {
          this.bbox.pwidth = width;
        }
      }
    };

    class_1.prototype.stretchRows = function () {
      var equal = this.node.attributes.get('equalrows');
      var HD = equal ? this.getEqualRowHeight() : 0;

      var _a = equal ? this.getTableData() : {
        H: [0],
        D: [0]
      },
          H = _a.H,
          D = _a.D;

      var rows = this.tableRows;

      for (var i = 0; i < this.numRows; i++) {
        var hd = equal ? [(HD + H[i] - D[i]) / 2, (HD - H[i] + D[i]) / 2] : null;
        rows[i].stretchChildren(hd);
      }
    };

    class_1.prototype.stretchColumns = function () {
      for (var i = 0; i < this.numCols; i++) {
        var width = typeof this.cWidths[i] === 'number' ? this.cWidths[i] : null;
        this.stretchColumn(i, width);
      }
    };

    class_1.prototype.stretchColumn = function (i, W) {
      var e_1, _a, e_2, _b, e_3, _c;

      var stretchy = [];

      try {
        for (var _d = __values(this.tableRows), _e = _d.next(); !_e.done; _e = _d.next()) {
          var row = _e.value;
          var cell = row.getChild(i);

          if (cell) {
            var child = cell.childNodes[0];

            if (child.stretch.dir === 0 && child.canStretch(2)) {
              stretchy.push(child);
            }
          }
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
        } finally {
          if (e_1) throw e_1.error;
        }
      }

      var count = stretchy.length;
      var nodeCount = this.childNodes.length;

      if (count && nodeCount > 1) {
        if (W === null) {
          W = 0;
          var all = count > 1 && count === nodeCount;

          try {
            for (var _f = __values(this.tableRows), _g = _f.next(); !_g.done; _g = _f.next()) {
              var row = _g.value;
              var cell = row.getChild(i);

              if (cell) {
                var child = cell.childNodes[0];
                var noStretch = child.stretch.dir === 0;

                if (all || noStretch) {
                  var w = child.getBBox(noStretch).w;

                  if (w > W) {
                    W = w;
                  }
                }
              }
            }
          } catch (e_2_1) {
            e_2 = {
              error: e_2_1
            };
          } finally {
            try {
              if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
            } finally {
              if (e_2) throw e_2.error;
            }
          }
        }

        try {
          for (var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()) {
            var child = stretchy_1_1.value;
            child.coreMO().getStretchedVariant([W]);
          }
        } catch (e_3_1) {
          e_3 = {
            error: e_3_1
          };
        } finally {
          try {
            if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);
          } finally {
            if (e_3) throw e_3.error;
          }
        }
      }
    };

    class_1.prototype.getTableData = function () {
      if (this.data) {
        return this.data;
      }

      var H = new Array(this.numRows).fill(0);
      var D = new Array(this.numRows).fill(0);
      var W = new Array(this.numCols).fill(0);
      var NH = new Array(this.numRows);
      var ND = new Array(this.numRows);
      var LW = [0];
      var rows = this.tableRows;

      for (var j = 0; j < rows.length; j++) {
        var M = 0;
        var row = rows[j];
        var align = row.node.attributes.get('rowalign');

        for (var i = 0; i < row.numCells; i++) {
          var cell = row.getChild(i);
          M = this.updateHDW(cell, i, j, align, H, D, W, M);
          this.recordPWidthCell(cell, i);
        }

        NH[j] = H[j];
        ND[j] = D[j];

        if (row.labeled) {
          M = this.updateHDW(row.childNodes[0], 0, j, align, H, D, LW, M);
        }

        this.extendHD(j, H, D, M);
        this.extendHD(j, NH, ND, M);
      }

      var L = LW[0];
      this.data = {
        H: H,
        D: D,
        W: W,
        NH: NH,
        ND: ND,
        L: L
      };
      return this.data;
    };

    class_1.prototype.updateHDW = function (cell, i, j, align, H, D, W, M) {
      var _a = cell.getBBox(),
          h = _a.h,
          d = _a.d,
          w = _a.w;

      var scale = cell.parent.bbox.rscale;

      if (cell.parent.bbox.rscale !== 1) {
        h *= scale;
        d *= scale;
        w *= scale;
      }

      if (this.node.getProperty('useHeight')) {
        if (h < .75) h = .75;
        if (d < .25) d = .25;
      }

      var m = 0;
      align = cell.node.attributes.get('rowalign') || align;

      if (align !== 'baseline' && align !== 'axis') {
        m = h + d;
        h = d = 0;
      }

      if (h > H[j]) H[j] = h;
      if (d > D[j]) D[j] = d;
      if (m > M) M = m;
      if (W && w > W[i]) W[i] = w;
      return M;
    };

    class_1.prototype.extendHD = function (i, H, D, M) {
      var d = (M - (H[i] + D[i])) / 2;
      if (d < .00001) return;
      H[i] += d;
      D[i] += d;
    };

    class_1.prototype.recordPWidthCell = function (cell, i) {
      if (cell.childNodes[0] && cell.childNodes[0].getBBox().pwidth) {
        this.pwidthCells.push([cell, i]);
      }
    };

    class_1.prototype.computeBBox = function (bbox, _recompute) {
      if (_recompute === void 0) {
        _recompute = false;
      }

      var _a = this.getTableData(),
          H = _a.H,
          D = _a.D;

      var height, width;

      if (this.node.attributes.get('equalrows')) {
        var HD = this.getEqualRowHeight();
        height = numeric_js_1.sum([].concat(this.rLines, this.rSpace)) + HD * this.numRows;
      } else {
        height = numeric_js_1.sum(H.concat(D, this.rLines, this.rSpace));
      }

      height += 2 * (this.fLine + this.fSpace[1]);
      var CW = this.getComputedWidths();
      width = numeric_js_1.sum(CW.concat(this.cLines, this.cSpace)) + 2 * (this.fLine + this.fSpace[0]);
      var w = this.node.attributes.get('width');

      if (w !== 'auto') {
        width = Math.max(this.length2em(w, 0) + 2 * this.fLine, width);
      }

      var _b = __read(this.getBBoxHD(height), 2),
          h = _b[0],
          d = _b[1];

      bbox.h = h;
      bbox.d = d;
      bbox.w = width;

      var _c = __read(this.getBBoxLR(), 2),
          L = _c[0],
          R = _c[1];

      bbox.L = L;
      bbox.R = R;

      if (!string_js_1.isPercent(w)) {
        this.setColumnPWidths();
      }
    };

    class_1.prototype.setChildPWidths = function (_recompute, cwidth, _clear) {
      var width = this.node.attributes.get('width');
      if (!string_js_1.isPercent(width)) return false;

      if (!this.hasLabels) {
        this.bbox.pwidth = '';
        this.container.bbox.pwidth = '';
      }

      var _a = this.bbox,
          w = _a.w,
          L = _a.L,
          R = _a.R;
      var labelInWidth = this.node.attributes.get('data-width-includes-label');
      var W = Math.max(w, this.length2em(width, Math.max(cwidth, L + w + R))) - (labelInWidth ? L + R : 0);
      var cols = this.node.attributes.get('equalcolumns') ? Array(this.numCols).fill(this.percent(1 / Math.max(1, this.numCols))) : this.getColumnAttributes('columnwidth', 0);
      this.cWidths = this.getColumnWidthsFixed(cols, W);
      var CW = this.getComputedWidths();
      this.pWidth = numeric_js_1.sum(CW.concat(this.cLines, this.cSpace)) + 2 * (this.fLine + this.fSpace[0]);

      if (this.isTop) {
        this.bbox.w = this.pWidth;
      }

      this.setColumnPWidths();

      if (this.pWidth !== w) {
        this.parent.invalidateBBox();
      }

      return this.pWidth !== w;
    };

    class_1.prototype.setColumnPWidths = function () {
      var e_4, _a;

      var W = this.cWidths;

      try {
        for (var _b = __values(this.pwidthCells), _c = _b.next(); !_c.done; _c = _b.next()) {
          var _d = __read(_c.value, 2),
              cell = _d[0],
              i = _d[1];

          if (cell.setChildPWidths(false, W[i])) {
            cell.invalidateBBox();
            cell.getBBox();
          }
        }
      } catch (e_4_1) {
        e_4 = {
          error: e_4_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_4) throw e_4.error;
        }
      }
    };

    class_1.prototype.getBBoxHD = function (height) {
      var _a = __read(this.getAlignmentRow(), 2),
          align = _a[0],
          row = _a[1];

      if (row === null) {
        var a = this.font.params.axis_height;
        var h2 = height / 2;
        var HD = {
          top: [0, height],
          center: [h2, h2],
          bottom: [height, 0],
          baseline: [h2, h2],
          axis: [h2 + a, h2 - a]
        };
        return HD[align] || [h2, h2];
      } else {
        var y = this.getVerticalPosition(row, align);
        return [y, height - y];
      }
    };

    class_1.prototype.getBBoxLR = function () {
      if (this.hasLabels) {
        var attributes = this.node.attributes;
        var side = attributes.get('side');

        var _a = __read(this.getPadAlignShift(side), 2),
            pad = _a[0],
            align = _a[1];

        var labels = this.hasLabels && !!attributes.get('data-width-includes-label');

        if (labels && this.frame && this.fSpace[0]) {
          pad -= this.fSpace[0];
        }

        return align === 'center' && !labels ? [pad, pad] : side === 'left' ? [pad, 0] : [0, pad];
      }

      return [0, 0];
    };

    class_1.prototype.getPadAlignShift = function (side) {
      var L = this.getTableData().L;
      var sep = this.length2em(this.node.attributes.get('minlabelspacing'));
      var pad = L + sep;

      var _a = __read(this.styles == null ? ['', ''] : [this.styles.get('padding-left'), this.styles.get('padding-right')], 2),
          lpad = _a[0],
          rpad = _a[1];

      if (lpad || rpad) {
        pad = Math.max(pad, this.length2em(lpad || '0'), this.length2em(rpad || '0'));
      }

      var _b = __read(this.getAlignShift(), 2),
          align = _b[0],
          shift = _b[1];

      if (align === side) {
        shift = side === 'left' ? Math.max(pad, shift) - pad : Math.min(-pad, shift) + pad;
      }

      return [pad, align, shift];
    };

    class_1.prototype.getAlignShift = function () {
      return this.isTop ? _super.prototype.getAlignShift.call(this) : [this.container.getChildAlign(this.containerI), 0];
    };

    class_1.prototype.getWidth = function () {
      return this.pWidth || this.getBBox().w;
    };

    class_1.prototype.getEqualRowHeight = function () {
      var _a = this.getTableData(),
          H = _a.H,
          D = _a.D;

      var HD = Array.from(H.keys()).map(function (i) {
        return H[i] + D[i];
      });
      return Math.max.apply(Math, HD);
    };

    class_1.prototype.getComputedWidths = function () {
      var _this = this;

      var W = this.getTableData().W;
      var CW = Array.from(W.keys()).map(function (i) {
        return typeof _this.cWidths[i] === 'number' ? _this.cWidths[i] : W[i];
      });

      if (this.node.attributes.get('equalcolumns')) {
        CW = Array(CW.length).fill(numeric_js_1.max(CW));
      }

      return CW;
    };

    class_1.prototype.getColumnWidths = function () {
      var width = this.node.attributes.get('width');

      if (this.node.attributes.get('equalcolumns')) {
        return this.getEqualColumns(width);
      }

      var swidths = this.getColumnAttributes('columnwidth', 0);

      if (width === 'auto') {
        return this.getColumnWidthsAuto(swidths);
      }

      if (string_js_1.isPercent(width)) {
        return this.getColumnWidthsPercent(swidths);
      }

      return this.getColumnWidthsFixed(swidths, this.length2em(width));
    };

    class_1.prototype.getEqualColumns = function (width) {
      var n = Math.max(1, this.numCols);
      var cwidth;

      if (width === 'auto') {
        var W = this.getTableData().W;
        cwidth = numeric_js_1.max(W);
      } else if (string_js_1.isPercent(width)) {
        cwidth = this.percent(1 / n);
      } else {
        var w = numeric_js_1.sum([].concat(this.cLines, this.cSpace)) + 2 * this.fSpace[0];
        cwidth = Math.max(0, this.length2em(width) - w) / n;
      }

      return Array(this.numCols).fill(cwidth);
    };

    class_1.prototype.getColumnWidthsAuto = function (swidths) {
      var _this = this;

      return swidths.map(function (x) {
        if (x === 'auto' || x === 'fit') return null;
        if (string_js_1.isPercent(x)) return x;
        return _this.length2em(x);
      });
    };

    class_1.prototype.getColumnWidthsPercent = function (swidths) {
      var _this = this;

      var hasFit = swidths.indexOf('fit') >= 0;
      var W = (hasFit ? this.getTableData() : {
        W: null
      }).W;
      return Array.from(swidths.keys()).map(function (i) {
        var x = swidths[i];
        if (x === 'fit') return null;
        if (x === 'auto') return hasFit ? W[i] : null;
        if (string_js_1.isPercent(x)) return x;
        return _this.length2em(x);
      });
    };

    class_1.prototype.getColumnWidthsFixed = function (swidths, width) {
      var _this = this;

      var indices = Array.from(swidths.keys());
      var fit = indices.filter(function (i) {
        return swidths[i] === 'fit';
      });
      var auto = indices.filter(function (i) {
        return swidths[i] === 'auto';
      });
      var n = fit.length || auto.length;
      var W = (n ? this.getTableData() : {
        W: null
      }).W;
      var cwidth = width - numeric_js_1.sum([].concat(this.cLines, this.cSpace)) - 2 * this.fSpace[0];
      var dw = cwidth;
      indices.forEach(function (i) {
        var x = swidths[i];
        dw -= x === 'fit' || x === 'auto' ? W[i] : _this.length2em(x, cwidth);
      });
      var fw = n && dw > 0 ? dw / n : 0;
      return indices.map(function (i) {
        var x = swidths[i];
        if (x === 'fit') return W[i] + fw;
        if (x === 'auto') return W[i] + (fit.length === 0 ? fw : 0);
        return _this.length2em(x, cwidth);
      });
    };

    class_1.prototype.getVerticalPosition = function (i, align) {
      var equal = this.node.attributes.get('equalrows');

      var _a = this.getTableData(),
          H = _a.H,
          D = _a.D;

      var HD = equal ? this.getEqualRowHeight() : 0;
      var space = this.getRowHalfSpacing();
      var y = this.fLine;

      for (var j = 0; j < i; j++) {
        y += space[j] + (equal ? HD : H[j] + D[j]) + space[j + 1] + this.rLines[j];
      }

      var _b = __read(equal ? [(HD + H[i] - D[i]) / 2, (HD - H[i] + D[i]) / 2] : [H[i], D[i]], 2),
          h = _b[0],
          d = _b[1];

      var offset = {
        top: 0,
        center: space[i] + (h + d) / 2,
        bottom: space[i] + h + d + space[i + 1],
        baseline: space[i] + h,
        axis: space[i] + h - .25
      };
      y += offset[align] || 0;
      return y;
    };

    class_1.prototype.getEmHalfSpacing = function (fspace, space, scale) {
      if (scale === void 0) {
        scale = 1;
      }

      var fspaceEm = this.em(fspace * scale);
      var spaceEm = this.addEm(space, 2 / scale);
      spaceEm.unshift(fspaceEm);
      spaceEm.push(fspaceEm);
      return spaceEm;
    };

    class_1.prototype.getRowHalfSpacing = function () {
      var space = this.rSpace.map(function (x) {
        return x / 2;
      });
      space.unshift(this.fSpace[1]);
      space.push(this.fSpace[1]);
      return space;
    };

    class_1.prototype.getColumnHalfSpacing = function () {
      var space = this.cSpace.map(function (x) {
        return x / 2;
      });
      space.unshift(this.fSpace[0]);
      space.push(this.fSpace[0]);
      return space;
    };

    class_1.prototype.getAlignmentRow = function () {
      var _a = __read(string_js_1.split(this.node.attributes.get('align')), 2),
          align = _a[0],
          row = _a[1];

      if (row == null) return [align, null];
      var i = parseInt(row);
      if (i < 0) i += this.numRows + 1;
      return [align, i < 1 || i > this.numRows ? null : i - 1];
    };

    class_1.prototype.getColumnAttributes = function (name, i) {
      if (i === void 0) {
        i = 1;
      }

      var n = this.numCols - i;
      var columns = this.getAttributeArray(name);
      if (columns.length === 0) return null;

      while (columns.length < n) {
        columns.push(columns[columns.length - 1]);
      }

      if (columns.length > n) {
        columns.splice(n);
      }

      return columns;
    };

    class_1.prototype.getRowAttributes = function (name, i) {
      if (i === void 0) {
        i = 1;
      }

      var n = this.numRows - i;
      var rows = this.getAttributeArray(name);
      if (rows.length === 0) return null;

      while (rows.length < n) {
        rows.push(rows[rows.length - 1]);
      }

      if (rows.length > n) {
        rows.splice(n);
      }

      return rows;
    };

    class_1.prototype.getAttributeArray = function (name) {
      var value = this.node.attributes.get(name);
      if (!value) return [this.node.attributes.getDefault(name)];
      return string_js_1.split(value);
    };

    class_1.prototype.addEm = function (list, n) {
      var _this = this;

      if (n === void 0) {
        n = 1;
      }

      if (!list) return null;
      return list.map(function (x) {
        return _this.em(x / n);
      });
    };

    class_1.prototype.convertLengths = function (list) {
      var _this = this;

      if (!list) return null;
      return list.map(function (x) {
        return _this.length2em(x);
      });
    };

    return class_1;
  }(Base);
}

exports.CommonMtableMixin = CommonMtableMixin;

/***/ }),

/***/ 9562:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMtdMixin = void 0;

function CommonMtdMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    Object.defineProperty(class_1.prototype, "fixesPWidth", {
      get: function get() {
        return false;
      },
      enumerable: false,
      configurable: true
    });

    class_1.prototype.invalidateBBox = function () {
      this.bboxComputed = false;
    };

    class_1.prototype.getWrapWidth = function (_j) {
      var table = this.parent.parent;
      var row = this.parent;
      var i = this.node.childPosition() - (row.labeled ? 1 : 0);
      return typeof table.cWidths[i] === 'number' ? table.cWidths[i] : table.getTableData().W[i];
    };

    class_1.prototype.getChildAlign = function (_i) {
      return this.node.attributes.get('columnalign');
    };

    return class_1;
  }(Base);
}

exports.CommonMtdMixin = CommonMtdMixin;

/***/ }),

/***/ 1862:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMtextMixin = void 0;

function CommonMtextMixin(Base) {
  var _a;

  return _a = function (_super) {
    __extends(class_1, _super);

    function class_1() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    class_1.prototype.getVariant = function () {
      var options = this.jax.options;
      var data = this.jax.math.outputData;
      var merror = (!!data.merrorFamily || !!options.merrorFont) && this.node.Parent.isKind('merror');

      if (!!data.mtextFamily || !!options.mtextFont || merror) {
        var variant = this.node.attributes.get('mathvariant');
        var font = this.constructor.INHERITFONTS[variant] || this.jax.font.getCssFont(variant);
        var family = font[0] || (merror ? data.merrorFamily || options.merrorFont : data.mtextFamily || options.mtextFont);
        this.variant = this.explicitVariant(family, font[2] ? 'bold' : '', font[1] ? 'italic' : '');
        return;
      }

      _super.prototype.getVariant.call(this);
    };

    return class_1;
  }(Base), _a.INHERITFONTS = {
    normal: ['', false, false],
    bold: ['', false, true],
    italic: ['', true, false],
    'bold-italic': ['', true, true]
  }, _a;
}

exports.CommonMtextMixin = CommonMtextMixin;

/***/ }),

/***/ 9184:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMlabeledtrMixin = exports.CommonMtrMixin = void 0;

function CommonMtrMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    Object.defineProperty(class_1.prototype, "fixesPWidth", {
      get: function get() {
        return false;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(class_1.prototype, "numCells", {
      get: function get() {
        return this.childNodes.length;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(class_1.prototype, "labeled", {
      get: function get() {
        return false;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(class_1.prototype, "tableCells", {
      get: function get() {
        return this.childNodes;
      },
      enumerable: false,
      configurable: true
    });

    class_1.prototype.getChild = function (i) {
      return this.childNodes[i];
    };

    class_1.prototype.getChildBBoxes = function () {
      return this.childNodes.map(function (cell) {
        return cell.getBBox();
      });
    };

    class_1.prototype.stretchChildren = function (HD) {
      var e_1, _a, e_2, _b, e_3, _c;

      if (HD === void 0) {
        HD = null;
      }

      var stretchy = [];
      var children = this.labeled ? this.childNodes.slice(1) : this.childNodes;

      try {
        for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
          var mtd = children_1_1.value;
          var child = mtd.childNodes[0];

          if (child.canStretch(1)) {
            stretchy.push(child);
          }
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
        } finally {
          if (e_1) throw e_1.error;
        }
      }

      var count = stretchy.length;
      var nodeCount = this.childNodes.length;

      if (count && nodeCount > 1) {
        if (HD === null) {
          var H = 0,
              D = 0;
          var all = count > 1 && count === nodeCount;

          try {
            for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {
              var mtd = children_2_1.value;
              var child = mtd.childNodes[0];
              var noStretch = child.stretch.dir === 0;

              if (all || noStretch) {
                var _d = child.getBBox(noStretch),
                    h = _d.h,
                    d = _d.d;

                if (h > H) {
                  H = h;
                }

                if (d > D) {
                  D = d;
                }
              }
            }
          } catch (e_2_1) {
            e_2 = {
              error: e_2_1
            };
          } finally {
            try {
              if (children_2_1 && !children_2_1.done && (_b = children_2.return)) _b.call(children_2);
            } finally {
              if (e_2) throw e_2.error;
            }
          }

          HD = [H, D];
        }

        try {
          for (var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()) {
            var child = stretchy_1_1.value;
            child.coreMO().getStretchedVariant(HD);
          }
        } catch (e_3_1) {
          e_3 = {
            error: e_3_1
          };
        } finally {
          try {
            if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);
          } finally {
            if (e_3) throw e_3.error;
          }
        }
      }
    };

    return class_1;
  }(Base);
}

exports.CommonMtrMixin = CommonMtrMixin;

function CommonMlabeledtrMixin(Base) {
  return function (_super) {
    __extends(class_2, _super);

    function class_2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    Object.defineProperty(class_2.prototype, "numCells", {
      get: function get() {
        return Math.max(0, this.childNodes.length - 1);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(class_2.prototype, "labeled", {
      get: function get() {
        return true;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(class_2.prototype, "tableCells", {
      get: function get() {
        return this.childNodes.slice(1);
      },
      enumerable: false,
      configurable: true
    });

    class_2.prototype.getChild = function (i) {
      return this.childNodes[i + 1];
    };

    class_2.prototype.getChildBBoxes = function () {
      return this.childNodes.slice(1).map(function (cell) {
        return cell.getBBox();
      });
    };

    return class_2;
  }(Base);
}

exports.CommonMlabeledtrMixin = CommonMlabeledtrMixin;

/***/ }),

/***/ 450:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonMunderoverMixin = exports.CommonMoverMixin = exports.CommonMunderMixin = void 0;

function CommonMunderMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;

      _this.stretchChildren();

      return _this;
    }

    Object.defineProperty(class_1.prototype, "scriptChild", {
      get: function get() {
        return this.childNodes[this.node.under];
      },
      enumerable: false,
      configurable: true
    });

    class_1.prototype.computeBBox = function (bbox, recompute) {
      if (recompute === void 0) {
        recompute = false;
      }

      if (this.hasMovableLimits()) {
        _super.prototype.computeBBox.call(this, bbox, recompute);

        return;
      }

      bbox.empty();
      var basebox = this.baseChild.getBBox();
      var underbox = this.scriptChild.getBBox();
      var v = this.getUnderKV(basebox, underbox)[1];
      var delta = this.isLineBelow ? 0 : this.getDelta(true);

      var _a = __read(this.getDeltaW([basebox, underbox], [0, -delta]), 2),
          bw = _a[0],
          uw = _a[1];

      bbox.combine(basebox, bw, 0);
      bbox.combine(underbox, uw, v);
      bbox.d += this.font.params.big_op_spacing5;
      bbox.clean();
      this.setChildPWidths(recompute);
    };

    return class_1;
  }(Base);
}

exports.CommonMunderMixin = CommonMunderMixin;

function CommonMoverMixin(Base) {
  return function (_super) {
    __extends(class_2, _super);

    function class_2() {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;

      _this.stretchChildren();

      return _this;
    }

    Object.defineProperty(class_2.prototype, "scriptChild", {
      get: function get() {
        return this.childNodes[this.node.over];
      },
      enumerable: false,
      configurable: true
    });

    class_2.prototype.computeBBox = function (bbox) {
      if (this.hasMovableLimits()) {
        _super.prototype.computeBBox.call(this, bbox);

        return;
      }

      bbox.empty();
      var basebox = this.baseChild.getBBox();
      var overbox = this.scriptChild.getBBox();
      var u = this.getOverKU(basebox, overbox)[1];
      var delta = this.isLineAbove ? 0 : this.getDelta();

      var _a = __read(this.getDeltaW([basebox, overbox], [0, delta]), 2),
          bw = _a[0],
          ow = _a[1];

      bbox.combine(basebox, bw, 0);
      bbox.combine(overbox, ow, u);
      bbox.h += this.font.params.big_op_spacing5;
      bbox.clean();
    };

    return class_2;
  }(Base);
}

exports.CommonMoverMixin = CommonMoverMixin;

function CommonMunderoverMixin(Base) {
  return function (_super) {
    __extends(class_3, _super);

    function class_3() {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;

      _this.stretchChildren();

      return _this;
    }

    Object.defineProperty(class_3.prototype, "underChild", {
      get: function get() {
        return this.childNodes[this.node.under];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(class_3.prototype, "overChild", {
      get: function get() {
        return this.childNodes[this.node.over];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(class_3.prototype, "subChild", {
      get: function get() {
        return this.underChild;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(class_3.prototype, "supChild", {
      get: function get() {
        return this.overChild;
      },
      enumerable: false,
      configurable: true
    });

    class_3.prototype.computeBBox = function (bbox) {
      if (this.hasMovableLimits()) {
        _super.prototype.computeBBox.call(this, bbox);

        return;
      }

      bbox.empty();
      var overbox = this.overChild.getBBox();
      var basebox = this.baseChild.getBBox();
      var underbox = this.underChild.getBBox();
      var u = this.getOverKU(basebox, overbox)[1];
      var v = this.getUnderKV(basebox, underbox)[1];
      var delta = this.getDelta();

      var _a = __read(this.getDeltaW([basebox, underbox, overbox], [0, this.isLineBelow ? 0 : -delta, this.isLineAbove ? 0 : delta]), 3),
          bw = _a[0],
          uw = _a[1],
          ow = _a[2];

      bbox.combine(basebox, bw, 0);
      bbox.combine(overbox, ow, u);
      bbox.combine(underbox, uw, v);
      var z = this.font.params.big_op_spacing5;
      bbox.h += z;
      bbox.d += z;
      bbox.clean();
    };

    return class_3;
  }(Base);
}

exports.CommonMunderoverMixin = CommonMunderoverMixin;

/***/ }),

/***/ 7550:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonScriptbaseMixin = void 0;

function CommonScriptbaseMixin(Base) {
  var _a;

  return _a = function (_super) {
    __extends(class_1, _super);

    function class_1() {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;

      _this.baseScale = 1;
      _this.baseIc = 0;
      _this.baseRemoveIc = false;
      _this.baseIsChar = false;
      _this.baseHasAccentOver = null;
      _this.baseHasAccentUnder = null;
      _this.isLineAbove = false;
      _this.isLineBelow = false;
      _this.isMathAccent = false;

      var core = _this.baseCore = _this.getBaseCore();

      if (!core) return _this;

      _this.setBaseAccentsFor(core);

      _this.baseScale = _this.getBaseScale();
      _this.baseIc = _this.getBaseIc();
      _this.baseIsChar = _this.isCharBase();
      _this.isMathAccent = _this.baseIsChar && _this.scriptChild && !!_this.scriptChild.coreMO().node.getProperty('mathaccent');

      _this.checkLineAccents();

      _this.baseRemoveIc = !_this.isLineAbove && !_this.isLineBelow && (!_this.constructor.useIC || _this.isMathAccent);
      return _this;
    }

    Object.defineProperty(class_1.prototype, "baseChild", {
      get: function get() {
        return this.childNodes[this.node.base];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(class_1.prototype, "scriptChild", {
      get: function get() {
        return this.childNodes[1];
      },
      enumerable: false,
      configurable: true
    });

    class_1.prototype.getBaseCore = function () {
      var core = this.getSemanticBase() || this.childNodes[0];

      while (core && (core.childNodes.length === 1 && (core.node.isKind('mrow') || core.node.isKind('TeXAtom') || core.node.isKind('mstyle') || core.node.isKind('mpadded') || core.node.isKind('mphantom') || core.node.isKind('semantics')) || core.node.isKind('munderover') && core.isMathAccent)) {
        this.setBaseAccentsFor(core);
        core = core.childNodes[0];
      }

      if (!core) {
        this.baseHasAccentOver = this.baseHasAccentUnder = false;
      }

      return core || this.childNodes[0];
    };

    class_1.prototype.setBaseAccentsFor = function (core) {
      if (core.node.isKind('munderover')) {
        if (this.baseHasAccentOver === null) {
          this.baseHasAccentOver = !!core.node.attributes.get('accent');
        }

        if (this.baseHasAccentUnder === null) {
          this.baseHasAccentUnder = !!core.node.attributes.get('accentunder');
        }
      }
    };

    class_1.prototype.getSemanticBase = function () {
      var fence = this.node.attributes.getExplicit('data-semantic-fencepointer');
      return this.getBaseFence(this.baseChild, fence);
    };

    class_1.prototype.getBaseFence = function (fence, id) {
      var e_1, _a;

      if (!fence || !fence.node.attributes || !id) {
        return null;
      }

      if (fence.node.attributes.getExplicit('data-semantic-id') === id) {
        return fence;
      }

      try {
        for (var _b = __values(fence.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
          var child = _c.value;
          var result = this.getBaseFence(child, id);

          if (result) {
            return result;
          }
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_1) throw e_1.error;
        }
      }

      return null;
    };

    class_1.prototype.getBaseScale = function () {
      var child = this.baseCore;
      var scale = 1;

      while (child && child !== this) {
        var bbox = child.getBBox();
        scale *= bbox.rscale;
        child = child.parent;
      }

      return scale;
    };

    class_1.prototype.getBaseIc = function () {
      return this.baseCore.getBBox().ic * this.baseScale;
    };

    class_1.prototype.getAdjustedIc = function () {
      var bbox = this.baseCore.getBBox();
      return (bbox.ic ? 1.05 * bbox.ic + .05 : 0) * this.baseScale;
    };

    class_1.prototype.isCharBase = function () {
      var base = this.baseCore;
      return (base.node.isKind('mo') && base.size === null || base.node.isKind('mi') || base.node.isKind('mn')) && base.bbox.rscale === 1 && Array.from(base.getText()).length === 1;
    };

    class_1.prototype.checkLineAccents = function () {
      if (!this.node.isKind('munderover')) return;

      if (this.node.isKind('mover')) {
        this.isLineAbove = this.isLineAccent(this.scriptChild);
      } else if (this.node.isKind('munder')) {
        this.isLineBelow = this.isLineAccent(this.scriptChild);
      } else {
        var mml = this;
        this.isLineAbove = this.isLineAccent(mml.overChild);
        this.isLineBelow = this.isLineAccent(mml.underChild);
      }
    };

    class_1.prototype.isLineAccent = function (script) {
      var node = script.coreMO().node;
      return node.isToken && node.getText() === "\u2015";
    };

    class_1.prototype.getBaseWidth = function () {
      var bbox = this.baseChild.getBBox();
      return bbox.w * bbox.rscale - (this.baseRemoveIc ? this.baseIc : 0) + this.font.params.extra_ic;
    };

    class_1.prototype.computeBBox = function (bbox, recompute) {
      if (recompute === void 0) {
        recompute = false;
      }

      var w = this.getBaseWidth();

      var _a = __read(this.getOffset(), 2),
          x = _a[0],
          y = _a[1];

      bbox.append(this.baseChild.getBBox());
      bbox.combine(this.scriptChild.getBBox(), w + x, y);
      bbox.w += this.font.params.scriptspace;
      bbox.clean();
      this.setChildPWidths(recompute);
    };

    class_1.prototype.getOffset = function () {
      return [0, 0];
    };

    class_1.prototype.baseCharZero = function (n) {
      var largeop = !!this.baseCore.node.attributes.get('largeop');
      var scale = this.baseScale;
      return this.baseIsChar && !largeop && scale === 1 ? 0 : n;
    };

    class_1.prototype.getV = function () {
      var bbox = this.baseCore.getBBox();
      var sbox = this.scriptChild.getBBox();
      var tex = this.font.params;
      var subscriptshift = this.length2em(this.node.attributes.get('subscriptshift'), tex.sub1);
      return Math.max(this.baseCharZero(bbox.d * this.baseScale + tex.sub_drop * sbox.rscale), subscriptshift, sbox.h * sbox.rscale - 4 / 5 * tex.x_height);
    };

    class_1.prototype.getU = function () {
      var bbox = this.baseCore.getBBox();
      var sbox = this.scriptChild.getBBox();
      var tex = this.font.params;
      var attr = this.node.attributes.getList('displaystyle', 'superscriptshift');
      var prime = this.node.getProperty('texprimestyle');
      var p = prime ? tex.sup3 : attr.displaystyle ? tex.sup1 : tex.sup2;
      var superscriptshift = this.length2em(attr.superscriptshift, p);
      return Math.max(this.baseCharZero(bbox.h * this.baseScale - tex.sup_drop * sbox.rscale), superscriptshift, sbox.d * sbox.rscale + 1 / 4 * tex.x_height);
    };

    class_1.prototype.hasMovableLimits = function () {
      var display = this.node.attributes.get('displaystyle');
      var mo = this.baseChild.coreMO().node;
      return !display && !!mo.attributes.get('movablelimits');
    };

    class_1.prototype.getOverKU = function (basebox, overbox) {
      var accent = this.node.attributes.get('accent');
      var tex = this.font.params;
      var d = overbox.d * overbox.rscale;
      var t = tex.rule_thickness * tex.separation_factor;
      var delta = this.baseHasAccentOver ? t : 0;
      var T = this.isLineAbove ? 3 * tex.rule_thickness : t;
      var k = (accent ? T : Math.max(tex.big_op_spacing1, tex.big_op_spacing3 - Math.max(0, d))) - delta;
      return [k, basebox.h * basebox.rscale + k + d];
    };

    class_1.prototype.getUnderKV = function (basebox, underbox) {
      var accent = this.node.attributes.get('accentunder');
      var tex = this.font.params;
      var h = underbox.h * underbox.rscale;
      var t = tex.rule_thickness * tex.separation_factor;
      var delta = this.baseHasAccentUnder ? t : 0;
      var T = this.isLineBelow ? 3 * tex.rule_thickness : t;
      var k = (accent ? T : Math.max(tex.big_op_spacing2, tex.big_op_spacing4 - h)) - delta;
      return [k, -(basebox.d * basebox.rscale + k + h)];
    };

    class_1.prototype.getDeltaW = function (boxes, delta) {
      var e_2, _a, e_3, _b;

      if (delta === void 0) {
        delta = [0, 0, 0];
      }

      var align = this.node.attributes.get('align');
      var widths = boxes.map(function (box) {
        return box.w * box.rscale;
      });
      widths[0] -= this.baseRemoveIc && !this.baseCore.node.attributes.get('largeop') ? this.baseIc : 0;
      var w = Math.max.apply(Math, __spreadArray([], __read(widths)));
      var dw = [];
      var m = 0;

      try {
        for (var _c = __values(widths.keys()), _d = _c.next(); !_d.done; _d = _c.next()) {
          var i = _d.value;
          dw[i] = (align === 'center' ? (w - widths[i]) / 2 : align === 'right' ? w - widths[i] : 0) + delta[i];

          if (dw[i] < m) {
            m = -dw[i];
          }
        }
      } catch (e_2_1) {
        e_2 = {
          error: e_2_1
        };
      } finally {
        try {
          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
        } finally {
          if (e_2) throw e_2.error;
        }
      }

      if (m) {
        try {
          for (var _e = __values(dw.keys()), _f = _e.next(); !_f.done; _f = _e.next()) {
            var i = _f.value;
            dw[i] += m;
          }
        } catch (e_3_1) {
          e_3 = {
            error: e_3_1
          };
        } finally {
          try {
            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
          } finally {
            if (e_3) throw e_3.error;
          }
        }
      }

      [1, 2].map(function (i) {
        return dw[i] += boxes[i] ? boxes[i].dx * boxes[0].scale : 0;
      });
      return dw;
    };

    class_1.prototype.getDelta = function (noskew) {
      if (noskew === void 0) {
        noskew = false;
      }

      var accent = this.node.attributes.get('accent');

      var _a = this.baseCore.getBBox(),
          sk = _a.sk,
          ic = _a.ic;

      return ((accent && !noskew ? sk : 0) + this.font.skewIcFactor * ic) * this.baseScale;
    };

    class_1.prototype.stretchChildren = function () {
      var e_4, _a, e_5, _b, e_6, _c;

      var stretchy = [];

      try {
        for (var _d = __values(this.childNodes), _e = _d.next(); !_e.done; _e = _d.next()) {
          var child = _e.value;

          if (child.canStretch(2)) {
            stretchy.push(child);
          }
        }
      } catch (e_4_1) {
        e_4 = {
          error: e_4_1
        };
      } finally {
        try {
          if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
        } finally {
          if (e_4) throw e_4.error;
        }
      }

      var count = stretchy.length;
      var nodeCount = this.childNodes.length;

      if (count && nodeCount > 1) {
        var W = 0;
        var all = count > 1 && count === nodeCount;

        try {
          for (var _f = __values(this.childNodes), _g = _f.next(); !_g.done; _g = _f.next()) {
            var child = _g.value;
            var noStretch = child.stretch.dir === 0;

            if (all || noStretch) {
              var _h = child.getBBox(noStretch),
                  w = _h.w,
                  rscale = _h.rscale;

              if (w * rscale > W) W = w * rscale;
            }
          }
        } catch (e_5_1) {
          e_5 = {
            error: e_5_1
          };
        } finally {
          try {
            if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
          } finally {
            if (e_5) throw e_5.error;
          }
        }

        try {
          for (var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()) {
            var child = stretchy_1_1.value;
            child.coreMO().getStretchedVariant([W / child.bbox.rscale]);
          }
        } catch (e_6_1) {
          e_6 = {
            error: e_6_1
          };
        } finally {
          try {
            if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);
          } finally {
            if (e_6) throw e_6.error;
          }
        }
      }
    };

    return class_1;
  }(Base), _a.useIC = true, _a;
}

exports.CommonScriptbaseMixin = CommonScriptbaseMixin;

/***/ }),

/***/ 3166:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonSemanticsMixin = void 0;

function CommonSemanticsMixin(Base) {
  return function (_super) {
    __extends(class_1, _super);

    function class_1() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    class_1.prototype.computeBBox = function (bbox, _recompute) {
      if (_recompute === void 0) {
        _recompute = false;
      }

      if (this.childNodes.length) {
        var _a = this.childNodes[0].getBBox(),
            w = _a.w,
            h = _a.h,
            d = _a.d;

        bbox.w = w;
        bbox.h = h;
        bbox.d = d;
      }
    };

    return class_1;
  }(Base);
}

exports.CommonSemanticsMixin = CommonSemanticsMixin;

/***/ }),

/***/ 944:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CommonTeXFontMixin = void 0;

function CommonTeXFontMixin(Base) {
  var _a;

  return _a = function (_super) {
    __extends(class_1, _super);

    function class_1() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    class_1.prototype.getDelimiterData = function (n) {
      return this.getChar('-smallop', n) || this.getChar('-size4', n);
    };

    return class_1;
  }(Base), _a.defaultVariants = __spreadArray(__spreadArray([], __read(Base.defaultVariants)), [['-smallop', 'normal'], ['-largeop', 'normal'], ['-size3', 'normal'], ['-size4', 'normal'], ['-tex-calligraphic', 'italic'], ['-tex-bold-calligraphic', 'bold-italic'], ['-tex-oldstyle', 'normal'], ['-tex-bold-oldstyle', 'bold'], ['-tex-mathit', 'italic'], ['-tex-variant', 'normal']]), _a.defaultCssFonts = __assign(__assign({}, Base.defaultCssFonts), {
    '-smallop': ['serif', false, false],
    '-largeop': ['serif', false, false],
    '-size3': ['serif', false, false],
    '-size4': ['serif', false, false],
    '-tex-calligraphic': ['cursive', true, false],
    '-tex-bold-calligraphic': ['cursive', true, true],
    '-tex-oldstyle': ['serif', false, false],
    '-tex-bold-oldstyle': ['serif', false, true],
    '-tex-mathit': ['serif', true, false]
  }), _a.defaultSizeVariants = ['normal', '-smallop', '-largeop', '-size3', '-size4', '-tex-variant'], _a.defaultStretchVariants = ['-size4'], _a;
}

exports.CommonTeXFontMixin = CommonTeXFontMixin;

/***/ }),

/***/ 6043:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.boldItalic = void 0;
exports.boldItalic = {
  0x2F: [.711, .21, .894],
  0x131: [.452, .008, .394, {
    sk: .0319
  }],
  0x237: [.451, .201, .439, {
    sk: .0958
  }],
  0x2044: [.711, .21, .894],
  0x2206: [.711, 0, .958, {
    sk: .192
  }],
  0x29F8: [.711, .21, .894]
};

/***/ }),

/***/ 3283:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.bold = void 0;
exports.bold = {
  0x21: [.705, 0, .35],
  0x22: [.694, -0.329, .603],
  0x23: [.694, .193, .958],
  0x24: [.75, .056, .575],
  0x25: [.75, .056, .958],
  0x26: [.705, .011, .894],
  0x27: [.694, -0.329, .319],
  0x28: [.75, .249, .447],
  0x29: [.75, .249, .447],
  0x2A: [.75, -0.306, .575],
  0x2B: [.633, .131, .894],
  0x2C: [.171, .194, .319],
  0x2D: [.278, -0.166, .383],
  0x2E: [.171, 0, .319],
  0x2F: [.75, .25, .575],
  0x3A: [.444, 0, .319],
  0x3B: [.444, .194, .319],
  0x3C: [.587, .085, .894],
  0x3D: [.393, -0.109, .894],
  0x3E: [.587, .085, .894],
  0x3F: [.7, 0, .543],
  0x40: [.699, .006, .894],
  0x5B: [.75, .25, .319],
  0x5C: [.75, .25, .575],
  0x5D: [.75, .25, .319],
  0x5E: [.694, -0.52, .575],
  0x5F: [-0.01, .061, .575],
  0x60: [.706, -0.503, .575],
  0x7B: [.75, .25, .575],
  0x7C: [.75, .249, .319],
  0x7D: [.75, .25, .575],
  0x7E: [.344, -0.202, .575],
  0xA8: [.695, -0.535, .575],
  0xAC: [.371, -0.061, .767],
  0xAF: [.607, -0.54, .575],
  0xB0: [.702, -0.536, .575],
  0xB1: [.728, .035, .894],
  0xB4: [.706, -0.503, .575],
  0xB7: [.336, -0.166, .319],
  0xD7: [.53, .028, .894],
  0xF7: [.597, .096, .894],
  0x131: [.442, 0, .278, {
    sk: .0278
  }],
  0x237: [.442, .205, .306, {
    sk: .0833
  }],
  0x2B9: [.563, -0.033, .344],
  0x2C6: [.694, -0.52, .575],
  0x2C7: [.66, -0.515, .575],
  0x2C9: [.607, -0.54, .575],
  0x2CA: [.706, -0.503, .575],
  0x2CB: [.706, -0.503, .575],
  0x2D8: [.694, -0.5, .575],
  0x2D9: [.695, -0.525, .575],
  0x2DA: [.702, -0.536, .575],
  0x2DC: [.694, -0.552, .575],
  0x300: [.706, -0.503, 0],
  0x301: [.706, -0.503, 0],
  0x302: [.694, -0.52, 0],
  0x303: [.694, -0.552, 0],
  0x304: [.607, -0.54, 0],
  0x306: [.694, -0.5, 0],
  0x307: [.695, -0.525, 0],
  0x308: [.695, -0.535, 0],
  0x30A: [.702, -0.536, 0],
  0x30B: [.714, -0.511, 0],
  0x30C: [.66, -0.515, 0],
  0x338: [.711, .21, 0],
  0x2002: [0, 0, .5],
  0x2003: [0, 0, .999],
  0x2004: [0, 0, .333],
  0x2005: [0, 0, .25],
  0x2006: [0, 0, .167],
  0x2009: [0, 0, .167],
  0x200A: [0, 0, .083],
  0x2013: [.3, -0.249, .575],
  0x2014: [.3, -0.249, 1.15],
  0x2015: [.3, -0.249, 1.15],
  0x2016: [.75, .248, .575],
  0x2017: [-0.01, .061, .575],
  0x2018: [.694, -0.329, .319],
  0x2019: [.694, -0.329, .319],
  0x201C: [.694, -0.329, .603],
  0x201D: [.694, -0.329, .603],
  0x2020: [.702, .211, .511],
  0x2021: [.702, .202, .511],
  0x2022: [.474, -0.028, .575],
  0x2026: [.171, 0, 1.295],
  0x2032: [.563, -0.033, .344],
  0x2033: [.563, 0, .688],
  0x2034: [.563, 0, 1.032],
  0x203E: [.607, -0.54, .575],
  0x2044: [.75, .25, .575],
  0x2057: [.563, 0, 1.376],
  0x20D7: [.723, -0.513, .575],
  0x210F: [.694, .008, .668, {
    sk: -0.0319
  }],
  0x2113: [.702, .019, .474, {
    sk: .128
  }],
  0x2118: [.461, .21, .74],
  0x2135: [.694, 0, .703],
  0x2190: [.518, .017, 1.15],
  0x2191: [.694, .193, .575],
  0x2192: [.518, .017, 1.15],
  0x2193: [.694, .194, .575],
  0x2194: [.518, .017, 1.15],
  0x2195: [.767, .267, .575],
  0x2196: [.724, .194, 1.15],
  0x2197: [.724, .193, 1.15],
  0x2198: [.694, .224, 1.15],
  0x2199: [.694, .224, 1.15],
  0x219A: [.711, .21, 1.15],
  0x219B: [.711, .21, 1.15],
  0x21A6: [.518, .017, 1.15],
  0x21A9: [.518, .017, 1.282],
  0x21AA: [.518, .017, 1.282],
  0x21AE: [.711, .21, 1.15],
  0x21BC: [.518, -0.22, 1.15],
  0x21BD: [.281, .017, 1.15],
  0x21C0: [.518, -0.22, 1.15],
  0x21C1: [.281, .017, 1.15],
  0x21CC: [.718, .017, 1.15],
  0x21CD: [.711, .21, 1.15],
  0x21CE: [.711, .21, 1.15],
  0x21CF: [.711, .21, 1.15],
  0x21D0: [.547, .046, 1.15],
  0x21D1: [.694, .193, .703],
  0x21D2: [.547, .046, 1.15],
  0x21D3: [.694, .194, .703],
  0x21D4: [.547, .046, 1.15],
  0x21D5: [.767, .267, .703],
  0x2200: [.694, .016, .639],
  0x2203: [.694, 0, .639],
  0x2204: [.711, .21, .639],
  0x2205: [.767, .073, .575],
  0x2206: [.698, 0, .958],
  0x2208: [.587, .086, .767],
  0x2209: [.711, .21, .767],
  0x220B: [.587, .086, .767],
  0x220C: [.711, .21, .767],
  0x2212: [.281, -0.221, .894],
  0x2213: [.537, .227, .894],
  0x2215: [.75, .25, .575],
  0x2216: [.75, .25, .575],
  0x2217: [.472, -0.028, .575],
  0x2218: [.474, -0.028, .575],
  0x2219: [.474, -0.028, .575],
  0x221A: [.82, .18, .958, {
    ic: .03
  }],
  0x221D: [.451, .008, .894],
  0x221E: [.452, .008, 1.15],
  0x2220: [.714, 0, .722],
  0x2223: [.75, .249, .319],
  0x2224: [.75, .249, .319],
  0x2225: [.75, .248, .575],
  0x2226: [.75, .248, .575],
  0x2227: [.604, .017, .767],
  0x2228: [.604, .016, .767],
  0x2229: [.603, .016, .767],
  0x222A: [.604, .016, .767],
  0x222B: [.711, .211, .569, {
    ic: .063
  }],
  0x223C: [.391, -0.109, .894],
  0x2240: [.583, .082, .319],
  0x2241: [.711, .21, .894],
  0x2243: [.502, 0, .894],
  0x2244: [.711, .21, .894],
  0x2245: [.638, .027, .894],
  0x2247: [.711, .21, .894],
  0x2248: [.524, -0.032, .894],
  0x2249: [.711, .21, .894],
  0x224D: [.533, .032, .894],
  0x2250: [.721, -0.109, .894],
  0x2260: [.711, .21, .894],
  0x2261: [.505, 0, .894],
  0x2262: [.711, .21, .894],
  0x2264: [.697, .199, .894],
  0x2265: [.697, .199, .894],
  0x226A: [.617, .116, 1.15],
  0x226B: [.618, .116, 1.15],
  0x226D: [.711, .21, .894],
  0x226E: [.711, .21, .894],
  0x226F: [.711, .21, .894],
  0x2270: [.711, .21, .894],
  0x2271: [.711, .21, .894],
  0x227A: [.585, .086, .894],
  0x227B: [.586, .086, .894],
  0x2280: [.711, .21, .894],
  0x2281: [.711, .21, .894],
  0x2282: [.587, .085, .894],
  0x2283: [.587, .086, .894],
  0x2284: [.711, .21, .894],
  0x2285: [.711, .21, .894],
  0x2286: [.697, .199, .894],
  0x2287: [.697, .199, .894],
  0x2288: [.711, .21, .894],
  0x2289: [.711, .21, .894],
  0x228E: [.604, .016, .767],
  0x2291: [.697, .199, .894],
  0x2292: [.697, .199, .894],
  0x2293: [.604, 0, .767],
  0x2294: [.604, 0, .767],
  0x2295: [.632, .132, .894],
  0x2296: [.632, .132, .894],
  0x2297: [.632, .132, .894],
  0x2298: [.632, .132, .894],
  0x2299: [.632, .132, .894],
  0x22A2: [.693, 0, .703],
  0x22A3: [.693, 0, .703],
  0x22A4: [.694, 0, .894],
  0x22A5: [.693, 0, .894],
  0x22A8: [.75, .249, .974],
  0x22AC: [.711, .21, .703],
  0x22AD: [.75, .249, .974],
  0x22C4: [.523, .021, .575],
  0x22C5: [.336, -0.166, .319],
  0x22C6: [.502, 0, .575],
  0x22C8: [.54, .039, 1],
  0x22E2: [.711, .21, .894],
  0x22E3: [.711, .21, .894],
  0x22EE: [.951, .029, .319],
  0x22EF: [.336, -0.166, 1.295],
  0x22F1: [.871, -0.101, 1.323],
  0x2308: [.75, .248, .511],
  0x2309: [.75, .248, .511],
  0x230A: [.749, .248, .511],
  0x230B: [.749, .248, .511],
  0x2322: [.405, -0.108, 1.15],
  0x2323: [.392, -0.126, 1.15],
  0x2329: [.75, .249, .447],
  0x232A: [.75, .249, .447],
  0x25B3: [.711, 0, 1.022],
  0x25B5: [.711, 0, 1.022],
  0x25B9: [.54, .039, .575],
  0x25BD: [.5, .21, 1.022],
  0x25BF: [.5, .21, 1.022],
  0x25C3: [.539, .038, .575],
  0x25EF: [.711, .211, 1.15],
  0x2660: [.719, .129, .894],
  0x2661: [.711, .024, .894],
  0x2662: [.719, .154, .894],
  0x2663: [.719, .129, .894],
  0x266D: [.75, .017, .447],
  0x266E: [.741, .223, .447],
  0x266F: [.724, .224, .447],
  0x2758: [.75, .249, .319],
  0x27E8: [.75, .249, .447],
  0x27E9: [.75, .249, .447],
  0x27F5: [.518, .017, 1.805],
  0x27F6: [.518, .017, 1.833],
  0x27F7: [.518, .017, 2.126],
  0x27F8: [.547, .046, 1.868],
  0x27F9: [.547, .046, 1.87],
  0x27FA: [.547, .046, 2.126],
  0x27FC: [.518, .017, 1.833],
  0x29F8: [.711, .21, .894],
  0x2A2F: [.53, .028, .894],
  0x2A3F: [.686, 0, .9],
  0x2AAF: [.696, .199, .894],
  0x2AB0: [.697, .199, .894],
  0x3008: [.75, .249, .447],
  0x3009: [.75, .249, .447]
};

/***/ }),

/***/ 7528:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.delimiters = exports.VSIZES = exports.HDW3 = exports.HDW2 = exports.HDW1 = void 0;

var FontData_js_1 = __webpack_require__(5196);

exports.HDW1 = [.75, .25, .875];
exports.HDW2 = [.85, .349, .667];
exports.HDW3 = [.583, .082, .5];
exports.VSIZES = [1, 1.2, 1.8, 2.4, 3];
var DELIM2F = {
  c: 0x2F,
  dir: FontData_js_1.V,
  sizes: exports.VSIZES
};
var DELIMAF = {
  c: 0xAF,
  dir: FontData_js_1.H,
  sizes: [.5],
  stretch: [0, 0xAF],
  HDW: [.59, -0.544, .5]
};
var DELIM2C6 = {
  c: 0x2C6,
  dir: FontData_js_1.H,
  sizes: [.5, .556, 1, 1.444, 1.889]
};
var DELIM2DC = {
  c: 0x2DC,
  dir: FontData_js_1.H,
  sizes: [.5, .556, 1, 1.444, 1.889]
};
var DELIM2013 = {
  c: 0x2013,
  dir: FontData_js_1.H,
  sizes: [.5],
  stretch: [0, 0x2013],
  HDW: [.285, -0.248, .5]
};
var DELIM2190 = {
  c: 0x2190,
  dir: FontData_js_1.H,
  sizes: [1],
  stretch: [0x2190, 0x2212],
  HDW: exports.HDW3
};
var DELIM2192 = {
  c: 0x2192,
  dir: FontData_js_1.H,
  sizes: [1],
  stretch: [0, 0x2212, 0x2192],
  HDW: exports.HDW3
};
var DELIM2194 = {
  c: 0x2194,
  dir: FontData_js_1.H,
  sizes: [1],
  stretch: [0x2190, 0x2212, 0x2192],
  HDW: exports.HDW3
};
var DELIM21A4 = {
  c: 0x21A4,
  dir: FontData_js_1.H,
  stretch: [0x2190, 0x2212, 0x2223],
  HDW: exports.HDW3,
  min: 1.278
};
var DELIM21A6 = {
  c: 0x21A6,
  dir: FontData_js_1.H,
  sizes: [1],
  stretch: [0x2223, 0x2212, 0x2192],
  HDW: exports.HDW3
};
var DELIM21D0 = {
  c: 0x21D0,
  dir: FontData_js_1.H,
  sizes: [1],
  stretch: [0x21D0, 0x3D],
  HDW: exports.HDW3
};
var DELIM21D2 = {
  c: 0x21D2,
  dir: FontData_js_1.H,
  sizes: [1],
  stretch: [0, 0x3D, 0x21D2],
  HDW: exports.HDW3
};
var DELIM21D4 = {
  c: 0x21D4,
  dir: FontData_js_1.H,
  sizes: [1],
  stretch: [0x21D0, 0x3D, 0x21D2],
  HDW: exports.HDW3
};
var DELIM2212 = {
  c: 0x2212,
  dir: FontData_js_1.H,
  sizes: [.778],
  stretch: [0, 0x2212],
  HDW: exports.HDW3
};
var DELIM2223 = {
  c: 0x2223,
  dir: FontData_js_1.V,
  sizes: [1],
  stretch: [0, 0x2223],
  HDW: [.627, .015, .333]
};
var DELIM23DC = {
  c: 0x23DC,
  dir: FontData_js_1.H,
  sizes: [.778, 1],
  schar: [0x2322, 0x2322],
  variants: [5, 0],
  stretch: [0xE150, 0xE154, 0xE151],
  HDW: [.32, .2, .5]
};
var DELIM23DD = {
  c: 0x23DD,
  dir: FontData_js_1.H,
  sizes: [.778, 1],
  schar: [0x2323, 0x2323],
  variants: [5, 0],
  stretch: [0xE152, 0xE154, 0xE153],
  HDW: [.32, .2, .5]
};
var DELIM23DE = {
  c: 0x23DE,
  dir: FontData_js_1.H,
  stretch: [0xE150, 0xE154, 0xE151, 0xE155],
  HDW: [.32, .2, .5],
  min: 1.8
};
var DELIM23DF = {
  c: 0x23DF,
  dir: FontData_js_1.H,
  stretch: [0xE152, 0xE154, 0xE153, 0xE156],
  HDW: [.32, .2, .5],
  min: 1.8
};
var DELIM27E8 = {
  c: 0x27E8,
  dir: FontData_js_1.V,
  sizes: exports.VSIZES
};
var DELIM27E9 = {
  c: 0x27E9,
  dir: FontData_js_1.V,
  sizes: exports.VSIZES
};
var DELIM2906 = {
  c: 0x2906,
  dir: FontData_js_1.H,
  stretch: [0x21D0, 0x3D, 0x2223],
  HDW: exports.HDW3,
  min: 1.278
};
var DELIM2907 = {
  c: 0x2907,
  dir: FontData_js_1.H,
  stretch: [0x22A8, 0x3D, 0x21D2],
  HDW: exports.HDW3,
  min: 1.278
};
exports.delimiters = {
  0x28: {
    dir: FontData_js_1.V,
    sizes: exports.VSIZES,
    stretch: [0x239B, 0x239C, 0x239D],
    HDW: [.85, .349, .875]
  },
  0x29: {
    dir: FontData_js_1.V,
    sizes: exports.VSIZES,
    stretch: [0x239E, 0x239F, 0x23A0],
    HDW: [.85, .349, .875]
  },
  0x2D: DELIM2212,
  0x2F: DELIM2F,
  0x3D: {
    dir: FontData_js_1.H,
    sizes: [.778],
    stretch: [0, 0x3D],
    HDW: exports.HDW3
  },
  0x5B: {
    dir: FontData_js_1.V,
    sizes: exports.VSIZES,
    stretch: [0x23A1, 0x23A2, 0x23A3],
    HDW: exports.HDW2
  },
  0x5C: {
    dir: FontData_js_1.V,
    sizes: exports.VSIZES
  },
  0x5D: {
    dir: FontData_js_1.V,
    sizes: exports.VSIZES,
    stretch: [0x23A4, 0x23A5, 0x23A6],
    HDW: exports.HDW2
  },
  0x5E: DELIM2C6,
  0x5F: DELIM2013,
  0x7B: {
    dir: FontData_js_1.V,
    sizes: exports.VSIZES,
    stretch: [0x23A7, 0x23AA, 0x23A9, 0x23A8],
    HDW: [.85, .349, .889]
  },
  0x7C: {
    dir: FontData_js_1.V,
    sizes: [1],
    stretch: [0, 0x2223],
    HDW: [.75, .25, .333]
  },
  0x7D: {
    dir: FontData_js_1.V,
    sizes: exports.VSIZES,
    stretch: [0x23AB, 0x23AA, 0x23AD, 0x23AC],
    HDW: [.85, .349, .889]
  },
  0x7E: DELIM2DC,
  0xAF: DELIMAF,
  0x2C6: DELIM2C6,
  0x2C9: DELIMAF,
  0x2DC: DELIM2DC,
  0x302: DELIM2C6,
  0x303: DELIM2DC,
  0x332: DELIM2013,
  0x2013: DELIM2013,
  0x2014: DELIM2013,
  0x2015: DELIM2013,
  0x2016: {
    dir: FontData_js_1.V,
    sizes: [.602, 1],
    schar: [0, 0x2225],
    variants: [1, 0],
    stretch: [0, 0x2225],
    HDW: [.602, 0, .556]
  },
  0x2017: DELIM2013,
  0x203E: DELIMAF,
  0x20D7: DELIM2192,
  0x2190: DELIM2190,
  0x2191: {
    dir: FontData_js_1.V,
    sizes: [.888],
    stretch: [0x2191, 0x23D0],
    HDW: [.6, 0, .667]
  },
  0x2192: DELIM2192,
  0x2193: {
    dir: FontData_js_1.V,
    sizes: [.888],
    stretch: [0, 0x23D0, 0x2193],
    HDW: [.6, 0, .667]
  },
  0x2194: DELIM2194,
  0x2195: {
    dir: FontData_js_1.V,
    sizes: [1.044],
    stretch: [0x2191, 0x23D0, 0x2193],
    HDW: exports.HDW1
  },
  0x219E: {
    dir: FontData_js_1.H,
    sizes: [1],
    stretch: [0x219E, 0x2212],
    HDW: exports.HDW3
  },
  0x21A0: {
    dir: FontData_js_1.H,
    sizes: [1],
    stretch: [0, 0x2212, 0x21A0],
    HDW: exports.HDW3
  },
  0x21A4: DELIM21A4,
  0x21A5: {
    dir: FontData_js_1.V,
    stretch: [0x2191, 0x23D0, 0x22A5],
    HDW: exports.HDW1,
    min: 1.555
  },
  0x21A6: DELIM21A6,
  0x21A7: {
    dir: FontData_js_1.V,
    stretch: [0x22A4, 0x23D0, 0x2193],
    HDW: exports.HDW1,
    min: 1.555
  },
  0x21B0: {
    dir: FontData_js_1.V,
    sizes: [.722],
    stretch: [0x21B0, 0x23D0],
    HDW: exports.HDW1
  },
  0x21B1: {
    dir: FontData_js_1.V,
    sizes: [.722],
    stretch: [0x21B1, 0x23D0],
    HDW: exports.HDW1
  },
  0x21BC: {
    dir: FontData_js_1.H,
    sizes: [1],
    stretch: [0x21BC, 0x2212],
    HDW: exports.HDW3
  },
  0x21BD: {
    dir: FontData_js_1.H,
    sizes: [1],
    stretch: [0x21BD, 0x2212],
    HDW: exports.HDW3
  },
  0x21BE: {
    dir: FontData_js_1.V,
    sizes: [.888],
    stretch: [0x21BE, 0x23D0],
    HDW: exports.HDW1
  },
  0x21BF: {
    dir: FontData_js_1.V,
    sizes: [.888],
    stretch: [0x21BF, 0x23D0],
    HDW: exports.HDW1
  },
  0x21C0: {
    dir: FontData_js_1.H,
    sizes: [1],
    stretch: [0, 0x2212, 0x21C0],
    HDW: exports.HDW3
  },
  0x21C1: {
    dir: FontData_js_1.H,
    sizes: [1],
    stretch: [0, 0x2212, 0x21C1],
    HDW: exports.HDW3
  },
  0x21C2: {
    dir: FontData_js_1.V,
    sizes: [.888],
    stretch: [0, 0x23D0, 0x21C2],
    HDW: exports.HDW1
  },
  0x21C3: {
    dir: FontData_js_1.V,
    sizes: [.888],
    stretch: [0, 0x23D0, 0x21C3],
    HDW: exports.HDW1
  },
  0x21D0: DELIM21D0,
  0x21D1: {
    dir: FontData_js_1.V,
    sizes: [.888],
    stretch: [0x21D1, 0x2016],
    HDW: [.599, 0, .778]
  },
  0x21D2: DELIM21D2,
  0x21D3: {
    dir: FontData_js_1.V,
    sizes: [.888],
    stretch: [0, 0x2016, 0x21D3],
    HDW: [.6, 0, .778]
  },
  0x21D4: DELIM21D4,
  0x21D5: {
    dir: FontData_js_1.V,
    sizes: [1.044],
    stretch: [0x21D1, 0x2016, 0x21D3],
    HDW: [.75, .25, .778]
  },
  0x21DA: {
    dir: FontData_js_1.H,
    sizes: [1],
    stretch: [0x21DA, 0x2261],
    HDW: [.464, -0.036, .5]
  },
  0x21DB: {
    dir: FontData_js_1.H,
    sizes: [1],
    stretch: [0, 0x2261, 0x21DB],
    HDW: [.464, -0.036, .5]
  },
  0x2212: DELIM2212,
  0x2215: DELIM2F,
  0x221A: {
    dir: FontData_js_1.V,
    sizes: exports.VSIZES,
    stretch: [0xE001, 0xE000, 0x23B7],
    fullExt: [.65, 2.3],
    HDW: [.85, .35, 1.056]
  },
  0x2223: DELIM2223,
  0x2225: {
    dir: FontData_js_1.V,
    sizes: [1],
    stretch: [0, 0x2225],
    HDW: [.627, .015, .556]
  },
  0x2308: {
    dir: FontData_js_1.V,
    sizes: exports.VSIZES,
    stretch: [0x23A1, 0x23A2],
    HDW: exports.HDW2
  },
  0x2309: {
    dir: FontData_js_1.V,
    sizes: exports.VSIZES,
    stretch: [0x23A4, 0x23A5],
    HDW: exports.HDW2
  },
  0x230A: {
    dir: FontData_js_1.V,
    sizes: exports.VSIZES,
    stretch: [0, 0x23A2, 0x23A3],
    HDW: exports.HDW2
  },
  0x230B: {
    dir: FontData_js_1.V,
    sizes: exports.VSIZES,
    stretch: [0, 0x23A5, 0x23A6],
    HDW: exports.HDW2
  },
  0x2312: DELIM23DC,
  0x2322: DELIM23DC,
  0x2323: DELIM23DD,
  0x2329: DELIM27E8,
  0x232A: DELIM27E9,
  0x23AA: {
    dir: FontData_js_1.V,
    sizes: [.32],
    stretch: [0x23AA, 0x23AA, 0x23AA],
    HDW: [.29, .015, .889]
  },
  0x23AF: DELIM2013,
  0x23B0: {
    dir: FontData_js_1.V,
    sizes: [.989],
    stretch: [0x23A7, 0x23AA, 0x23AD],
    HDW: [.75, .25, .889]
  },
  0x23B1: {
    dir: FontData_js_1.V,
    sizes: [.989],
    stretch: [0x23AB, 0x23AA, 0x23A9],
    HDW: [.75, .25, .889]
  },
  0x23B4: {
    dir: FontData_js_1.H,
    stretch: [0x250C, 0x2212, 0x2510],
    HDW: exports.HDW3,
    min: 1
  },
  0x23B5: {
    dir: FontData_js_1.H,
    stretch: [0x2514, 0x2212, 0x2518],
    HDW: exports.HDW3,
    min: 1
  },
  0x23D0: {
    dir: FontData_js_1.V,
    sizes: [.602, 1],
    schar: [0, 0x2223],
    variants: [1, 0],
    stretch: [0, 0x2223],
    HDW: [.602, 0, .333]
  },
  0x23DC: DELIM23DC,
  0x23DD: DELIM23DD,
  0x23DE: DELIM23DE,
  0x23DF: DELIM23DF,
  0x23E0: {
    dir: FontData_js_1.H,
    stretch: [0x2CA, 0x2C9, 0x2CB],
    HDW: [.59, -0.544, .5],
    min: 1
  },
  0x23E1: {
    dir: FontData_js_1.H,
    stretch: [0x2CB, 0x2C9, 0x2CA],
    HDW: [.59, -0.544, .5],
    min: 1
  },
  0x2500: DELIM2013,
  0x2758: DELIM2223,
  0x27E8: DELIM27E8,
  0x27E9: DELIM27E9,
  0x27EE: {
    dir: FontData_js_1.V,
    sizes: [.989],
    stretch: [0x23A7, 0x23AA, 0x23A9],
    HDW: [.75, .25, .889]
  },
  0x27EF: {
    dir: FontData_js_1.V,
    sizes: [.989],
    stretch: [0x23AB, 0x23AA, 0x23AD],
    HDW: [.75, .25, .889]
  },
  0x27F5: DELIM2190,
  0x27F6: DELIM2192,
  0x27F7: DELIM2194,
  0x27F8: DELIM21D0,
  0x27F9: DELIM21D2,
  0x27FA: DELIM21D4,
  0x27FB: DELIM21A4,
  0x27FC: DELIM21A6,
  0x27FD: DELIM2906,
  0x27FE: DELIM2907,
  0x2906: DELIM2906,
  0x2907: DELIM2907,
  0x294E: {
    dir: FontData_js_1.H,
    stretch: [0x21BC, 0x2212, 0x21C0],
    HDW: exports.HDW3,
    min: 2
  },
  0x294F: {
    dir: FontData_js_1.V,
    stretch: [0x21BE, 0x23D0, 0x21C2],
    HDW: exports.HDW1,
    min: 1.776
  },
  0x2950: {
    dir: FontData_js_1.H,
    stretch: [0x21BD, 0x2212, 0x21C1],
    HDW: exports.HDW3,
    min: 2
  },
  0x2951: {
    dir: FontData_js_1.V,
    stretch: [0x21BF, 0x23D0, 0x21C3],
    HDW: exports.HDW1,
    min: .5
  },
  0x295A: {
    dir: FontData_js_1.H,
    stretch: [0x21BC, 0x2212, 0x2223],
    HDW: exports.HDW3,
    min: 1.278
  },
  0x295B: {
    dir: FontData_js_1.H,
    stretch: [0x2223, 0x2212, 0x21C0],
    HDW: exports.HDW3,
    min: 1.278
  },
  0x295C: {
    dir: FontData_js_1.V,
    stretch: [0x21BE, 0x23D0, 0x22A5],
    HDW: exports.HDW1,
    min: 1.556
  },
  0x295D: {
    dir: FontData_js_1.V,
    stretch: [0x22A4, 0x23D0, 0x21C2],
    HDW: exports.HDW1,
    min: 1.556
  },
  0x295E: {
    dir: FontData_js_1.H,
    stretch: [0x21BD, 0x2212, 0x2223],
    HDW: exports.HDW3,
    min: 1.278
  },
  0x295F: {
    dir: FontData_js_1.H,
    stretch: [0x2223, 0x2212, 0x21C1],
    HDW: exports.HDW3,
    min: 1.278
  },
  0x2960: {
    dir: FontData_js_1.V,
    stretch: [0x21BF, 0x23D0, 0x22A5],
    HDW: exports.HDW1,
    min: 1.776
  },
  0x2961: {
    dir: FontData_js_1.V,
    stretch: [0x22A4, 0x23D0, 0x21C3],
    HDW: exports.HDW1,
    min: 1.776
  },
  0x3008: DELIM27E8,
  0x3009: DELIM27E9,
  0xFE37: DELIM23DE,
  0xFE38: DELIM23DF
};

/***/ }),

/***/ 2251:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.doubleStruck = void 0;
exports.doubleStruck = {};

/***/ }),

/***/ 654:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.frakturBold = void 0;
exports.frakturBold = {
  0x21: [.689, .012, .349],
  0x22: [.695, -0.432, .254],
  0x26: [.696, .016, .871],
  0x27: [.695, -0.436, .25],
  0x28: [.737, .186, .459],
  0x29: [.735, .187, .459],
  0x2A: [.692, -0.449, .328],
  0x2B: [.598, .082, .893],
  0x2C: [.107, .191, .328],
  0x2D: [.275, -0.236, .893],
  0x2E: [.102, .015, .328],
  0x2F: [.721, .182, .593],
  0x30: [.501, .012, .593],
  0x31: [.489, 0, .593],
  0x32: [.491, 0, .593],
  0x33: [.487, .193, .593],
  0x34: [.495, .196, .593],
  0x35: [.481, .19, .593],
  0x36: [.704, .012, .593],
  0x37: [.479, .197, .593],
  0x38: [.714, .005, .593],
  0x39: [.487, .195, .593],
  0x3A: [.457, .012, .255],
  0x3B: [.458, .19, .255],
  0x3D: [.343, -0.168, .582],
  0x3F: [.697, .014, .428],
  0x5B: [.74, .13, .257],
  0x5D: [.738, .132, .257],
  0x5E: [.734, -0.452, .59],
  0x2018: [.708, -0.411, .254],
  0x2019: [.692, -0.394, .254],
  0x2044: [.721, .182, .593],
  0xE301: [.63, .027, .587],
  0xE302: [.693, .212, .394, {
    ic: .014
  }],
  0xE303: [.681, .219, .387],
  0xE304: [.473, .212, .593],
  0xE305: [.684, .027, .393],
  0xE308: [.679, .22, .981],
  0xE309: [.717, .137, .727]
};

/***/ }),

/***/ 4210:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.fraktur = void 0;
exports.fraktur = {
  0x21: [.689, .012, .296],
  0x22: [.695, -0.432, .215],
  0x26: [.698, .011, .738],
  0x27: [.695, -0.436, .212],
  0x28: [.737, .186, .389],
  0x29: [.735, .187, .389],
  0x2A: [.692, -0.449, .278],
  0x2B: [.598, .082, .756],
  0x2C: [.107, .191, .278],
  0x2D: [.275, -0.236, .756],
  0x2E: [.102, .015, .278],
  0x2F: [.721, .182, .502],
  0x30: [.492, .013, .502],
  0x31: [.468, 0, .502],
  0x32: [.474, 0, .502],
  0x33: [.473, .182, .502],
  0x34: [.476, .191, .502],
  0x35: [.458, .184, .502],
  0x36: [.7, .013, .502],
  0x37: [.468, .181, .502],
  0x38: [.705, .01, .502],
  0x39: [.469, .182, .502],
  0x3A: [.457, .012, .216],
  0x3B: [.458, .189, .216],
  0x3D: [.368, -0.132, .756],
  0x3F: [.693, .011, .362],
  0x5B: [.74, .13, .278],
  0x5D: [.738, .131, .278],
  0x5E: [.734, -0.452, .5],
  0x2018: [.708, -0.41, .215],
  0x2019: [.692, -0.395, .215],
  0x2044: [.721, .182, .502],
  0xE300: [.683, .032, .497],
  0xE301: [.616, .03, .498],
  0xE302: [.68, .215, .333],
  0xE303: [.679, .224, .329],
  0xE304: [.471, .214, .503],
  0xE305: [.686, .02, .333],
  0xE306: [.577, .021, .334, {
    ic: .013
  }],
  0xE307: [.475, .022, .501, {
    ic: .013
  }]
};

/***/ }),

/***/ 5271:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.italic = void 0;
exports.italic = {
  0x21: [.716, 0, .307, {
    ic: .073
  }],
  0x22: [.694, -0.379, .514, {
    ic: .024
  }],
  0x23: [.694, .194, .818, {
    ic: .01
  }],
  0x25: [.75, .056, .818, {
    ic: .029
  }],
  0x26: [.716, .022, .767, {
    ic: .035
  }],
  0x27: [.694, -0.379, .307, {
    ic: .07
  }],
  0x28: [.75, .25, .409, {
    ic: .108
  }],
  0x29: [.75, .25, .409],
  0x2A: [.75, -0.32, .511, {
    ic: .073
  }],
  0x2B: [.557, .057, .767],
  0x2C: [.121, .194, .307],
  0x2D: [.251, -0.18, .358],
  0x2E: [.121, 0, .307],
  0x2F: [.716, .215, .778],
  0x30: [.665, .021, .511, {
    ic: .051
  }],
  0x31: [.666, 0, .511],
  0x32: [.666, .022, .511, {
    ic: .04
  }],
  0x33: [.666, .022, .511, {
    ic: .051
  }],
  0x34: [.666, .194, .511],
  0x35: [.666, .022, .511, {
    ic: .056
  }],
  0x36: [.665, .022, .511, {
    ic: .054
  }],
  0x37: [.666, .022, .511, {
    ic: .123
  }],
  0x38: [.666, .021, .511, {
    ic: .042
  }],
  0x39: [.666, .022, .511, {
    ic: .042
  }],
  0x3A: [.431, 0, .307],
  0x3B: [.431, .194, .307],
  0x3D: [.367, -0.133, .767],
  0x3F: [.716, 0, .511, {
    ic: .04
  }],
  0x40: [.705, .011, .767, {
    ic: .022
  }],
  0x5B: [.75, .25, .307, {
    ic: .139
  }],
  0x5D: [.75, .25, .307, {
    ic: .052
  }],
  0x5E: [.694, -0.527, .511, {
    ic: .017
  }],
  0x5F: [-0.025, .062, .511, {
    ic: .043
  }],
  0x7E: [.318, -0.208, .511, {
    ic: .06
  }],
  0x131: [.441, .01, .307, {
    ic: .033
  }],
  0x237: [.442, .204, .332],
  0x300: [.697, -0.5, 0],
  0x301: [.697, -0.5, 0, {
    ic: .039
  }],
  0x302: [.694, -0.527, 0, {
    ic: .017
  }],
  0x303: [.668, -0.558, 0, {
    ic: .06
  }],
  0x304: [.589, -0.544, 0, {
    ic: .054
  }],
  0x306: [.694, -0.515, 0, {
    ic: .062
  }],
  0x307: [.669, -0.548, 0],
  0x308: [.669, -0.554, 0, {
    ic: .045
  }],
  0x30A: [.716, -0.542, 0],
  0x30B: [.697, -0.503, 0, {
    ic: .065
  }],
  0x30C: [.638, -0.502, 0, {
    ic: .029
  }],
  0x3DD: [.605, .085, .778],
  0x2013: [.285, -0.248, .511, {
    ic: .043
  }],
  0x2014: [.285, -0.248, 1.022, {
    ic: .016
  }],
  0x2015: [.285, -0.248, 1.022, {
    ic: .016
  }],
  0x2017: [-0.025, .062, .511, {
    ic: .043
  }],
  0x2018: [.694, -0.379, .307, {
    ic: .055
  }],
  0x2019: [.694, -0.379, .307, {
    ic: .07
  }],
  0x201C: [.694, -0.379, .514, {
    ic: .092
  }],
  0x201D: [.694, -0.379, .514, {
    ic: .024
  }],
  0x2044: [.716, .215, .778],
  0x210F: [.695, .013, .54, {
    ic: .022
  }],
  0x2206: [.716, 0, .833, {
    sk: .167
  }],
  0x29F8: [.716, .215, .778]
};

/***/ }),

/***/ 2115:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.largeop = void 0;
exports.largeop = {
  0x28: [1.15, .649, .597],
  0x29: [1.15, .649, .597],
  0x2F: [1.15, .649, .811],
  0x5B: [1.15, .649, .472],
  0x5C: [1.15, .649, .811],
  0x5D: [1.15, .649, .472],
  0x7B: [1.15, .649, .667],
  0x7D: [1.15, .649, .667],
  0x2C6: [.772, -0.565, 1],
  0x2DC: [.75, -0.611, 1],
  0x302: [.772, -0.565, 0],
  0x303: [.75, -0.611, 0],
  0x2016: [.602, 0, .778],
  0x2044: [1.15, .649, .811],
  0x2191: [.6, 0, .667],
  0x2193: [.6, 0, .667],
  0x21D1: [.599, 0, .778],
  0x21D3: [.6, 0, .778],
  0x220F: [.95, .45, 1.278],
  0x2210: [.95, .45, 1.278],
  0x2211: [.95, .45, 1.444],
  0x221A: [1.15, .65, 1, {
    ic: .02
  }],
  0x2223: [.627, .015, .333],
  0x2225: [.627, .015, .556],
  0x222B: [1.36, .862, .556, {
    ic: .388
  }],
  0x222C: [1.36, .862, 1.084, {
    ic: .388
  }],
  0x222D: [1.36, .862, 1.592, {
    ic: .388
  }],
  0x222E: [1.36, .862, .556, {
    ic: .388
  }],
  0x22C0: [.95, .45, 1.111],
  0x22C1: [.95, .45, 1.111],
  0x22C2: [.949, .45, 1.111],
  0x22C3: [.95, .449, 1.111],
  0x2308: [1.15, .649, .528],
  0x2309: [1.15, .649, .528],
  0x230A: [1.15, .649, .528],
  0x230B: [1.15, .649, .528],
  0x2329: [1.15, .649, .611],
  0x232A: [1.15, .649, .611],
  0x23D0: [.602, 0, .667],
  0x2758: [.627, .015, .333],
  0x27E8: [1.15, .649, .611],
  0x27E9: [1.15, .649, .611],
  0x2A00: [.949, .449, 1.511],
  0x2A01: [.949, .449, 1.511],
  0x2A02: [.949, .449, 1.511],
  0x2A04: [.95, .449, 1.111],
  0x2A06: [.95, .45, 1.111],
  0x2A0C: [1.36, .862, 2.168, {
    ic: .388
  }],
  0x3008: [1.15, .649, .611],
  0x3009: [1.15, .649, .611]
};

/***/ }),

/***/ 7389:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.monospace = void 0;
exports.monospace = {
  0x20: [0, 0, .525],
  0x21: [.622, 0, .525],
  0x22: [.623, -0.333, .525],
  0x23: [.611, 0, .525],
  0x24: [.694, .082, .525],
  0x25: [.694, .083, .525],
  0x26: [.622, .011, .525],
  0x27: [.611, -0.287, .525],
  0x28: [.694, .082, .525],
  0x29: [.694, .082, .525],
  0x2A: [.52, -0.09, .525],
  0x2B: [.531, -0.081, .525],
  0x2C: [.14, .139, .525],
  0x2D: [.341, -0.271, .525],
  0x2E: [.14, 0, .525],
  0x2F: [.694, .083, .525],
  0x3A: [.431, 0, .525],
  0x3B: [.431, .139, .525],
  0x3C: [.557, -0.055, .525],
  0x3D: [.417, -0.195, .525],
  0x3E: [.557, -0.055, .525],
  0x3F: [.617, 0, .525],
  0x40: [.617, .006, .525],
  0x5B: [.694, .082, .525],
  0x5C: [.694, .083, .525],
  0x5D: [.694, .082, .525],
  0x5E: [.611, -0.46, .525],
  0x5F: [-0.025, .095, .525],
  0x60: [.681, -0.357, .525],
  0x7B: [.694, .083, .525],
  0x7C: [.694, .082, .525],
  0x7D: [.694, .083, .525],
  0x7E: [.611, -0.466, .525],
  0x7F: [.612, -0.519, .525],
  0xA0: [0, 0, .525],
  0x131: [.431, 0, .525],
  0x237: [.431, .228, .525],
  0x2B9: [.623, -0.334, .525],
  0x300: [.611, -0.485, 0],
  0x301: [.611, -0.485, 0],
  0x302: [.611, -0.46, 0],
  0x303: [.611, -0.466, 0],
  0x304: [.577, -0.5, 0],
  0x306: [.611, -0.504, 0],
  0x308: [.612, -0.519, 0],
  0x30A: [.619, -0.499, 0],
  0x30C: [.577, -0.449, 0],
  0x391: [.623, 0, .525],
  0x392: [.611, 0, .525],
  0x393: [.611, 0, .525],
  0x394: [.623, 0, .525],
  0x395: [.611, 0, .525],
  0x396: [.611, 0, .525],
  0x397: [.611, 0, .525],
  0x398: [.621, .01, .525],
  0x399: [.611, 0, .525],
  0x39A: [.611, 0, .525],
  0x39B: [.623, 0, .525],
  0x39C: [.611, 0, .525],
  0x39D: [.611, 0, .525],
  0x39E: [.611, 0, .525],
  0x39F: [.621, .01, .525],
  0x3A0: [.611, 0, .525],
  0x3A1: [.611, 0, .525],
  0x3A3: [.611, 0, .525],
  0x3A4: [.611, 0, .525],
  0x3A5: [.622, 0, .525],
  0x3A6: [.611, 0, .525],
  0x3A7: [.611, 0, .525],
  0x3A8: [.611, 0, .525],
  0x3A9: [.622, 0, .525],
  0x2017: [-0.025, .095, .525],
  0x2032: [.623, -0.334, .525],
  0x2033: [.623, 0, 1.05],
  0x2034: [.623, 0, 1.575],
  0x2044: [.694, .083, .525],
  0x2057: [.623, 0, 2.1],
  0x2206: [.623, 0, .525]
};

/***/ }),

/***/ 3245:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.normal = void 0;
exports.normal = {
  0x20: [0, 0, .25],
  0x21: [.716, 0, .278],
  0x22: [.694, -0.379, .5],
  0x23: [.694, .194, .833],
  0x24: [.75, .056, .5],
  0x25: [.75, .056, .833],
  0x26: [.716, .022, .778],
  0x27: [.694, -0.379, .278],
  0x28: [.75, .25, .389],
  0x29: [.75, .25, .389],
  0x2A: [.75, -0.32, .5],
  0x2B: [.583, .082, .778],
  0x2C: [.121, .194, .278],
  0x2D: [.252, -0.179, .333],
  0x2E: [.12, 0, .278],
  0x2F: [.75, .25, .5],
  0x30: [.666, .022, .5],
  0x31: [.666, 0, .5],
  0x32: [.666, 0, .5],
  0x33: [.665, .022, .5],
  0x34: [.677, 0, .5],
  0x35: [.666, .022, .5],
  0x36: [.666, .022, .5],
  0x37: [.676, .022, .5],
  0x38: [.666, .022, .5],
  0x39: [.666, .022, .5],
  0x3A: [.43, 0, .278],
  0x3B: [.43, .194, .278],
  0x3C: [.54, .04, .778],
  0x3D: [.583, .082, .778],
  0x3E: [.54, .04, .778],
  0x3F: [.705, 0, .472],
  0x40: [.705, .011, .778],
  0x41: [.716, 0, .75],
  0x42: [.683, 0, .708],
  0x43: [.705, .021, .722],
  0x44: [.683, 0, .764],
  0x45: [.68, 0, .681],
  0x46: [.68, 0, .653],
  0x47: [.705, .022, .785],
  0x48: [.683, 0, .75],
  0x49: [.683, 0, .361],
  0x4A: [.683, .022, .514],
  0x4B: [.683, 0, .778],
  0x4C: [.683, 0, .625],
  0x4D: [.683, 0, .917],
  0x4E: [.683, 0, .75],
  0x4F: [.705, .022, .778],
  0x50: [.683, 0, .681],
  0x51: [.705, .193, .778],
  0x52: [.683, .022, .736],
  0x53: [.705, .022, .556],
  0x54: [.677, 0, .722],
  0x55: [.683, .022, .75],
  0x56: [.683, .022, .75],
  0x57: [.683, .022, 1.028],
  0x58: [.683, 0, .75],
  0x59: [.683, 0, .75],
  0x5A: [.683, 0, .611],
  0x5B: [.75, .25, .278],
  0x5C: [.75, .25, .5],
  0x5D: [.75, .25, .278],
  0x5E: [.694, -0.531, .5],
  0x5F: [-0.025, .062, .5],
  0x60: [.699, -0.505, .5],
  0x61: [.448, .011, .5],
  0x62: [.694, .011, .556],
  0x63: [.448, .011, .444],
  0x64: [.694, .011, .556],
  0x65: [.448, .011, .444],
  0x66: [.705, 0, .306, {
    ic: .066
  }],
  0x67: [.453, .206, .5],
  0x68: [.694, 0, .556],
  0x69: [.669, 0, .278],
  0x6A: [.669, .205, .306],
  0x6B: [.694, 0, .528],
  0x6C: [.694, 0, .278],
  0x6D: [.442, 0, .833],
  0x6E: [.442, 0, .556],
  0x6F: [.448, .01, .5],
  0x70: [.442, .194, .556],
  0x71: [.442, .194, .528],
  0x72: [.442, 0, .392],
  0x73: [.448, .011, .394],
  0x74: [.615, .01, .389],
  0x75: [.442, .011, .556],
  0x76: [.431, .011, .528],
  0x77: [.431, .011, .722],
  0x78: [.431, 0, .528],
  0x79: [.431, .204, .528],
  0x7A: [.431, 0, .444],
  0x7B: [.75, .25, .5],
  0x7C: [.75, .249, .278],
  0x7D: [.75, .25, .5],
  0x7E: [.318, -0.215, .5],
  0xA0: [0, 0, .25],
  0xA3: [.714, .011, .769],
  0xA5: [.683, 0, .75],
  0xA8: [.669, -0.554, .5],
  0xAC: [.356, -0.089, .667],
  0xAE: [.709, .175, .947],
  0xAF: [.59, -0.544, .5],
  0xB0: [.715, -0.542, .5],
  0xB1: [.666, 0, .778],
  0xB4: [.699, -0.505, .5],
  0xB7: [.31, -0.19, .278],
  0xD7: [.491, -0.009, .778],
  0xF0: [.749, .021, .556],
  0xF7: [.537, .036, .778],
  0x131: [.442, 0, .278, {
    sk: .0278
  }],
  0x237: [.442, .205, .306, {
    sk: .0833
  }],
  0x2B9: [.56, -0.043, .275],
  0x2C6: [.694, -0.531, .5],
  0x2C7: [.644, -0.513, .5],
  0x2C9: [.59, -0.544, .5],
  0x2CA: [.699, -0.505, .5],
  0x2CB: [.699, -0.505, .5],
  0x2D8: [.694, -0.515, .5],
  0x2D9: [.669, -0.549, .5],
  0x2DA: [.715, -0.542, .5],
  0x2DC: [.668, -0.565, .5],
  0x300: [.699, -0.505, 0],
  0x301: [.699, -0.505, 0],
  0x302: [.694, -0.531, 0],
  0x303: [.668, -0.565, 0],
  0x304: [.59, -0.544, 0],
  0x306: [.694, -0.515, 0],
  0x307: [.669, -0.549, 0],
  0x308: [.669, -0.554, 0],
  0x30A: [.715, -0.542, 0],
  0x30B: [.701, -0.51, 0],
  0x30C: [.644, -0.513, 0],
  0x338: [.716, .215, 0],
  0x391: [.716, 0, .75],
  0x392: [.683, 0, .708],
  0x393: [.68, 0, .625],
  0x394: [.716, 0, .833],
  0x395: [.68, 0, .681],
  0x396: [.683, 0, .611],
  0x397: [.683, 0, .75],
  0x398: [.705, .022, .778],
  0x399: [.683, 0, .361],
  0x39A: [.683, 0, .778],
  0x39B: [.716, 0, .694],
  0x39C: [.683, 0, .917],
  0x39D: [.683, 0, .75],
  0x39E: [.677, 0, .667],
  0x39F: [.705, .022, .778],
  0x3A0: [.68, 0, .75],
  0x3A1: [.683, 0, .681],
  0x3A3: [.683, 0, .722],
  0x3A4: [.677, 0, .722],
  0x3A5: [.705, 0, .778],
  0x3A6: [.683, 0, .722],
  0x3A7: [.683, 0, .75],
  0x3A8: [.683, 0, .778],
  0x3A9: [.704, 0, .722],
  0x2000: [0, 0, .5],
  0x2001: [0, 0, 1],
  0x2002: [0, 0, .5],
  0x2003: [0, 0, 1],
  0x2004: [0, 0, .333],
  0x2005: [0, 0, .25],
  0x2006: [0, 0, .167],
  0x2009: [0, 0, .167],
  0x200A: [0, 0, .1],
  0x200B: [0, 0, 0],
  0x200C: [0, 0, 0],
  0x2013: [.285, -0.248, .5],
  0x2014: [.285, -0.248, 1],
  0x2015: [.285, -0.248, 1],
  0x2016: [.75, .25, .5],
  0x2017: [-0.025, .062, .5],
  0x2018: [.694, -0.379, .278],
  0x2019: [.694, -0.379, .278],
  0x201C: [.694, -0.379, .5],
  0x201D: [.694, -0.379, .5],
  0x2020: [.705, .216, .444],
  0x2021: [.705, .205, .444],
  0x2022: [.444, -0.055, .5],
  0x2026: [.12, 0, 1.172],
  0x2032: [.56, -0.043, .275],
  0x2033: [.56, 0, .55],
  0x2034: [.56, 0, .825],
  0x2035: [.56, -0.043, .275],
  0x2036: [.56, 0, .55],
  0x2037: [.56, 0, .825],
  0x203E: [.59, -0.544, .5],
  0x2044: [.75, .25, .5],
  0x2057: [.56, 0, 1.1],
  0x2060: [0, 0, 0],
  0x2061: [0, 0, 0],
  0x2062: [0, 0, 0],
  0x2063: [0, 0, 0],
  0x2064: [0, 0, 0],
  0x20D7: [.714, -0.516, .5],
  0x2102: [.702, .019, .722],
  0x210B: [.717, .036, .969, {
    ic: .272,
    sk: .333
  }],
  0x210C: [.666, .133, .72],
  0x210D: [.683, 0, .778],
  0x210E: [.694, .011, .576, {
    sk: -0.0278
  }],
  0x210F: [.695, .013, .54, {
    ic: .022
  }],
  0x2110: [.717, .017, .809, {
    ic: .137,
    sk: .333
  }],
  0x2111: [.686, .026, .554],
  0x2112: [.717, .017, .874, {
    ic: .161,
    sk: .306
  }],
  0x2113: [.705, .02, .417, {
    sk: .111
  }],
  0x2115: [.683, .02, .722],
  0x2118: [.453, .216, .636, {
    sk: .111
  }],
  0x2119: [.683, 0, .611],
  0x211A: [.701, .181, .778],
  0x211B: [.717, .017, .85, {
    ic: .037,
    sk: .194
  }],
  0x211C: [.686, .026, .828],
  0x211D: [.683, 0, .722],
  0x2124: [.683, 0, .667],
  0x2126: [.704, 0, .722],
  0x2127: [.684, .022, .722],
  0x2128: [.729, .139, .602],
  0x212C: [.708, .028, .908, {
    ic: .02,
    sk: .194
  }],
  0x212D: [.685, .024, .613],
  0x2130: [.707, .008, .562, {
    ic: .156,
    sk: .139
  }],
  0x2131: [.735, .036, .895, {
    ic: .095,
    sk: .222
  }],
  0x2132: [.695, 0, .556],
  0x2133: [.721, .05, 1.08, {
    ic: .136,
    sk: .444
  }],
  0x2135: [.694, 0, .611],
  0x2136: [.763, .021, .667, {
    ic: .02
  }],
  0x2137: [.764, .043, .444],
  0x2138: [.764, .043, .667],
  0x2141: [.705, .023, .639],
  0x2190: [.511, .011, 1],
  0x2191: [.694, .193, .5],
  0x2192: [.511, .011, 1],
  0x2193: [.694, .194, .5],
  0x2194: [.511, .011, 1],
  0x2195: [.772, .272, .5],
  0x2196: [.72, .195, 1],
  0x2197: [.72, .195, 1],
  0x2198: [.695, .22, 1],
  0x2199: [.695, .22, 1],
  0x219A: [.437, -0.06, 1],
  0x219B: [.437, -0.06, 1],
  0x219E: [.417, -0.083, 1],
  0x21A0: [.417, -0.083, 1],
  0x21A2: [.417, -0.083, 1.111],
  0x21A3: [.417, -0.083, 1.111],
  0x21A6: [.511, .011, 1],
  0x21A9: [.511, .011, 1.126],
  0x21AA: [.511, .011, 1.126],
  0x21AB: [.575, .041, 1],
  0x21AC: [.575, .041, 1],
  0x21AD: [.417, -0.083, 1.389],
  0x21AE: [.437, -0.06, 1],
  0x21B0: [.722, 0, .5],
  0x21B1: [.722, 0, .5],
  0x21B6: [.461, 0, 1],
  0x21B7: [.46, 0, 1],
  0x21BA: [.65, .083, .778],
  0x21BB: [.65, .083, .778],
  0x21BC: [.511, -0.23, 1],
  0x21BD: [.27, .011, 1],
  0x21BE: [.694, .194, .417],
  0x21BF: [.694, .194, .417],
  0x21C0: [.511, -0.23, 1],
  0x21C1: [.27, .011, 1],
  0x21C2: [.694, .194, .417],
  0x21C3: [.694, .194, .417],
  0x21C4: [.667, 0, 1],
  0x21C6: [.667, 0, 1],
  0x21C7: [.583, .083, 1],
  0x21C8: [.694, .193, .833],
  0x21C9: [.583, .083, 1],
  0x21CA: [.694, .194, .833],
  0x21CB: [.514, .014, 1],
  0x21CC: [.671, .011, 1],
  0x21CD: [.534, .035, 1],
  0x21CE: [.534, .037, 1],
  0x21CF: [.534, .035, 1],
  0x21D0: [.525, .024, 1],
  0x21D1: [.694, .194, .611],
  0x21D2: [.525, .024, 1],
  0x21D3: [.694, .194, .611],
  0x21D4: [.526, .025, 1],
  0x21D5: [.772, .272, .611],
  0x21DA: [.611, .111, 1],
  0x21DB: [.611, .111, 1],
  0x21DD: [.417, -0.083, 1],
  0x21E0: [.437, -0.064, 1.334],
  0x21E2: [.437, -0.064, 1.334],
  0x2200: [.694, .022, .556],
  0x2201: [.846, .021, .5],
  0x2202: [.715, .022, .531, {
    ic: .035,
    sk: .0833
  }],
  0x2203: [.694, 0, .556],
  0x2204: [.716, .215, .556],
  0x2205: [.772, .078, .5],
  0x2206: [.716, 0, .833],
  0x2207: [.683, .033, .833],
  0x2208: [.54, .04, .667],
  0x2209: [.716, .215, .667],
  0x220B: [.54, .04, .667],
  0x220C: [.716, .215, .667],
  0x220D: [.44, 0, .429, {
    ic: .027
  }],
  0x220F: [.75, .25, .944],
  0x2210: [.75, .25, .944],
  0x2211: [.75, .25, 1.056],
  0x2212: [.583, .082, .778],
  0x2213: [.5, .166, .778],
  0x2214: [.766, .093, .778],
  0x2215: [.75, .25, .5],
  0x2216: [.75, .25, .5],
  0x2217: [.465, -0.035, .5],
  0x2218: [.444, -0.055, .5],
  0x2219: [.444, -0.055, .5],
  0x221A: [.8, .2, .833, {
    ic: .02
  }],
  0x221D: [.442, .011, .778],
  0x221E: [.442, .011, 1],
  0x2220: [.694, 0, .722],
  0x2221: [.714, .02, .722],
  0x2222: [.551, .051, .722],
  0x2223: [.75, .249, .278],
  0x2224: [.75, .252, .278, {
    ic: .019
  }],
  0x2225: [.75, .25, .5],
  0x2226: [.75, .25, .5, {
    ic: .018
  }],
  0x2227: [.598, .022, .667],
  0x2228: [.598, .022, .667],
  0x2229: [.598, .022, .667],
  0x222A: [.598, .022, .667],
  0x222B: [.716, .216, .417, {
    ic: .055
  }],
  0x222C: [.805, .306, .819, {
    ic: .138
  }],
  0x222D: [.805, .306, 1.166, {
    ic: .138
  }],
  0x222E: [.805, .306, .472, {
    ic: .138
  }],
  0x2234: [.471, .082, .667],
  0x2235: [.471, .082, .667],
  0x223C: [.367, -0.133, .778],
  0x223D: [.367, -0.133, .778],
  0x2240: [.583, .083, .278],
  0x2241: [.467, -0.032, .778],
  0x2242: [.463, -0.034, .778],
  0x2243: [.464, -0.036, .778],
  0x2244: [.716, .215, .778],
  0x2245: [.589, -0.022, .778],
  0x2247: [.652, .155, .778],
  0x2248: [.483, -0.055, .778],
  0x2249: [.716, .215, .778],
  0x224A: [.579, .039, .778],
  0x224D: [.484, -0.016, .778],
  0x224E: [.492, -0.008, .778],
  0x224F: [.492, -0.133, .778],
  0x2250: [.67, -0.133, .778],
  0x2251: [.609, .108, .778],
  0x2252: [.601, .101, .778],
  0x2253: [.601, .102, .778],
  0x2256: [.367, -0.133, .778],
  0x2257: [.721, -0.133, .778],
  0x225C: [.859, -0.133, .778],
  0x2260: [.716, .215, .778],
  0x2261: [.464, -0.036, .778],
  0x2262: [.716, .215, .778],
  0x2264: [.636, .138, .778],
  0x2265: [.636, .138, .778],
  0x2266: [.753, .175, .778],
  0x2267: [.753, .175, .778],
  0x2268: [.752, .286, .778],
  0x2269: [.752, .286, .778],
  0x226A: [.568, .067, 1],
  0x226B: [.567, .067, 1],
  0x226C: [.75, .25, .5],
  0x226D: [.716, .215, .778],
  0x226E: [.708, .209, .778],
  0x226F: [.708, .209, .778],
  0x2270: [.801, .303, .778],
  0x2271: [.801, .303, .778],
  0x2272: [.732, .228, .778],
  0x2273: [.732, .228, .778],
  0x2274: [.732, .228, .778],
  0x2275: [.732, .228, .778],
  0x2276: [.681, .253, .778],
  0x2277: [.681, .253, .778],
  0x2278: [.716, .253, .778],
  0x2279: [.716, .253, .778],
  0x227A: [.539, .041, .778],
  0x227B: [.539, .041, .778],
  0x227C: [.58, .153, .778],
  0x227D: [.58, .154, .778],
  0x227E: [.732, .228, .778],
  0x227F: [.732, .228, .778],
  0x2280: [.705, .208, .778],
  0x2281: [.705, .208, .778],
  0x2282: [.54, .04, .778],
  0x2283: [.54, .04, .778],
  0x2284: [.716, .215, .778],
  0x2285: [.716, .215, .778],
  0x2286: [.636, .138, .778],
  0x2287: [.636, .138, .778],
  0x2288: [.801, .303, .778],
  0x2289: [.801, .303, .778],
  0x228A: [.635, .241, .778],
  0x228B: [.635, .241, .778],
  0x228E: [.598, .022, .667],
  0x228F: [.539, .041, .778],
  0x2290: [.539, .041, .778],
  0x2291: [.636, .138, .778],
  0x2292: [.636, .138, .778],
  0x2293: [.598, 0, .667],
  0x2294: [.598, 0, .667],
  0x2295: [.583, .083, .778],
  0x2296: [.583, .083, .778],
  0x2297: [.583, .083, .778],
  0x2298: [.583, .083, .778],
  0x2299: [.583, .083, .778],
  0x229A: [.582, .082, .778],
  0x229B: [.582, .082, .778],
  0x229D: [.582, .082, .778],
  0x229E: [.689, 0, .778],
  0x229F: [.689, 0, .778],
  0x22A0: [.689, 0, .778],
  0x22A1: [.689, 0, .778],
  0x22A2: [.694, 0, .611],
  0x22A3: [.694, 0, .611],
  0x22A4: [.668, 0, .778],
  0x22A5: [.668, 0, .778],
  0x22A8: [.75, .249, .867],
  0x22A9: [.694, 0, .722],
  0x22AA: [.694, 0, .889],
  0x22AC: [.695, 0, .611],
  0x22AD: [.695, 0, .611],
  0x22AE: [.695, 0, .722],
  0x22AF: [.695, 0, .722],
  0x22B2: [.539, .041, .778],
  0x22B3: [.539, .041, .778],
  0x22B4: [.636, .138, .778],
  0x22B5: [.636, .138, .778],
  0x22B8: [.408, -0.092, 1.111],
  0x22BA: [.431, .212, .556],
  0x22BB: [.716, 0, .611],
  0x22BC: [.716, 0, .611],
  0x22C0: [.75, .249, .833],
  0x22C1: [.75, .249, .833],
  0x22C2: [.75, .249, .833],
  0x22C3: [.75, .249, .833],
  0x22C4: [.488, -0.012, .5],
  0x22C5: [.31, -0.19, .278],
  0x22C6: [.486, -0.016, .5],
  0x22C7: [.545, .044, .778],
  0x22C8: [.505, .005, .9],
  0x22C9: [.492, -0.008, .778],
  0x22CA: [.492, -0.008, .778],
  0x22CB: [.694, .022, .778],
  0x22CC: [.694, .022, .778],
  0x22CD: [.464, -0.036, .778],
  0x22CE: [.578, .021, .76],
  0x22CF: [.578, .022, .76],
  0x22D0: [.54, .04, .778],
  0x22D1: [.54, .04, .778],
  0x22D2: [.598, .022, .667],
  0x22D3: [.598, .022, .667],
  0x22D4: [.736, .022, .667],
  0x22D6: [.541, .041, .778],
  0x22D7: [.541, .041, .778],
  0x22D8: [.568, .067, 1.333],
  0x22D9: [.568, .067, 1.333],
  0x22DA: [.886, .386, .778],
  0x22DB: [.886, .386, .778],
  0x22DE: [.734, 0, .778],
  0x22DF: [.734, 0, .778],
  0x22E0: [.801, .303, .778],
  0x22E1: [.801, .303, .778],
  0x22E2: [.716, .215, .778],
  0x22E3: [.716, .215, .778],
  0x22E6: [.73, .359, .778],
  0x22E7: [.73, .359, .778],
  0x22E8: [.73, .359, .778],
  0x22E9: [.73, .359, .778],
  0x22EA: [.706, .208, .778],
  0x22EB: [.706, .208, .778],
  0x22EC: [.802, .303, .778],
  0x22ED: [.801, .303, .778],
  0x22EE: [1.3, .03, .278],
  0x22EF: [.31, -0.19, 1.172],
  0x22F1: [1.52, -0.1, 1.282],
  0x2305: [.716, 0, .611],
  0x2306: [.813, .097, .611],
  0x2308: [.75, .25, .444],
  0x2309: [.75, .25, .444],
  0x230A: [.75, .25, .444],
  0x230B: [.75, .25, .444],
  0x231C: [.694, -0.306, .5],
  0x231D: [.694, -0.306, .5],
  0x231E: [.366, .022, .5],
  0x231F: [.366, .022, .5],
  0x2322: [.388, -0.122, 1],
  0x2323: [.378, -0.134, 1],
  0x2329: [.75, .25, .389],
  0x232A: [.75, .25, .389],
  0x23B0: [.744, .244, .412],
  0x23B1: [.744, .244, .412],
  0x23D0: [.602, 0, .667],
  0x24C8: [.709, .175, .902],
  0x250C: [.694, -0.306, .5],
  0x2510: [.694, -0.306, .5],
  0x2514: [.366, .022, .5],
  0x2518: [.366, .022, .5],
  0x2571: [.694, .195, .889],
  0x2572: [.694, .195, .889],
  0x25A0: [.689, 0, .778],
  0x25A1: [.689, 0, .778],
  0x25AA: [.689, 0, .778],
  0x25B2: [.575, .02, .722],
  0x25B3: [.716, 0, .889],
  0x25B4: [.575, .02, .722],
  0x25B5: [.716, 0, .889],
  0x25B6: [.539, .041, .778],
  0x25B8: [.539, .041, .778],
  0x25B9: [.505, .005, .5],
  0x25BC: [.576, .019, .722],
  0x25BD: [.5, .215, .889],
  0x25BE: [.576, .019, .722],
  0x25BF: [.5, .215, .889],
  0x25C0: [.539, .041, .778],
  0x25C2: [.539, .041, .778],
  0x25C3: [.505, .005, .5],
  0x25CA: [.716, .132, .667],
  0x25EF: [.715, .215, 1],
  0x25FB: [.689, 0, .778],
  0x25FC: [.689, 0, .778],
  0x2605: [.694, .111, .944],
  0x2660: [.727, .13, .778],
  0x2661: [.716, .033, .778],
  0x2662: [.727, .162, .778],
  0x2663: [.726, .13, .778],
  0x266D: [.75, .022, .389],
  0x266E: [.734, .223, .389],
  0x266F: [.723, .223, .389],
  0x2713: [.706, .034, .833],
  0x2720: [.716, .022, .833],
  0x2758: [.75, .249, .278],
  0x27E8: [.75, .25, .389],
  0x27E9: [.75, .25, .389],
  0x27EE: [.744, .244, .412],
  0x27EF: [.744, .244, .412],
  0x27F5: [.511, .011, 1.609],
  0x27F6: [.511, .011, 1.638],
  0x27F7: [.511, .011, 1.859],
  0x27F8: [.525, .024, 1.609],
  0x27F9: [.525, .024, 1.638],
  0x27FA: [.525, .024, 1.858],
  0x27FC: [.511, .011, 1.638],
  0x29EB: [.716, .132, .667],
  0x29F8: [.716, .215, .778],
  0x2A00: [.75, .25, 1.111],
  0x2A01: [.75, .25, 1.111],
  0x2A02: [.75, .25, 1.111],
  0x2A04: [.75, .249, .833],
  0x2A06: [.75, .249, .833],
  0x2A0C: [.805, .306, 1.638, {
    ic: .138
  }],
  0x2A2F: [.491, -0.009, .778],
  0x2A3F: [.683, 0, .75],
  0x2A5E: [.813, .097, .611],
  0x2A7D: [.636, .138, .778],
  0x2A7E: [.636, .138, .778],
  0x2A85: [.762, .29, .778],
  0x2A86: [.762, .29, .778],
  0x2A87: [.635, .241, .778],
  0x2A88: [.635, .241, .778],
  0x2A89: [.761, .387, .778],
  0x2A8A: [.761, .387, .778],
  0x2A8B: [1.003, .463, .778],
  0x2A8C: [1.003, .463, .778],
  0x2A95: [.636, .138, .778],
  0x2A96: [.636, .138, .778],
  0x2AAF: [.636, .138, .778],
  0x2AB0: [.636, .138, .778],
  0x2AB5: [.752, .286, .778],
  0x2AB6: [.752, .286, .778],
  0x2AB7: [.761, .294, .778],
  0x2AB8: [.761, .294, .778],
  0x2AB9: [.761, .337, .778],
  0x2ABA: [.761, .337, .778],
  0x2AC5: [.753, .215, .778],
  0x2AC6: [.753, .215, .778],
  0x2ACB: [.783, .385, .778],
  0x2ACC: [.783, .385, .778],
  0x3008: [.75, .25, .389],
  0x3009: [.75, .25, .389],
  0xE006: [.43, .023, .222, {
    ic: .018
  }],
  0xE007: [.431, .024, .389, {
    ic: .018
  }],
  0xE008: [.605, .085, .778],
  0xE009: [.434, .006, .667, {
    ic: .067
  }],
  0xE00C: [.752, .284, .778],
  0xE00D: [.752, .284, .778],
  0xE00E: [.919, .421, .778],
  0xE00F: [.801, .303, .778],
  0xE010: [.801, .303, .778],
  0xE011: [.919, .421, .778],
  0xE016: [.828, .33, .778],
  0xE017: [.752, .332, .778],
  0xE018: [.828, .33, .778],
  0xE019: [.752, .333, .778],
  0xE01A: [.634, .255, .778],
  0xE01B: [.634, .254, .778],
  0x1D400: [.698, 0, .869],
  0x1D401: [.686, 0, .818],
  0x1D402: [.697, .011, .831],
  0x1D403: [.686, 0, .882],
  0x1D404: [.68, 0, .756],
  0x1D405: [.68, 0, .724],
  0x1D406: [.697, .01, .904],
  0x1D407: [.686, 0, .9],
  0x1D408: [.686, 0, .436],
  0x1D409: [.686, .011, .594],
  0x1D40A: [.686, 0, .901],
  0x1D40B: [.686, 0, .692],
  0x1D40C: [.686, 0, 1.092],
  0x1D40D: [.686, 0, .9],
  0x1D40E: [.696, .01, .864],
  0x1D40F: [.686, 0, .786],
  0x1D410: [.696, .193, .864],
  0x1D411: [.686, .011, .862],
  0x1D412: [.697, .011, .639],
  0x1D413: [.675, 0, .8],
  0x1D414: [.686, .011, .885],
  0x1D415: [.686, .007, .869],
  0x1D416: [.686, .007, 1.189],
  0x1D417: [.686, 0, .869],
  0x1D418: [.686, 0, .869],
  0x1D419: [.686, 0, .703],
  0x1D41A: [.453, .006, .559],
  0x1D41B: [.694, .006, .639],
  0x1D41C: [.453, .006, .511],
  0x1D41D: [.694, .006, .639],
  0x1D41E: [.452, .006, .527],
  0x1D41F: [.7, 0, .351, {
    ic: .101
  }],
  0x1D420: [.455, .201, .575],
  0x1D421: [.694, 0, .639],
  0x1D422: [.695, 0, .319],
  0x1D423: [.695, .2, .351],
  0x1D424: [.694, 0, .607],
  0x1D425: [.694, 0, .319],
  0x1D426: [.45, 0, .958],
  0x1D427: [.45, 0, .639],
  0x1D428: [.452, .005, .575],
  0x1D429: [.45, .194, .639],
  0x1D42A: [.45, .194, .607],
  0x1D42B: [.45, 0, .474],
  0x1D42C: [.453, .006, .454],
  0x1D42D: [.635, .005, .447],
  0x1D42E: [.45, .006, .639],
  0x1D42F: [.444, 0, .607],
  0x1D430: [.444, 0, .831],
  0x1D431: [.444, 0, .607],
  0x1D432: [.444, .2, .607],
  0x1D433: [.444, 0, .511],
  0x1D434: [.716, 0, .75, {
    sk: .139
  }],
  0x1D435: [.683, 0, .759, {
    sk: .0833
  }],
  0x1D436: [.705, .022, .715, {
    ic: .045,
    sk: .0833
  }],
  0x1D437: [.683, 0, .828, {
    sk: .0556
  }],
  0x1D438: [.68, 0, .738, {
    ic: .026,
    sk: .0833
  }],
  0x1D439: [.68, 0, .643, {
    ic: .106,
    sk: .0833
  }],
  0x1D43A: [.705, .022, .786, {
    sk: .0833
  }],
  0x1D43B: [.683, 0, .831, {
    ic: .057,
    sk: .0556
  }],
  0x1D43C: [.683, 0, .44, {
    ic: .064,
    sk: .111
  }],
  0x1D43D: [.683, .022, .555, {
    ic: .078,
    sk: .167
  }],
  0x1D43E: [.683, 0, .849, {
    ic: .04,
    sk: .0556
  }],
  0x1D43F: [.683, 0, .681, {
    sk: .0278
  }],
  0x1D440: [.683, 0, .97, {
    ic: .081,
    sk: .0833
  }],
  0x1D441: [.683, 0, .803, {
    ic: .085,
    sk: .0833
  }],
  0x1D442: [.704, .022, .763, {
    sk: .0833
  }],
  0x1D443: [.683, 0, .642, {
    ic: .109,
    sk: .0833
  }],
  0x1D444: [.704, .194, .791, {
    sk: .0833
  }],
  0x1D445: [.683, .021, .759, {
    sk: .0833
  }],
  0x1D446: [.705, .022, .613, {
    ic: .032,
    sk: .0833
  }],
  0x1D447: [.677, 0, .584, {
    ic: .12,
    sk: .0833
  }],
  0x1D448: [.683, .022, .683, {
    ic: .084,
    sk: .0278
  }],
  0x1D449: [.683, .022, .583, {
    ic: .186
  }],
  0x1D44A: [.683, .022, .944, {
    ic: .104
  }],
  0x1D44B: [.683, 0, .828, {
    ic: .024,
    sk: .0833
  }],
  0x1D44C: [.683, 0, .581, {
    ic: .182
  }],
  0x1D44D: [.683, 0, .683, {
    ic: .04,
    sk: .0833
  }],
  0x1D44E: [.441, .01, .529],
  0x1D44F: [.694, .011, .429],
  0x1D450: [.442, .011, .433, {
    sk: .0556
  }],
  0x1D451: [.694, .01, .52, {
    sk: .167
  }],
  0x1D452: [.442, .011, .466, {
    sk: .0556
  }],
  0x1D453: [.705, .205, .49, {
    ic: .06,
    sk: .167
  }],
  0x1D454: [.442, .205, .477, {
    sk: .0278
  }],
  0x1D456: [.661, .011, .345],
  0x1D457: [.661, .204, .412],
  0x1D458: [.694, .011, .521],
  0x1D459: [.694, .011, .298, {
    sk: .0833
  }],
  0x1D45A: [.442, .011, .878],
  0x1D45B: [.442, .011, .6],
  0x1D45C: [.441, .011, .485, {
    sk: .0556
  }],
  0x1D45D: [.442, .194, .503, {
    sk: .0833
  }],
  0x1D45E: [.442, .194, .446, {
    ic: .014,
    sk: .0833
  }],
  0x1D45F: [.442, .011, .451, {
    sk: .0556
  }],
  0x1D460: [.442, .01, .469, {
    sk: .0556
  }],
  0x1D461: [.626, .011, .361, {
    sk: .0833
  }],
  0x1D462: [.442, .011, .572, {
    sk: .0278
  }],
  0x1D463: [.443, .011, .485, {
    sk: .0278
  }],
  0x1D464: [.443, .011, .716, {
    sk: .0833
  }],
  0x1D465: [.442, .011, .572, {
    sk: .0278
  }],
  0x1D466: [.442, .205, .49, {
    sk: .0556
  }],
  0x1D467: [.442, .011, .465, {
    sk: .0556
  }],
  0x1D468: [.711, 0, .869, {
    sk: .16
  }],
  0x1D469: [.686, 0, .866, {
    sk: .0958
  }],
  0x1D46A: [.703, .017, .817, {
    ic: .038,
    sk: .0958
  }],
  0x1D46B: [.686, 0, .938, {
    sk: .0639
  }],
  0x1D46C: [.68, 0, .81, {
    ic: .015,
    sk: .0958
  }],
  0x1D46D: [.68, 0, .689, {
    ic: .12,
    sk: .0958
  }],
  0x1D46E: [.703, .016, .887, {
    sk: .0958
  }],
  0x1D46F: [.686, 0, .982, {
    ic: .045,
    sk: .0639
  }],
  0x1D470: [.686, 0, .511, {
    ic: .062,
    sk: .128
  }],
  0x1D471: [.686, .017, .631, {
    ic: .063,
    sk: .192
  }],
  0x1D472: [.686, 0, .971, {
    ic: .032,
    sk: .0639
  }],
  0x1D473: [.686, 0, .756, {
    sk: .0319
  }],
  0x1D474: [.686, 0, 1.142, {
    ic: .077,
    sk: .0958
  }],
  0x1D475: [.686, 0, .95, {
    ic: .077,
    sk: .0958
  }],
  0x1D476: [.703, .017, .837, {
    sk: .0958
  }],
  0x1D477: [.686, 0, .723, {
    ic: .124,
    sk: .0958
  }],
  0x1D478: [.703, .194, .869, {
    sk: .0958
  }],
  0x1D479: [.686, .017, .872, {
    sk: .0958
  }],
  0x1D47A: [.703, .017, .693, {
    ic: .021,
    sk: .0958
  }],
  0x1D47B: [.675, 0, .637, {
    ic: .135,
    sk: .0958
  }],
  0x1D47C: [.686, .016, .8, {
    ic: .077,
    sk: .0319
  }],
  0x1D47D: [.686, .016, .678, {
    ic: .208
  }],
  0x1D47E: [.686, .017, 1.093, {
    ic: .114
  }],
  0x1D47F: [.686, 0, .947, {
    sk: .0958
  }],
  0x1D480: [.686, 0, .675, {
    ic: .201
  }],
  0x1D481: [.686, 0, .773, {
    ic: .032,
    sk: .0958
  }],
  0x1D482: [.452, .008, .633],
  0x1D483: [.694, .008, .521],
  0x1D484: [.451, .008, .513, {
    sk: .0639
  }],
  0x1D485: [.694, .008, .61, {
    sk: .192
  }],
  0x1D486: [.452, .008, .554, {
    sk: .0639
  }],
  0x1D487: [.701, .201, .568, {
    ic: .056,
    sk: .192
  }],
  0x1D488: [.452, .202, .545, {
    sk: .0319
  }],
  0x1D489: [.694, .008, .668, {
    sk: -0.0319
  }],
  0x1D48A: [.694, .008, .405],
  0x1D48B: [.694, .202, .471],
  0x1D48C: [.694, .008, .604],
  0x1D48D: [.694, .008, .348, {
    sk: .0958
  }],
  0x1D48E: [.452, .008, 1.032],
  0x1D48F: [.452, .008, .713],
  0x1D490: [.452, .008, .585, {
    sk: .0639
  }],
  0x1D491: [.452, .194, .601, {
    sk: .0958
  }],
  0x1D492: [.452, .194, .542, {
    sk: .0958
  }],
  0x1D493: [.452, .008, .529, {
    sk: .0639
  }],
  0x1D494: [.451, .008, .531, {
    sk: .0639
  }],
  0x1D495: [.643, .007, .415, {
    sk: .0958
  }],
  0x1D496: [.452, .008, .681, {
    sk: .0319
  }],
  0x1D497: [.453, .008, .567, {
    sk: .0319
  }],
  0x1D498: [.453, .008, .831, {
    sk: .0958
  }],
  0x1D499: [.452, .008, .659, {
    sk: .0319
  }],
  0x1D49A: [.452, .202, .59, {
    sk: .0639
  }],
  0x1D49B: [.452, .008, .555, {
    sk: .0639
  }],
  0x1D49C: [.717, .008, .803, {
    ic: .213,
    sk: .389
  }],
  0x1D49E: [.728, .026, .666, {
    ic: .153,
    sk: .278
  }],
  0x1D49F: [.708, .031, .774, {
    ic: .081,
    sk: .111
  }],
  0x1D4A2: [.717, .037, .61, {
    ic: .128,
    sk: .25
  }],
  0x1D4A5: [.717, .314, 1.052, {
    ic: .081,
    sk: .417
  }],
  0x1D4A6: [.717, .037, .914, {
    ic: .29,
    sk: .361
  }],
  0x1D4A9: [.726, .036, .902, {
    ic: .306,
    sk: .389
  }],
  0x1D4AA: [.707, .008, .738, {
    ic: .067,
    sk: .167
  }],
  0x1D4AB: [.716, .037, 1.013, {
    ic: .018,
    sk: .222
  }],
  0x1D4AC: [.717, .017, .883, {
    sk: .278
  }],
  0x1D4AE: [.708, .036, .868, {
    ic: .148,
    sk: .333
  }],
  0x1D4AF: [.735, .037, .747, {
    ic: .249,
    sk: .222
  }],
  0x1D4B0: [.717, .017, .8, {
    ic: .16,
    sk: .25
  }],
  0x1D4B1: [.717, .017, .622, {
    ic: .228,
    sk: .222
  }],
  0x1D4B2: [.717, .017, .805, {
    ic: .221,
    sk: .25
  }],
  0x1D4B3: [.717, .017, .944, {
    ic: .187,
    sk: .278
  }],
  0x1D4B4: [.716, .017, .71, {
    ic: .249,
    sk: .194
  }],
  0x1D4B5: [.717, .016, .821, {
    ic: .211,
    sk: .306
  }],
  0x1D504: [.696, .026, .718],
  0x1D505: [.691, .027, .884],
  0x1D507: [.685, .027, .832],
  0x1D508: [.685, .024, .663],
  0x1D509: [.686, .153, .611],
  0x1D50A: [.69, .026, .785],
  0x1D50D: [.686, .139, .552],
  0x1D50E: [.68, .027, .668, {
    ic: .014
  }],
  0x1D50F: [.686, .026, .666],
  0x1D510: [.692, .027, 1.05],
  0x1D511: [.686, .025, .832],
  0x1D512: [.729, .027, .827],
  0x1D513: [.692, .218, .828],
  0x1D514: [.729, .069, .827],
  0x1D516: [.692, .027, .829],
  0x1D517: [.701, .027, .669],
  0x1D518: [.697, .027, .646, {
    ic: .019
  }],
  0x1D519: [.686, .026, .831],
  0x1D51A: [.686, .027, 1.046],
  0x1D51B: [.688, .027, .719],
  0x1D51C: [.686, .218, .833],
  0x1D51E: [.47, .035, .5],
  0x1D51F: [.685, .031, .513],
  0x1D520: [.466, .029, .389],
  0x1D521: [.609, .033, .499],
  0x1D522: [.467, .03, .401],
  0x1D523: [.681, .221, .326],
  0x1D524: [.47, .209, .504],
  0x1D525: [.688, .205, .521],
  0x1D526: [.673, .02, .279],
  0x1D527: [.672, .208, .281],
  0x1D528: [.689, .025, .389],
  0x1D529: [.685, .02, .28],
  0x1D52A: [.475, .026, .767],
  0x1D52B: [.475, .022, .527],
  0x1D52C: [.48, .028, .489],
  0x1D52D: [.541, .212, .5],
  0x1D52E: [.479, .219, .489],
  0x1D52F: [.474, .021, .389],
  0x1D530: [.478, .029, .443],
  0x1D531: [.64, .02, .333, {
    ic: .015
  }],
  0x1D532: [.474, .023, .517],
  0x1D533: [.53, .028, .512],
  0x1D534: [.532, .028, .774],
  0x1D535: [.472, .188, .389],
  0x1D536: [.528, .218, .499],
  0x1D537: [.471, .214, .391],
  0x1D538: [.701, 0, .722],
  0x1D539: [.683, 0, .667],
  0x1D53B: [.683, 0, .722],
  0x1D53C: [.683, 0, .667],
  0x1D53D: [.683, 0, .611],
  0x1D53E: [.702, .019, .778],
  0x1D540: [.683, 0, .389],
  0x1D541: [.683, .077, .5],
  0x1D542: [.683, 0, .778],
  0x1D543: [.683, 0, .667],
  0x1D544: [.683, 0, .944],
  0x1D546: [.701, .019, .778],
  0x1D54A: [.702, .012, .556],
  0x1D54B: [.683, 0, .667],
  0x1D54C: [.683, .019, .722],
  0x1D54D: [.683, .02, .722],
  0x1D54E: [.683, .019, 1],
  0x1D54F: [.683, 0, .722],
  0x1D550: [.683, 0, .722],
  0x1D56C: [.686, .031, .847],
  0x1D56D: [.684, .031, 1.044],
  0x1D56E: [.676, .032, .723],
  0x1D56F: [.683, .029, .982],
  0x1D570: [.686, .029, .783],
  0x1D571: [.684, .146, .722],
  0x1D572: [.687, .029, .927],
  0x1D573: [.683, .126, .851],
  0x1D574: [.681, .025, .655],
  0x1D575: [.68, .141, .652],
  0x1D576: [.681, .026, .789, {
    ic: .017
  }],
  0x1D577: [.683, .028, .786],
  0x1D578: [.683, .032, 1.239],
  0x1D579: [.679, .03, .983],
  0x1D57A: [.726, .03, .976],
  0x1D57B: [.688, .223, .977],
  0x1D57C: [.726, .083, .976],
  0x1D57D: [.688, .028, .978],
  0x1D57E: [.685, .031, .978],
  0x1D57F: [.686, .03, .79, {
    ic: .012
  }],
  0x1D580: [.688, .039, .851, {
    ic: .02
  }],
  0x1D581: [.685, .029, .982],
  0x1D582: [.683, .03, 1.235],
  0x1D583: [.681, .035, .849],
  0x1D584: [.688, .214, .984],
  0x1D585: [.677, .148, .711],
  0x1D586: [.472, .032, .603],
  0x1D587: [.69, .032, .59],
  0x1D588: [.473, .026, .464],
  0x1D589: [.632, .028, .589],
  0x1D58A: [.471, .027, .472],
  0x1D58B: [.687, .222, .388],
  0x1D58C: [.472, .208, .595],
  0x1D58D: [.687, .207, .615],
  0x1D58E: [.686, .025, .331],
  0x1D58F: [.682, .203, .332],
  0x1D590: [.682, .025, .464],
  0x1D591: [.681, .024, .337],
  0x1D592: [.476, .031, .921],
  0x1D593: [.473, .028, .654],
  0x1D594: [.482, .034, .609],
  0x1D595: [.557, .207, .604],
  0x1D596: [.485, .211, .596],
  0x1D597: [.472, .026, .46],
  0x1D598: [.479, .034, .523],
  0x1D599: [.648, .027, .393, {
    ic: .014
  }],
  0x1D59A: [.472, .032, .589, {
    ic: .014
  }],
  0x1D59B: [.546, .027, .604],
  0x1D59C: [.549, .032, .918],
  0x1D59D: [.471, .188, .459],
  0x1D59E: [.557, .221, .589],
  0x1D59F: [.471, .214, .461],
  0x1D5A0: [.694, 0, .667],
  0x1D5A1: [.694, 0, .667],
  0x1D5A2: [.705, .011, .639],
  0x1D5A3: [.694, 0, .722],
  0x1D5A4: [.691, 0, .597],
  0x1D5A5: [.691, 0, .569],
  0x1D5A6: [.704, .011, .667],
  0x1D5A7: [.694, 0, .708],
  0x1D5A8: [.694, 0, .278],
  0x1D5A9: [.694, .022, .472],
  0x1D5AA: [.694, 0, .694],
  0x1D5AB: [.694, 0, .542],
  0x1D5AC: [.694, 0, .875],
  0x1D5AD: [.694, 0, .708],
  0x1D5AE: [.715, .022, .736],
  0x1D5AF: [.694, 0, .639],
  0x1D5B0: [.715, .125, .736],
  0x1D5B1: [.694, 0, .646],
  0x1D5B2: [.716, .022, .556],
  0x1D5B3: [.688, 0, .681],
  0x1D5B4: [.694, .022, .688],
  0x1D5B5: [.694, 0, .667],
  0x1D5B6: [.694, 0, .944],
  0x1D5B7: [.694, 0, .667],
  0x1D5B8: [.694, 0, .667],
  0x1D5B9: [.694, 0, .611],
  0x1D5BA: [.46, .01, .481],
  0x1D5BB: [.694, .011, .517],
  0x1D5BC: [.46, .01, .444],
  0x1D5BD: [.694, .01, .517],
  0x1D5BE: [.461, .01, .444],
  0x1D5BF: [.705, 0, .306, {
    ic: .041
  }],
  0x1D5C0: [.455, .206, .5],
  0x1D5C1: [.694, 0, .517],
  0x1D5C2: [.68, 0, .239],
  0x1D5C3: [.68, .205, .267],
  0x1D5C4: [.694, 0, .489],
  0x1D5C5: [.694, 0, .239],
  0x1D5C6: [.455, 0, .794],
  0x1D5C7: [.455, 0, .517],
  0x1D5C8: [.46, .01, .5],
  0x1D5C9: [.455, .194, .517],
  0x1D5CA: [.455, .194, .517],
  0x1D5CB: [.455, 0, .342],
  0x1D5CC: [.46, .01, .383],
  0x1D5CD: [.571, .01, .361],
  0x1D5CE: [.444, .01, .517],
  0x1D5CF: [.444, 0, .461],
  0x1D5D0: [.444, 0, .683],
  0x1D5D1: [.444, 0, .461],
  0x1D5D2: [.444, .204, .461],
  0x1D5D3: [.444, 0, .435],
  0x1D5D4: [.694, 0, .733],
  0x1D5D5: [.694, 0, .733],
  0x1D5D6: [.704, .011, .703],
  0x1D5D7: [.694, 0, .794],
  0x1D5D8: [.691, 0, .642],
  0x1D5D9: [.691, 0, .611],
  0x1D5DA: [.705, .011, .733],
  0x1D5DB: [.694, 0, .794],
  0x1D5DC: [.694, 0, .331],
  0x1D5DD: [.694, .022, .519],
  0x1D5DE: [.694, 0, .764],
  0x1D5DF: [.694, 0, .581],
  0x1D5E0: [.694, 0, .978],
  0x1D5E1: [.694, 0, .794],
  0x1D5E2: [.716, .022, .794],
  0x1D5E3: [.694, 0, .703],
  0x1D5E4: [.716, .106, .794],
  0x1D5E5: [.694, 0, .703],
  0x1D5E6: [.716, .022, .611],
  0x1D5E7: [.688, 0, .733],
  0x1D5E8: [.694, .022, .764],
  0x1D5E9: [.694, 0, .733],
  0x1D5EA: [.694, 0, 1.039],
  0x1D5EB: [.694, 0, .733],
  0x1D5EC: [.694, 0, .733],
  0x1D5ED: [.694, 0, .672],
  0x1D5EE: [.475, .011, .525],
  0x1D5EF: [.694, .01, .561],
  0x1D5F0: [.475, .011, .489],
  0x1D5F1: [.694, .011, .561],
  0x1D5F2: [.474, .01, .511],
  0x1D5F3: [.705, 0, .336, {
    ic: .045
  }],
  0x1D5F4: [.469, .206, .55],
  0x1D5F5: [.694, 0, .561],
  0x1D5F6: [.695, 0, .256],
  0x1D5F7: [.695, .205, .286],
  0x1D5F8: [.694, 0, .531],
  0x1D5F9: [.694, 0, .256],
  0x1D5FA: [.469, 0, .867],
  0x1D5FB: [.468, 0, .561],
  0x1D5FC: [.474, .011, .55],
  0x1D5FD: [.469, .194, .561],
  0x1D5FE: [.469, .194, .561],
  0x1D5FF: [.469, 0, .372],
  0x1D600: [.474, .01, .422],
  0x1D601: [.589, .01, .404],
  0x1D602: [.458, .011, .561],
  0x1D603: [.458, 0, .5],
  0x1D604: [.458, 0, .744],
  0x1D605: [.458, 0, .5],
  0x1D606: [.458, .205, .5],
  0x1D607: [.458, 0, .476],
  0x1D608: [.694, 0, .667],
  0x1D609: [.694, 0, .667, {
    ic: .029
  }],
  0x1D60A: [.705, .01, .639, {
    ic: .08
  }],
  0x1D60B: [.694, 0, .722, {
    ic: .025
  }],
  0x1D60C: [.691, 0, .597, {
    ic: .091
  }],
  0x1D60D: [.691, 0, .569, {
    ic: .104
  }],
  0x1D60E: [.705, .011, .667, {
    ic: .063
  }],
  0x1D60F: [.694, 0, .708, {
    ic: .06
  }],
  0x1D610: [.694, 0, .278, {
    ic: .06
  }],
  0x1D611: [.694, .022, .472, {
    ic: .063
  }],
  0x1D612: [.694, 0, .694, {
    ic: .091
  }],
  0x1D613: [.694, 0, .542],
  0x1D614: [.694, 0, .875, {
    ic: .054
  }],
  0x1D615: [.694, 0, .708, {
    ic: .058
  }],
  0x1D616: [.716, .022, .736, {
    ic: .027
  }],
  0x1D617: [.694, 0, .639, {
    ic: .051
  }],
  0x1D618: [.716, .125, .736, {
    ic: .027
  }],
  0x1D619: [.694, 0, .646, {
    ic: .052
  }],
  0x1D61A: [.716, .022, .556, {
    ic: .053
  }],
  0x1D61B: [.688, 0, .681, {
    ic: .109
  }],
  0x1D61C: [.694, .022, .688, {
    ic: .059
  }],
  0x1D61D: [.694, 0, .667, {
    ic: .132
  }],
  0x1D61E: [.694, 0, .944, {
    ic: .132
  }],
  0x1D61F: [.694, 0, .667, {
    ic: .091
  }],
  0x1D620: [.694, 0, .667, {
    ic: .143
  }],
  0x1D621: [.694, 0, .611, {
    ic: .091
  }],
  0x1D622: [.461, .01, .481],
  0x1D623: [.694, .011, .517, {
    ic: .022
  }],
  0x1D624: [.46, .011, .444, {
    ic: .055
  }],
  0x1D625: [.694, .01, .517, {
    ic: .071
  }],
  0x1D626: [.46, .011, .444, {
    ic: .028
  }],
  0x1D627: [.705, 0, .306, {
    ic: .188
  }],
  0x1D628: [.455, .206, .5, {
    ic: .068
  }],
  0x1D629: [.694, 0, .517],
  0x1D62A: [.68, 0, .239, {
    ic: .076
  }],
  0x1D62B: [.68, .204, .267, {
    ic: .069
  }],
  0x1D62C: [.694, 0, .489, {
    ic: .054
  }],
  0x1D62D: [.694, 0, .239, {
    ic: .072
  }],
  0x1D62E: [.455, 0, .794],
  0x1D62F: [.454, 0, .517],
  0x1D630: [.461, .011, .5, {
    ic: .023
  }],
  0x1D631: [.455, .194, .517, {
    ic: .021
  }],
  0x1D632: [.455, .194, .517, {
    ic: .021
  }],
  0x1D633: [.455, 0, .342, {
    ic: .082
  }],
  0x1D634: [.461, .011, .383, {
    ic: .053
  }],
  0x1D635: [.571, .011, .361, {
    ic: .049
  }],
  0x1D636: [.444, .01, .517, {
    ic: .02
  }],
  0x1D637: [.444, 0, .461, {
    ic: .079
  }],
  0x1D638: [.444, 0, .683, {
    ic: .079
  }],
  0x1D639: [.444, 0, .461, {
    ic: .076
  }],
  0x1D63A: [.444, .205, .461, {
    ic: .079
  }],
  0x1D63B: [.444, 0, .435, {
    ic: .059
  }],
  0x1D670: [.623, 0, .525],
  0x1D671: [.611, 0, .525],
  0x1D672: [.622, .011, .525],
  0x1D673: [.611, 0, .525],
  0x1D674: [.611, 0, .525],
  0x1D675: [.611, 0, .525],
  0x1D676: [.622, .011, .525],
  0x1D677: [.611, 0, .525],
  0x1D678: [.611, 0, .525],
  0x1D679: [.611, .011, .525],
  0x1D67A: [.611, 0, .525],
  0x1D67B: [.611, 0, .525],
  0x1D67C: [.611, 0, .525],
  0x1D67D: [.611, 0, .525],
  0x1D67E: [.621, .01, .525],
  0x1D67F: [.611, 0, .525],
  0x1D680: [.621, .138, .525],
  0x1D681: [.611, .011, .525],
  0x1D682: [.622, .011, .525],
  0x1D683: [.611, 0, .525],
  0x1D684: [.611, .011, .525],
  0x1D685: [.611, .007, .525],
  0x1D686: [.611, .007, .525],
  0x1D687: [.611, 0, .525],
  0x1D688: [.611, 0, .525],
  0x1D689: [.611, 0, .525],
  0x1D68A: [.439, .006, .525],
  0x1D68B: [.611, .006, .525],
  0x1D68C: [.44, .006, .525],
  0x1D68D: [.611, .006, .525],
  0x1D68E: [.44, .006, .525],
  0x1D68F: [.617, 0, .525],
  0x1D690: [.442, .229, .525],
  0x1D691: [.611, 0, .525],
  0x1D692: [.612, 0, .525],
  0x1D693: [.612, .228, .525],
  0x1D694: [.611, 0, .525],
  0x1D695: [.611, 0, .525],
  0x1D696: [.436, 0, .525, {
    ic: .011
  }],
  0x1D697: [.436, 0, .525],
  0x1D698: [.44, .006, .525],
  0x1D699: [.437, .221, .525],
  0x1D69A: [.437, .221, .525, {
    ic: .02
  }],
  0x1D69B: [.437, 0, .525],
  0x1D69C: [.44, .006, .525],
  0x1D69D: [.554, .006, .525],
  0x1D69E: [.431, .005, .525],
  0x1D69F: [.431, 0, .525],
  0x1D6A0: [.431, 0, .525],
  0x1D6A1: [.431, 0, .525],
  0x1D6A2: [.431, .228, .525],
  0x1D6A3: [.431, 0, .525],
  0x1D6A8: [.698, 0, .869],
  0x1D6A9: [.686, 0, .818],
  0x1D6AA: [.68, 0, .692],
  0x1D6AB: [.698, 0, .958],
  0x1D6AC: [.68, 0, .756],
  0x1D6AD: [.686, 0, .703],
  0x1D6AE: [.686, 0, .9],
  0x1D6AF: [.696, .01, .894],
  0x1D6B0: [.686, 0, .436],
  0x1D6B1: [.686, 0, .901],
  0x1D6B2: [.698, 0, .806],
  0x1D6B3: [.686, 0, 1.092],
  0x1D6B4: [.686, 0, .9],
  0x1D6B5: [.675, 0, .767],
  0x1D6B6: [.696, .01, .864],
  0x1D6B7: [.68, 0, .9],
  0x1D6B8: [.686, 0, .786],
  0x1D6BA: [.686, 0, .831],
  0x1D6BB: [.675, 0, .8],
  0x1D6BC: [.697, 0, .894],
  0x1D6BD: [.686, 0, .831],
  0x1D6BE: [.686, 0, .869],
  0x1D6BF: [.686, 0, .894],
  0x1D6C0: [.696, 0, .831],
  0x1D6C1: [.686, .024, .958],
  0x1D6E2: [.716, 0, .75, {
    sk: .139
  }],
  0x1D6E3: [.683, 0, .759, {
    sk: .0833
  }],
  0x1D6E4: [.68, 0, .615, {
    ic: .106,
    sk: .0833
  }],
  0x1D6E5: [.716, 0, .833, {
    sk: .167
  }],
  0x1D6E6: [.68, 0, .738, {
    ic: .026,
    sk: .0833
  }],
  0x1D6E7: [.683, 0, .683, {
    ic: .04,
    sk: .0833
  }],
  0x1D6E8: [.683, 0, .831, {
    ic: .057,
    sk: .0556
  }],
  0x1D6E9: [.704, .022, .763, {
    sk: .0833
  }],
  0x1D6EA: [.683, 0, .44, {
    ic: .064,
    sk: .111
  }],
  0x1D6EB: [.683, 0, .849, {
    ic: .04,
    sk: .0556
  }],
  0x1D6EC: [.716, 0, .694, {
    sk: .167
  }],
  0x1D6ED: [.683, 0, .97, {
    ic: .081,
    sk: .0833
  }],
  0x1D6EE: [.683, 0, .803, {
    ic: .085,
    sk: .0833
  }],
  0x1D6EF: [.677, 0, .742, {
    ic: .035,
    sk: .0833
  }],
  0x1D6F0: [.704, .022, .763, {
    sk: .0833
  }],
  0x1D6F1: [.68, 0, .831, {
    ic: .056,
    sk: .0556
  }],
  0x1D6F2: [.683, 0, .642, {
    ic: .109,
    sk: .0833
  }],
  0x1D6F4: [.683, 0, .78, {
    ic: .026,
    sk: .0833
  }],
  0x1D6F5: [.677, 0, .584, {
    ic: .12,
    sk: .0833
  }],
  0x1D6F6: [.705, 0, .583, {
    ic: .117,
    sk: .0556
  }],
  0x1D6F7: [.683, 0, .667, {
    sk: .0833
  }],
  0x1D6F8: [.683, 0, .828, {
    ic: .024,
    sk: .0833
  }],
  0x1D6F9: [.683, 0, .612, {
    ic: .08,
    sk: .0556
  }],
  0x1D6FA: [.704, 0, .772, {
    ic: .014,
    sk: .0833
  }],
  0x1D6FC: [.442, .011, .64, {
    sk: .0278
  }],
  0x1D6FD: [.705, .194, .566, {
    sk: .0833
  }],
  0x1D6FE: [.441, .216, .518, {
    ic: .025
  }],
  0x1D6FF: [.717, .01, .444, {
    sk: .0556
  }],
  0x1D700: [.452, .022, .466, {
    sk: .0833
  }],
  0x1D701: [.704, .204, .438, {
    ic: .033,
    sk: .0833
  }],
  0x1D702: [.442, .216, .497, {
    sk: .0556
  }],
  0x1D703: [.705, .01, .469, {
    sk: .0833
  }],
  0x1D704: [.442, .01, .354, {
    sk: .0556
  }],
  0x1D705: [.442, .011, .576],
  0x1D706: [.694, .012, .583],
  0x1D707: [.442, .216, .603, {
    sk: .0278
  }],
  0x1D708: [.442, 0, .494, {
    ic: .036,
    sk: .0278
  }],
  0x1D709: [.704, .205, .438, {
    sk: .111
  }],
  0x1D70A: [.441, .011, .485, {
    sk: .0556
  }],
  0x1D70B: [.431, .011, .57],
  0x1D70C: [.442, .216, .517, {
    sk: .0833
  }],
  0x1D70D: [.442, .107, .363, {
    ic: .042,
    sk: .0833
  }],
  0x1D70E: [.431, .011, .571],
  0x1D70F: [.431, .013, .437, {
    ic: .08,
    sk: .0278
  }],
  0x1D710: [.443, .01, .54, {
    sk: .0278
  }],
  0x1D711: [.442, .218, .654, {
    sk: .0833
  }],
  0x1D712: [.442, .204, .626, {
    sk: .0556
  }],
  0x1D713: [.694, .205, .651, {
    sk: .111
  }],
  0x1D714: [.443, .011, .622],
  0x1D715: [.715, .022, .531, {
    ic: .035,
    sk: .0833
  }],
  0x1D716: [.431, .011, .406, {
    sk: .0556
  }],
  0x1D717: [.705, .011, .591, {
    sk: .0833
  }],
  0x1D718: [.434, .006, .667, {
    ic: .067
  }],
  0x1D719: [.694, .205, .596, {
    sk: .0833
  }],
  0x1D71A: [.442, .194, .517, {
    sk: .0833
  }],
  0x1D71B: [.431, .01, .828],
  0x1D71C: [.711, 0, .869, {
    sk: .16
  }],
  0x1D71D: [.686, 0, .866, {
    sk: .0958
  }],
  0x1D71E: [.68, 0, .657, {
    ic: .12,
    sk: .0958
  }],
  0x1D71F: [.711, 0, .958, {
    sk: .192
  }],
  0x1D720: [.68, 0, .81, {
    ic: .015,
    sk: .0958
  }],
  0x1D721: [.686, 0, .773, {
    ic: .032,
    sk: .0958
  }],
  0x1D722: [.686, 0, .982, {
    ic: .045,
    sk: .0639
  }],
  0x1D723: [.702, .017, .867, {
    sk: .0958
  }],
  0x1D724: [.686, 0, .511, {
    ic: .062,
    sk: .128
  }],
  0x1D725: [.686, 0, .971, {
    ic: .032,
    sk: .0639
  }],
  0x1D726: [.711, 0, .806, {
    sk: .192
  }],
  0x1D727: [.686, 0, 1.142, {
    ic: .077,
    sk: .0958
  }],
  0x1D728: [.686, 0, .95, {
    ic: .077,
    sk: .0958
  }],
  0x1D729: [.675, 0, .841, {
    ic: .026,
    sk: .0958
  }],
  0x1D72A: [.703, .017, .837, {
    sk: .0958
  }],
  0x1D72B: [.68, 0, .982, {
    ic: .044,
    sk: .0639
  }],
  0x1D72C: [.686, 0, .723, {
    ic: .124,
    sk: .0958
  }],
  0x1D72E: [.686, 0, .885, {
    ic: .017,
    sk: .0958
  }],
  0x1D72F: [.675, 0, .637, {
    ic: .135,
    sk: .0958
  }],
  0x1D730: [.703, 0, .671, {
    ic: .131,
    sk: .0639
  }],
  0x1D731: [.686, 0, .767, {
    sk: .0958
  }],
  0x1D732: [.686, 0, .947, {
    sk: .0958
  }],
  0x1D733: [.686, 0, .714, {
    ic: .076,
    sk: .0639
  }],
  0x1D734: [.703, 0, .879, {
    sk: .0958
  }],
  0x1D736: [.452, .008, .761, {
    sk: .0319
  }],
  0x1D737: [.701, .194, .66, {
    sk: .0958
  }],
  0x1D738: [.451, .211, .59, {
    ic: .027
  }],
  0x1D739: [.725, .008, .522, {
    sk: .0639
  }],
  0x1D73A: [.461, .017, .529, {
    sk: .0958
  }],
  0x1D73B: [.711, .202, .508, {
    ic: .013,
    sk: .0958
  }],
  0x1D73C: [.452, .211, .6, {
    sk: .0639
  }],
  0x1D73D: [.702, .008, .562, {
    sk: .0958
  }],
  0x1D73E: [.452, .008, .412, {
    sk: .0639
  }],
  0x1D73F: [.452, .008, .668],
  0x1D740: [.694, .013, .671],
  0x1D741: [.452, .211, .708, {
    sk: .0319
  }],
  0x1D742: [.452, 0, .577, {
    ic: .031,
    sk: .0319
  }],
  0x1D743: [.711, .201, .508, {
    sk: .128
  }],
  0x1D744: [.452, .008, .585, {
    sk: .0639
  }],
  0x1D745: [.444, .008, .682],
  0x1D746: [.451, .211, .612, {
    sk: .0958
  }],
  0x1D747: [.451, .105, .424, {
    ic: .033,
    sk: .0958
  }],
  0x1D748: [.444, .008, .686],
  0x1D749: [.444, .013, .521, {
    ic: .089,
    sk: .0319
  }],
  0x1D74A: [.453, .008, .631, {
    sk: .0319
  }],
  0x1D74B: [.452, .216, .747, {
    sk: .0958
  }],
  0x1D74C: [.452, .201, .718, {
    sk: .0639
  }],
  0x1D74D: [.694, .202, .758, {
    sk: .128
  }],
  0x1D74E: [.453, .008, .718],
  0x1D74F: [.71, .017, .628, {
    ic: .029,
    sk: .0958
  }],
  0x1D750: [.444, .007, .483, {
    sk: .0639
  }],
  0x1D751: [.701, .008, .692, {
    sk: .0958
  }],
  0x1D752: [.434, .006, .667, {
    ic: .067
  }],
  0x1D753: [.694, .202, .712, {
    sk: .0958
  }],
  0x1D754: [.451, .194, .612, {
    sk: .0958
  }],
  0x1D755: [.444, .008, .975],
  0x1D756: [.694, 0, .733],
  0x1D757: [.694, 0, .733],
  0x1D758: [.691, 0, .581],
  0x1D759: [.694, 0, .917],
  0x1D75A: [.691, 0, .642],
  0x1D75B: [.694, 0, .672],
  0x1D75C: [.694, 0, .794],
  0x1D75D: [.716, .022, .856],
  0x1D75E: [.694, 0, .331],
  0x1D75F: [.694, 0, .764],
  0x1D760: [.694, 0, .672],
  0x1D761: [.694, 0, .978],
  0x1D762: [.694, 0, .794],
  0x1D763: [.688, 0, .733],
  0x1D764: [.716, .022, .794],
  0x1D765: [.691, 0, .794],
  0x1D766: [.694, 0, .703],
  0x1D768: [.694, 0, .794],
  0x1D769: [.688, 0, .733],
  0x1D76A: [.715, 0, .856],
  0x1D76B: [.694, 0, .794],
  0x1D76C: [.694, 0, .733],
  0x1D76D: [.694, 0, .856],
  0x1D76E: [.716, 0, .794],
  0x1D7CE: [.654, .01, .575],
  0x1D7CF: [.655, 0, .575],
  0x1D7D0: [.654, 0, .575],
  0x1D7D1: [.655, .011, .575],
  0x1D7D2: [.656, 0, .575],
  0x1D7D3: [.655, .011, .575],
  0x1D7D4: [.655, .011, .575],
  0x1D7D5: [.676, .011, .575],
  0x1D7D6: [.654, .011, .575],
  0x1D7D7: [.654, .011, .575],
  0x1D7E2: [.678, .022, .5],
  0x1D7E3: [.678, 0, .5],
  0x1D7E4: [.677, 0, .5],
  0x1D7E5: [.678, .022, .5],
  0x1D7E6: [.656, 0, .5],
  0x1D7E7: [.656, .021, .5],
  0x1D7E8: [.677, .022, .5],
  0x1D7E9: [.656, .011, .5],
  0x1D7EA: [.678, .022, .5],
  0x1D7EB: [.677, .022, .5],
  0x1D7EC: [.715, .022, .55],
  0x1D7ED: [.716, 0, .55],
  0x1D7EE: [.716, 0, .55],
  0x1D7EF: [.716, .022, .55],
  0x1D7F0: [.694, 0, .55],
  0x1D7F1: [.694, .022, .55],
  0x1D7F2: [.716, .022, .55],
  0x1D7F3: [.695, .011, .55],
  0x1D7F4: [.715, .022, .55],
  0x1D7F5: [.716, .022, .55],
  0x1D7F6: [.621, .01, .525],
  0x1D7F7: [.622, 0, .525],
  0x1D7F8: [.622, 0, .525],
  0x1D7F9: [.622, .011, .525],
  0x1D7FA: [.624, 0, .525],
  0x1D7FB: [.611, .01, .525],
  0x1D7FC: [.622, .011, .525],
  0x1D7FD: [.627, .01, .525],
  0x1D7FE: [.621, .01, .525],
  0x1D7FF: [.622, .011, .525]
};

/***/ }),

/***/ 5978:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.sansSerifBoldItalic = void 0;
exports.sansSerifBoldItalic = {
  0x131: [.458, 0, .256],
  0x237: [.458, .205, .286]
};

/***/ }),

/***/ 5855:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.sansSerifBold = void 0;
exports.sansSerifBold = {
  0x21: [.694, 0, .367],
  0x22: [.694, -0.442, .558],
  0x23: [.694, .193, .917],
  0x24: [.75, .056, .55],
  0x25: [.75, .056, 1.029],
  0x26: [.716, .022, .831],
  0x27: [.694, -0.442, .306],
  0x28: [.75, .249, .428],
  0x29: [.75, .25, .428],
  0x2A: [.75, -0.293, .55],
  0x2B: [.617, .116, .856],
  0x2C: [.146, .106, .306],
  0x2D: [.273, -0.186, .367],
  0x2E: [.146, 0, .306],
  0x2F: [.75, .249, .55],
  0x3A: [.458, 0, .306],
  0x3B: [.458, .106, .306],
  0x3D: [.407, -0.094, .856],
  0x3F: [.705, 0, .519],
  0x40: [.704, .011, .733],
  0x5B: [.75, .25, .343],
  0x5D: [.75, .25, .343],
  0x5E: [.694, -0.537, .55],
  0x5F: [-0.023, .11, .55],
  0x7E: [.344, -0.198, .55],
  0x131: [.458, 0, .256],
  0x237: [.458, .205, .286],
  0x300: [.694, -0.537, 0],
  0x301: [.694, -0.537, 0],
  0x302: [.694, -0.537, 0],
  0x303: [.694, -0.548, 0],
  0x304: [.66, -0.56, 0],
  0x306: [.694, -0.552, 0],
  0x307: [.695, -0.596, 0],
  0x308: [.695, -0.595, 0],
  0x30A: [.694, -0.538, 0],
  0x30B: [.694, -0.537, 0],
  0x30C: [.657, -0.5, 0],
  0x2013: [.327, -0.24, .55],
  0x2014: [.327, -0.24, 1.1],
  0x2015: [.327, -0.24, 1.1],
  0x2017: [-0.023, .11, .55],
  0x2018: [.694, -0.443, .306],
  0x2019: [.694, -0.442, .306],
  0x201C: [.694, -0.443, .558],
  0x201D: [.694, -0.442, .558],
  0x2044: [.75, .249, .55],
  0x2206: [.694, 0, .917]
};

/***/ }),

/***/ 5030:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.sansSerifItalic = void 0;
exports.sansSerifItalic = {
  0x21: [.694, 0, .319, {
    ic: .036
  }],
  0x22: [.694, -0.471, .5],
  0x23: [.694, .194, .833, {
    ic: .018
  }],
  0x24: [.75, .056, .5, {
    ic: .065
  }],
  0x25: [.75, .056, .833],
  0x26: [.716, .022, .758],
  0x27: [.694, -0.471, .278, {
    ic: .057
  }],
  0x28: [.75, .25, .389, {
    ic: .102
  }],
  0x29: [.75, .25, .389],
  0x2A: [.75, -0.306, .5, {
    ic: .068
  }],
  0x2B: [.583, .083, .778],
  0x2C: [.098, .125, .278],
  0x2D: [.259, -0.186, .333],
  0x2E: [.098, 0, .278],
  0x2F: [.75, .25, .5, {
    ic: .1
  }],
  0x30: [.678, .022, .5, {
    ic: .049
  }],
  0x31: [.678, 0, .5],
  0x32: [.678, 0, .5, {
    ic: .051
  }],
  0x33: [.678, .022, .5, {
    ic: .044
  }],
  0x34: [.656, 0, .5, {
    ic: .021
  }],
  0x35: [.656, .022, .5, {
    ic: .055
  }],
  0x36: [.678, .022, .5, {
    ic: .048
  }],
  0x37: [.656, .011, .5, {
    ic: .096
  }],
  0x38: [.678, .022, .5, {
    ic: .054
  }],
  0x39: [.677, .022, .5, {
    ic: .045
  }],
  0x3A: [.444, 0, .278],
  0x3B: [.444, .125, .278],
  0x3D: [.37, -0.13, .778, {
    ic: .018
  }],
  0x3F: [.704, 0, .472, {
    ic: .064
  }],
  0x40: [.705, .01, .667, {
    ic: .04
  }],
  0x5B: [.75, .25, .289, {
    ic: .136
  }],
  0x5D: [.75, .25, .289, {
    ic: .064
  }],
  0x5E: [.694, -0.527, .5, {
    ic: .033
  }],
  0x5F: [-0.038, .114, .5, {
    ic: .065
  }],
  0x7E: [.327, -0.193, .5, {
    ic: .06
  }],
  0x131: [.444, 0, .239, {
    ic: .019
  }],
  0x237: [.444, .204, .267, {
    ic: .019
  }],
  0x300: [.694, -0.527, 0],
  0x301: [.694, -0.527, 0, {
    ic: .063
  }],
  0x302: [.694, -0.527, 0, {
    ic: .033
  }],
  0x303: [.677, -0.543, 0, {
    ic: .06
  }],
  0x304: [.631, -0.552, 0, {
    ic: .064
  }],
  0x306: [.694, -0.508, 0, {
    ic: .073
  }],
  0x307: [.68, -0.576, 0],
  0x308: [.68, -0.582, 0, {
    ic: .04
  }],
  0x30A: [.693, -0.527, 0],
  0x30B: [.694, -0.527, 0, {
    ic: .063
  }],
  0x30C: [.654, -0.487, 0, {
    ic: .06
  }],
  0x391: [.694, 0, .667],
  0x392: [.694, 0, .667, {
    ic: .029
  }],
  0x393: [.691, 0, .542, {
    ic: .104
  }],
  0x394: [.694, 0, .833],
  0x395: [.691, 0, .597, {
    ic: .091
  }],
  0x396: [.694, 0, .611, {
    ic: .091
  }],
  0x397: [.694, 0, .708, {
    ic: .06
  }],
  0x398: [.715, .022, .778, {
    ic: .026
  }],
  0x399: [.694, 0, .278, {
    ic: .06
  }],
  0x39A: [.694, 0, .694, {
    ic: .091
  }],
  0x39B: [.694, 0, .611],
  0x39C: [.694, 0, .875, {
    ic: .054
  }],
  0x39D: [.694, 0, .708, {
    ic: .058
  }],
  0x39E: [.688, 0, .667, {
    ic: .098
  }],
  0x39F: [.716, .022, .736, {
    ic: .027
  }],
  0x3A0: [.691, 0, .708, {
    ic: .06
  }],
  0x3A1: [.694, 0, .639, {
    ic: .051
  }],
  0x3A3: [.694, 0, .722, {
    ic: .091
  }],
  0x3A4: [.688, 0, .681, {
    ic: .109
  }],
  0x3A5: [.716, 0, .778, {
    ic: .065
  }],
  0x3A6: [.694, 0, .722, {
    ic: .021
  }],
  0x3A7: [.694, 0, .667, {
    ic: .091
  }],
  0x3A8: [.694, 0, .778, {
    ic: .076
  }],
  0x3A9: [.716, 0, .722, {
    ic: .047
  }],
  0x2013: [.312, -0.236, .5, {
    ic: .065
  }],
  0x2014: [.312, -0.236, 1, {
    ic: .065
  }],
  0x2015: [.312, -0.236, 1, {
    ic: .065
  }],
  0x2017: [-0.038, .114, .5, {
    ic: .065
  }],
  0x2018: [.694, -0.471, .278, {
    ic: .058
  }],
  0x2019: [.694, -0.471, .278, {
    ic: .057
  }],
  0x201C: [.694, -0.471, .5, {
    ic: .114
  }],
  0x201D: [.694, -0.471, .5],
  0x2044: [.75, .25, .5, {
    ic: .1
  }],
  0x2206: [.694, 0, .833]
};

/***/ }),

/***/ 6807:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.sansSerif = void 0;
exports.sansSerif = {
  0x21: [.694, 0, .319],
  0x22: [.694, -0.471, .5],
  0x23: [.694, .194, .833],
  0x24: [.75, .056, .5],
  0x25: [.75, .056, .833],
  0x26: [.716, .022, .758],
  0x27: [.694, -0.471, .278],
  0x28: [.75, .25, .389],
  0x29: [.75, .25, .389],
  0x2A: [.75, -0.306, .5],
  0x2B: [.583, .082, .778],
  0x2C: [.098, .125, .278],
  0x2D: [.259, -0.186, .333],
  0x2E: [.098, 0, .278],
  0x2F: [.75, .25, .5],
  0x3A: [.444, 0, .278],
  0x3B: [.444, .125, .278],
  0x3D: [.37, -0.13, .778],
  0x3F: [.704, 0, .472],
  0x40: [.704, .011, .667],
  0x5B: [.75, .25, .289],
  0x5D: [.75, .25, .289],
  0x5E: [.694, -0.527, .5],
  0x5F: [-0.038, .114, .5],
  0x7E: [.327, -0.193, .5],
  0x131: [.444, 0, .239],
  0x237: [.444, .205, .267],
  0x300: [.694, -0.527, 0],
  0x301: [.694, -0.527, 0],
  0x302: [.694, -0.527, 0],
  0x303: [.677, -0.543, 0],
  0x304: [.631, -0.552, 0],
  0x306: [.694, -0.508, 0],
  0x307: [.68, -0.576, 0],
  0x308: [.68, -0.582, 0],
  0x30A: [.694, -0.527, 0],
  0x30B: [.694, -0.527, 0],
  0x30C: [.654, -0.487, 0],
  0x391: [.694, 0, .667],
  0x392: [.694, 0, .667],
  0x393: [.691, 0, .542],
  0x394: [.694, 0, .833],
  0x395: [.691, 0, .597],
  0x396: [.694, 0, .611],
  0x397: [.694, 0, .708],
  0x398: [.716, .021, .778],
  0x399: [.694, 0, .278],
  0x39A: [.694, 0, .694],
  0x39B: [.694, 0, .611],
  0x39C: [.694, 0, .875],
  0x39D: [.694, 0, .708],
  0x39E: [.688, 0, .667],
  0x39F: [.715, .022, .736],
  0x3A0: [.691, 0, .708],
  0x3A1: [.694, 0, .639],
  0x3A3: [.694, 0, .722],
  0x3A4: [.688, 0, .681],
  0x3A5: [.716, 0, .778],
  0x3A6: [.694, 0, .722],
  0x3A7: [.694, 0, .667],
  0x3A8: [.694, 0, .778],
  0x3A9: [.716, 0, .722],
  0x2013: [.312, -0.236, .5],
  0x2014: [.312, -0.236, 1],
  0x2015: [.312, -0.236, 1],
  0x2017: [-0.038, .114, .5],
  0x2018: [.694, -0.471, .278],
  0x2019: [.694, -0.471, .278],
  0x201C: [.694, -0.471, .5],
  0x201D: [.694, -0.471, .5],
  0x2044: [.75, .25, .5],
  0x2206: [.694, 0, .833]
};

/***/ }),

/***/ 9728:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.scriptBold = void 0;
exports.scriptBold = {};

/***/ }),

/***/ 3849:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.script = void 0;
exports.script = {};

/***/ }),

/***/ 3794:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.smallop = void 0;
exports.smallop = {
  0x28: [.85, .349, .458],
  0x29: [.85, .349, .458],
  0x2F: [.85, .349, .578],
  0x5B: [.85, .349, .417],
  0x5C: [.85, .349, .578],
  0x5D: [.85, .349, .417],
  0x7B: [.85, .349, .583],
  0x7D: [.85, .349, .583],
  0x2C6: [.744, -0.551, .556],
  0x2DC: [.722, -0.597, .556],
  0x302: [.744, -0.551, 0],
  0x303: [.722, -0.597, 0],
  0x2016: [.602, 0, .778],
  0x2044: [.85, .349, .578],
  0x2191: [.6, 0, .667],
  0x2193: [.6, 0, .667],
  0x21D1: [.599, 0, .778],
  0x21D3: [.6, 0, .778],
  0x220F: [.75, .25, .944],
  0x2210: [.75, .25, .944],
  0x2211: [.75, .25, 1.056],
  0x221A: [.85, .35, 1, {
    ic: .02
  }],
  0x2223: [.627, .015, .333],
  0x2225: [.627, .015, .556],
  0x222B: [.805, .306, .472, {
    ic: .138
  }],
  0x222C: [.805, .306, .819, {
    ic: .138
  }],
  0x222D: [.805, .306, 1.166, {
    ic: .138
  }],
  0x222E: [.805, .306, .472, {
    ic: .138
  }],
  0x22C0: [.75, .249, .833],
  0x22C1: [.75, .249, .833],
  0x22C2: [.75, .249, .833],
  0x22C3: [.75, .249, .833],
  0x2308: [.85, .349, .472],
  0x2309: [.85, .349, .472],
  0x230A: [.85, .349, .472],
  0x230B: [.85, .349, .472],
  0x2329: [.85, .35, .472],
  0x232A: [.85, .35, .472],
  0x23D0: [.602, 0, .667],
  0x2758: [.627, .015, .333],
  0x27E8: [.85, .35, .472],
  0x27E9: [.85, .35, .472],
  0x2A00: [.75, .25, 1.111],
  0x2A01: [.75, .25, 1.111],
  0x2A02: [.75, .25, 1.111],
  0x2A04: [.75, .249, .833],
  0x2A06: [.75, .249, .833],
  0x2A0C: [.805, .306, 1.638, {
    ic: .138
  }],
  0x3008: [.85, .35, .472],
  0x3009: [.85, .35, .472]
};

/***/ }),

/***/ 3787:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.texCalligraphicBold = void 0;
exports.texCalligraphicBold = {
  0x41: [.751, .049, .921, {
    ic: .068,
    sk: .224
  }],
  0x42: [.705, .017, .748, {
    sk: .16
  }],
  0x43: [.703, .02, .613, {
    sk: .16
  }],
  0x44: [.686, 0, .892, {
    sk: .0958
  }],
  0x45: [.703, .016, .607, {
    ic: .02,
    sk: .128
  }],
  0x46: [.686, .03, .814, {
    ic: .116,
    sk: .128
  }],
  0x47: [.703, .113, .682, {
    sk: .128
  }],
  0x48: [.686, .048, .987, {
    sk: .128
  }],
  0x49: [.686, 0, .642, {
    ic: .104,
    sk: .0319
  }],
  0x4A: [.686, .114, .779, {
    ic: .158,
    sk: .192
  }],
  0x4B: [.703, .017, .871, {
    sk: .0639
  }],
  0x4C: [.703, .017, .788, {
    sk: .16
  }],
  0x4D: [.703, .049, 1.378, {
    sk: .16
  }],
  0x4E: [.84, .049, .937, {
    ic: .168,
    sk: .0958
  }],
  0x4F: [.703, .017, .906, {
    sk: .128
  }],
  0x50: [.686, .067, .81, {
    ic: .036,
    sk: .0958
  }],
  0x51: [.703, .146, .939, {
    sk: .128
  }],
  0x52: [.686, .017, .99, {
    sk: .0958
  }],
  0x53: [.703, .016, .696, {
    ic: .025,
    sk: .16
  }],
  0x54: [.72, .069, .644, {
    ic: .303,
    sk: .0319
  }],
  0x55: [.686, .024, .715, {
    ic: .056,
    sk: .0958
  }],
  0x56: [.686, .077, .737, {
    ic: .037,
    sk: .0319
  }],
  0x57: [.686, .077, 1.169, {
    ic: .037,
    sk: .0958
  }],
  0x58: [.686, 0, .817, {
    ic: .089,
    sk: .16
  }],
  0x59: [.686, .164, .759, {
    ic: .038,
    sk: .0958
  }],
  0x5A: [.686, 0, .818, {
    ic: .035,
    sk: .16
  }],
  0x131: [.452, .008, .394, {
    sk: .0319
  }],
  0x237: [.451, .201, .439, {
    sk: .0958
  }]
};

/***/ }),

/***/ 7664:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.texCalligraphic = void 0;
exports.texCalligraphic = {
  0x41: [.728, .05, .798, {
    ic: .021,
    sk: .194
  }],
  0x42: [.705, .022, .657, {
    sk: .139
  }],
  0x43: [.705, .025, .527, {
    sk: .139
  }],
  0x44: [.683, 0, .771, {
    sk: .0833
  }],
  0x45: [.705, .022, .528, {
    ic: .036,
    sk: .111
  }],
  0x46: [.683, .032, .719, {
    ic: .11,
    sk: .111
  }],
  0x47: [.704, .119, .595, {
    sk: .111
  }],
  0x48: [.683, .048, .845, {
    sk: .111
  }],
  0x49: [.683, 0, .545, {
    ic: .097,
    sk: .0278
  }],
  0x4A: [.683, .119, .678, {
    ic: .161,
    sk: .167
  }],
  0x4B: [.705, .022, .762, {
    sk: .0556
  }],
  0x4C: [.705, .022, .69, {
    sk: .139
  }],
  0x4D: [.705, .05, 1.201, {
    sk: .139
  }],
  0x4E: [.789, .05, .82, {
    ic: .159,
    sk: .0833
  }],
  0x4F: [.705, .022, .796, {
    sk: .111
  }],
  0x50: [.683, .057, .696, {
    ic: .037,
    sk: .0833
  }],
  0x51: [.705, .131, .817, {
    sk: .111
  }],
  0x52: [.682, .022, .848, {
    sk: .0833
  }],
  0x53: [.705, .022, .606, {
    ic: .036,
    sk: .139
  }],
  0x54: [.717, .068, .545, {
    ic: .288,
    sk: .0278
  }],
  0x55: [.683, .028, .626, {
    ic: .061,
    sk: .0833
  }],
  0x56: [.683, .052, .613, {
    ic: .045,
    sk: .0278
  }],
  0x57: [.683, .053, .988, {
    ic: .046,
    sk: .0833
  }],
  0x58: [.683, 0, .713, {
    ic: .094,
    sk: .139
  }],
  0x59: [.683, .143, .668, {
    ic: .046,
    sk: .0833
  }],
  0x5A: [.683, 0, .725, {
    ic: .042,
    sk: .139
  }]
};

/***/ }),

/***/ 211:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.texMathit = void 0;
exports.texMathit = {
  0x41: [.716, 0, .743],
  0x42: [.683, 0, .704],
  0x43: [.705, .021, .716],
  0x44: [.683, 0, .755],
  0x45: [.68, 0, .678],
  0x46: [.68, 0, .653],
  0x47: [.705, .022, .774],
  0x48: [.683, 0, .743],
  0x49: [.683, 0, .386],
  0x4A: [.683, .021, .525],
  0x4B: [.683, 0, .769],
  0x4C: [.683, 0, .627],
  0x4D: [.683, 0, .897],
  0x4E: [.683, 0, .743],
  0x4F: [.704, .022, .767],
  0x50: [.683, 0, .678],
  0x51: [.704, .194, .767],
  0x52: [.683, .022, .729],
  0x53: [.705, .022, .562],
  0x54: [.677, 0, .716],
  0x55: [.683, .022, .743],
  0x56: [.683, .022, .743],
  0x57: [.683, .022, .999],
  0x58: [.683, 0, .743],
  0x59: [.683, 0, .743],
  0x5A: [.683, 0, .613],
  0x61: [.442, .011, .511],
  0x62: [.694, .011, .46],
  0x63: [.441, .01, .46],
  0x64: [.694, .011, .511],
  0x65: [.442, .01, .46],
  0x66: [.705, .204, .307],
  0x67: [.442, .205, .46],
  0x68: [.694, .011, .511],
  0x69: [.656, .01, .307],
  0x6A: [.656, .204, .307],
  0x6B: [.694, .011, .46],
  0x6C: [.694, .011, .256],
  0x6D: [.442, .011, .818],
  0x6E: [.442, .011, .562],
  0x6F: [.442, .011, .511],
  0x70: [.442, .194, .511],
  0x71: [.442, .194, .46],
  0x72: [.442, .011, .422],
  0x73: [.442, .011, .409],
  0x74: [.626, .011, .332],
  0x75: [.441, .011, .537],
  0x76: [.443, .01, .46],
  0x77: [.443, .011, .664],
  0x78: [.442, .011, .464],
  0x79: [.441, .205, .486],
  0x7A: [.442, .011, .409]
};

/***/ }),

/***/ 4277:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.texOldstyleBold = void 0;
exports.texOldstyleBold = {
  0x30: [.46, .017, .575],
  0x31: [.461, 0, .575],
  0x32: [.46, 0, .575],
  0x33: [.461, .211, .575],
  0x34: [.469, .194, .575],
  0x35: [.461, .211, .575],
  0x36: [.66, .017, .575],
  0x37: [.476, .211, .575],
  0x38: [.661, .017, .575],
  0x39: [.461, .21, .575],
  0x41: [.751, .049, .921, {
    ic: .068,
    sk: .224
  }],
  0x42: [.705, .017, .748, {
    sk: .16
  }],
  0x43: [.703, .02, .613, {
    sk: .16
  }],
  0x44: [.686, 0, .892, {
    sk: .0958
  }],
  0x45: [.703, .016, .607, {
    ic: .02,
    sk: .128
  }],
  0x46: [.686, .03, .814, {
    ic: .116,
    sk: .128
  }],
  0x47: [.703, .113, .682, {
    sk: .128
  }],
  0x48: [.686, .048, .987, {
    sk: .128
  }],
  0x49: [.686, 0, .642, {
    ic: .104,
    sk: .0319
  }],
  0x4A: [.686, .114, .779, {
    ic: .158,
    sk: .192
  }],
  0x4B: [.703, .017, .871, {
    sk: .0639
  }],
  0x4C: [.703, .017, .788, {
    sk: .16
  }],
  0x4D: [.703, .049, 1.378, {
    sk: .16
  }],
  0x4E: [.84, .049, .937, {
    ic: .168,
    sk: .0958
  }],
  0x4F: [.703, .017, .906, {
    sk: .128
  }],
  0x50: [.686, .067, .81, {
    ic: .036,
    sk: .0958
  }],
  0x51: [.703, .146, .939, {
    sk: .128
  }],
  0x52: [.686, .017, .99, {
    sk: .0958
  }],
  0x53: [.703, .016, .696, {
    ic: .025,
    sk: .16
  }],
  0x54: [.72, .069, .644, {
    ic: .303,
    sk: .0319
  }],
  0x55: [.686, .024, .715, {
    ic: .056,
    sk: .0958
  }],
  0x56: [.686, .077, .737, {
    ic: .037,
    sk: .0319
  }],
  0x57: [.686, .077, 1.169, {
    ic: .037,
    sk: .0958
  }],
  0x58: [.686, 0, .817, {
    ic: .089,
    sk: .16
  }],
  0x59: [.686, .164, .759, {
    ic: .038,
    sk: .0958
  }],
  0x5A: [.686, 0, .818, {
    ic: .035,
    sk: .16
  }]
};

/***/ }),

/***/ 2950:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.texOldstyle = void 0;
exports.texOldstyle = {
  0x30: [.452, .022, .5],
  0x31: [.453, 0, .5],
  0x32: [.453, 0, .5],
  0x33: [.452, .216, .5],
  0x34: [.464, .194, .5],
  0x35: [.453, .216, .5],
  0x36: [.665, .022, .5],
  0x37: [.463, .216, .5],
  0x38: [.666, .021, .5],
  0x39: [.453, .216, .5],
  0x41: [.728, .05, .798, {
    ic: .021,
    sk: .194
  }],
  0x42: [.705, .022, .657, {
    sk: .139
  }],
  0x43: [.705, .025, .527, {
    sk: .139
  }],
  0x44: [.683, 0, .771, {
    sk: .0833
  }],
  0x45: [.705, .022, .528, {
    ic: .036,
    sk: .111
  }],
  0x46: [.683, .032, .719, {
    ic: .11,
    sk: .111
  }],
  0x47: [.704, .119, .595, {
    sk: .111
  }],
  0x48: [.683, .048, .845, {
    sk: .111
  }],
  0x49: [.683, 0, .545, {
    ic: .097,
    sk: .0278
  }],
  0x4A: [.683, .119, .678, {
    ic: .161,
    sk: .167
  }],
  0x4B: [.705, .022, .762, {
    sk: .0556
  }],
  0x4C: [.705, .022, .69, {
    sk: .139
  }],
  0x4D: [.705, .05, 1.201, {
    sk: .139
  }],
  0x4E: [.789, .05, .82, {
    ic: .159,
    sk: .0833
  }],
  0x4F: [.705, .022, .796, {
    sk: .111
  }],
  0x50: [.683, .057, .696, {
    ic: .037,
    sk: .0833
  }],
  0x51: [.705, .131, .817, {
    sk: .111
  }],
  0x52: [.682, .022, .848, {
    sk: .0833
  }],
  0x53: [.705, .022, .606, {
    ic: .036,
    sk: .139
  }],
  0x54: [.717, .068, .545, {
    ic: .288,
    sk: .0278
  }],
  0x55: [.683, .028, .626, {
    ic: .061,
    sk: .0833
  }],
  0x56: [.683, .052, .613, {
    ic: .045,
    sk: .0278
  }],
  0x57: [.683, .053, .988, {
    ic: .046,
    sk: .0833
  }],
  0x58: [.683, 0, .713, {
    ic: .094,
    sk: .139
  }],
  0x59: [.683, .143, .668, {
    ic: .046,
    sk: .0833
  }],
  0x5A: [.683, 0, .725, {
    ic: .042,
    sk: .139
  }]
};

/***/ }),

/***/ 3698:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.texSize3 = void 0;
exports.texSize3 = {
  0x28: [1.45, .949, .736],
  0x29: [1.45, .949, .736],
  0x2F: [1.45, .949, 1.044],
  0x5B: [1.45, .949, .528],
  0x5C: [1.45, .949, 1.044],
  0x5D: [1.45, .949, .528],
  0x7B: [1.45, .949, .75],
  0x7D: [1.45, .949, .75],
  0x2C6: [.772, -0.564, 1.444],
  0x2DC: [.749, -0.61, 1.444],
  0x302: [.772, -0.564, 0],
  0x303: [.749, -0.61, 0],
  0x2044: [1.45, .949, 1.044],
  0x221A: [1.45, .95, 1, {
    ic: .02
  }],
  0x2308: [1.45, .949, .583],
  0x2309: [1.45, .949, .583],
  0x230A: [1.45, .949, .583],
  0x230B: [1.45, .949, .583],
  0x2329: [1.45, .95, .75],
  0x232A: [1.45, .949, .75],
  0x27E8: [1.45, .95, .75],
  0x27E9: [1.45, .949, .75],
  0x3008: [1.45, .95, .75],
  0x3009: [1.45, .949, .75]
};

/***/ }),

/***/ 1540:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.texSize4 = void 0;
exports.texSize4 = {
  0x28: [1.75, 1.249, .792],
  0x29: [1.75, 1.249, .792],
  0x2F: [1.75, 1.249, 1.278],
  0x5B: [1.75, 1.249, .583],
  0x5C: [1.75, 1.249, 1.278],
  0x5D: [1.75, 1.249, .583],
  0x7B: [1.75, 1.249, .806],
  0x7D: [1.75, 1.249, .806],
  0x2C6: [.845, -0.561, 1.889, {
    ic: .013
  }],
  0x2DC: [.823, -0.583, 1.889],
  0x302: [.845, -0.561, 0, {
    ic: .013
  }],
  0x303: [.823, -0.583, 0],
  0x2044: [1.75, 1.249, 1.278],
  0x221A: [1.75, 1.25, 1, {
    ic: .02
  }],
  0x2308: [1.75, 1.249, .639],
  0x2309: [1.75, 1.249, .639],
  0x230A: [1.75, 1.249, .639],
  0x230B: [1.75, 1.249, .639],
  0x2329: [1.75, 1.248, .806],
  0x232A: [1.75, 1.248, .806],
  0x239B: [1.154, .655, .875],
  0x239C: [.61, .01, .875],
  0x239D: [1.165, .644, .875],
  0x239E: [1.154, .655, .875],
  0x239F: [.61, .01, .875],
  0x23A0: [1.165, .644, .875],
  0x23A1: [1.154, .645, .667],
  0x23A2: [.602, 0, .667],
  0x23A3: [1.155, .644, .667],
  0x23A4: [1.154, .645, .667],
  0x23A5: [.602, 0, .667],
  0x23A6: [1.155, .644, .667],
  0x23A7: [.899, .01, .889],
  0x23A8: [1.16, .66, .889],
  0x23A9: [.01, .899, .889],
  0x23AA: [.29, .015, .889],
  0x23AB: [.899, .01, .889],
  0x23AC: [1.16, .66, .889],
  0x23AD: [.01, .899, .889],
  0x23B7: [.935, .885, 1.056],
  0x27E8: [1.75, 1.248, .806],
  0x27E9: [1.75, 1.248, .806],
  0x3008: [1.75, 1.248, .806],
  0x3009: [1.75, 1.248, .806],
  0xE000: [.625, .014, 1.056],
  0xE001: [.605, .014, 1.056, {
    ic: .02
  }],
  0xE150: [.12, .213, .45, {
    ic: .01
  }],
  0xE151: [.12, .213, .45, {
    ic: .024
  }],
  0xE152: [.333, 0, .45, {
    ic: .01
  }],
  0xE153: [.333, 0, .45, {
    ic: .024
  }],
  0xE154: [.32, .2, .4, {
    ic: .01
  }],
  0xE155: [.333, 0, .9, {
    ic: .01
  }],
  0xE156: [.12, .213, .9, {
    ic: .01
  }]
};

/***/ }),

/***/ 7408:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.texVariant = void 0;
exports.texVariant = {
  0x2C6: [.845, -0.561, 2.333, {
    ic: .013
  }],
  0x2DC: [.899, -0.628, 2.333],
  0x302: [.845, -0.561, 0, {
    ic: .013
  }],
  0x303: [.899, -0.628, 0],
  0x3F0: [.434, .006, .667, {
    ic: .067
  }],
  0x210F: [.695, .013, .54, {
    ic: .022
  }],
  0x2190: [.437, -0.064, .5],
  0x2192: [.437, -0.064, .5],
  0x21CC: [.514, .014, 1],
  0x2204: [.86, .166, .556],
  0x2205: [.587, 0, .778],
  0x2212: [.27, -0.23, .5],
  0x2216: [.43, .023, .778],
  0x221D: [.472, -0.028, .778],
  0x2223: [.43, .023, .222],
  0x2224: [.43, .023, .222, {
    ic: .018
  }],
  0x2225: [.431, .023, .389],
  0x2226: [.431, .024, .389, {
    ic: .018
  }],
  0x223C: [.365, -0.132, .778],
  0x2248: [.481, -0.05, .778],
  0x2268: [.752, .284, .778],
  0x2269: [.752, .284, .778],
  0x2270: [.919, .421, .778],
  0x2271: [.919, .421, .778],
  0x2288: [.828, .33, .778],
  0x2289: [.828, .33, .778],
  0x228A: [.634, .255, .778],
  0x228B: [.634, .254, .778],
  0x22A8: [.694, 0, .611],
  0x22C5: [.189, 0, .278],
  0x2322: [.378, -0.122, .778],
  0x2323: [.378, -0.143, .778],
  0x25B3: [.575, .02, .722],
  0x25BD: [.576, .019, .722],
  0x2A87: [.801, .303, .778],
  0x2A88: [.801, .303, .778],
  0x2ACB: [.752, .332, .778],
  0x2ACC: [.752, .333, .778]
};

/***/ }),

/***/ 8375:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.asyncLoad = void 0;

var mathjax_js_1 = __webpack_require__(5667);

function asyncLoad(name) {
  if (!mathjax_js_1.mathjax.asyncLoad) {
    return Promise.reject("Can't load '" + name + "': No asyncLoad method specified");
  }

  return new Promise(function (ok, fail) {
    var result = mathjax_js_1.mathjax.asyncLoad(name);

    if (result instanceof Promise) {
      result.then(function (value) {
        return ok(value);
      }).catch(function (err) {
        return fail(err);
      });
    } else {
      ok(result);
    }
  });
}

exports.asyncLoad = asyncLoad;

/***/ }),

/***/ 8483:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BBox = exports.BBoxStyleAdjust = void 0;

var lengths_js_1 = __webpack_require__(5915);

exports.BBoxStyleAdjust = [['borderTopWidth', 'h'], ['borderRightWidth', 'w'], ['borderBottomWidth', 'd'], ['borderLeftWidth', 'w', 0], ['paddingTop', 'h'], ['paddingRight', 'w'], ['paddingBottom', 'd'], ['paddingLeft', 'w', 0]];

var BBox = function () {
  function BBox(def) {
    if (def === void 0) {
      def = {
        w: 0,
        h: -lengths_js_1.BIGDIMEN,
        d: -lengths_js_1.BIGDIMEN
      };
    }

    this.w = def.w || 0;
    this.h = 'h' in def ? def.h : -lengths_js_1.BIGDIMEN;
    this.d = 'd' in def ? def.d : -lengths_js_1.BIGDIMEN;
    this.L = this.R = this.ic = this.sk = this.dx = 0;
    this.scale = this.rscale = 1;
    this.pwidth = '';
  }

  BBox.zero = function () {
    return new BBox({
      h: 0,
      d: 0,
      w: 0
    });
  };

  BBox.empty = function () {
    return new BBox();
  };

  BBox.prototype.empty = function () {
    this.w = 0;
    this.h = this.d = -lengths_js_1.BIGDIMEN;
    return this;
  };

  BBox.prototype.clean = function () {
    if (this.w === -lengths_js_1.BIGDIMEN) this.w = 0;
    if (this.h === -lengths_js_1.BIGDIMEN) this.h = 0;
    if (this.d === -lengths_js_1.BIGDIMEN) this.d = 0;
  };

  BBox.prototype.rescale = function (scale) {
    this.w *= scale;
    this.h *= scale;
    this.d *= scale;
  };

  BBox.prototype.combine = function (cbox, x, y) {
    if (x === void 0) {
      x = 0;
    }

    if (y === void 0) {
      y = 0;
    }

    var rscale = cbox.rscale;
    var w = x + rscale * (cbox.w + cbox.L + cbox.R);
    var h = y + rscale * cbox.h;
    var d = rscale * cbox.d - y;
    if (w > this.w) this.w = w;
    if (h > this.h) this.h = h;
    if (d > this.d) this.d = d;
  };

  BBox.prototype.append = function (cbox) {
    var scale = cbox.rscale;
    this.w += scale * (cbox.w + cbox.L + cbox.R);

    if (scale * cbox.h > this.h) {
      this.h = scale * cbox.h;
    }

    if (scale * cbox.d > this.d) {
      this.d = scale * cbox.d;
    }
  };

  BBox.prototype.updateFrom = function (cbox) {
    this.h = cbox.h;
    this.d = cbox.d;
    this.w = cbox.w;

    if (cbox.pwidth) {
      this.pwidth = cbox.pwidth;
    }
  };

  BBox.fullWidth = '100%';
  return BBox;
}();

exports.BBox = BBox;

/***/ }),

/***/ 4954:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BitFieldClass = exports.BitField = void 0;

var BitField = function () {
  function BitField() {
    this.bits = 0;
  }

  BitField.allocate = function () {
    var e_1, _a;

    var names = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      names[_i] = arguments[_i];
    }

    try {
      for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
        var name_1 = names_1_1.value;

        if (this.has(name_1)) {
          throw new Error('Bit already allocated for ' + name_1);
        }

        if (this.next === BitField.MAXBIT) {
          throw new Error('Maximum number of bits already allocated');
        }

        this.names.set(name_1, this.next);
        this.next <<= 1;
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  };

  BitField.has = function (name) {
    return this.names.has(name);
  };

  BitField.prototype.set = function (name) {
    this.bits |= this.getBit(name);
  };

  BitField.prototype.clear = function (name) {
    this.bits &= ~this.getBit(name);
  };

  BitField.prototype.isSet = function (name) {
    return !!(this.bits & this.getBit(name));
  };

  BitField.prototype.reset = function () {
    this.bits = 0;
  };

  BitField.prototype.getBit = function (name) {
    var bit = this.constructor.names.get(name);

    if (!bit) {
      throw new Error('Unknown bit-field name: ' + name);
    }

    return bit;
  };

  BitField.MAXBIT = 1 << 31;
  BitField.next = 1;
  BitField.names = new Map();
  return BitField;
}();

exports.BitField = BitField;

function BitFieldClass() {
  var names = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    names[_i] = arguments[_i];
  }

  var Bits = function (_super) {
    __extends(Bits, _super);

    function Bits() {
      return _super !== null && _super.apply(this, arguments) || this;
    }

    return Bits;
  }(BitField);

  Bits.allocate.apply(Bits, __spreadArray([], __read(names)));
  return Bits;
}

exports.BitFieldClass = BitFieldClass;

/***/ }),

/***/ 3719:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.numeric = exports.translate = exports.remove = exports.add = exports.entities = exports.options = void 0;

var Retries_js_1 = __webpack_require__(6009);

var AsyncLoad_js_1 = __webpack_require__(8375);

exports.options = {
  loadMissingEntities: true
};
exports.entities = {
  ApplyFunction: "\u2061",
  Backslash: "\u2216",
  Because: "\u2235",
  Breve: "\u02D8",
  Cap: "\u22D2",
  CenterDot: "\xB7",
  CircleDot: "\u2299",
  CircleMinus: "\u2296",
  CirclePlus: "\u2295",
  CircleTimes: "\u2297",
  Congruent: "\u2261",
  ContourIntegral: "\u222E",
  Coproduct: "\u2210",
  Cross: "\u2A2F",
  Cup: "\u22D3",
  CupCap: "\u224D",
  Dagger: "\u2021",
  Del: "\u2207",
  Delta: "\u0394",
  Diamond: "\u22C4",
  DifferentialD: "\u2146",
  DotEqual: "\u2250",
  DoubleDot: "\xA8",
  DoubleRightTee: "\u22A8",
  DoubleVerticalBar: "\u2225",
  DownArrow: "\u2193",
  DownLeftVector: "\u21BD",
  DownRightVector: "\u21C1",
  DownTee: "\u22A4",
  Downarrow: "\u21D3",
  Element: "\u2208",
  EqualTilde: "\u2242",
  Equilibrium: "\u21CC",
  Exists: "\u2203",
  ExponentialE: "\u2147",
  FilledVerySmallSquare: "\u25AA",
  ForAll: "\u2200",
  Gamma: "\u0393",
  Gg: "\u22D9",
  GreaterEqual: "\u2265",
  GreaterEqualLess: "\u22DB",
  GreaterFullEqual: "\u2267",
  GreaterLess: "\u2277",
  GreaterSlantEqual: "\u2A7E",
  GreaterTilde: "\u2273",
  Hacek: "\u02C7",
  Hat: "^",
  HumpDownHump: "\u224E",
  HumpEqual: "\u224F",
  Im: "\u2111",
  ImaginaryI: "\u2148",
  Integral: "\u222B",
  Intersection: "\u22C2",
  InvisibleComma: "\u2063",
  InvisibleTimes: "\u2062",
  Lambda: "\u039B",
  Larr: "\u219E",
  LeftAngleBracket: "\u27E8",
  LeftArrow: "\u2190",
  LeftArrowRightArrow: "\u21C6",
  LeftCeiling: "\u2308",
  LeftDownVector: "\u21C3",
  LeftFloor: "\u230A",
  LeftRightArrow: "\u2194",
  LeftTee: "\u22A3",
  LeftTriangle: "\u22B2",
  LeftTriangleEqual: "\u22B4",
  LeftUpVector: "\u21BF",
  LeftVector: "\u21BC",
  Leftarrow: "\u21D0",
  Leftrightarrow: "\u21D4",
  LessEqualGreater: "\u22DA",
  LessFullEqual: "\u2266",
  LessGreater: "\u2276",
  LessSlantEqual: "\u2A7D",
  LessTilde: "\u2272",
  Ll: "\u22D8",
  Lleftarrow: "\u21DA",
  LongLeftArrow: "\u27F5",
  LongLeftRightArrow: "\u27F7",
  LongRightArrow: "\u27F6",
  Longleftarrow: "\u27F8",
  Longleftrightarrow: "\u27FA",
  Longrightarrow: "\u27F9",
  Lsh: "\u21B0",
  MinusPlus: "\u2213",
  NestedGreaterGreater: "\u226B",
  NestedLessLess: "\u226A",
  NotDoubleVerticalBar: "\u2226",
  NotElement: "\u2209",
  NotEqual: "\u2260",
  NotExists: "\u2204",
  NotGreater: "\u226F",
  NotGreaterEqual: "\u2271",
  NotLeftTriangle: "\u22EA",
  NotLeftTriangleEqual: "\u22EC",
  NotLess: "\u226E",
  NotLessEqual: "\u2270",
  NotPrecedes: "\u2280",
  NotPrecedesSlantEqual: "\u22E0",
  NotRightTriangle: "\u22EB",
  NotRightTriangleEqual: "\u22ED",
  NotSubsetEqual: "\u2288",
  NotSucceeds: "\u2281",
  NotSucceedsSlantEqual: "\u22E1",
  NotSupersetEqual: "\u2289",
  NotTilde: "\u2241",
  NotVerticalBar: "\u2224",
  Omega: "\u03A9",
  OverBar: "\u203E",
  OverBrace: "\u23DE",
  PartialD: "\u2202",
  Phi: "\u03A6",
  Pi: "\u03A0",
  PlusMinus: "\xB1",
  Precedes: "\u227A",
  PrecedesEqual: "\u2AAF",
  PrecedesSlantEqual: "\u227C",
  PrecedesTilde: "\u227E",
  Product: "\u220F",
  Proportional: "\u221D",
  Psi: "\u03A8",
  Rarr: "\u21A0",
  Re: "\u211C",
  ReverseEquilibrium: "\u21CB",
  RightAngleBracket: "\u27E9",
  RightArrow: "\u2192",
  RightArrowLeftArrow: "\u21C4",
  RightCeiling: "\u2309",
  RightDownVector: "\u21C2",
  RightFloor: "\u230B",
  RightTee: "\u22A2",
  RightTeeArrow: "\u21A6",
  RightTriangle: "\u22B3",
  RightTriangleEqual: "\u22B5",
  RightUpVector: "\u21BE",
  RightVector: "\u21C0",
  Rightarrow: "\u21D2",
  Rrightarrow: "\u21DB",
  Rsh: "\u21B1",
  Sigma: "\u03A3",
  SmallCircle: "\u2218",
  Sqrt: "\u221A",
  Square: "\u25A1",
  SquareIntersection: "\u2293",
  SquareSubset: "\u228F",
  SquareSubsetEqual: "\u2291",
  SquareSuperset: "\u2290",
  SquareSupersetEqual: "\u2292",
  SquareUnion: "\u2294",
  Star: "\u22C6",
  Subset: "\u22D0",
  SubsetEqual: "\u2286",
  Succeeds: "\u227B",
  SucceedsEqual: "\u2AB0",
  SucceedsSlantEqual: "\u227D",
  SucceedsTilde: "\u227F",
  SuchThat: "\u220B",
  Sum: "\u2211",
  Superset: "\u2283",
  SupersetEqual: "\u2287",
  Supset: "\u22D1",
  Therefore: "\u2234",
  Theta: "\u0398",
  Tilde: "\u223C",
  TildeEqual: "\u2243",
  TildeFullEqual: "\u2245",
  TildeTilde: "\u2248",
  UnderBar: "_",
  UnderBrace: "\u23DF",
  Union: "\u22C3",
  UnionPlus: "\u228E",
  UpArrow: "\u2191",
  UpDownArrow: "\u2195",
  UpTee: "\u22A5",
  Uparrow: "\u21D1",
  Updownarrow: "\u21D5",
  Upsilon: "\u03A5",
  Vdash: "\u22A9",
  Vee: "\u22C1",
  VerticalBar: "\u2223",
  VerticalTilde: "\u2240",
  Vvdash: "\u22AA",
  Wedge: "\u22C0",
  Xi: "\u039E",
  amp: "&",
  acute: "\xB4",
  aleph: "\u2135",
  alpha: "\u03B1",
  amalg: "\u2A3F",
  and: "\u2227",
  ang: "\u2220",
  angmsd: "\u2221",
  angsph: "\u2222",
  ape: "\u224A",
  backprime: "\u2035",
  backsim: "\u223D",
  backsimeq: "\u22CD",
  beta: "\u03B2",
  beth: "\u2136",
  between: "\u226C",
  bigcirc: "\u25EF",
  bigodot: "\u2A00",
  bigoplus: "\u2A01",
  bigotimes: "\u2A02",
  bigsqcup: "\u2A06",
  bigstar: "\u2605",
  bigtriangledown: "\u25BD",
  bigtriangleup: "\u25B3",
  biguplus: "\u2A04",
  blacklozenge: "\u29EB",
  blacktriangle: "\u25B4",
  blacktriangledown: "\u25BE",
  blacktriangleleft: "\u25C2",
  bowtie: "\u22C8",
  boxdl: "\u2510",
  boxdr: "\u250C",
  boxminus: "\u229F",
  boxplus: "\u229E",
  boxtimes: "\u22A0",
  boxul: "\u2518",
  boxur: "\u2514",
  bsol: "\\",
  bull: "\u2022",
  cap: "\u2229",
  check: "\u2713",
  chi: "\u03C7",
  circ: "\u02C6",
  circeq: "\u2257",
  circlearrowleft: "\u21BA",
  circlearrowright: "\u21BB",
  circledR: "\xAE",
  circledS: "\u24C8",
  circledast: "\u229B",
  circledcirc: "\u229A",
  circleddash: "\u229D",
  clubs: "\u2663",
  colon: ":",
  comp: "\u2201",
  ctdot: "\u22EF",
  cuepr: "\u22DE",
  cuesc: "\u22DF",
  cularr: "\u21B6",
  cup: "\u222A",
  curarr: "\u21B7",
  curlyvee: "\u22CE",
  curlywedge: "\u22CF",
  dagger: "\u2020",
  daleth: "\u2138",
  ddarr: "\u21CA",
  deg: "\xB0",
  delta: "\u03B4",
  digamma: "\u03DD",
  div: "\xF7",
  divideontimes: "\u22C7",
  dot: "\u02D9",
  doteqdot: "\u2251",
  dotplus: "\u2214",
  dotsquare: "\u22A1",
  dtdot: "\u22F1",
  ecir: "\u2256",
  efDot: "\u2252",
  egs: "\u2A96",
  ell: "\u2113",
  els: "\u2A95",
  empty: "\u2205",
  epsi: "\u03B5",
  epsiv: "\u03F5",
  erDot: "\u2253",
  eta: "\u03B7",
  eth: "\xF0",
  flat: "\u266D",
  fork: "\u22D4",
  frown: "\u2322",
  gEl: "\u2A8C",
  gamma: "\u03B3",
  gap: "\u2A86",
  gimel: "\u2137",
  gnE: "\u2269",
  gnap: "\u2A8A",
  gne: "\u2A88",
  gnsim: "\u22E7",
  gt: ">",
  gtdot: "\u22D7",
  harrw: "\u21AD",
  hbar: "\u210F",
  hellip: "\u2026",
  hookleftarrow: "\u21A9",
  hookrightarrow: "\u21AA",
  imath: "\u0131",
  infin: "\u221E",
  intcal: "\u22BA",
  iota: "\u03B9",
  jmath: "\u0237",
  kappa: "\u03BA",
  kappav: "\u03F0",
  lEg: "\u2A8B",
  lambda: "\u03BB",
  lap: "\u2A85",
  larrlp: "\u21AB",
  larrtl: "\u21A2",
  lbrace: "{",
  lbrack: "[",
  le: "\u2264",
  leftleftarrows: "\u21C7",
  leftthreetimes: "\u22CB",
  lessdot: "\u22D6",
  lmoust: "\u23B0",
  lnE: "\u2268",
  lnap: "\u2A89",
  lne: "\u2A87",
  lnsim: "\u22E6",
  longmapsto: "\u27FC",
  looparrowright: "\u21AC",
  lowast: "\u2217",
  loz: "\u25CA",
  lt: "<",
  ltimes: "\u22C9",
  ltri: "\u25C3",
  macr: "\xAF",
  malt: "\u2720",
  mho: "\u2127",
  mu: "\u03BC",
  multimap: "\u22B8",
  nLeftarrow: "\u21CD",
  nLeftrightarrow: "\u21CE",
  nRightarrow: "\u21CF",
  nVDash: "\u22AF",
  nVdash: "\u22AE",
  natur: "\u266E",
  nearr: "\u2197",
  nharr: "\u21AE",
  nlarr: "\u219A",
  not: "\xAC",
  nrarr: "\u219B",
  nu: "\u03BD",
  nvDash: "\u22AD",
  nvdash: "\u22AC",
  nwarr: "\u2196",
  omega: "\u03C9",
  omicron: "\u03BF",
  or: "\u2228",
  osol: "\u2298",
  period: ".",
  phi: "\u03C6",
  phiv: "\u03D5",
  pi: "\u03C0",
  piv: "\u03D6",
  prap: "\u2AB7",
  precnapprox: "\u2AB9",
  precneqq: "\u2AB5",
  precnsim: "\u22E8",
  prime: "\u2032",
  psi: "\u03C8",
  quot: "\"",
  rarrtl: "\u21A3",
  rbrace: "}",
  rbrack: "]",
  rho: "\u03C1",
  rhov: "\u03F1",
  rightrightarrows: "\u21C9",
  rightthreetimes: "\u22CC",
  ring: "\u02DA",
  rmoust: "\u23B1",
  rtimes: "\u22CA",
  rtri: "\u25B9",
  scap: "\u2AB8",
  scnE: "\u2AB6",
  scnap: "\u2ABA",
  scnsim: "\u22E9",
  sdot: "\u22C5",
  searr: "\u2198",
  sect: "\xA7",
  sharp: "\u266F",
  sigma: "\u03C3",
  sigmav: "\u03C2",
  simne: "\u2246",
  smile: "\u2323",
  spades: "\u2660",
  sub: "\u2282",
  subE: "\u2AC5",
  subnE: "\u2ACB",
  subne: "\u228A",
  supE: "\u2AC6",
  supnE: "\u2ACC",
  supne: "\u228B",
  swarr: "\u2199",
  tau: "\u03C4",
  theta: "\u03B8",
  thetav: "\u03D1",
  tilde: "\u02DC",
  times: "\xD7",
  triangle: "\u25B5",
  triangleq: "\u225C",
  upsi: "\u03C5",
  upuparrows: "\u21C8",
  veebar: "\u22BB",
  vellip: "\u22EE",
  weierp: "\u2118",
  xi: "\u03BE",
  yen: "\xA5",
  zeta: "\u03B6",
  zigrarr: "\u21DD",
  nbsp: "\xA0",
  rsquo: "\u2019",
  lsquo: "\u2018"
};
var loaded = {};

function add(additions, file) {
  Object.assign(exports.entities, additions);
  loaded[file] = true;
}

exports.add = add;

function remove(entity) {
  delete exports.entities[entity];
}

exports.remove = remove;

function translate(text) {
  return text.replace(/&([a-z][a-z0-9]*|#(?:[0-9]+|x[0-9a-f]+));/ig, replace);
}

exports.translate = translate;

function replace(match, entity) {
  if (entity.charAt(0) === '#') {
    return numeric(entity.slice(1));
  }

  if (exports.entities[entity]) {
    return exports.entities[entity];
  }

  if (exports.options['loadMissingEntities']) {
    var file = entity.match(/^[a-zA-Z](fr|scr|opf)$/) ? RegExp.$1 : entity.charAt(0).toLowerCase();

    if (!loaded[file]) {
      loaded[file] = true;
      Retries_js_1.retryAfter(AsyncLoad_js_1.asyncLoad('./util/entities/' + file + '.js'));
    }
  }

  return match;
}

function numeric(entity) {
  var n = entity.charAt(0) === 'x' ? parseInt(entity.slice(1), 16) : parseInt(entity);
  return String.fromCodePoint(n);
}

exports.numeric = numeric;

/***/ }),

/***/ 438:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.FunctionList = void 0;

var PrioritizedList_js_1 = __webpack_require__(5882);

var FunctionList = function (_super) {
  __extends(FunctionList, _super);

  function FunctionList() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  FunctionList.prototype.execute = function () {
    var e_1, _a;

    var data = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      data[_i] = arguments[_i];
    }

    try {
      for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {
        var item = _c.value;
        var result = item.item.apply(item, __spreadArray([], __read(data)));

        if (result === false) {
          return false;
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return true;
  };

  FunctionList.prototype.asyncExecute = function () {
    var data = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      data[_i] = arguments[_i];
    }

    var i = -1;
    var items = this.items;
    return new Promise(function (ok, fail) {
      (function execute() {
        var _a;

        while (++i < items.length) {
          var result = (_a = items[i]).item.apply(_a, __spreadArray([], __read(data)));

          if (result instanceof Promise) {
            result.then(execute).catch(function (err) {
              return fail(err);
            });
            return;
          }

          if (result === false) {
            ok(false);
            return;
          }
        }

        ok(true);
      })();
    });
  };

  return FunctionList;
}(PrioritizedList_js_1.PrioritizedList);

exports.FunctionList = FunctionList;

/***/ }),

/***/ 5705:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __generator = this && this.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.LinkedList = exports.ListItem = exports.END = void 0;
exports.END = Symbol();

var ListItem = function () {
  function ListItem(data) {
    if (data === void 0) {
      data = null;
    }

    this.next = null;
    this.prev = null;
    this.data = data;
  }

  return ListItem;
}();

exports.ListItem = ListItem;

var LinkedList = function () {
  function LinkedList() {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this.list = new ListItem(exports.END);
    this.list.next = this.list.prev = this.list;
    this.push.apply(this, __spreadArray([], __read(args)));
  }

  LinkedList.prototype.isBefore = function (a, b) {
    return a < b;
  };

  LinkedList.prototype.push = function () {
    var e_1, _a;

    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    try {
      for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {
        var data = args_1_1.value;
        var item = new ListItem(data);
        item.next = this.list;
        item.prev = this.list.prev;
        this.list.prev = item;
        item.prev.next = item;
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return this;
  };

  LinkedList.prototype.pop = function () {
    var item = this.list.prev;

    if (item.data === exports.END) {
      return null;
    }

    this.list.prev = item.prev;
    item.prev.next = this.list;
    item.next = item.prev = null;
    return item.data;
  };

  LinkedList.prototype.unshift = function () {
    var e_2, _a;

    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    try {
      for (var _b = __values(args.slice(0).reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {
        var data = _c.value;
        var item = new ListItem(data);
        item.next = this.list.next;
        item.prev = this.list;
        this.list.next = item;
        item.next.prev = item;
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }

    return this;
  };

  LinkedList.prototype.shift = function () {
    var item = this.list.next;

    if (item.data === exports.END) {
      return null;
    }

    this.list.next = item.next;
    item.next.prev = this.list;
    item.next = item.prev = null;
    return item.data;
  };

  LinkedList.prototype.remove = function () {
    var e_3, _a;

    var items = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      items[_i] = arguments[_i];
    }

    var map = new Map();

    try {
      for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {
        var item_1 = items_1_1.value;
        map.set(item_1, true);
      }
    } catch (e_3_1) {
      e_3 = {
        error: e_3_1
      };
    } finally {
      try {
        if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);
      } finally {
        if (e_3) throw e_3.error;
      }
    }

    var item = this.list.next;

    while (item.data !== exports.END) {
      var next = item.next;

      if (map.has(item.data)) {
        item.prev.next = item.next;
        item.next.prev = item.prev;
        item.next = item.prev = null;
      }

      item = next;
    }
  };

  LinkedList.prototype.clear = function () {
    this.list.next.prev = this.list.prev.next = null;
    this.list.next = this.list.prev = this.list;
    return this;
  };

  LinkedList.prototype[Symbol.iterator] = function () {
    var current;
    return __generator(this, function (_a) {
      switch (_a.label) {
        case 0:
          current = this.list.next;
          _a.label = 1;

        case 1:
          if (!(current.data !== exports.END)) return [3, 3];
          return [4, current.data];

        case 2:
          _a.sent();

          current = current.next;
          return [3, 1];

        case 3:
          return [2];
      }
    });
  };

  LinkedList.prototype.reversed = function () {
    var current;
    return __generator(this, function (_a) {
      switch (_a.label) {
        case 0:
          current = this.list.prev;
          _a.label = 1;

        case 1:
          if (!(current.data !== exports.END)) return [3, 3];
          return [4, current.data];

        case 2:
          _a.sent();

          current = current.prev;
          return [3, 1];

        case 3:
          return [2];
      }
    });
  };

  LinkedList.prototype.insert = function (data, isBefore) {
    if (isBefore === void 0) {
      isBefore = null;
    }

    if (isBefore === null) {
      isBefore = this.isBefore.bind(this);
    }

    var item = new ListItem(data);
    var cur = this.list.next;

    while (cur.data !== exports.END && isBefore(cur.data, item.data)) {
      cur = cur.next;
    }

    item.prev = cur.prev;
    item.next = cur;
    cur.prev.next = cur.prev = item;
    return this;
  };

  LinkedList.prototype.sort = function (isBefore) {
    var e_4, _a;

    if (isBefore === void 0) {
      isBefore = null;
    }

    if (isBefore === null) {
      isBefore = this.isBefore.bind(this);
    }

    var lists = [];

    try {
      for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {
        var item = _c.value;
        lists.push(new LinkedList(item));
      }
    } catch (e_4_1) {
      e_4 = {
        error: e_4_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_4) throw e_4.error;
      }
    }

    this.list.next = this.list.prev = this.list;

    while (lists.length > 1) {
      var l1 = lists.shift();
      var l2 = lists.shift();
      l1.merge(l2, isBefore);
      lists.push(l1);
    }

    if (lists.length) {
      this.list = lists[0].list;
    }

    return this;
  };

  LinkedList.prototype.merge = function (list, isBefore) {
    var _a, _b, _c, _d, _e;

    if (isBefore === void 0) {
      isBefore = null;
    }

    if (isBefore === null) {
      isBefore = this.isBefore.bind(this);
    }

    var lcur = this.list.next;
    var mcur = list.list.next;

    while (lcur.data !== exports.END && mcur.data !== exports.END) {
      if (isBefore(mcur.data, lcur.data)) {
        _a = __read([lcur, mcur], 2), mcur.prev.next = _a[0], lcur.prev.next = _a[1];
        _b = __read([lcur.prev, mcur.prev], 2), mcur.prev = _b[0], lcur.prev = _b[1];
        _c = __read([list.list, this.list], 2), this.list.prev.next = _c[0], list.list.prev.next = _c[1];
        _d = __read([list.list.prev, this.list.prev], 2), this.list.prev = _d[0], list.list.prev = _d[1];
        _e = __read([mcur.next, lcur], 2), lcur = _e[0], mcur = _e[1];
      } else {
        lcur = lcur.next;
      }
    }

    if (mcur.data !== exports.END) {
      this.list.prev.next = list.list.next;
      list.list.next.prev = this.list.prev;
      list.list.prev.next = this.list;
      this.list.prev = list.list.prev;
      list.list.next = list.list.prev = list.list;
    }

    return this;
  };

  return LinkedList;
}();

exports.LinkedList = LinkedList;

/***/ }),

/***/ 5698:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.lookup = exports.separateOptions = exports.selectOptionsFromKeys = exports.selectOptions = exports.userOptions = exports.defaultOptions = exports.insert = exports.copy = exports.keys = exports.makeArray = exports.expandable = exports.Expandable = exports.OPTIONS = exports.REMOVE = exports.APPEND = exports.isObject = void 0;
var OBJECT = {}.constructor;

function isObject(obj) {
  return typeof obj === 'object' && obj !== null && (obj.constructor === OBJECT || obj.constructor === Expandable);
}

exports.isObject = isObject;
exports.APPEND = '[+]';
exports.REMOVE = '[-]';
exports.OPTIONS = {
  invalidOption: 'warn',
  optionError: function optionError(message, _key) {
    if (exports.OPTIONS.invalidOption === 'fatal') {
      throw new Error(message);
    }

    console.warn('MathJax: ' + message);
  }
};

var Expandable = function () {
  function Expandable() {}

  return Expandable;
}();

exports.Expandable = Expandable;

function expandable(def) {
  return Object.assign(Object.create(Expandable.prototype), def);
}

exports.expandable = expandable;

function makeArray(x) {
  return Array.isArray(x) ? x : [x];
}

exports.makeArray = makeArray;

function keys(def) {
  if (!def) {
    return [];
  }

  return Object.keys(def).concat(Object.getOwnPropertySymbols(def));
}

exports.keys = keys;

function copy(def) {
  var e_1, _a;

  var props = {};

  try {
    for (var _b = __values(keys(def)), _c = _b.next(); !_c.done; _c = _b.next()) {
      var key = _c.value;
      var prop = Object.getOwnPropertyDescriptor(def, key);
      var value = prop.value;

      if (Array.isArray(value)) {
        prop.value = insert([], value, false);
      } else if (isObject(value)) {
        prop.value = copy(value);
      }

      if (prop.enumerable) {
        props[key] = prop;
      }
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_1) throw e_1.error;
    }
  }

  return Object.defineProperties(def.constructor === Expandable ? expandable({}) : {}, props);
}

exports.copy = copy;

function insert(dst, src, warn) {
  var e_2, _a;

  if (warn === void 0) {
    warn = true;
  }

  var _loop_1 = function _loop_1(key) {
    if (warn && dst[key] === undefined && dst.constructor !== Expandable) {
      if (typeof key === 'symbol') {
        key = key.toString();
      }

      exports.OPTIONS.optionError("Invalid option \"" + key + "\" (no default value).", key);
      return "continue";
    }

    var sval = src[key],
        dval = dst[key];

    if (isObject(sval) && dval !== null && (typeof dval === 'object' || typeof dval === 'function')) {
      var ids = keys(sval);

      if (Array.isArray(dval) && (ids.length === 1 && (ids[0] === exports.APPEND || ids[0] === exports.REMOVE) && Array.isArray(sval[ids[0]]) || ids.length === 2 && ids.sort().join(',') === exports.APPEND + ',' + exports.REMOVE && Array.isArray(sval[exports.APPEND]) && Array.isArray(sval[exports.REMOVE]))) {
        if (sval[exports.REMOVE]) {
          dval = dst[key] = dval.filter(function (x) {
            return sval[exports.REMOVE].indexOf(x) < 0;
          });
        }

        if (sval[exports.APPEND]) {
          dst[key] = __spreadArray(__spreadArray([], __read(dval)), __read(sval[exports.APPEND]));
        }
      } else {
        insert(dval, sval, warn);
      }
    } else if (Array.isArray(sval)) {
      dst[key] = [];
      insert(dst[key], sval, false);
    } else if (isObject(sval)) {
      dst[key] = copy(sval);
    } else {
      dst[key] = sval;
    }
  };

  try {
    for (var _b = __values(keys(src)), _c = _b.next(); !_c.done; _c = _b.next()) {
      var key = _c.value;

      _loop_1(key);
    }
  } catch (e_2_1) {
    e_2 = {
      error: e_2_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_2) throw e_2.error;
    }
  }

  return dst;
}

exports.insert = insert;

function defaultOptions(options) {
  var defs = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    defs[_i - 1] = arguments[_i];
  }

  defs.forEach(function (def) {
    return insert(options, def, false);
  });
  return options;
}

exports.defaultOptions = defaultOptions;

function userOptions(options) {
  var defs = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    defs[_i - 1] = arguments[_i];
  }

  defs.forEach(function (def) {
    return insert(options, def, true);
  });
  return options;
}

exports.userOptions = userOptions;

function selectOptions(options) {
  var e_3, _a;

  var keys = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    keys[_i - 1] = arguments[_i];
  }

  var subset = {};

  try {
    for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {
      var key = keys_1_1.value;

      if (options.hasOwnProperty(key)) {
        subset[key] = options[key];
      }
    }
  } catch (e_3_1) {
    e_3 = {
      error: e_3_1
    };
  } finally {
    try {
      if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);
    } finally {
      if (e_3) throw e_3.error;
    }
  }

  return subset;
}

exports.selectOptions = selectOptions;

function selectOptionsFromKeys(options, object) {
  return selectOptions.apply(void 0, __spreadArray([options], __read(Object.keys(object))));
}

exports.selectOptionsFromKeys = selectOptionsFromKeys;

function separateOptions(options) {
  var e_4, _a, e_5, _b;

  var objects = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    objects[_i - 1] = arguments[_i];
  }

  var results = [];

  try {
    for (var objects_1 = __values(objects), objects_1_1 = objects_1.next(); !objects_1_1.done; objects_1_1 = objects_1.next()) {
      var object = objects_1_1.value;
      var exists = {},
          missing = {};

      try {
        for (var _c = (e_5 = void 0, __values(Object.keys(options || {}))), _d = _c.next(); !_d.done; _d = _c.next()) {
          var key = _d.value;
          (object[key] === undefined ? missing : exists)[key] = options[key];
        }
      } catch (e_5_1) {
        e_5 = {
          error: e_5_1
        };
      } finally {
        try {
          if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
        } finally {
          if (e_5) throw e_5.error;
        }
      }

      results.push(exists);
      options = missing;
    }
  } catch (e_4_1) {
    e_4 = {
      error: e_4_1
    };
  } finally {
    try {
      if (objects_1_1 && !objects_1_1.done && (_a = objects_1.return)) _a.call(objects_1);
    } finally {
      if (e_4) throw e_4.error;
    }
  }

  results.unshift(options);
  return results;
}

exports.separateOptions = separateOptions;

function lookup(name, lookup, def) {
  if (def === void 0) {
    def = null;
  }

  return lookup.hasOwnProperty(name) ? lookup[name] : def;
}

exports.lookup = lookup;

/***/ }),

/***/ 5882:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.PrioritizedList = void 0;

var PrioritizedList = function () {
  function PrioritizedList() {
    this.items = [];
    this.items = [];
  }

  PrioritizedList.prototype[Symbol.iterator] = function () {
    var i = 0;
    var items = this.items;
    return {
      next: function next() {
        return {
          value: items[i++],
          done: i > items.length
        };
      }
    };
  };

  PrioritizedList.prototype.add = function (item, priority) {
    if (priority === void 0) {
      priority = PrioritizedList.DEFAULTPRIORITY;
    }

    var i = this.items.length;

    do {
      i--;
    } while (i >= 0 && priority < this.items[i].priority);

    this.items.splice(i + 1, 0, {
      item: item,
      priority: priority
    });
    return item;
  };

  PrioritizedList.prototype.remove = function (item) {
    var i = this.items.length;

    do {
      i--;
    } while (i >= 0 && this.items[i].item !== item);

    if (i >= 0) {
      this.items.splice(i, 1);
    }
  };

  PrioritizedList.DEFAULTPRIORITY = 5;
  return PrioritizedList;
}();

exports.PrioritizedList = PrioritizedList;

/***/ }),

/***/ 6009:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.retryAfter = exports.handleRetriesFor = void 0;

function handleRetriesFor(code) {
  return new Promise(function run(ok, fail) {
    try {
      ok(code());
    } catch (err) {
      if (err.retry && err.retry instanceof Promise) {
        err.retry.then(function () {
          return run(ok, fail);
        }).catch(function (perr) {
          return fail(perr);
        });
      } else if (err.restart && err.restart.isCallback) {
        MathJax.Callback.After(function () {
          return run(ok, fail);
        }, err.restart);
      } else {
        fail(err);
      }
    }
  });
}

exports.handleRetriesFor = handleRetriesFor;

function retryAfter(promise) {
  var err = new Error('MathJax retry');
  err.retry = promise;
  throw err;
}

exports.retryAfter = retryAfter;

/***/ }),

/***/ 401:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CssStyles = void 0;

var CssStyles = function () {
  function CssStyles(styles) {
    if (styles === void 0) {
      styles = null;
    }

    this.styles = {};
    this.addStyles(styles);
  }

  Object.defineProperty(CssStyles.prototype, "cssText", {
    get: function get() {
      return this.getStyleString();
    },
    enumerable: false,
    configurable: true
  });

  CssStyles.prototype.addStyles = function (styles) {
    var e_1, _a;

    if (!styles) return;

    try {
      for (var _b = __values(Object.keys(styles)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var style = _c.value;

        if (!this.styles[style]) {
          this.styles[style] = {};
        }

        Object.assign(this.styles[style], styles[style]);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  };

  CssStyles.prototype.removeStyles = function () {
    var e_2, _a;

    var selectors = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      selectors[_i] = arguments[_i];
    }

    try {
      for (var selectors_1 = __values(selectors), selectors_1_1 = selectors_1.next(); !selectors_1_1.done; selectors_1_1 = selectors_1.next()) {
        var selector = selectors_1_1.value;
        delete this.styles[selector];
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (selectors_1_1 && !selectors_1_1.done && (_a = selectors_1.return)) _a.call(selectors_1);
      } finally {
        if (e_2) throw e_2.error;
      }
    }
  };

  CssStyles.prototype.clear = function () {
    this.styles = {};
  };

  CssStyles.prototype.getStyleString = function () {
    return this.getStyleRules().join('\n\n');
  };

  CssStyles.prototype.getStyleRules = function () {
    var e_3, _a;

    var selectors = Object.keys(this.styles);
    var defs = new Array(selectors.length);
    var i = 0;

    try {
      for (var selectors_2 = __values(selectors), selectors_2_1 = selectors_2.next(); !selectors_2_1.done; selectors_2_1 = selectors_2.next()) {
        var selector = selectors_2_1.value;
        defs[i++] = selector + ' {\n' + this.getStyleDefString(this.styles[selector]) + '\n}';
      }
    } catch (e_3_1) {
      e_3 = {
        error: e_3_1
      };
    } finally {
      try {
        if (selectors_2_1 && !selectors_2_1.done && (_a = selectors_2.return)) _a.call(selectors_2);
      } finally {
        if (e_3) throw e_3.error;
      }
    }

    return defs;
  };

  CssStyles.prototype.getStyleDefString = function (styles) {
    var e_4, _a;

    var properties = Object.keys(styles);
    var values = new Array(properties.length);
    var i = 0;

    try {
      for (var properties_1 = __values(properties), properties_1_1 = properties_1.next(); !properties_1_1.done; properties_1_1 = properties_1.next()) {
        var property = properties_1_1.value;
        values[i++] = '  ' + property + ': ' + styles[property] + ';';
      }
    } catch (e_4_1) {
      e_4 = {
        error: e_4_1
      };
    } finally {
      try {
        if (properties_1_1 && !properties_1_1.done && (_a = properties_1.return)) _a.call(properties_1);
      } finally {
        if (e_4) throw e_4.error;
      }
    }

    return values.join('\n');
  };

  return CssStyles;
}();

exports.CssStyles = CssStyles;

/***/ }),

/***/ 9124:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Styles = void 0;
var TRBL = ['top', 'right', 'bottom', 'left'];
var WSC = ['width', 'style', 'color'];

function splitSpaces(text) {
  var parts = text.split(/((?:'[^']*'|"[^"]*"|,[\s\n]|[^\s\n])*)/g);
  var split = [];

  while (parts.length > 1) {
    parts.shift();
    split.push(parts.shift());
  }

  return split;
}

function splitTRBL(name) {
  var e_1, _a;

  var parts = splitSpaces(this.styles[name]);

  if (parts.length === 0) {
    parts.push('');
  }

  if (parts.length === 1) {
    parts.push(parts[0]);
  }

  if (parts.length === 2) {
    parts.push(parts[0]);
  }

  if (parts.length === 3) {
    parts.push(parts[1]);
  }

  try {
    for (var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()) {
      var child = _c.value;
      this.setStyle(this.childName(name, child), parts.shift());
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_1) throw e_1.error;
    }
  }
}

function combineTRBL(name) {
  var e_2, _a;

  var children = Styles.connect[name].children;
  var parts = [];

  try {
    for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
      var child = children_1_1.value;
      var part = this.styles[name + '-' + child];

      if (!part) {
        delete this.styles[name];
        return;
      }

      parts.push(part);
    }
  } catch (e_2_1) {
    e_2 = {
      error: e_2_1
    };
  } finally {
    try {
      if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
    } finally {
      if (e_2) throw e_2.error;
    }
  }

  if (parts[3] === parts[1]) {
    parts.pop();

    if (parts[2] === parts[0]) {
      parts.pop();

      if (parts[1] === parts[0]) {
        parts.pop();
      }
    }
  }

  this.styles[name] = parts.join(' ');
}

function splitSame(name) {
  var e_3, _a;

  try {
    for (var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()) {
      var child = _c.value;
      this.setStyle(this.childName(name, child), this.styles[name]);
    }
  } catch (e_3_1) {
    e_3 = {
      error: e_3_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_3) throw e_3.error;
    }
  }
}

function combineSame(name) {
  var e_4, _a;

  var children = __spreadArray([], __read(Styles.connect[name].children));

  var value = this.styles[this.childName(name, children.shift())];

  try {
    for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {
      var child = children_2_1.value;

      if (this.styles[this.childName(name, child)] !== value) {
        delete this.styles[name];
        return;
      }
    }
  } catch (e_4_1) {
    e_4 = {
      error: e_4_1
    };
  } finally {
    try {
      if (children_2_1 && !children_2_1.done && (_a = children_2.return)) _a.call(children_2);
    } finally {
      if (e_4) throw e_4.error;
    }
  }

  this.styles[name] = value;
}

var BORDER = {
  width: /^(?:[\d.]+(?:[a-z]+)|thin|medium|thick|inherit|initial|unset)$/,
  style: /^(?:none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|inherit|initial|unset)$/
};

function splitWSC(name) {
  var e_5, _a, e_6, _b;

  var parts = {
    width: '',
    style: '',
    color: ''
  };

  try {
    for (var _c = __values(splitSpaces(this.styles[name])), _d = _c.next(); !_d.done; _d = _c.next()) {
      var part = _d.value;

      if (part.match(BORDER.width) && parts.width === '') {
        parts.width = part;
      } else if (part.match(BORDER.style) && parts.style === '') {
        parts.style = part;
      } else {
        parts.color = part;
      }
    }
  } catch (e_5_1) {
    e_5 = {
      error: e_5_1
    };
  } finally {
    try {
      if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
    } finally {
      if (e_5) throw e_5.error;
    }
  }

  try {
    for (var _e = __values(Styles.connect[name].children), _f = _e.next(); !_f.done; _f = _e.next()) {
      var child = _f.value;
      this.setStyle(this.childName(name, child), parts[child]);
    }
  } catch (e_6_1) {
    e_6 = {
      error: e_6_1
    };
  } finally {
    try {
      if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
    } finally {
      if (e_6) throw e_6.error;
    }
  }
}

function combineWSC(name) {
  var e_7, _a;

  var parts = [];

  try {
    for (var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()) {
      var child = _c.value;
      var value = this.styles[this.childName(name, child)];

      if (value) {
        parts.push(value);
      }
    }
  } catch (e_7_1) {
    e_7 = {
      error: e_7_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_7) throw e_7.error;
    }
  }

  if (parts.length) {
    this.styles[name] = parts.join(' ');
  } else {
    delete this.styles[name];
  }
}

var FONT = {
  style: /^(?:normal|italic|oblique|inherit|initial|unset)$/,
  variant: new RegExp('^(?:' + ['normal|none', 'inherit|initial|unset', 'common-ligatures|no-common-ligatures', 'discretionary-ligatures|no-discretionary-ligatures', 'historical-ligatures|no-historical-ligatures', 'contextual|no-contextual', '(?:stylistic|character-variant|swash|ornaments|annotation)\\([^)]*\\)', 'small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps', 'lining-nums|oldstyle-nums|proportional-nums|tabular-nums', 'diagonal-fractions|stacked-fractions', 'ordinal|slashed-zero', 'jis78|jis83|jis90|jis04|simplified|traditional', 'full-width|proportional-width', 'ruby'].join('|') + ')$'),
  weight: /^(?:normal|bold|bolder|lighter|[1-9]00|inherit|initial|unset)$/,
  stretch: new RegExp('^(?:' + ['normal', '(?:(?:ultra|extra|semi)-)?condensed', '(?:(?:semi|extra|ulta)-)?expanded', 'inherit|initial|unset'].join('|') + ')$'),
  size: new RegExp('^(?:' + ['xx-small|x-small|small|medium|large|x-large|xx-large|larger|smaller', '[\d.]+%|[\d.]+[a-z]+', 'inherit|initial|unset'].join('|') + ')' + '(?:\/(?:normal|[\d.\+](?:%|[a-z]+)?))?$')
};

function splitFont(name) {
  var e_8, _a, e_9, _b;

  var parts = splitSpaces(this.styles[name]);
  var value = {
    style: '',
    variant: [],
    weight: '',
    stretch: '',
    size: '',
    family: '',
    'line-height': ''
  };

  try {
    for (var parts_1 = __values(parts), parts_1_1 = parts_1.next(); !parts_1_1.done; parts_1_1 = parts_1.next()) {
      var part = parts_1_1.value;
      value.family = part;

      try {
        for (var _c = (e_9 = void 0, __values(Object.keys(FONT))), _d = _c.next(); !_d.done; _d = _c.next()) {
          var name_1 = _d.value;

          if ((Array.isArray(value[name_1]) || value[name_1] === '') && part.match(FONT[name_1])) {
            if (name_1 === 'size') {
              var _e = __read(part.split(/\//), 2),
                  size = _e[0],
                  height = _e[1];

              value[name_1] = size;

              if (height) {
                value['line-height'] = height;
              }
            } else if (value.size === '') {
              if (Array.isArray(value[name_1])) {
                value[name_1].push(part);
              } else {
                value[name_1] = part;
              }
            }
          }
        }
      } catch (e_9_1) {
        e_9 = {
          error: e_9_1
        };
      } finally {
        try {
          if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
        } finally {
          if (e_9) throw e_9.error;
        }
      }
    }
  } catch (e_8_1) {
    e_8 = {
      error: e_8_1
    };
  } finally {
    try {
      if (parts_1_1 && !parts_1_1.done && (_a = parts_1.return)) _a.call(parts_1);
    } finally {
      if (e_8) throw e_8.error;
    }
  }

  saveFontParts(name, value);
  delete this.styles[name];
}

function saveFontParts(name, value) {
  var e_10, _a;

  try {
    for (var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()) {
      var child = _c.value;
      var cname = this.childName(name, child);

      if (Array.isArray(value[child])) {
        var values = value[child];

        if (values.length) {
          this.styles[cname] = values.join(' ');
        }
      } else if (value[child] !== '') {
        this.styles[cname] = value[child];
      }
    }
  } catch (e_10_1) {
    e_10 = {
      error: e_10_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_10) throw e_10.error;
    }
  }
}

function combineFont(_name) {}

var Styles = function () {
  function Styles(cssText) {
    if (cssText === void 0) {
      cssText = '';
    }

    this.parse(cssText);
  }

  Object.defineProperty(Styles.prototype, "cssText", {
    get: function get() {
      var e_11, _a;

      var styles = [];

      try {
        for (var _b = __values(Object.keys(this.styles)), _c = _b.next(); !_c.done; _c = _b.next()) {
          var name_2 = _c.value;
          var parent_1 = this.parentName(name_2);

          if (!this.styles[parent_1]) {
            styles.push(name_2 + ': ' + this.styles[name_2]);
          }
        }
      } catch (e_11_1) {
        e_11 = {
          error: e_11_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_11) throw e_11.error;
        }
      }

      return styles.join('; ');
    },
    enumerable: false,
    configurable: true
  });

  Styles.prototype.set = function (name, value) {
    name = this.normalizeName(name);
    this.setStyle(name, value);

    if (Styles.connect[name] && !Styles.connect[name].combine) {
      this.combineChildren(name);
      delete this.styles[name];
    }

    while (name.match(/-/)) {
      name = this.parentName(name);
      if (!Styles.connect[name]) break;
      Styles.connect[name].combine.call(this, name);
    }
  };

  Styles.prototype.get = function (name) {
    name = this.normalizeName(name);
    return this.styles.hasOwnProperty(name) ? this.styles[name] : '';
  };

  Styles.prototype.setStyle = function (name, value) {
    this.styles[name] = value;

    if (Styles.connect[name] && Styles.connect[name].children) {
      Styles.connect[name].split.call(this, name);
    }

    if (value === '') {
      delete this.styles[name];
    }
  };

  Styles.prototype.combineChildren = function (name) {
    var e_12, _a;

    var parent = this.parentName(name);

    try {
      for (var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()) {
        var child = _c.value;
        var cname = this.childName(parent, child);
        Styles.connect[cname].combine.call(this, cname);
      }
    } catch (e_12_1) {
      e_12 = {
        error: e_12_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_12) throw e_12.error;
      }
    }
  };

  Styles.prototype.parentName = function (name) {
    var parent = name.replace(/-[^-]*$/, '');
    return name === parent ? '' : parent;
  };

  Styles.prototype.childName = function (name, child) {
    if (child.match(/-/)) {
      return child;
    }

    if (Styles.connect[name] && !Styles.connect[name].combine) {
      child += name.replace(/.*-/, '-');
      name = this.parentName(name);
    }

    return name + '-' + child;
  };

  Styles.prototype.normalizeName = function (name) {
    return name.replace(/[A-Z]/g, function (c) {
      return '-' + c.toLowerCase();
    });
  };

  Styles.prototype.parse = function (cssText) {
    if (cssText === void 0) {
      cssText = '';
    }

    var PATTERN = this.constructor.pattern;
    this.styles = {};
    var parts = cssText.replace(PATTERN.comment, '').split(PATTERN.style);

    while (parts.length > 1) {
      var _a = __read(parts.splice(0, 3), 3),
          space = _a[0],
          name_3 = _a[1],
          value = _a[2];

      if (space.match(/[^\s\n]/)) return;
      this.set(name_3, value);
    }
  };

  Styles.pattern = {
    style: /([-a-z]+)[\s\n]*:[\s\n]*((?:'[^']*'|"[^"]*"|\n|.)*?)[\s\n]*(?:;|$)/g,
    comment: /\/\*[^]*?\*\//g
  };
  Styles.connect = {
    padding: {
      children: TRBL,
      split: splitTRBL,
      combine: combineTRBL
    },
    border: {
      children: TRBL,
      split: splitSame,
      combine: combineSame
    },
    'border-top': {
      children: WSC,
      split: splitWSC,
      combine: combineWSC
    },
    'border-right': {
      children: WSC,
      split: splitWSC,
      combine: combineWSC
    },
    'border-bottom': {
      children: WSC,
      split: splitWSC,
      combine: combineWSC
    },
    'border-left': {
      children: WSC,
      split: splitWSC,
      combine: combineWSC
    },
    'border-width': {
      children: TRBL,
      split: splitTRBL,
      combine: null
    },
    'border-style': {
      children: TRBL,
      split: splitTRBL,
      combine: null
    },
    'border-color': {
      children: TRBL,
      split: splitTRBL,
      combine: null
    },
    font: {
      children: ['style', 'variant', 'weight', 'stretch', 'line-height', 'size', 'family'],
      split: splitFont,
      combine: combineFont
    }
  };
  return Styles;
}();

exports.Styles = Styles;

/***/ }),

/***/ 5915:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.px = exports.emRounded = exports.em = exports.percent = exports.length2em = exports.MATHSPACE = exports.RELUNITS = exports.UNITS = exports.BIGDIMEN = void 0;
exports.BIGDIMEN = 1000000;
exports.UNITS = {
  px: 1,
  'in': 96,
  cm: 96 / 2.54,
  mm: 96 / 25.4
};
exports.RELUNITS = {
  em: 1,
  ex: .431,
  pt: 1 / 10,
  pc: 12 / 10,
  mu: 1 / 18
};
exports.MATHSPACE = {
  veryverythinmathspace: 1 / 18,
  verythinmathspace: 2 / 18,
  thinmathspace: 3 / 18,
  mediummathspace: 4 / 18,
  thickmathspace: 5 / 18,
  verythickmathspace: 6 / 18,
  veryverythickmathspace: 7 / 18,
  negativeveryverythinmathspace: -1 / 18,
  negativeverythinmathspace: -2 / 18,
  negativethinmathspace: -3 / 18,
  negativemediummathspace: -4 / 18,
  negativethickmathspace: -5 / 18,
  negativeverythickmathspace: -6 / 18,
  negativeveryverythickmathspace: -7 / 18,
  thin: .04,
  medium: .06,
  thick: .1,
  normal: 1,
  big: 2,
  small: 1 / Math.sqrt(2),
  infinity: exports.BIGDIMEN
};

function length2em(length, size, scale, em) {
  if (size === void 0) {
    size = 0;
  }

  if (scale === void 0) {
    scale = 1;
  }

  if (em === void 0) {
    em = 16;
  }

  if (typeof length !== 'string') {
    length = String(length);
  }

  if (length === '' || length == null) {
    return size;
  }

  if (exports.MATHSPACE[length]) {
    return exports.MATHSPACE[length];
  }

  var match = length.match(/^\s*([-+]?(?:\.\d+|\d+(?:\.\d*)?))?(pt|em|ex|mu|px|pc|in|mm|cm|%)?/);

  if (!match) {
    return size;
  }

  var m = parseFloat(match[1] || '1'),
      unit = match[2];

  if (exports.UNITS.hasOwnProperty(unit)) {
    return m * exports.UNITS[unit] / em / scale;
  }

  if (exports.RELUNITS.hasOwnProperty(unit)) {
    return m * exports.RELUNITS[unit];
  }

  if (unit === '%') {
    return m / 100 * size;
  }

  return m * size;
}

exports.length2em = length2em;

function percent(m) {
  return (100 * m).toFixed(1).replace(/\.?0+$/, '') + '%';
}

exports.percent = percent;

function em(m) {
  if (Math.abs(m) < .001) return '0';
  return m.toFixed(3).replace(/\.?0+$/, '') + 'em';
}

exports.em = em;

function emRounded(m, em) {
  if (em === void 0) {
    em = 16;
  }

  m = (Math.round(m * em) + .05) / em;
  if (Math.abs(m) < .001) return '0em';
  return m.toFixed(3).replace(/\.?0+$/, '') + 'em';
}

exports.emRounded = emRounded;

function px(m, M, em) {
  if (M === void 0) {
    M = -exports.BIGDIMEN;
  }

  if (em === void 0) {
    em = 16;
  }

  m *= em;
  if (M && m < M) m = M;
  if (Math.abs(m) < .1) return '0';
  return m.toFixed(1).replace(/\.0$/, '') + 'px';
}

exports.px = px;

/***/ }),

/***/ 6504:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.max = exports.sum = void 0;

function sum(A) {
  return A.reduce(function (a, b) {
    return a + b;
  }, 0);
}

exports.sum = sum;

function max(A) {
  return A.reduce(function (a, b) {
    return Math.max(a, b);
  }, 0);
}

exports.max = max;

/***/ }),

/***/ 4944:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var __read = this && this.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.split = exports.isPercent = exports.unicodeString = exports.unicodeChars = exports.quotePattern = exports.sortLength = void 0;

function sortLength(a, b) {
  return a.length !== b.length ? b.length - a.length : a === b ? 0 : a < b ? -1 : 1;
}

exports.sortLength = sortLength;

function quotePattern(text) {
  return text.replace(/([\^$(){}+*?\-|\[\]\:\\])/g, '\\$1');
}

exports.quotePattern = quotePattern;

function unicodeChars(text) {
  return Array.from(text).map(function (c) {
    return c.codePointAt(0);
  });
}

exports.unicodeChars = unicodeChars;

function unicodeString(data) {
  return String.fromCodePoint.apply(String, __spreadArray([], __read(data)));
}

exports.unicodeString = unicodeString;

function isPercent(x) {
  return !!x.match(/%\s*$/);
}

exports.isPercent = isPercent;

function split(x) {
  return x.trim().split(/\s+/);
}

exports.split = split;

/***/ }),

/***/ 4396:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 *************************************************************************
 *
 *  mhchemParser.ts
 *  4.1.1
 *
 *  Parser for the \ce command and \pu command for MathJax and Co.
 *
 *  mhchem's \ce is a tool for writing beautiful chemical equations easily.
 *  mhchem's \pu is a tool for writing physical units easily.
 *
 *  ----------------------------------------------------------------------
 *
 *  Copyright (c) 2015-2021 Martin Hensel
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *  ----------------------------------------------------------------------
 *
 *  https://github.com/mhchem/mhchemParser
 *
 */

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.mhchemParser = void 0;

var mhchemParser = function () {
  function mhchemParser() {}

  mhchemParser.toTex = function (input, type) {
    return _mhchemTexify.go(_mhchemParser.go(input, type), type !== "tex");
  };

  return mhchemParser;
}();

exports.mhchemParser = mhchemParser;

function _mhchemCreateTransitions(o) {
  var pattern, state;
  var transitions = {};

  for (pattern in o) {
    for (state in o[pattern]) {
      var stateArray = state.split("|");
      o[pattern][state].stateArray = stateArray;

      for (var i = 0; i < stateArray.length; i++) {
        transitions[stateArray[i]] = [];
      }
    }
  }

  for (pattern in o) {
    for (state in o[pattern]) {
      var stateArray = o[pattern][state].stateArray || [];

      for (var i = 0; i < stateArray.length; i++) {
        var p = o[pattern][state];
        p.action_ = [].concat(p.action_);

        for (var k = 0; k < p.action_.length; k++) {
          if (typeof p.action_[k] === "string") {
            p.action_[k] = {
              type_: p.action_[k]
            };
          }
        }

        var patternArray = pattern.split("|");

        for (var j = 0; j < patternArray.length; j++) {
          if (stateArray[i] === '*') {
            var t = void 0;

            for (t in transitions) {
              transitions[t].push({
                pattern: patternArray[j],
                task: p
              });
            }
          } else {
            transitions[stateArray[i]].push({
              pattern: patternArray[j],
              task: p
            });
          }
        }
      }
    }
  }

  return transitions;
}

;
var _mhchemParser = {
  go: function go(input, stateMachine) {
    if (!input) {
      return [];
    }

    if (stateMachine === undefined) {
      stateMachine = 'ce';
    }

    var state = '0';
    var buffer = {};
    buffer['parenthesisLevel'] = 0;
    input = input.replace(/\n/g, " ");
    input = input.replace(/[\u2212\u2013\u2014\u2010]/g, "-");
    input = input.replace(/[\u2026]/g, "...");
    var lastInput;
    var watchdog = 10;
    var output = [];

    while (true) {
      if (lastInput !== input) {
        watchdog = 10;
        lastInput = input;
      } else {
        watchdog--;
      }

      var machine = _mhchemParser.stateMachines[stateMachine];
      var t = machine.transitions[state] || machine.transitions['*'];

      iterateTransitions: for (var i = 0; i < t.length; i++) {
        var matches = _mhchemParser.patterns.match_(t[i].pattern, input);

        if (matches) {
          var task = t[i].task;

          for (var iA = 0; iA < task.action_.length; iA++) {
            var o = void 0;

            if (machine.actions[task.action_[iA].type_]) {
              o = machine.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);
            } else if (_mhchemParser.actions[task.action_[iA].type_]) {
              o = _mhchemParser.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);
            } else {
              throw ["MhchemBugA", "mhchem bug A. Please report. (" + task.action_[iA].type_ + ")"];
            }

            _mhchemParser.concatArray(output, o);
          }

          state = task.nextState || state;

          if (input.length > 0) {
            if (!task.revisit) {
              input = matches.remainder;
            }

            if (!task.toContinue) {
              break iterateTransitions;
            }
          } else {
            return output;
          }
        }
      }

      if (watchdog <= 0) {
        throw ["MhchemBugU", "mhchem bug U. Please report."];
      }
    }
  },
  concatArray: function concatArray(a, b) {
    if (b) {
      if (Array.isArray(b)) {
        for (var iB = 0; iB < b.length; iB++) {
          a.push(b[iB]);
        }
      } else {
        a.push(b);
      }
    }
  },
  patterns: {
    patterns: {
      'empty': /^$/,
      'else': /^./,
      'else2': /^./,
      'space': /^\s/,
      'space A': /^\s(?=[A-Z\\$])/,
      'space$': /^\s$/,
      'a-z': /^[a-z]/,
      'x': /^x/,
      'x$': /^x$/,
      'i$': /^i$/,
      'letters': /^(?:[a-zA-Z\u03B1-\u03C9\u0391-\u03A9?@]|(?:\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\s+|\{\}|(?![a-zA-Z]))))+/,
      '\\greek': /^\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\s+|\{\}|(?![a-zA-Z]))/,
      'one lowercase latin letter $': /^(?:([a-z])(?:$|[^a-zA-Z]))$/,
      '$one lowercase latin letter$ $': /^\$(?:([a-z])(?:$|[^a-zA-Z]))\$$/,
      'one lowercase greek letter $': /^(?:\$?[\u03B1-\u03C9]\$?|\$?\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\s*\$?)(?:\s+|\{\}|(?![a-zA-Z]))$/,
      'digits': /^[0-9]+/,
      '-9.,9': /^[+\-]?(?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))/,
      '-9.,9 no missing 0': /^[+\-]?[0-9]+(?:[.,][0-9]+)?/,
      '(-)(9.,9)(e)(99)': function e99(input) {
        var match = input.match(/^(\+\-|\+\/\-|\+|\-|\\pm\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))?(\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))\))?(?:(?:([eE])|\s*(\*|x|\\times|\u00D7)\s*10\^)([+\-]?[0-9]+|\{[+\-]?[0-9]+\}))?/);

        if (match && match[0]) {
          return {
            match_: match.slice(1),
            remainder: input.substr(match[0].length)
          };
        }

        return null;
      },
      '(-)(9)^(-9)': /^(\+\-|\+\/\-|\+|\-|\\pm\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+)?)\^([+\-]?[0-9]+|\{[+\-]?[0-9]+\})/,
      'state of aggregation $': function stateOfAggregation$(input) {
        var a = _mhchemParser.patterns.findObserveGroups(input, "", /^\([a-z]{1,3}(?=[\),])/, ")", "");

        if (a && a.remainder.match(/^($|[\s,;\)\]\}])/)) {
          return a;
        }

        var match = input.match(/^(?:\((?:\\ca\s?)?\$[amothc]\$\))/);

        if (match) {
          return {
            match_: match[0],
            remainder: input.substr(match[0].length)
          };
        }

        return null;
      },
      '_{(state of aggregation)}$': /^_\{(\([a-z]{1,3}\))\}/,
      '{[(': /^(?:\\\{|\[|\()/,
      ')]}': /^(?:\)|\]|\\\})/,
      ', ': /^[,;]\s*/,
      ',': /^[,;]/,
      '.': /^[.]/,
      '. __* ': /^([.\u22C5\u00B7\u2022]|[*])\s*/,
      '...': /^\.\.\.(?=$|[^.])/,
      '^{(...)}': function _(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "^{", "", "", "}");
      },
      '^($...$)': function $$(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "^", "$", "$", "");
      },
      '^a': /^\^([0-9]+|[^\\_])/,
      '^\\x{}{}': function x(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "^", /^\\[a-zA-Z]+\{/, "}", "", "", "{", "}", "", true);
      },
      '^\\x{}': function x(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "^", /^\\[a-zA-Z]+\{/, "}", "");
      },
      '^\\x': /^\^(\\[a-zA-Z]+)\s*/,
      '^(-1)': /^\^(-?\d+)/,
      '\'': /^'/,
      '_{(...)}': function _(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "_{", "", "", "}");
      },
      '_($...$)': function _$$(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "_", "$", "$", "");
      },
      '_9': /^_([+\-]?[0-9]+|[^\\])/,
      '_\\x{}{}': function _X(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "_", /^\\[a-zA-Z]+\{/, "}", "", "", "{", "}", "", true);
      },
      '_\\x{}': function _X(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "_", /^\\[a-zA-Z]+\{/, "}", "");
      },
      '_\\x': /^_(\\[a-zA-Z]+)\s*/,
      '^_': /^(?:\^(?=_)|\_(?=\^)|[\^_]$)/,
      '{}^': /^\{\}(?=\^)/,
      '{}': /^\{\}/,
      '{...}': function _(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "", "{", "}", "");
      },
      '{(...)}': function _(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "{", "", "", "}");
      },
      '$...$': function $$(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "", "$", "$", "");
      },
      '${(...)}$__$(...)$': function $$__$$(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "${", "", "", "}$") || _mhchemParser.patterns.findObserveGroups(input, "$", "", "", "$");
      },
      '=<>': /^[=<>]/,
      '#': /^[#\u2261]/,
      '+': /^\+/,
      '-$': /^-(?=[\s_},;\]/]|$|\([a-z]+\))/,
      '-9': /^-(?=[0-9])/,
      '- orbital overlap': /^-(?=(?:[spd]|sp)(?:$|[\s,;\)\]\}]))/,
      '-': /^-/,
      'pm-operator': /^(?:\\pm|\$\\pm\$|\+-|\+\/-)/,
      'operator': /^(?:\+|(?:[\-=<>]|<<|>>|\\approx|\$\\approx\$)(?=\s|$|-?[0-9]))/,
      'arrowUpDown': /^(?:v|\(v\)|\^|\(\^\))(?=$|[\s,;\)\]\}])/,
      '\\bond{(...)}': function bond(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "\\bond{", "", "", "}");
      },
      '->': /^(?:<->|<-->|->|<-|<=>>|<<=>|<=>|[\u2192\u27F6\u21CC])/,
      'CMT': /^[CMT](?=\[)/,
      '[(...)]': function _(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "[", "", "", "]");
      },
      '1st-level escape': /^(&|\\\\|\\hline)\s*/,
      '\\,': /^(?:\\[,\ ;:])/,
      '\\x{}{}': function x(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "", /^\\[a-zA-Z]+\{/, "}", "", "", "{", "}", "", true);
      },
      '\\x{}': function x(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "", /^\\[a-zA-Z]+\{/, "}", "");
      },
      '\\ca': /^\\ca(?:\s+|(?![a-zA-Z]))/,
      '\\x': /^(?:\\[a-zA-Z]+\s*|\\[_&{}%])/,
      'orbital': /^(?:[0-9]{1,2}[spdfgh]|[0-9]{0,2}sp)(?=$|[^a-zA-Z])/,
      'others': /^[\/~|]/,
      '\\frac{(...)}': function frac(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "\\frac{", "", "", "}", "{", "", "", "}");
      },
      '\\overset{(...)}': function overset(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "\\overset{", "", "", "}", "{", "", "", "}");
      },
      "\\underset{(...)}": function underset(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "\\underset{", "", "", "}", "{", "", "", "}");
      },
      "\\underbrace{(...)}": function underbrace(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "\\underbrace{", "", "", "}_", "{", "", "", "}");
      },
      '\\color{(...)}': function color(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "\\color{", "", "", "}");
      },
      '\\color{(...)}{(...)}': function color(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "\\color{", "", "", "}", "{", "", "", "}") || _mhchemParser.patterns.findObserveGroups(input, "\\color", "\\", "", /^(?=\{)/, "{", "", "", "}");
      },
      '\\ce{(...)}': function ce(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "\\ce{", "", "", "}");
      },
      '\\pu{(...)}': function pu(input) {
        return _mhchemParser.patterns.findObserveGroups(input, "\\pu{", "", "", "}");
      },
      'oxidation$': /^(?:[+-][IVX]+|\\pm\s*0|\$\\pm\$\s*0)$/,
      'd-oxidation$': /^(?:[+-]?\s?[IVX]+|\\pm\s*0|\$\\pm\$\s*0)$/,
      'roman numeral': /^[IVX]+/,
      '1/2$': /^[+\-]?(?:[0-9]+|\$[a-z]\$|[a-z])\/[0-9]+(?:\$[a-z]\$|[a-z])?$/,
      'amount': function amount(input) {
        var match;
        match = input.match(/^(?:(?:(?:\([+\-]?[0-9]+\/[0-9]+\)|[+\-]?(?:[0-9]+|\$[a-z]\$|[a-z])\/[0-9]+|[+\-]?[0-9]+[.,][0-9]+|[+\-]?\.[0-9]+|[+\-]?[0-9]+)(?:[a-z](?=\s*[A-Z]))?)|[+\-]?[a-z](?=\s*[A-Z])|\+(?!\s))/);

        if (match) {
          return {
            match_: match[0],
            remainder: input.substr(match[0].length)
          };
        }

        var a = _mhchemParser.patterns.findObserveGroups(input, "", "$", "$", "");

        if (a) {
          match = a.match_.match(/^\$(?:\(?[+\-]?(?:[0-9]*[a-z]?[+\-])?[0-9]*[a-z](?:[+\-][0-9]*[a-z]?)?\)?|\+|-)\$$/);

          if (match) {
            return {
              match_: match[0],
              remainder: input.substr(match[0].length)
            };
          }
        }

        return null;
      },
      'amount2': function amount2(input) {
        return this['amount'](input);
      },
      '(KV letters),': /^(?:[A-Z][a-z]{0,2}|i)(?=,)/,
      'formula$': function formula$(input) {
        if (input.match(/^\([a-z]+\)$/)) {
          return null;
        }

        var match = input.match(/^(?:[a-z]|(?:[0-9\ \+\-\,\.\(\)]+[a-z])+[0-9\ \+\-\,\.\(\)]*|(?:[a-z][0-9\ \+\-\,\.\(\)]+)+[a-z]?)$/);

        if (match) {
          return {
            match_: match[0],
            remainder: input.substr(match[0].length)
          };
        }

        return null;
      },
      'uprightEntities': /^(?:pH|pOH|pC|pK|iPr|iBu)(?=$|[^a-zA-Z])/,
      '/': /^\s*(\/)\s*/,
      '//': /^\s*(\/\/)\s*/,
      '*': /^\s*[*.]\s*/
    },
    findObserveGroups: function findObserveGroups(input, begExcl, begIncl, endIncl, endExcl, beg2Excl, beg2Incl, end2Incl, end2Excl, combine) {
      var _match = function _match(input, pattern) {
        if (typeof pattern === "string") {
          if (input.indexOf(pattern) !== 0) {
            return null;
          }

          return pattern;
        } else {
          var match_1 = input.match(pattern);

          if (!match_1) {
            return null;
          }

          return match_1[0];
        }
      };

      var _findObserveGroups = function _findObserveGroups(input, i, endChars) {
        var braces = 0;

        while (i < input.length) {
          var a = input.charAt(i);

          var match_2 = _match(input.substr(i), endChars);

          if (match_2 !== null && braces === 0) {
            return {
              endMatchBegin: i,
              endMatchEnd: i + match_2.length
            };
          } else if (a === "{") {
            braces++;
          } else if (a === "}") {
            if (braces === 0) {
              throw ["ExtraCloseMissingOpen", "Extra close brace or missing open brace"];
            } else {
              braces--;
            }
          }

          i++;
        }

        if (braces > 0) {
          return null;
        }

        return null;
      };

      var match = _match(input, begExcl);

      if (match === null) {
        return null;
      }

      input = input.substr(match.length);
      match = _match(input, begIncl);

      if (match === null) {
        return null;
      }

      var e = _findObserveGroups(input, match.length, endIncl || endExcl);

      if (e === null) {
        return null;
      }

      var match1 = input.substring(0, endIncl ? e.endMatchEnd : e.endMatchBegin);

      if (!(beg2Excl || beg2Incl)) {
        return {
          match_: match1,
          remainder: input.substr(e.endMatchEnd)
        };
      } else {
        var group2 = this.findObserveGroups(input.substr(e.endMatchEnd), beg2Excl, beg2Incl, end2Incl, end2Excl);

        if (group2 === null) {
          return null;
        }

        var matchRet = [match1, group2.match_];
        return {
          match_: combine ? matchRet.join("") : matchRet,
          remainder: group2.remainder
        };
      }
    },
    match_: function match_(m, input) {
      var pattern = _mhchemParser.patterns.patterns[m];

      if (pattern === undefined) {
        throw ["MhchemBugP", "mhchem bug P. Please report. (" + m + ")"];
      } else if (typeof pattern === "function") {
        return _mhchemParser.patterns.patterns[m](input);
      } else {
        var match = input.match(pattern);

        if (match) {
          if (match.length > 2) {
            return {
              match_: match.slice(1),
              remainder: input.substr(match[0].length)
            };
          } else {
            return {
              match_: match[1] || match[0],
              remainder: input.substr(match[0].length)
            };
          }
        }

        return null;
      }
    }
  },
  actions: {
    'a=': function a(buffer, m) {
      buffer.a = (buffer.a || "") + m;
      return undefined;
    },
    'b=': function b(buffer, m) {
      buffer.b = (buffer.b || "") + m;
      return undefined;
    },
    'p=': function p(buffer, m) {
      buffer.p = (buffer.p || "") + m;
      return undefined;
    },
    'o=': function o(buffer, m) {
      buffer.o = (buffer.o || "") + m;
      return undefined;
    },
    'q=': function q(buffer, m) {
      buffer.q = (buffer.q || "") + m;
      return undefined;
    },
    'd=': function d(buffer, m) {
      buffer.d = (buffer.d || "") + m;
      return undefined;
    },
    'rm=': function rm(buffer, m) {
      buffer.rm = (buffer.rm || "") + m;
      return undefined;
    },
    'text=': function text(buffer, m) {
      buffer.text_ = (buffer.text_ || "") + m;
      return undefined;
    },
    'insert': function insert(_buffer, _m, a) {
      return {
        type_: a
      };
    },
    'insert+p1': function insertP1(_buffer, m, a) {
      return {
        type_: a,
        p1: m
      };
    },
    'insert+p1+p2': function insertP1P2(_buffer, m, a) {
      return {
        type_: a,
        p1: m[0],
        p2: m[1]
      };
    },
    'copy': function copy(_buffer, m) {
      return m;
    },
    'write': function write(_buffer, _m, a) {
      return a;
    },
    'rm': function rm(_buffer, m) {
      return {
        type_: 'rm',
        p1: m
      };
    },
    'text': function text(_buffer, m) {
      return _mhchemParser.go(m, 'text');
    },
    'tex-math': function texMath(_buffer, m) {
      return _mhchemParser.go(m, 'tex-math');
    },
    'tex-math tight': function texMathTight(_buffer, m) {
      return _mhchemParser.go(m, 'tex-math tight');
    },
    'bond': function bond(_buffer, m, k) {
      return {
        type_: 'bond',
        kind_: k || m
      };
    },
    'color0-output': function color0Output(_buffer, m) {
      return {
        type_: 'color0',
        color: m
      };
    },
    'ce': function ce(_buffer, m) {
      return _mhchemParser.go(m, 'ce');
    },
    'pu': function pu(_buffer, m) {
      return _mhchemParser.go(m, 'pu');
    },
    '1/2': function _(_buffer, m) {
      var ret = [];

      if (m.match(/^[+\-]/)) {
        ret.push(m.substr(0, 1));
        m = m.substr(1);
      }

      var n = m.match(/^([0-9]+|\$[a-z]\$|[a-z])\/([0-9]+)(\$[a-z]\$|[a-z])?$/);
      n[1] = n[1].replace(/\$/g, "");
      ret.push({
        type_: 'frac',
        p1: n[1],
        p2: n[2]
      });

      if (n[3]) {
        n[3] = n[3].replace(/\$/g, "");
        ret.push({
          type_: 'tex-math',
          p1: n[3]
        });
      }

      return ret;
    },
    '9,9': function _(_buffer, m) {
      return _mhchemParser.go(m, '9,9');
    }
  },
  stateMachines: {
    'tex': {
      transitions: _mhchemCreateTransitions({
        'empty': {
          '0': {
            action_: 'copy'
          }
        },
        '\\ce{(...)}': {
          '0': {
            action_: [{
              type_: 'write',
              option: "{"
            }, 'ce', {
              type_: 'write',
              option: "}"
            }]
          }
        },
        '\\pu{(...)}': {
          '0': {
            action_: [{
              type_: 'write',
              option: "{"
            }, 'pu', {
              type_: 'write',
              option: "}"
            }]
          }
        },
        'else': {
          '0': {
            action_: 'copy'
          }
        }
      }),
      actions: {}
    },
    'ce': {
      transitions: _mhchemCreateTransitions({
        'empty': {
          '*': {
            action_: 'output'
          }
        },
        'else': {
          '0|1|2': {
            action_: 'beginsWithBond=false',
            revisit: true,
            toContinue: true
          }
        },
        'oxidation$': {
          '0': {
            action_: 'oxidation-output'
          }
        },
        'CMT': {
          'r': {
            action_: 'rdt=',
            nextState: 'rt'
          },
          'rd': {
            action_: 'rqt=',
            nextState: 'rdt'
          }
        },
        'arrowUpDown': {
          '0|1|2|as': {
            action_: ['sb=false', 'output', 'operator'],
            nextState: '1'
          }
        },
        'uprightEntities': {
          '0|1|2': {
            action_: ['o=', 'output'],
            nextState: '1'
          }
        },
        'orbital': {
          '0|1|2|3': {
            action_: 'o=',
            nextState: 'o'
          }
        },
        '->': {
          '0|1|2|3': {
            action_: 'r=',
            nextState: 'r'
          },
          'a|as': {
            action_: ['output', 'r='],
            nextState: 'r'
          },
          '*': {
            action_: ['output', 'r='],
            nextState: 'r'
          }
        },
        '+': {
          'o': {
            action_: 'd= kv',
            nextState: 'd'
          },
          'd|D': {
            action_: 'd=',
            nextState: 'd'
          },
          'q': {
            action_: 'd=',
            nextState: 'qd'
          },
          'qd|qD': {
            action_: 'd=',
            nextState: 'qd'
          },
          'dq': {
            action_: ['output', 'd='],
            nextState: 'd'
          },
          '3': {
            action_: ['sb=false', 'output', 'operator'],
            nextState: '0'
          }
        },
        'amount': {
          '0|2': {
            action_: 'a=',
            nextState: 'a'
          }
        },
        'pm-operator': {
          '0|1|2|a|as': {
            action_: ['sb=false', 'output', {
              type_: 'operator',
              option: '\\pm'
            }],
            nextState: '0'
          }
        },
        'operator': {
          '0|1|2|a|as': {
            action_: ['sb=false', 'output', 'operator'],
            nextState: '0'
          }
        },
        '-$': {
          'o|q': {
            action_: ['charge or bond', 'output'],
            nextState: 'qd'
          },
          'd': {
            action_: 'd=',
            nextState: 'd'
          },
          'D': {
            action_: ['output', {
              type_: 'bond',
              option: "-"
            }],
            nextState: '3'
          },
          'q': {
            action_: 'd=',
            nextState: 'qd'
          },
          'qd': {
            action_: 'd=',
            nextState: 'qd'
          },
          'qD|dq': {
            action_: ['output', {
              type_: 'bond',
              option: "-"
            }],
            nextState: '3'
          }
        },
        '-9': {
          '3|o': {
            action_: ['output', {
              type_: 'insert',
              option: 'hyphen'
            }],
            nextState: '3'
          }
        },
        '- orbital overlap': {
          'o': {
            action_: ['output', {
              type_: 'insert',
              option: 'hyphen'
            }],
            nextState: '2'
          },
          'd': {
            action_: ['output', {
              type_: 'insert',
              option: 'hyphen'
            }],
            nextState: '2'
          }
        },
        '-': {
          '0|1|2': {
            action_: [{
              type_: 'output',
              option: 1
            }, 'beginsWithBond=true', {
              type_: 'bond',
              option: "-"
            }],
            nextState: '3'
          },
          '3': {
            action_: {
              type_: 'bond',
              option: "-"
            }
          },
          'a': {
            action_: ['output', {
              type_: 'insert',
              option: 'hyphen'
            }],
            nextState: '2'
          },
          'as': {
            action_: [{
              type_: 'output',
              option: 2
            }, {
              type_: 'bond',
              option: "-"
            }],
            nextState: '3'
          },
          'b': {
            action_: 'b='
          },
          'o': {
            action_: {
              type_: '- after o/d',
              option: false
            },
            nextState: '2'
          },
          'q': {
            action_: {
              type_: '- after o/d',
              option: false
            },
            nextState: '2'
          },
          'd|qd|dq': {
            action_: {
              type_: '- after o/d',
              option: true
            },
            nextState: '2'
          },
          'D|qD|p': {
            action_: ['output', {
              type_: 'bond',
              option: "-"
            }],
            nextState: '3'
          }
        },
        'amount2': {
          '1|3': {
            action_: 'a=',
            nextState: 'a'
          }
        },
        'letters': {
          '0|1|2|3|a|as|b|p|bp|o': {
            action_: 'o=',
            nextState: 'o'
          },
          'q|dq': {
            action_: ['output', 'o='],
            nextState: 'o'
          },
          'd|D|qd|qD': {
            action_: 'o after d',
            nextState: 'o'
          }
        },
        'digits': {
          'o': {
            action_: 'q=',
            nextState: 'q'
          },
          'd|D': {
            action_: 'q=',
            nextState: 'dq'
          },
          'q': {
            action_: ['output', 'o='],
            nextState: 'o'
          },
          'a': {
            action_: 'o=',
            nextState: 'o'
          }
        },
        'space A': {
          'b|p|bp': {
            action_: []
          }
        },
        'space': {
          'a': {
            action_: [],
            nextState: 'as'
          },
          '0': {
            action_: 'sb=false'
          },
          '1|2': {
            action_: 'sb=true'
          },
          'r|rt|rd|rdt|rdq': {
            action_: 'output',
            nextState: '0'
          },
          '*': {
            action_: ['output', 'sb=true'],
            nextState: '1'
          }
        },
        '1st-level escape': {
          '1|2': {
            action_: ['output', {
              type_: 'insert+p1',
              option: '1st-level escape'
            }]
          },
          '*': {
            action_: ['output', {
              type_: 'insert+p1',
              option: '1st-level escape'
            }],
            nextState: '0'
          }
        },
        '[(...)]': {
          'r|rt': {
            action_: 'rd=',
            nextState: 'rd'
          },
          'rd|rdt': {
            action_: 'rq=',
            nextState: 'rdq'
          }
        },
        '...': {
          'o|d|D|dq|qd|qD': {
            action_: ['output', {
              type_: 'bond',
              option: "..."
            }],
            nextState: '3'
          },
          '*': {
            action_: [{
              type_: 'output',
              option: 1
            }, {
              type_: 'insert',
              option: 'ellipsis'
            }],
            nextState: '1'
          }
        },
        '. __* ': {
          '*': {
            action_: ['output', {
              type_: 'insert',
              option: 'addition compound'
            }],
            nextState: '1'
          }
        },
        'state of aggregation $': {
          '*': {
            action_: ['output', 'state of aggregation'],
            nextState: '1'
          }
        },
        '{[(': {
          'a|as|o': {
            action_: ['o=', 'output', 'parenthesisLevel++'],
            nextState: '2'
          },
          '0|1|2|3': {
            action_: ['o=', 'output', 'parenthesisLevel++'],
            nextState: '2'
          },
          '*': {
            action_: ['output', 'o=', 'output', 'parenthesisLevel++'],
            nextState: '2'
          }
        },
        ')]}': {
          '0|1|2|3|b|p|bp|o': {
            action_: ['o=', 'parenthesisLevel--'],
            nextState: 'o'
          },
          'a|as|d|D|q|qd|qD|dq': {
            action_: ['output', 'o=', 'parenthesisLevel--'],
            nextState: 'o'
          }
        },
        ', ': {
          '*': {
            action_: ['output', 'comma'],
            nextState: '0'
          }
        },
        '^_': {
          '*': {
            action_: []
          }
        },
        '^{(...)}|^($...$)': {
          '0|1|2|as': {
            action_: 'b=',
            nextState: 'b'
          },
          'p': {
            action_: 'b=',
            nextState: 'bp'
          },
          '3|o': {
            action_: 'd= kv',
            nextState: 'D'
          },
          'q': {
            action_: 'd=',
            nextState: 'qD'
          },
          'd|D|qd|qD|dq': {
            action_: ['output', 'd='],
            nextState: 'D'
          }
        },
        '^a|^\\x{}{}|^\\x{}|^\\x|\'': {
          '0|1|2|as': {
            action_: 'b=',
            nextState: 'b'
          },
          'p': {
            action_: 'b=',
            nextState: 'bp'
          },
          '3|o': {
            action_: 'd= kv',
            nextState: 'd'
          },
          'q': {
            action_: 'd=',
            nextState: 'qd'
          },
          'd|qd|D|qD': {
            action_: 'd='
          },
          'dq': {
            action_: ['output', 'd='],
            nextState: 'd'
          }
        },
        '_{(state of aggregation)}$': {
          'd|D|q|qd|qD|dq': {
            action_: ['output', 'q='],
            nextState: 'q'
          }
        },
        '_{(...)}|_($...$)|_9|_\\x{}{}|_\\x{}|_\\x': {
          '0|1|2|as': {
            action_: 'p=',
            nextState: 'p'
          },
          'b': {
            action_: 'p=',
            nextState: 'bp'
          },
          '3|o': {
            action_: 'q=',
            nextState: 'q'
          },
          'd|D': {
            action_: 'q=',
            nextState: 'dq'
          },
          'q|qd|qD|dq': {
            action_: ['output', 'q='],
            nextState: 'q'
          }
        },
        '=<>': {
          '0|1|2|3|a|as|o|q|d|D|qd|qD|dq': {
            action_: [{
              type_: 'output',
              option: 2
            }, 'bond'],
            nextState: '3'
          }
        },
        '#': {
          '0|1|2|3|a|as|o': {
            action_: [{
              type_: 'output',
              option: 2
            }, {
              type_: 'bond',
              option: "#"
            }],
            nextState: '3'
          }
        },
        '{}^': {
          '*': {
            action_: [{
              type_: 'output',
              option: 1
            }, {
              type_: 'insert',
              option: 'tinySkip'
            }],
            nextState: '1'
          }
        },
        '{}': {
          '*': {
            action_: {
              type_: 'output',
              option: 1
            },
            nextState: '1'
          }
        },
        '{...}': {
          '0|1|2|3|a|as|b|p|bp': {
            action_: 'o=',
            nextState: 'o'
          },
          'o|d|D|q|qd|qD|dq': {
            action_: ['output', 'o='],
            nextState: 'o'
          }
        },
        '$...$': {
          'a': {
            action_: 'a='
          },
          '0|1|2|3|as|b|p|bp|o': {
            action_: 'o=',
            nextState: 'o'
          },
          'as|o': {
            action_: 'o='
          },
          'q|d|D|qd|qD|dq': {
            action_: ['output', 'o='],
            nextState: 'o'
          }
        },
        '\\bond{(...)}': {
          '*': {
            action_: [{
              type_: 'output',
              option: 2
            }, 'bond'],
            nextState: "3"
          }
        },
        '\\frac{(...)}': {
          '*': {
            action_: [{
              type_: 'output',
              option: 1
            }, 'frac-output'],
            nextState: '3'
          }
        },
        '\\overset{(...)}': {
          '*': {
            action_: [{
              type_: 'output',
              option: 2
            }, 'overset-output'],
            nextState: '3'
          }
        },
        "\\underset{(...)}": {
          '*': {
            action_: [{
              type_: 'output',
              option: 2
            }, 'underset-output'],
            nextState: '3'
          }
        },
        "\\underbrace{(...)}": {
          '*': {
            action_: [{
              type_: 'output',
              option: 2
            }, 'underbrace-output'],
            nextState: '3'
          }
        },
        '\\color{(...)}{(...)}': {
          '*': {
            action_: [{
              type_: 'output',
              option: 2
            }, 'color-output'],
            nextState: '3'
          }
        },
        '\\color{(...)}': {
          '*': {
            action_: [{
              type_: 'output',
              option: 2
            }, 'color0-output']
          }
        },
        '\\ce{(...)}': {
          '*': {
            action_: [{
              type_: 'output',
              option: 2
            }, 'ce'],
            nextState: '3'
          }
        },
        '\\,': {
          '*': {
            action_: [{
              type_: 'output',
              option: 1
            }, 'copy'],
            nextState: '1'
          }
        },
        '\\pu{(...)}': {
          '*': {
            action_: ['output', {
              type_: 'write',
              option: "{"
            }, 'pu', {
              type_: 'write',
              option: "}"
            }],
            nextState: '3'
          }
        },
        '\\x{}{}|\\x{}|\\x': {
          '0|1|2|3|a|as|b|p|bp|o|c0': {
            action_: ['o=', 'output'],
            nextState: '3'
          },
          '*': {
            action_: ['output', 'o=', 'output'],
            nextState: '3'
          }
        },
        'others': {
          '*': {
            action_: [{
              type_: 'output',
              option: 1
            }, 'copy'],
            nextState: '3'
          }
        },
        'else2': {
          'a': {
            action_: 'a to o',
            nextState: 'o',
            revisit: true
          },
          'as': {
            action_: ['output', 'sb=true'],
            nextState: '1',
            revisit: true
          },
          'r|rt|rd|rdt|rdq': {
            action_: ['output'],
            nextState: '0',
            revisit: true
          },
          '*': {
            action_: ['output', 'copy'],
            nextState: '3'
          }
        }
      }),
      actions: {
        'o after d': function oAfterD(buffer, m) {
          var ret;

          if ((buffer.d || "").match(/^[1-9][0-9]*$/)) {
            var tmp = buffer.d;
            buffer.d = undefined;
            ret = this['output'](buffer);
            ret.push({
              type_: 'tinySkip'
            });
            buffer.b = tmp;
          } else {
            ret = this['output'](buffer);
          }

          _mhchemParser.actions['o='](buffer, m);

          return ret;
        },
        'd= kv': function dKv(buffer, m) {
          buffer.d = m;
          buffer.dType = 'kv';
          return undefined;
        },
        'charge or bond': function chargeOrBond(buffer, m) {
          if (buffer['beginsWithBond']) {
            var ret = [];

            _mhchemParser.concatArray(ret, this['output'](buffer));

            _mhchemParser.concatArray(ret, _mhchemParser.actions['bond'](buffer, m, "-"));

            return ret;
          } else {
            buffer.d = m;
            return undefined;
          }
        },
        '- after o/d': function afterOD(buffer, m, isAfterD) {
          var c1 = _mhchemParser.patterns.match_('orbital', buffer.o || "");

          var c2 = _mhchemParser.patterns.match_('one lowercase greek letter $', buffer.o || "");

          var c3 = _mhchemParser.patterns.match_('one lowercase latin letter $', buffer.o || "");

          var c4 = _mhchemParser.patterns.match_('$one lowercase latin letter$ $', buffer.o || "");

          var hyphenFollows = m === "-" && (c1 && c1.remainder === "" || c2 || c3 || c4);

          if (hyphenFollows && !buffer.a && !buffer.b && !buffer.p && !buffer.d && !buffer.q && !c1 && c3) {
            buffer.o = '$' + buffer.o + '$';
          }

          var ret = [];

          if (hyphenFollows) {
            _mhchemParser.concatArray(ret, this['output'](buffer));

            ret.push({
              type_: 'hyphen'
            });
          } else {
            c1 = _mhchemParser.patterns.match_('digits', buffer.d || "");

            if (isAfterD && c1 && c1.remainder === '') {
              _mhchemParser.concatArray(ret, _mhchemParser.actions['d='](buffer, m));

              _mhchemParser.concatArray(ret, this['output'](buffer));
            } else {
              _mhchemParser.concatArray(ret, this['output'](buffer));

              _mhchemParser.concatArray(ret, _mhchemParser.actions['bond'](buffer, m, "-"));
            }
          }

          return ret;
        },
        'a to o': function aToO(buffer) {
          buffer.o = buffer.a;
          buffer.a = undefined;
          return undefined;
        },
        'sb=true': function sbTrue(buffer) {
          buffer.sb = true;
          return undefined;
        },
        'sb=false': function sbFalse(buffer) {
          buffer.sb = false;
          return undefined;
        },
        'beginsWithBond=true': function beginsWithBondTrue(buffer) {
          buffer['beginsWithBond'] = true;
          return undefined;
        },
        'beginsWithBond=false': function beginsWithBondFalse(buffer) {
          buffer['beginsWithBond'] = false;
          return undefined;
        },
        'parenthesisLevel++': function parenthesisLevel(buffer) {
          buffer['parenthesisLevel']++;
          return undefined;
        },
        'parenthesisLevel--': function parenthesisLevel(buffer) {
          buffer['parenthesisLevel']--;
          return undefined;
        },
        'state of aggregation': function stateOfAggregation(_buffer, m) {
          return {
            type_: 'state of aggregation',
            p1: _mhchemParser.go(m, 'o')
          };
        },
        'comma': function comma(buffer, m) {
          var a = m.replace(/\s*$/, '');
          var withSpace = a !== m;

          if (withSpace && buffer['parenthesisLevel'] === 0) {
            return {
              type_: 'comma enumeration L',
              p1: a
            };
          } else {
            return {
              type_: 'comma enumeration M',
              p1: a
            };
          }
        },
        'output': function output(buffer, _m, entityFollows) {
          var ret;

          if (!buffer.r) {
            ret = [];

            if (!buffer.a && !buffer.b && !buffer.p && !buffer.o && !buffer.q && !buffer.d && !entityFollows) {} else {
              if (buffer.sb) {
                ret.push({
                  type_: 'entitySkip'
                });
              }

              if (!buffer.o && !buffer.q && !buffer.d && !buffer.b && !buffer.p && entityFollows !== 2) {
                buffer.o = buffer.a;
                buffer.a = undefined;
              } else if (!buffer.o && !buffer.q && !buffer.d && (buffer.b || buffer.p)) {
                buffer.o = buffer.a;
                buffer.d = buffer.b;
                buffer.q = buffer.p;
                buffer.a = buffer.b = buffer.p = undefined;
              } else {
                if (buffer.o && buffer.dType === 'kv' && _mhchemParser.patterns.match_('d-oxidation$', buffer.d || "")) {
                  buffer.dType = 'oxidation';
                } else if (buffer.o && buffer.dType === 'kv' && !buffer.q) {
                  buffer.dType = undefined;
                }
              }

              ret.push({
                type_: 'chemfive',
                a: _mhchemParser.go(buffer.a, 'a'),
                b: _mhchemParser.go(buffer.b, 'bd'),
                p: _mhchemParser.go(buffer.p, 'pq'),
                o: _mhchemParser.go(buffer.o, 'o'),
                q: _mhchemParser.go(buffer.q, 'pq'),
                d: _mhchemParser.go(buffer.d, buffer.dType === 'oxidation' ? 'oxidation' : 'bd'),
                dType: buffer.dType
              });
            }
          } else {
            var rd = void 0;

            if (buffer.rdt === 'M') {
              rd = _mhchemParser.go(buffer.rd, 'tex-math');
            } else if (buffer.rdt === 'T') {
              rd = [{
                type_: 'text',
                p1: buffer.rd || ""
              }];
            } else {
              rd = _mhchemParser.go(buffer.rd, 'ce');
            }

            var rq = void 0;

            if (buffer.rqt === 'M') {
              rq = _mhchemParser.go(buffer.rq, 'tex-math');
            } else if (buffer.rqt === 'T') {
              rq = [{
                type_: 'text',
                p1: buffer.rq || ""
              }];
            } else {
              rq = _mhchemParser.go(buffer.rq, 'ce');
            }

            ret = {
              type_: 'arrow',
              r: buffer.r,
              rd: rd,
              rq: rq
            };
          }

          for (var p in buffer) {
            if (p !== 'parenthesisLevel' && p !== 'beginsWithBond') {
              delete buffer[p];
            }
          }

          return ret;
        },
        'oxidation-output': function oxidationOutput(_buffer, m) {
          var ret = ["{"];

          _mhchemParser.concatArray(ret, _mhchemParser.go(m, 'oxidation'));

          ret.push("}");
          return ret;
        },
        'frac-output': function fracOutput(_buffer, m) {
          return {
            type_: 'frac-ce',
            p1: _mhchemParser.go(m[0], 'ce'),
            p2: _mhchemParser.go(m[1], 'ce')
          };
        },
        'overset-output': function oversetOutput(_buffer, m) {
          return {
            type_: 'overset',
            p1: _mhchemParser.go(m[0], 'ce'),
            p2: _mhchemParser.go(m[1], 'ce')
          };
        },
        'underset-output': function undersetOutput(_buffer, m) {
          return {
            type_: 'underset',
            p1: _mhchemParser.go(m[0], 'ce'),
            p2: _mhchemParser.go(m[1], 'ce')
          };
        },
        'underbrace-output': function underbraceOutput(_buffer, m) {
          return {
            type_: 'underbrace',
            p1: _mhchemParser.go(m[0], 'ce'),
            p2: _mhchemParser.go(m[1], 'ce')
          };
        },
        'color-output': function colorOutput(_buffer, m) {
          return {
            type_: 'color',
            color1: m[0],
            color2: _mhchemParser.go(m[1], 'ce')
          };
        },
        'r=': function r(buffer, m) {
          buffer.r = m;
          return undefined;
        },
        'rdt=': function rdt(buffer, m) {
          buffer.rdt = m;
          return undefined;
        },
        'rd=': function rd(buffer, m) {
          buffer.rd = m;
          return undefined;
        },
        'rqt=': function rqt(buffer, m) {
          buffer.rqt = m;
          return undefined;
        },
        'rq=': function rq(buffer, m) {
          buffer.rq = m;
          return undefined;
        },
        'operator': function operator(_buffer, m, p1) {
          return {
            type_: 'operator',
            kind_: p1 || m
          };
        }
      }
    },
    'a': {
      transitions: _mhchemCreateTransitions({
        'empty': {
          '*': {
            action_: []
          }
        },
        '1/2$': {
          '0': {
            action_: '1/2'
          }
        },
        'else': {
          '0': {
            action_: [],
            nextState: '1',
            revisit: true
          }
        },
        '${(...)}$__$(...)$': {
          '*': {
            action_: 'tex-math tight',
            nextState: '1'
          }
        },
        ',': {
          '*': {
            action_: {
              type_: 'insert',
              option: 'commaDecimal'
            }
          }
        },
        'else2': {
          '*': {
            action_: 'copy'
          }
        }
      }),
      actions: {}
    },
    'o': {
      transitions: _mhchemCreateTransitions({
        'empty': {
          '*': {
            action_: []
          }
        },
        '1/2$': {
          '0': {
            action_: '1/2'
          }
        },
        'else': {
          '0': {
            action_: [],
            nextState: '1',
            revisit: true
          }
        },
        'letters': {
          '*': {
            action_: 'rm'
          }
        },
        '\\ca': {
          '*': {
            action_: {
              type_: 'insert',
              option: 'circa'
            }
          }
        },
        '\\pu{(...)}': {
          '*': {
            action_: [{
              type_: 'write',
              option: "{"
            }, 'pu', {
              type_: 'write',
              option: "}"
            }]
          }
        },
        '\\x{}{}|\\x{}|\\x': {
          '*': {
            action_: 'copy'
          }
        },
        '${(...)}$__$(...)$': {
          '*': {
            action_: 'tex-math'
          }
        },
        '{(...)}': {
          '*': {
            action_: [{
              type_: 'write',
              option: "{"
            }, 'text', {
              type_: 'write',
              option: "}"
            }]
          }
        },
        'else2': {
          '*': {
            action_: 'copy'
          }
        }
      }),
      actions: {}
    },
    'text': {
      transitions: _mhchemCreateTransitions({
        'empty': {
          '*': {
            action_: 'output'
          }
        },
        '{...}': {
          '*': {
            action_: 'text='
          }
        },
        '${(...)}$__$(...)$': {
          '*': {
            action_: 'tex-math'
          }
        },
        '\\greek': {
          '*': {
            action_: ['output', 'rm']
          }
        },
        '\\pu{(...)}': {
          '*': {
            action_: ['output', {
              type_: 'write',
              option: "{"
            }, 'pu', {
              type_: 'write',
              option: "}"
            }]
          }
        },
        '\\,|\\x{}{}|\\x{}|\\x': {
          '*': {
            action_: ['output', 'copy']
          }
        },
        'else': {
          '*': {
            action_: 'text='
          }
        }
      }),
      actions: {
        'output': function output(buffer) {
          if (buffer.text_) {
            var ret = {
              type_: 'text',
              p1: buffer.text_
            };

            for (var p in buffer) {
              delete buffer[p];
            }

            return ret;
          }

          return undefined;
        }
      }
    },
    'pq': {
      transitions: _mhchemCreateTransitions({
        'empty': {
          '*': {
            action_: []
          }
        },
        'state of aggregation $': {
          '*': {
            action_: 'state of aggregation'
          }
        },
        'i$': {
          '0': {
            action_: [],
            nextState: '!f',
            revisit: true
          }
        },
        '(KV letters),': {
          '0': {
            action_: 'rm',
            nextState: '0'
          }
        },
        'formula$': {
          '0': {
            action_: [],
            nextState: 'f',
            revisit: true
          }
        },
        '1/2$': {
          '0': {
            action_: '1/2'
          }
        },
        'else': {
          '0': {
            action_: [],
            nextState: '!f',
            revisit: true
          }
        },
        '${(...)}$__$(...)$': {
          '*': {
            action_: 'tex-math'
          }
        },
        '{(...)}': {
          '*': {
            action_: 'text'
          }
        },
        'a-z': {
          'f': {
            action_: 'tex-math'
          }
        },
        'letters': {
          '*': {
            action_: 'rm'
          }
        },
        '-9.,9': {
          '*': {
            action_: '9,9'
          }
        },
        ',': {
          '*': {
            action_: {
              type_: 'insert+p1',
              option: 'comma enumeration S'
            }
          }
        },
        '\\color{(...)}{(...)}': {
          '*': {
            action_: 'color-output'
          }
        },
        '\\color{(...)}': {
          '*': {
            action_: 'color0-output'
          }
        },
        '\\ce{(...)}': {
          '*': {
            action_: 'ce'
          }
        },
        '\\pu{(...)}': {
          '*': {
            action_: [{
              type_: 'write',
              option: "{"
            }, 'pu', {
              type_: 'write',
              option: "}"
            }]
          }
        },
        '\\,|\\x{}{}|\\x{}|\\x': {
          '*': {
            action_: 'copy'
          }
        },
        'else2': {
          '*': {
            action_: 'copy'
          }
        }
      }),
      actions: {
        'state of aggregation': function stateOfAggregation(_buffer, m) {
          return {
            type_: 'state of aggregation subscript',
            p1: _mhchemParser.go(m, 'o')
          };
        },
        'color-output': function colorOutput(_buffer, m) {
          return {
            type_: 'color',
            color1: m[0],
            color2: _mhchemParser.go(m[1], 'pq')
          };
        }
      }
    },
    'bd': {
      transitions: _mhchemCreateTransitions({
        'empty': {
          '*': {
            action_: []
          }
        },
        'x$': {
          '0': {
            action_: [],
            nextState: '!f',
            revisit: true
          }
        },
        'formula$': {
          '0': {
            action_: [],
            nextState: 'f',
            revisit: true
          }
        },
        'else': {
          '0': {
            action_: [],
            nextState: '!f',
            revisit: true
          }
        },
        '-9.,9 no missing 0': {
          '*': {
            action_: '9,9'
          }
        },
        '.': {
          '*': {
            action_: {
              type_: 'insert',
              option: 'electron dot'
            }
          }
        },
        'a-z': {
          'f': {
            action_: 'tex-math'
          }
        },
        'x': {
          '*': {
            action_: {
              type_: 'insert',
              option: 'KV x'
            }
          }
        },
        'letters': {
          '*': {
            action_: 'rm'
          }
        },
        '\'': {
          '*': {
            action_: {
              type_: 'insert',
              option: 'prime'
            }
          }
        },
        '${(...)}$__$(...)$': {
          '*': {
            action_: 'tex-math'
          }
        },
        '{(...)}': {
          '*': {
            action_: 'text'
          }
        },
        '\\color{(...)}{(...)}': {
          '*': {
            action_: 'color-output'
          }
        },
        '\\color{(...)}': {
          '*': {
            action_: 'color0-output'
          }
        },
        '\\ce{(...)}': {
          '*': {
            action_: 'ce'
          }
        },
        '\\pu{(...)}': {
          '*': {
            action_: [{
              type_: 'write',
              option: "{"
            }, 'pu', {
              type_: 'write',
              option: "}"
            }]
          }
        },
        '\\,|\\x{}{}|\\x{}|\\x': {
          '*': {
            action_: 'copy'
          }
        },
        'else2': {
          '*': {
            action_: 'copy'
          }
        }
      }),
      actions: {
        'color-output': function colorOutput(_buffer, m) {
          return {
            type_: 'color',
            color1: m[0],
            color2: _mhchemParser.go(m[1], 'bd')
          };
        }
      }
    },
    'oxidation': {
      transitions: _mhchemCreateTransitions({
        'empty': {
          '*': {
            action_: []
          }
        },
        'roman numeral': {
          '*': {
            action_: 'roman-numeral'
          }
        },
        '${(...)}$__$(...)$': {
          '*': {
            action_: 'tex-math'
          }
        },
        'else': {
          '*': {
            action_: 'copy'
          }
        }
      }),
      actions: {
        'roman-numeral': function romanNumeral(_buffer, m) {
          return {
            type_: 'roman numeral',
            p1: m
          };
        }
      }
    },
    'tex-math': {
      transitions: _mhchemCreateTransitions({
        'empty': {
          '*': {
            action_: 'output'
          }
        },
        '\\ce{(...)}': {
          '*': {
            action_: ['output', 'ce']
          }
        },
        '\\pu{(...)}': {
          '*': {
            action_: ['output', {
              type_: 'write',
              option: "{"
            }, 'pu', {
              type_: 'write',
              option: "}"
            }]
          }
        },
        '{...}|\\,|\\x{}{}|\\x{}|\\x': {
          '*': {
            action_: 'o='
          }
        },
        'else': {
          '*': {
            action_: 'o='
          }
        }
      }),
      actions: {
        'output': function output(buffer) {
          if (buffer.o) {
            var ret = {
              type_: 'tex-math',
              p1: buffer.o
            };

            for (var p in buffer) {
              delete buffer[p];
            }

            return ret;
          }

          return undefined;
        }
      }
    },
    'tex-math tight': {
      transitions: _mhchemCreateTransitions({
        'empty': {
          '*': {
            action_: 'output'
          }
        },
        '\\ce{(...)}': {
          '*': {
            action_: ['output', 'ce']
          }
        },
        '\\pu{(...)}': {
          '*': {
            action_: ['output', {
              type_: 'write',
              option: "{"
            }, 'pu', {
              type_: 'write',
              option: "}"
            }]
          }
        },
        '{...}|\\,|\\x{}{}|\\x{}|\\x': {
          '*': {
            action_: 'o='
          }
        },
        '-|+': {
          '*': {
            action_: 'tight operator'
          }
        },
        'else': {
          '*': {
            action_: 'o='
          }
        }
      }),
      actions: {
        'tight operator': function tightOperator(buffer, m) {
          buffer.o = (buffer.o || "") + "{" + m + "}";
          return undefined;
        },
        'output': function output(buffer) {
          if (buffer.o) {
            var ret = {
              type_: 'tex-math',
              p1: buffer.o
            };

            for (var p in buffer) {
              delete buffer[p];
            }

            return ret;
          }

          return undefined;
        }
      }
    },
    '9,9': {
      transitions: _mhchemCreateTransitions({
        'empty': {
          '*': {
            action_: []
          }
        },
        ',': {
          '*': {
            action_: 'comma'
          }
        },
        'else': {
          '*': {
            action_: 'copy'
          }
        }
      }),
      actions: {
        'comma': function comma() {
          return {
            type_: 'commaDecimal'
          };
        }
      }
    },
    'pu': {
      transitions: _mhchemCreateTransitions({
        'empty': {
          '*': {
            action_: 'output'
          }
        },
        'space$': {
          '*': {
            action_: ['output', 'space']
          }
        },
        '{[(|)]}': {
          '0|a': {
            action_: 'copy'
          }
        },
        '(-)(9)^(-9)': {
          '0': {
            action_: 'number^',
            nextState: 'a'
          }
        },
        '(-)(9.,9)(e)(99)': {
          '0': {
            action_: 'enumber',
            nextState: 'a'
          }
        },
        'space': {
          '0|a': {
            action_: []
          }
        },
        'pm-operator': {
          '0|a': {
            action_: {
              type_: 'operator',
              option: '\\pm'
            },
            nextState: '0'
          }
        },
        'operator': {
          '0|a': {
            action_: 'copy',
            nextState: '0'
          }
        },
        '//': {
          'd': {
            action_: 'o=',
            nextState: '/'
          }
        },
        '/': {
          'd': {
            action_: 'o=',
            nextState: '/'
          }
        },
        '{...}|else': {
          '0|d': {
            action_: 'd=',
            nextState: 'd'
          },
          'a': {
            action_: ['space', 'd='],
            nextState: 'd'
          },
          '/|q': {
            action_: 'q=',
            nextState: 'q'
          }
        }
      }),
      actions: {
        'enumber': function enumber(_buffer, m) {
          var ret = [];

          if (m[0] === "+-" || m[0] === "+/-") {
            ret.push("\\pm ");
          } else if (m[0]) {
            ret.push(m[0]);
          }

          if (m[1]) {
            _mhchemParser.concatArray(ret, _mhchemParser.go(m[1], 'pu-9,9'));

            if (m[2]) {
              if (m[2].match(/[,.]/)) {
                _mhchemParser.concatArray(ret, _mhchemParser.go(m[2], 'pu-9,9'));
              } else {
                ret.push(m[2]);
              }
            }

            if (m[3] || m[4]) {
              if (m[3] === "e" || m[4] === "*") {
                ret.push({
                  type_: 'cdot'
                });
              } else {
                ret.push({
                  type_: 'times'
                });
              }
            }
          }

          if (m[5]) {
            ret.push("10^{" + m[5] + "}");
          }

          return ret;
        },
        'number^': function number(_buffer, m) {
          var ret = [];

          if (m[0] === "+-" || m[0] === "+/-") {
            ret.push("\\pm ");
          } else if (m[0]) {
            ret.push(m[0]);
          }

          _mhchemParser.concatArray(ret, _mhchemParser.go(m[1], 'pu-9,9'));

          ret.push("^{" + m[2] + "}");
          return ret;
        },
        'operator': function operator(_buffer, m, p1) {
          return {
            type_: 'operator',
            kind_: p1 || m
          };
        },
        'space': function space() {
          return {
            type_: 'pu-space-1'
          };
        },
        'output': function output(buffer) {
          var ret;

          var md = _mhchemParser.patterns.match_('{(...)}', buffer.d || "");

          if (md && md.remainder === '') {
            buffer.d = md.match_;
          }

          var mq = _mhchemParser.patterns.match_('{(...)}', buffer.q || "");

          if (mq && mq.remainder === '') {
            buffer.q = mq.match_;
          }

          if (buffer.d) {
            buffer.d = buffer.d.replace(/\u00B0C|\^oC|\^{o}C/g, "{}^{\\circ}C");
            buffer.d = buffer.d.replace(/\u00B0F|\^oF|\^{o}F/g, "{}^{\\circ}F");
          }

          if (buffer.q) {
            buffer.q = buffer.q.replace(/\u00B0C|\^oC|\^{o}C/g, "{}^{\\circ}C");
            buffer.q = buffer.q.replace(/\u00B0F|\^oF|\^{o}F/g, "{}^{\\circ}F");
            var b5 = {
              d: _mhchemParser.go(buffer.d, 'pu'),
              q: _mhchemParser.go(buffer.q, 'pu')
            };

            if (buffer.o === '//') {
              ret = {
                type_: 'pu-frac',
                p1: b5.d,
                p2: b5.q
              };
            } else {
              ret = b5.d;

              if (b5.d.length > 1 || b5.q.length > 1) {
                ret.push({
                  type_: ' / '
                });
              } else {
                ret.push({
                  type_: '/'
                });
              }

              _mhchemParser.concatArray(ret, b5.q);
            }
          } else {
            ret = _mhchemParser.go(buffer.d, 'pu-2');
          }

          for (var p in buffer) {
            delete buffer[p];
          }

          return ret;
        }
      }
    },
    'pu-2': {
      transitions: _mhchemCreateTransitions({
        'empty': {
          '*': {
            action_: 'output'
          }
        },
        '*': {
          '*': {
            action_: ['output', 'cdot'],
            nextState: '0'
          }
        },
        '\\x': {
          '*': {
            action_: 'rm='
          }
        },
        'space': {
          '*': {
            action_: ['output', 'space'],
            nextState: '0'
          }
        },
        '^{(...)}|^(-1)': {
          '1': {
            action_: '^(-1)'
          }
        },
        '-9.,9': {
          '0': {
            action_: 'rm=',
            nextState: '0'
          },
          '1': {
            action_: '^(-1)',
            nextState: '0'
          }
        },
        '{...}|else': {
          '*': {
            action_: 'rm=',
            nextState: '1'
          }
        }
      }),
      actions: {
        'cdot': function cdot() {
          return {
            type_: 'tight cdot'
          };
        },
        '^(-1)': function _(buffer, m) {
          buffer.rm += "^{" + m + "}";
          return undefined;
        },
        'space': function space() {
          return {
            type_: 'pu-space-2'
          };
        },
        'output': function output(buffer) {
          var ret = [];

          if (buffer.rm) {
            var mrm = _mhchemParser.patterns.match_('{(...)}', buffer.rm || "");

            if (mrm && mrm.remainder === '') {
              ret = _mhchemParser.go(mrm.match_, 'pu');
            } else {
              ret = {
                type_: 'rm',
                p1: buffer.rm
              };
            }
          }

          for (var p in buffer) {
            delete buffer[p];
          }

          return ret;
        }
      }
    },
    'pu-9,9': {
      transitions: _mhchemCreateTransitions({
        'empty': {
          '0': {
            action_: 'output-0'
          },
          'o': {
            action_: 'output-o'
          }
        },
        ',': {
          '0': {
            action_: ['output-0', 'comma'],
            nextState: 'o'
          }
        },
        '.': {
          '0': {
            action_: ['output-0', 'copy'],
            nextState: 'o'
          }
        },
        'else': {
          '*': {
            action_: 'text='
          }
        }
      }),
      actions: {
        'comma': function comma() {
          return {
            type_: 'commaDecimal'
          };
        },
        'output-0': function output0(buffer) {
          var ret = [];
          buffer.text_ = buffer.text_ || "";

          if (buffer.text_.length > 4) {
            var a = buffer.text_.length % 3;

            if (a === 0) {
              a = 3;
            }

            for (var i = buffer.text_.length - 3; i > 0; i -= 3) {
              ret.push(buffer.text_.substr(i, 3));
              ret.push({
                type_: '1000 separator'
              });
            }

            ret.push(buffer.text_.substr(0, a));
            ret.reverse();
          } else {
            ret.push(buffer.text_);
          }

          for (var p in buffer) {
            delete buffer[p];
          }

          return ret;
        },
        'output-o': function outputO(buffer) {
          var ret = [];
          buffer.text_ = buffer.text_ || "";

          if (buffer.text_.length > 4) {
            var a = buffer.text_.length - 3;
            var i = void 0;

            for (i = 0; i < a; i += 3) {
              ret.push(buffer.text_.substr(i, 3));
              ret.push({
                type_: '1000 separator'
              });
            }

            ret.push(buffer.text_.substr(i));
          } else {
            ret.push(buffer.text_);
          }

          for (var p in buffer) {
            delete buffer[p];
          }

          return ret;
        }
      }
    }
  }
};
var _mhchemTexify = {
  go: function go(input, addOuterBraces) {
    if (!input) {
      return "";
    }

    var res = "";
    var cee = false;

    for (var i = 0; i < input.length; i++) {
      var inputi = input[i];

      if (typeof inputi === "string") {
        res += inputi;
      } else {
        res += _mhchemTexify._go2(inputi);

        if (inputi.type_ === '1st-level escape') {
          cee = true;
        }
      }
    }

    if (addOuterBraces && !cee && res) {
      res = "{" + res + "}";
    }

    return res;
  },
  _goInner: function _goInner(input) {
    return _mhchemTexify.go(input, false);
  },
  _go2: function _go2(buf) {
    var res;

    switch (buf.type_) {
      case 'chemfive':
        res = "";
        var b5 = {
          a: _mhchemTexify._goInner(buf.a),
          b: _mhchemTexify._goInner(buf.b),
          p: _mhchemTexify._goInner(buf.p),
          o: _mhchemTexify._goInner(buf.o),
          q: _mhchemTexify._goInner(buf.q),
          d: _mhchemTexify._goInner(buf.d)
        };

        if (b5.a) {
          if (b5.a.match(/^[+\-]/)) {
            b5.a = "{" + b5.a + "}";
          }

          res += b5.a + "\\,";
        }

        if (b5.b || b5.p) {
          res += "{\\vphantom{A}}";
          res += "^{\\hphantom{" + (b5.b || "") + "}}_{\\hphantom{" + (b5.p || "") + "}}";
          res += "\\mkern-1.5mu";
          res += "{\\vphantom{A}}";
          res += "^{\\smash[t]{\\vphantom{2}}\\llap{" + (b5.b || "") + "}}";
          res += "_{\\vphantom{2}\\llap{\\smash[t]{" + (b5.p || "") + "}}}";
        }

        if (b5.o) {
          if (b5.o.match(/^[+\-]/)) {
            b5.o = "{" + b5.o + "}";
          }

          res += b5.o;
        }

        if (buf.dType === 'kv') {
          if (b5.d || b5.q) {
            res += "{\\vphantom{A}}";
          }

          if (b5.d) {
            res += "^{" + b5.d + "}";
          }

          if (b5.q) {
            res += "_{\\smash[t]{" + b5.q + "}}";
          }
        } else if (buf.dType === 'oxidation') {
          if (b5.d) {
            res += "{\\vphantom{A}}";
            res += "^{" + b5.d + "}";
          }

          if (b5.q) {
            res += "{\\vphantom{A}}";
            res += "_{\\smash[t]{" + b5.q + "}}";
          }
        } else {
          if (b5.q) {
            res += "{\\vphantom{A}}";
            res += "_{\\smash[t]{" + b5.q + "}}";
          }

          if (b5.d) {
            res += "{\\vphantom{A}}";
            res += "^{" + b5.d + "}";
          }
        }

        break;

      case 'rm':
        res = "\\mathrm{" + buf.p1 + "}";
        break;

      case 'text':
        if (buf.p1.match(/[\^_]/)) {
          buf.p1 = buf.p1.replace(" ", "~").replace("-", "\\text{-}");
          res = "\\mathrm{" + buf.p1 + "}";
        } else {
          res = "\\text{" + buf.p1 + "}";
        }

        break;

      case 'roman numeral':
        res = "\\mathrm{" + buf.p1 + "}";
        break;

      case 'state of aggregation':
        res = "\\mskip2mu " + _mhchemTexify._goInner(buf.p1);
        break;

      case 'state of aggregation subscript':
        res = "\\mskip1mu " + _mhchemTexify._goInner(buf.p1);
        break;

      case 'bond':
        res = _mhchemTexify._getBond(buf.kind_);

        if (!res) {
          throw ["MhchemErrorBond", "mhchem Error. Unknown bond type (" + buf.kind_ + ")"];
        }

        break;

      case 'frac':
        var c = "\\frac{" + buf.p1 + "}{" + buf.p2 + "}";
        res = "\\mathchoice{\\textstyle" + c + "}{" + c + "}{" + c + "}{" + c + "}";
        break;

      case 'pu-frac':
        var d = "\\frac{" + _mhchemTexify._goInner(buf.p1) + "}{" + _mhchemTexify._goInner(buf.p2) + "}";
        res = "\\mathchoice{\\textstyle" + d + "}{" + d + "}{" + d + "}{" + d + "}";
        break;

      case 'tex-math':
        res = buf.p1 + " ";
        break;

      case 'frac-ce':
        res = "\\frac{" + _mhchemTexify._goInner(buf.p1) + "}{" + _mhchemTexify._goInner(buf.p2) + "}";
        break;

      case 'overset':
        res = "\\overset{" + _mhchemTexify._goInner(buf.p1) + "}{" + _mhchemTexify._goInner(buf.p2) + "}";
        break;

      case 'underset':
        res = "\\underset{" + _mhchemTexify._goInner(buf.p1) + "}{" + _mhchemTexify._goInner(buf.p2) + "}";
        break;

      case 'underbrace':
        res = "\\underbrace{" + _mhchemTexify._goInner(buf.p1) + "}_{" + _mhchemTexify._goInner(buf.p2) + "}";
        break;

      case 'color':
        res = "{\\color{" + buf.color1 + "}{" + _mhchemTexify._goInner(buf.color2) + "}}";
        break;

      case 'color0':
        res = "\\color{" + buf.color + "}";
        break;

      case 'arrow':
        var b6 = {
          rd: _mhchemTexify._goInner(buf.rd),
          rq: _mhchemTexify._goInner(buf.rq)
        };

        var arrow = _mhchemTexify._getArrow(buf.r);

        if (b6.rd || b6.rq) {
          if (buf.r === "<=>" || buf.r === "<=>>" || buf.r === "<<=>" || buf.r === "<-->") {
            arrow = "\\long" + arrow;

            if (b6.rd) {
              arrow = "\\overset{" + b6.rd + "}{" + arrow + "}";
            }

            if (b6.rq) {
              if (buf.r === "<-->") {
                arrow = "\\underset{\\lower2mu{" + b6.rq + "}}{" + arrow + "}";
              } else {
                arrow = "\\underset{\\lower6mu{" + b6.rq + "}}{" + arrow + "}";
              }
            }

            arrow = " {}\\mathrel{" + arrow + "}{} ";
          } else {
            if (b6.rq) {
              arrow += "[{" + b6.rq + "}]";
            }

            arrow += "{" + b6.rd + "}";
            arrow = " {}\\mathrel{\\x" + arrow + "}{} ";
          }
        } else {
          arrow = " {}\\mathrel{\\long" + arrow + "}{} ";
        }

        res = arrow;
        break;

      case 'operator':
        res = _mhchemTexify._getOperator(buf.kind_);
        break;

      case '1st-level escape':
        res = buf.p1 + " ";
        break;

      case 'space':
        res = " ";
        break;

      case 'tinySkip':
        res = '\\mkern2mu';
        break;

      case 'entitySkip':
        res = "~";
        break;

      case 'pu-space-1':
        res = "~";
        break;

      case 'pu-space-2':
        res = "\\mkern3mu ";
        break;

      case '1000 separator':
        res = "\\mkern2mu ";
        break;

      case 'commaDecimal':
        res = "{,}";
        break;

      case 'comma enumeration L':
        res = "{" + buf.p1 + "}\\mkern6mu ";
        break;

      case 'comma enumeration M':
        res = "{" + buf.p1 + "}\\mkern3mu ";
        break;

      case 'comma enumeration S':
        res = "{" + buf.p1 + "}\\mkern1mu ";
        break;

      case 'hyphen':
        res = "\\text{-}";
        break;

      case 'addition compound':
        res = "\\,{\\cdot}\\,";
        break;

      case 'electron dot':
        res = "\\mkern1mu \\bullet\\mkern1mu ";
        break;

      case 'KV x':
        res = "{\\times}";
        break;

      case 'prime':
        res = "\\prime ";
        break;

      case 'cdot':
        res = "\\cdot ";
        break;

      case 'tight cdot':
        res = "\\mkern1mu{\\cdot}\\mkern1mu ";
        break;

      case 'times':
        res = "\\times ";
        break;

      case 'circa':
        res = "{\\sim}";
        break;

      case '^':
        res = "uparrow";
        break;

      case 'v':
        res = "downarrow";
        break;

      case 'ellipsis':
        res = "\\ldots ";
        break;

      case '/':
        res = "/";
        break;

      case ' / ':
        res = "\\,/\\,";
        break;

      default:
        assertNever(buf);
        throw ["MhchemBugT", "mhchem bug T. Please report."];
    }

    return res;
  },
  _getArrow: function _getArrow(a) {
    switch (a) {
      case "->":
        return "rightarrow";

      case "\u2192":
        return "rightarrow";

      case "\u27F6":
        return "rightarrow";

      case "<-":
        return "leftarrow";

      case "<->":
        return "leftrightarrow";

      case "<-->":
        return "leftrightarrows";

      case "<=>":
        return "rightleftharpoons";

      case "\u21CC":
        return "rightleftharpoons";

      case "<=>>":
        return "Rightleftharpoons";

      case "<<=>":
        return "Leftrightharpoons";

      default:
        assertNever(a);
        throw ["MhchemBugT", "mhchem bug T. Please report."];
    }
  },
  _getBond: function _getBond(a) {
    switch (a) {
      case "-":
        return "{-}";

      case "1":
        return "{-}";

      case "=":
        return "{=}";

      case "2":
        return "{=}";

      case "#":
        return "{\\equiv}";

      case "3":
        return "{\\equiv}";

      case "~":
        return "{\\tripledash}";

      case "~-":
        return "{\\rlap{\\lower.1em{-}}\\raise.1em{\\tripledash}}";

      case "~=":
        return "{\\rlap{\\lower.2em{-}}\\rlap{\\raise.2em{\\tripledash}}-}";

      case "~--":
        return "{\\rlap{\\lower.2em{-}}\\rlap{\\raise.2em{\\tripledash}}-}";

      case "-~-":
        return "{\\rlap{\\lower.2em{-}}\\rlap{\\raise.2em{-}}\\tripledash}";

      case "...":
        return "{{\\cdot}{\\cdot}{\\cdot}}";

      case "....":
        return "{{\\cdot}{\\cdot}{\\cdot}{\\cdot}}";

      case "->":
        return "{\\rightarrow}";

      case "<-":
        return "{\\leftarrow}";

      case "<":
        return "{<}";

      case ">":
        return "{>}";

      default:
        assertNever(a);
        throw ["MhchemBugT", "mhchem bug T. Please report."];
    }
  },
  _getOperator: function _getOperator(a) {
    switch (a) {
      case "+":
        return " {}+{} ";

      case "-":
        return " {}-{} ";

      case "=":
        return " {}={} ";

      case "<":
        return " {}<{} ";

      case ">":
        return " {}>{} ";

      case "<<":
        return " {}\\ll{} ";

      case ">>":
        return " {}\\gg{} ";

      case "\\pm":
        return " {}\\pm{} ";

      case "\\approx":
        return " {}\\approx{} ";

      case "$\\approx$":
        return " {}\\approx{} ";

      case "v":
        return " \\downarrow{} ";

      case "(v)":
        return " \\downarrow{} ";

      case "^":
        return " \\uparrow{} ";

      case "(^)":
        return " \\uparrow{} ";

      default:
        assertNever(a);
        throw ["MhchemBugT", "mhchem bug T. Please report."];
    }
  }
};

function assertNever(a) {}

/***/ }),

/***/ 6223:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.compile = void 0;

var boolbase_1 = __webpack_require__(5800);
/**
 * Returns a function that checks if an elements index matches the given rule
 * highly optimized to return the fastest solution.
 *
 * @param parsed A tuple [a, b], as returned by `parse`.
 * @returns A highly optimized function that returns whether an index matches the nth-check.
 * @example
 * const check = nthCheck.compile([2, 3]);
 *
 * check(0); // `false`
 * check(1); // `false`
 * check(2); // `true`
 * check(3); // `false`
 * check(4); // `true`
 * check(5); // `false`
 * check(6); // `true`
 */


function compile(parsed) {
  var a = parsed[0]; // Subtract 1 from `b`, to convert from one- to zero-indexed.

  var b = parsed[1] - 1;
  /*
   * When `b <= 0`, `a * n` won't be lead to any matches for `a < 0`.
   * Besides, the specification states that no elements are
   * matched when `a` and `b` are 0.
   *
   * `b < 0` here as we subtracted 1 from `b` above.
   */

  if (b < 0 && a <= 0) return boolbase_1.falseFunc; // When `a` is in the range -1..1, it matches any element (so only `b` is checked).

  if (a === -1) return function (index) {
    return index <= b;
  };
  if (a === 0) return function (index) {
    return index === b;
  }; // When `b <= 0` and `a === 1`, they match any element.

  if (a === 1) return b < 0 ? boolbase_1.trueFunc : function (index) {
    return index >= b;
  };
  /*
   * Otherwise, modulo can be used to check if there is a match.
   *
   * Modulo doesn't care about the sign, so let's use `a`s absolute value.
   */

  var absA = Math.abs(a); // Get `b mod a`, + a if this is negative.

  var bMod = (b % absA + absA) % absA;
  return a > 1 ? function (index) {
    return index >= b && index % absA === bMod;
  } : function (index) {
    return index <= b && index % absA === bMod;
  };
}

exports.compile = compile;

/***/ }),

/***/ 1469:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.compile = exports.parse = void 0;

var parse_1 = __webpack_require__(6068);

Object.defineProperty(exports, "parse", ({
  enumerable: true,
  get: function get() {
    return parse_1.parse;
  }
}));

var compile_1 = __webpack_require__(6223);

Object.defineProperty(exports, "compile", ({
  enumerable: true,
  get: function get() {
    return compile_1.compile;
  }
}));
/**
 * Parses and compiles a formula to a highly optimized function.
 * Combination of `parse` and `compile`.
 *
 * If the formula doesn't match any elements,
 * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.
 * Otherwise, a function accepting an _index_ is returned, which returns
 * whether or not the passed _index_ matches the formula.
 *
 * Note: The nth-rule starts counting at `1`, the returned function at `0`.
 *
 * @param formula The formula to compile.
 * @example
 * const check = nthCheck("2n+3");
 *
 * check(0); // `false`
 * check(1); // `false`
 * check(2); // `true`
 * check(3); // `false`
 * check(4); // `true`
 * check(5); // `false`
 * check(6); // `true`
 */

function nthCheck(formula) {
  return (0, compile_1.compile)((0, parse_1.parse)(formula));
}

exports["default"] = nthCheck;

/***/ }),

/***/ 6068:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
 // Following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.parse = void 0; // Whitespace as per https://www.w3.org/TR/selectors-3/#lex is " \t\r\n\f"

var whitespace = new Set([9, 10, 12, 13, 32]);
var ZERO = "0".charCodeAt(0);
var NINE = "9".charCodeAt(0);
/**
 * Parses an expression.
 *
 * @throws An `Error` if parsing fails.
 * @returns An array containing the integer step size and the integer offset of the nth rule.
 * @example nthCheck.parse("2n+3"); // returns [2, 3]
 */

function parse(formula) {
  formula = formula.trim().toLowerCase();

  if (formula === "even") {
    return [2, 0];
  } else if (formula === "odd") {
    return [2, 1];
  } // Parse [ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?


  var idx = 0;
  var a = 0;
  var sign = readSign();
  var number = readNumber();

  if (idx < formula.length && formula.charAt(idx) === "n") {
    idx++;
    a = sign * (number !== null && number !== void 0 ? number : 1);
    skipWhitespace();

    if (idx < formula.length) {
      sign = readSign();
      skipWhitespace();
      number = readNumber();
    } else {
      sign = number = 0;
    }
  } // Throw if there is anything else


  if (number === null || idx < formula.length) {
    throw new Error("n-th rule couldn't be parsed ('" + formula + "')");
  }

  return [a, sign * number];

  function readSign() {
    if (formula.charAt(idx) === "-") {
      idx++;
      return -1;
    }

    if (formula.charAt(idx) === "+") {
      idx++;
    }

    return 1;
  }

  function readNumber() {
    var start = idx;
    var value = 0;

    while (idx < formula.length && formula.charCodeAt(idx) >= ZERO && formula.charCodeAt(idx) <= NINE) {
      value = value * 10 + (formula.charCodeAt(idx) - ZERO);
      idx++;
    } // Return `null` if we didn't read anything.


    return idx === start ? null : value;
  }

  function skipWhitespace() {
    while (idx < formula.length && whitespace.has(formula.charCodeAt(idx))) {
      idx++;
    }
  }
}

exports.parse = parse;

/***/ }),

/***/ 1725:
/***/ (function(module) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

/* eslint-disable no-unused-vars */

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }

  return Object(val);
}

function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    } // Detect buggy property enumeration order in older V8 versions.
    // https://bugs.chromium.org/p/v8/issues/detail?id=4118


    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

    test1[5] = 'de';

    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test2 = {};

    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }

    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });

    if (order2.join('') !== '0123456789') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });

    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }

    return true;
  } catch (err) {
    // We don't expect any of the above to throw, but better to be safe.
    return false;
  }
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject(target);
  var symbols;

  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }

    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);

      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }

  return to;
};

/***/ }),

/***/ 4802:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _require = __webpack_require__(9539),
    DOCUMENT_MODE = _require.DOCUMENT_MODE; //Const


var VALID_DOCTYPE_NAME = 'html';
var VALID_SYSTEM_ID = 'about:legacy-compat';
var QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';
var QUIRKS_MODE_PUBLIC_ID_PREFIXES = ['+//silmaril//dtd html pro v0r11 19970101//', '-//as//dtd html 3.0 aswedit + extensions//', '-//advasoft ltd//dtd html 3.0 aswedit + extensions//', '-//ietf//dtd html 2.0 level 1//', '-//ietf//dtd html 2.0 level 2//', '-//ietf//dtd html 2.0 strict level 1//', '-//ietf//dtd html 2.0 strict level 2//', '-//ietf//dtd html 2.0 strict//', '-//ietf//dtd html 2.0//', '-//ietf//dtd html 2.1e//', '-//ietf//dtd html 3.0//', '-//ietf//dtd html 3.2 final//', '-//ietf//dtd html 3.2//', '-//ietf//dtd html 3//', '-//ietf//dtd html level 0//', '-//ietf//dtd html level 1//', '-//ietf//dtd html level 2//', '-//ietf//dtd html level 3//', '-//ietf//dtd html strict level 0//', '-//ietf//dtd html strict level 1//', '-//ietf//dtd html strict level 2//', '-//ietf//dtd html strict level 3//', '-//ietf//dtd html strict//', '-//ietf//dtd html//', '-//metrius//dtd metrius presentational//', '-//microsoft//dtd internet explorer 2.0 html strict//', '-//microsoft//dtd internet explorer 2.0 html//', '-//microsoft//dtd internet explorer 2.0 tables//', '-//microsoft//dtd internet explorer 3.0 html strict//', '-//microsoft//dtd internet explorer 3.0 html//', '-//microsoft//dtd internet explorer 3.0 tables//', '-//netscape comm. corp.//dtd html//', '-//netscape comm. corp.//dtd strict html//', "-//o'reilly and associates//dtd html 2.0//", "-//o'reilly and associates//dtd html extended 1.0//", "-//o'reilly and associates//dtd html extended relaxed 1.0//", '-//sq//dtd html 2.0 hotmetal + extensions//', '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//', '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//', '-//spyglass//dtd html 2.0 extended//', '-//sun microsystems corp.//dtd hotjava html//', '-//sun microsystems corp.//dtd hotjava strict html//', '-//w3c//dtd html 3 1995-03-24//', '-//w3c//dtd html 3.2 draft//', '-//w3c//dtd html 3.2 final//', '-//w3c//dtd html 3.2//', '-//w3c//dtd html 3.2s draft//', '-//w3c//dtd html 4.0 frameset//', '-//w3c//dtd html 4.0 transitional//', '-//w3c//dtd html experimental 19960712//', '-//w3c//dtd html experimental 970421//', '-//w3c//dtd w3 html//', '-//w3o//dtd w3 html 3.0//', '-//webtechs//dtd mozilla html 2.0//', '-//webtechs//dtd mozilla html//'];
var QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = QUIRKS_MODE_PUBLIC_ID_PREFIXES.concat(['-//w3c//dtd html 4.01 frameset//', '-//w3c//dtd html 4.01 transitional//']);
var QUIRKS_MODE_PUBLIC_IDS = ['-//w3o//dtd w3 html strict 3.0//en//', '-/w3c/dtd html 4.0 transitional/en', 'html'];
var LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];
var LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = LIMITED_QUIRKS_PUBLIC_ID_PREFIXES.concat(['-//w3c//dtd html 4.01 frameset//', '-//w3c//dtd html 4.01 transitional//']); //Utils

function enquoteDoctypeId(id) {
  var quote = id.indexOf('"') !== -1 ? "'" : '"';
  return quote + id + quote;
}

function hasPrefix(publicId, prefixes) {
  for (var i = 0; i < prefixes.length; i++) {
    if (publicId.indexOf(prefixes[i]) === 0) {
      return true;
    }
  }

  return false;
} //API


exports.isConforming = function (token) {
  return token.name === VALID_DOCTYPE_NAME && token.publicId === null && (token.systemId === null || token.systemId === VALID_SYSTEM_ID);
};

exports.getDocumentMode = function (token) {
  if (token.name !== VALID_DOCTYPE_NAME) {
    return DOCUMENT_MODE.QUIRKS;
  }

  var systemId = token.systemId;

  if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {
    return DOCUMENT_MODE.QUIRKS;
  }

  var publicId = token.publicId;

  if (publicId !== null) {
    publicId = publicId.toLowerCase();

    if (QUIRKS_MODE_PUBLIC_IDS.indexOf(publicId) > -1) {
      return DOCUMENT_MODE.QUIRKS;
    }

    var prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;

    if (hasPrefix(publicId, prefixes)) {
      return DOCUMENT_MODE.QUIRKS;
    }

    prefixes = systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;

    if (hasPrefix(publicId, prefixes)) {
      return DOCUMENT_MODE.LIMITED_QUIRKS;
    }
  }

  return DOCUMENT_MODE.NO_QUIRKS;
};

exports.serializeContent = function (name, publicId, systemId) {
  var str = '!DOCTYPE ';

  if (name) {
    str += name;
  }

  if (publicId) {
    str += ' PUBLIC ' + enquoteDoctypeId(publicId);
  } else if (systemId) {
    str += ' SYSTEM';
  }

  if (systemId !== null) {
    str += ' ' + enquoteDoctypeId(systemId);
  }

  return str;
};

/***/ }),

/***/ 4551:
/***/ (function(module) {

"use strict";


module.exports = {
  controlCharacterInInputStream: 'control-character-in-input-stream',
  noncharacterInInputStream: 'noncharacter-in-input-stream',
  surrogateInInputStream: 'surrogate-in-input-stream',
  nonVoidHtmlElementStartTagWithTrailingSolidus: 'non-void-html-element-start-tag-with-trailing-solidus',
  endTagWithAttributes: 'end-tag-with-attributes',
  endTagWithTrailingSolidus: 'end-tag-with-trailing-solidus',
  unexpectedSolidusInTag: 'unexpected-solidus-in-tag',
  unexpectedNullCharacter: 'unexpected-null-character',
  unexpectedQuestionMarkInsteadOfTagName: 'unexpected-question-mark-instead-of-tag-name',
  invalidFirstCharacterOfTagName: 'invalid-first-character-of-tag-name',
  unexpectedEqualsSignBeforeAttributeName: 'unexpected-equals-sign-before-attribute-name',
  missingEndTagName: 'missing-end-tag-name',
  unexpectedCharacterInAttributeName: 'unexpected-character-in-attribute-name',
  unknownNamedCharacterReference: 'unknown-named-character-reference',
  missingSemicolonAfterCharacterReference: 'missing-semicolon-after-character-reference',
  unexpectedCharacterAfterDoctypeSystemIdentifier: 'unexpected-character-after-doctype-system-identifier',
  unexpectedCharacterInUnquotedAttributeValue: 'unexpected-character-in-unquoted-attribute-value',
  eofBeforeTagName: 'eof-before-tag-name',
  eofInTag: 'eof-in-tag',
  missingAttributeValue: 'missing-attribute-value',
  missingWhitespaceBetweenAttributes: 'missing-whitespace-between-attributes',
  missingWhitespaceAfterDoctypePublicKeyword: 'missing-whitespace-after-doctype-public-keyword',
  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: 'missing-whitespace-between-doctype-public-and-system-identifiers',
  missingWhitespaceAfterDoctypeSystemKeyword: 'missing-whitespace-after-doctype-system-keyword',
  missingQuoteBeforeDoctypePublicIdentifier: 'missing-quote-before-doctype-public-identifier',
  missingQuoteBeforeDoctypeSystemIdentifier: 'missing-quote-before-doctype-system-identifier',
  missingDoctypePublicIdentifier: 'missing-doctype-public-identifier',
  missingDoctypeSystemIdentifier: 'missing-doctype-system-identifier',
  abruptDoctypePublicIdentifier: 'abrupt-doctype-public-identifier',
  abruptDoctypeSystemIdentifier: 'abrupt-doctype-system-identifier',
  cdataInHtmlContent: 'cdata-in-html-content',
  incorrectlyOpenedComment: 'incorrectly-opened-comment',
  eofInScriptHtmlCommentLikeText: 'eof-in-script-html-comment-like-text',
  eofInDoctype: 'eof-in-doctype',
  nestedComment: 'nested-comment',
  abruptClosingOfEmptyComment: 'abrupt-closing-of-empty-comment',
  eofInComment: 'eof-in-comment',
  incorrectlyClosedComment: 'incorrectly-closed-comment',
  eofInCdata: 'eof-in-cdata',
  absenceOfDigitsInNumericCharacterReference: 'absence-of-digits-in-numeric-character-reference',
  nullCharacterReference: 'null-character-reference',
  surrogateCharacterReference: 'surrogate-character-reference',
  characterReferenceOutsideUnicodeRange: 'character-reference-outside-unicode-range',
  controlCharacterReference: 'control-character-reference',
  noncharacterCharacterReference: 'noncharacter-character-reference',
  missingWhitespaceBeforeDoctypeName: 'missing-whitespace-before-doctype-name',
  missingDoctypeName: 'missing-doctype-name',
  invalidCharacterSequenceAfterDoctypeName: 'invalid-character-sequence-after-doctype-name',
  duplicateAttribute: 'duplicate-attribute',
  nonConformingDoctype: 'non-conforming-doctype',
  missingDoctype: 'missing-doctype',
  misplacedDoctype: 'misplaced-doctype',
  endTagWithoutMatchingOpenElement: 'end-tag-without-matching-open-element',
  closingOfElementWithOpenChildElements: 'closing-of-element-with-open-child-elements',
  disallowedContentInNoscriptInHead: 'disallowed-content-in-noscript-in-head',
  openElementsLeftAfterEof: 'open-elements-left-after-eof',
  abandonedHeadElementChild: 'abandoned-head-element-child',
  misplacedStartTagForHeadElement: 'misplaced-start-tag-for-head-element',
  nestedNoscriptInHead: 'nested-noscript-in-head',
  eofInElementThatCanContainOnlyText: 'eof-in-element-that-can-contain-only-text'
};

/***/ }),

/***/ 5478:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _defineProperty = (__webpack_require__(9713)["default"]);

var _EXITS_FOREIGN_CONTEN;

var Tokenizer = __webpack_require__(3085);

var HTML = __webpack_require__(9539); //Aliases


var $ = HTML.TAG_NAMES;
var NS = HTML.NAMESPACES;
var ATTRS = HTML.ATTRS; //MIME types

var MIME_TYPES = {
  TEXT_HTML: 'text/html',
  APPLICATION_XML: 'application/xhtml+xml'
}; //Attributes

var DEFINITION_URL_ATTR = 'definitionurl';
var ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';
var SVG_ATTRS_ADJUSTMENT_MAP = {
  attributename: 'attributeName',
  attributetype: 'attributeType',
  basefrequency: 'baseFrequency',
  baseprofile: 'baseProfile',
  calcmode: 'calcMode',
  clippathunits: 'clipPathUnits',
  diffuseconstant: 'diffuseConstant',
  edgemode: 'edgeMode',
  filterunits: 'filterUnits',
  glyphref: 'glyphRef',
  gradienttransform: 'gradientTransform',
  gradientunits: 'gradientUnits',
  kernelmatrix: 'kernelMatrix',
  kernelunitlength: 'kernelUnitLength',
  keypoints: 'keyPoints',
  keysplines: 'keySplines',
  keytimes: 'keyTimes',
  lengthadjust: 'lengthAdjust',
  limitingconeangle: 'limitingConeAngle',
  markerheight: 'markerHeight',
  markerunits: 'markerUnits',
  markerwidth: 'markerWidth',
  maskcontentunits: 'maskContentUnits',
  maskunits: 'maskUnits',
  numoctaves: 'numOctaves',
  pathlength: 'pathLength',
  patterncontentunits: 'patternContentUnits',
  patterntransform: 'patternTransform',
  patternunits: 'patternUnits',
  pointsatx: 'pointsAtX',
  pointsaty: 'pointsAtY',
  pointsatz: 'pointsAtZ',
  preservealpha: 'preserveAlpha',
  preserveaspectratio: 'preserveAspectRatio',
  primitiveunits: 'primitiveUnits',
  refx: 'refX',
  refy: 'refY',
  repeatcount: 'repeatCount',
  repeatdur: 'repeatDur',
  requiredextensions: 'requiredExtensions',
  requiredfeatures: 'requiredFeatures',
  specularconstant: 'specularConstant',
  specularexponent: 'specularExponent',
  spreadmethod: 'spreadMethod',
  startoffset: 'startOffset',
  stddeviation: 'stdDeviation',
  stitchtiles: 'stitchTiles',
  surfacescale: 'surfaceScale',
  systemlanguage: 'systemLanguage',
  tablevalues: 'tableValues',
  targetx: 'targetX',
  targety: 'targetY',
  textlength: 'textLength',
  viewbox: 'viewBox',
  viewtarget: 'viewTarget',
  xchannelselector: 'xChannelSelector',
  ychannelselector: 'yChannelSelector',
  zoomandpan: 'zoomAndPan'
};
var XML_ATTRS_ADJUSTMENT_MAP = {
  'xlink:actuate': {
    prefix: 'xlink',
    name: 'actuate',
    namespace: NS.XLINK
  },
  'xlink:arcrole': {
    prefix: 'xlink',
    name: 'arcrole',
    namespace: NS.XLINK
  },
  'xlink:href': {
    prefix: 'xlink',
    name: 'href',
    namespace: NS.XLINK
  },
  'xlink:role': {
    prefix: 'xlink',
    name: 'role',
    namespace: NS.XLINK
  },
  'xlink:show': {
    prefix: 'xlink',
    name: 'show',
    namespace: NS.XLINK
  },
  'xlink:title': {
    prefix: 'xlink',
    name: 'title',
    namespace: NS.XLINK
  },
  'xlink:type': {
    prefix: 'xlink',
    name: 'type',
    namespace: NS.XLINK
  },
  'xml:base': {
    prefix: 'xml',
    name: 'base',
    namespace: NS.XML
  },
  'xml:lang': {
    prefix: 'xml',
    name: 'lang',
    namespace: NS.XML
  },
  'xml:space': {
    prefix: 'xml',
    name: 'space',
    namespace: NS.XML
  },
  xmlns: {
    prefix: '',
    name: 'xmlns',
    namespace: NS.XMLNS
  },
  'xmlns:xlink': {
    prefix: 'xmlns',
    name: 'xlink',
    namespace: NS.XMLNS
  }
}; //SVG tag names adjustment map

var SVG_TAG_NAMES_ADJUSTMENT_MAP = exports.SVG_TAG_NAMES_ADJUSTMENT_MAP = {
  altglyph: 'altGlyph',
  altglyphdef: 'altGlyphDef',
  altglyphitem: 'altGlyphItem',
  animatecolor: 'animateColor',
  animatemotion: 'animateMotion',
  animatetransform: 'animateTransform',
  clippath: 'clipPath',
  feblend: 'feBlend',
  fecolormatrix: 'feColorMatrix',
  fecomponenttransfer: 'feComponentTransfer',
  fecomposite: 'feComposite',
  feconvolvematrix: 'feConvolveMatrix',
  fediffuselighting: 'feDiffuseLighting',
  fedisplacementmap: 'feDisplacementMap',
  fedistantlight: 'feDistantLight',
  feflood: 'feFlood',
  fefunca: 'feFuncA',
  fefuncb: 'feFuncB',
  fefuncg: 'feFuncG',
  fefuncr: 'feFuncR',
  fegaussianblur: 'feGaussianBlur',
  feimage: 'feImage',
  femerge: 'feMerge',
  femergenode: 'feMergeNode',
  femorphology: 'feMorphology',
  feoffset: 'feOffset',
  fepointlight: 'fePointLight',
  fespecularlighting: 'feSpecularLighting',
  fespotlight: 'feSpotLight',
  fetile: 'feTile',
  feturbulence: 'feTurbulence',
  foreignobject: 'foreignObject',
  glyphref: 'glyphRef',
  lineargradient: 'linearGradient',
  radialgradient: 'radialGradient',
  textpath: 'textPath'
}; //Tags that causes exit from foreign content

var EXITS_FOREIGN_CONTENT = (_EXITS_FOREIGN_CONTEN = {}, _defineProperty(_EXITS_FOREIGN_CONTEN, $.B, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.BIG, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.BLOCKQUOTE, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.BODY, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.BR, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.CENTER, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.CODE, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.DD, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.DIV, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.DL, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.DT, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.EM, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.EMBED, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.H1, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.H2, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.H3, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.H4, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.H5, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.H6, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.HEAD, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.HR, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.I, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.IMG, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.LI, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.LISTING, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.MENU, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.META, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.NOBR, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.OL, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.P, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.PRE, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.RUBY, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.S, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.SMALL, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.SPAN, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.STRONG, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.STRIKE, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.SUB, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.SUP, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.TABLE, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.TT, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.U, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.UL, true), _defineProperty(_EXITS_FOREIGN_CONTEN, $.VAR, true), _EXITS_FOREIGN_CONTEN); //Check exit from foreign content

exports.causesExit = function (startTagToken) {
  var tn = startTagToken.tagName;
  var isFontWithAttrs = tn === $.FONT && (Tokenizer.getTokenAttr(startTagToken, ATTRS.COLOR) !== null || Tokenizer.getTokenAttr(startTagToken, ATTRS.SIZE) !== null || Tokenizer.getTokenAttr(startTagToken, ATTRS.FACE) !== null);
  return isFontWithAttrs ? true : EXITS_FOREIGN_CONTENT[tn];
}; //Token adjustments


exports.adjustTokenMathMLAttrs = function (token) {
  for (var i = 0; i < token.attrs.length; i++) {
    if (token.attrs[i].name === DEFINITION_URL_ATTR) {
      token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;
      break;
    }
  }
};

exports.adjustTokenSVGAttrs = function (token) {
  for (var i = 0; i < token.attrs.length; i++) {
    var adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];

    if (adjustedAttrName) {
      token.attrs[i].name = adjustedAttrName;
    }
  }
};

exports.adjustTokenXMLAttrs = function (token) {
  for (var i = 0; i < token.attrs.length; i++) {
    var adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];

    if (adjustedAttrEntry) {
      token.attrs[i].prefix = adjustedAttrEntry.prefix;
      token.attrs[i].name = adjustedAttrEntry.name;
      token.attrs[i].namespace = adjustedAttrEntry.namespace;
    }
  }
};

exports.adjustTokenSVGTagName = function (token) {
  var adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP[token.tagName];

  if (adjustedTagName) {
    token.tagName = adjustedTagName;
  }
}; //Integration points


function isMathMLTextIntegrationPoint(tn, ns) {
  return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);
}

function isHtmlIntegrationPoint(tn, ns, attrs) {
  if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {
    for (var i = 0; i < attrs.length; i++) {
      if (attrs[i].name === ATTRS.ENCODING) {
        var value = attrs[i].value.toLowerCase();
        return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;
      }
    }
  }

  return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);
}

exports.isIntegrationPoint = function (tn, ns, attrs, foreignNS) {
  if ((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) {
    return true;
  }

  if ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)) {
    return true;
  }

  return false;
};

/***/ }),

/***/ 9539:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _defineProperty = (__webpack_require__(9713)["default"]);

var _NS$HTML, _NS$MATHML, _NS$SVG, _exports$SPECIAL_ELEM;

var NS = exports.NAMESPACES = {
  HTML: 'http://www.w3.org/1999/xhtml',
  MATHML: 'http://www.w3.org/1998/Math/MathML',
  SVG: 'http://www.w3.org/2000/svg',
  XLINK: 'http://www.w3.org/1999/xlink',
  XML: 'http://www.w3.org/XML/1998/namespace',
  XMLNS: 'http://www.w3.org/2000/xmlns/'
};
exports.ATTRS = {
  TYPE: 'type',
  ACTION: 'action',
  ENCODING: 'encoding',
  PROMPT: 'prompt',
  NAME: 'name',
  COLOR: 'color',
  FACE: 'face',
  SIZE: 'size'
};
exports.DOCUMENT_MODE = {
  NO_QUIRKS: 'no-quirks',
  QUIRKS: 'quirks',
  LIMITED_QUIRKS: 'limited-quirks'
};
var $ = exports.TAG_NAMES = {
  A: 'a',
  ADDRESS: 'address',
  ANNOTATION_XML: 'annotation-xml',
  APPLET: 'applet',
  AREA: 'area',
  ARTICLE: 'article',
  ASIDE: 'aside',
  B: 'b',
  BASE: 'base',
  BASEFONT: 'basefont',
  BGSOUND: 'bgsound',
  BIG: 'big',
  BLOCKQUOTE: 'blockquote',
  BODY: 'body',
  BR: 'br',
  BUTTON: 'button',
  CAPTION: 'caption',
  CENTER: 'center',
  CODE: 'code',
  COL: 'col',
  COLGROUP: 'colgroup',
  DD: 'dd',
  DESC: 'desc',
  DETAILS: 'details',
  DIALOG: 'dialog',
  DIR: 'dir',
  DIV: 'div',
  DL: 'dl',
  DT: 'dt',
  EM: 'em',
  EMBED: 'embed',
  FIELDSET: 'fieldset',
  FIGCAPTION: 'figcaption',
  FIGURE: 'figure',
  FONT: 'font',
  FOOTER: 'footer',
  FOREIGN_OBJECT: 'foreignObject',
  FORM: 'form',
  FRAME: 'frame',
  FRAMESET: 'frameset',
  H1: 'h1',
  H2: 'h2',
  H3: 'h3',
  H4: 'h4',
  H5: 'h5',
  H6: 'h6',
  HEAD: 'head',
  HEADER: 'header',
  HGROUP: 'hgroup',
  HR: 'hr',
  HTML: 'html',
  I: 'i',
  IMG: 'img',
  IMAGE: 'image',
  INPUT: 'input',
  IFRAME: 'iframe',
  KEYGEN: 'keygen',
  LABEL: 'label',
  LI: 'li',
  LINK: 'link',
  LISTING: 'listing',
  MAIN: 'main',
  MALIGNMARK: 'malignmark',
  MARQUEE: 'marquee',
  MATH: 'math',
  MENU: 'menu',
  META: 'meta',
  MGLYPH: 'mglyph',
  MI: 'mi',
  MO: 'mo',
  MN: 'mn',
  MS: 'ms',
  MTEXT: 'mtext',
  NAV: 'nav',
  NOBR: 'nobr',
  NOFRAMES: 'noframes',
  NOEMBED: 'noembed',
  NOSCRIPT: 'noscript',
  OBJECT: 'object',
  OL: 'ol',
  OPTGROUP: 'optgroup',
  OPTION: 'option',
  P: 'p',
  PARAM: 'param',
  PLAINTEXT: 'plaintext',
  PRE: 'pre',
  RB: 'rb',
  RP: 'rp',
  RT: 'rt',
  RTC: 'rtc',
  RUBY: 'ruby',
  S: 's',
  SCRIPT: 'script',
  SECTION: 'section',
  SELECT: 'select',
  SOURCE: 'source',
  SMALL: 'small',
  SPAN: 'span',
  STRIKE: 'strike',
  STRONG: 'strong',
  STYLE: 'style',
  SUB: 'sub',
  SUMMARY: 'summary',
  SUP: 'sup',
  TABLE: 'table',
  TBODY: 'tbody',
  TEMPLATE: 'template',
  TEXTAREA: 'textarea',
  TFOOT: 'tfoot',
  TD: 'td',
  TH: 'th',
  THEAD: 'thead',
  TITLE: 'title',
  TR: 'tr',
  TRACK: 'track',
  TT: 'tt',
  U: 'u',
  UL: 'ul',
  SVG: 'svg',
  VAR: 'var',
  WBR: 'wbr',
  XMP: 'xmp'
};
exports.SPECIAL_ELEMENTS = (_exports$SPECIAL_ELEM = {}, _defineProperty(_exports$SPECIAL_ELEM, NS.HTML, (_NS$HTML = {}, _defineProperty(_NS$HTML, $.ADDRESS, true), _defineProperty(_NS$HTML, $.APPLET, true), _defineProperty(_NS$HTML, $.AREA, true), _defineProperty(_NS$HTML, $.ARTICLE, true), _defineProperty(_NS$HTML, $.ASIDE, true), _defineProperty(_NS$HTML, $.BASE, true), _defineProperty(_NS$HTML, $.BASEFONT, true), _defineProperty(_NS$HTML, $.BGSOUND, true), _defineProperty(_NS$HTML, $.BLOCKQUOTE, true), _defineProperty(_NS$HTML, $.BODY, true), _defineProperty(_NS$HTML, $.BR, true), _defineProperty(_NS$HTML, $.BUTTON, true), _defineProperty(_NS$HTML, $.CAPTION, true), _defineProperty(_NS$HTML, $.CENTER, true), _defineProperty(_NS$HTML, $.COL, true), _defineProperty(_NS$HTML, $.COLGROUP, true), _defineProperty(_NS$HTML, $.DD, true), _defineProperty(_NS$HTML, $.DETAILS, true), _defineProperty(_NS$HTML, $.DIR, true), _defineProperty(_NS$HTML, $.DIV, true), _defineProperty(_NS$HTML, $.DL, true), _defineProperty(_NS$HTML, $.DT, true), _defineProperty(_NS$HTML, $.EMBED, true), _defineProperty(_NS$HTML, $.FIELDSET, true), _defineProperty(_NS$HTML, $.FIGCAPTION, true), _defineProperty(_NS$HTML, $.FIGURE, true), _defineProperty(_NS$HTML, $.FOOTER, true), _defineProperty(_NS$HTML, $.FORM, true), _defineProperty(_NS$HTML, $.FRAME, true), _defineProperty(_NS$HTML, $.FRAMESET, true), _defineProperty(_NS$HTML, $.H1, true), _defineProperty(_NS$HTML, $.H2, true), _defineProperty(_NS$HTML, $.H3, true), _defineProperty(_NS$HTML, $.H4, true), _defineProperty(_NS$HTML, $.H5, true), _defineProperty(_NS$HTML, $.H6, true), _defineProperty(_NS$HTML, $.HEAD, true), _defineProperty(_NS$HTML, $.HEADER, true), _defineProperty(_NS$HTML, $.HGROUP, true), _defineProperty(_NS$HTML, $.HR, true), _defineProperty(_NS$HTML, $.HTML, true), _defineProperty(_NS$HTML, $.IFRAME, true), _defineProperty(_NS$HTML, $.IMG, true), _defineProperty(_NS$HTML, $.INPUT, true), _defineProperty(_NS$HTML, $.LI, true), _defineProperty(_NS$HTML, $.LINK, true), _defineProperty(_NS$HTML, $.LISTING, true), _defineProperty(_NS$HTML, $.MAIN, true), _defineProperty(_NS$HTML, $.MARQUEE, true), _defineProperty(_NS$HTML, $.MENU, true), _defineProperty(_NS$HTML, $.META, true), _defineProperty(_NS$HTML, $.NAV, true), _defineProperty(_NS$HTML, $.NOEMBED, true), _defineProperty(_NS$HTML, $.NOFRAMES, true), _defineProperty(_NS$HTML, $.NOSCRIPT, true), _defineProperty(_NS$HTML, $.OBJECT, true), _defineProperty(_NS$HTML, $.OL, true), _defineProperty(_NS$HTML, $.P, true), _defineProperty(_NS$HTML, $.PARAM, true), _defineProperty(_NS$HTML, $.PLAINTEXT, true), _defineProperty(_NS$HTML, $.PRE, true), _defineProperty(_NS$HTML, $.SCRIPT, true), _defineProperty(_NS$HTML, $.SECTION, true), _defineProperty(_NS$HTML, $.SELECT, true), _defineProperty(_NS$HTML, $.SOURCE, true), _defineProperty(_NS$HTML, $.STYLE, true), _defineProperty(_NS$HTML, $.SUMMARY, true), _defineProperty(_NS$HTML, $.TABLE, true), _defineProperty(_NS$HTML, $.TBODY, true), _defineProperty(_NS$HTML, $.TD, true), _defineProperty(_NS$HTML, $.TEMPLATE, true), _defineProperty(_NS$HTML, $.TEXTAREA, true), _defineProperty(_NS$HTML, $.TFOOT, true), _defineProperty(_NS$HTML, $.TH, true), _defineProperty(_NS$HTML, $.THEAD, true), _defineProperty(_NS$HTML, $.TITLE, true), _defineProperty(_NS$HTML, $.TR, true), _defineProperty(_NS$HTML, $.TRACK, true), _defineProperty(_NS$HTML, $.UL, true), _defineProperty(_NS$HTML, $.WBR, true), _defineProperty(_NS$HTML, $.XMP, true), _NS$HTML)), _defineProperty(_exports$SPECIAL_ELEM, NS.MATHML, (_NS$MATHML = {}, _defineProperty(_NS$MATHML, $.MI, true), _defineProperty(_NS$MATHML, $.MO, true), _defineProperty(_NS$MATHML, $.MN, true), _defineProperty(_NS$MATHML, $.MS, true), _defineProperty(_NS$MATHML, $.MTEXT, true), _defineProperty(_NS$MATHML, $.ANNOTATION_XML, true), _NS$MATHML)), _defineProperty(_exports$SPECIAL_ELEM, NS.SVG, (_NS$SVG = {}, _defineProperty(_NS$SVG, $.TITLE, true), _defineProperty(_NS$SVG, $.FOREIGN_OBJECT, true), _defineProperty(_NS$SVG, $.DESC, true), _NS$SVG)), _exports$SPECIAL_ELEM);

/***/ }),

/***/ 4529:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var UNDEFINED_CODE_POINTS = [0xfffe, 0xffff, 0x1fffe, 0x1ffff, 0x2fffe, 0x2ffff, 0x3fffe, 0x3ffff, 0x4fffe, 0x4ffff, 0x5fffe, 0x5ffff, 0x6fffe, 0x6ffff, 0x7fffe, 0x7ffff, 0x8fffe, 0x8ffff, 0x9fffe, 0x9ffff, 0xafffe, 0xaffff, 0xbfffe, 0xbffff, 0xcfffe, 0xcffff, 0xdfffe, 0xdffff, 0xefffe, 0xeffff, 0xffffe, 0xfffff, 0x10fffe, 0x10ffff];
exports.REPLACEMENT_CHARACTER = "\uFFFD";
exports.CODE_POINTS = {
  EOF: -1,
  NULL: 0x00,
  TABULATION: 0x09,
  CARRIAGE_RETURN: 0x0d,
  LINE_FEED: 0x0a,
  FORM_FEED: 0x0c,
  SPACE: 0x20,
  EXCLAMATION_MARK: 0x21,
  QUOTATION_MARK: 0x22,
  NUMBER_SIGN: 0x23,
  AMPERSAND: 0x26,
  APOSTROPHE: 0x27,
  HYPHEN_MINUS: 0x2d,
  SOLIDUS: 0x2f,
  DIGIT_0: 0x30,
  DIGIT_9: 0x39,
  SEMICOLON: 0x3b,
  LESS_THAN_SIGN: 0x3c,
  EQUALS_SIGN: 0x3d,
  GREATER_THAN_SIGN: 0x3e,
  QUESTION_MARK: 0x3f,
  LATIN_CAPITAL_A: 0x41,
  LATIN_CAPITAL_F: 0x46,
  LATIN_CAPITAL_X: 0x58,
  LATIN_CAPITAL_Z: 0x5a,
  RIGHT_SQUARE_BRACKET: 0x5d,
  GRAVE_ACCENT: 0x60,
  LATIN_SMALL_A: 0x61,
  LATIN_SMALL_F: 0x66,
  LATIN_SMALL_X: 0x78,
  LATIN_SMALL_Z: 0x7a,
  REPLACEMENT_CHARACTER: 0xfffd
};
exports.CODE_POINT_SEQUENCES = {
  DASH_DASH_STRING: [0x2d, 0x2d],
  //--
  DOCTYPE_STRING: [0x44, 0x4f, 0x43, 0x54, 0x59, 0x50, 0x45],
  //DOCTYPE
  CDATA_START_STRING: [0x5b, 0x43, 0x44, 0x41, 0x54, 0x41, 0x5b],
  //[CDATA[
  SCRIPT_STRING: [0x73, 0x63, 0x72, 0x69, 0x70, 0x74],
  //script
  PUBLIC_STRING: [0x50, 0x55, 0x42, 0x4c, 0x49, 0x43],
  //PUBLIC
  SYSTEM_STRING: [0x53, 0x59, 0x53, 0x54, 0x45, 0x4d] //SYSTEM

}; //Surrogates

exports.isSurrogate = function (cp) {
  return cp >= 0xd800 && cp <= 0xdfff;
};

exports.isSurrogatePair = function (cp) {
  return cp >= 0xdc00 && cp <= 0xdfff;
};

exports.getSurrogatePairCodePoint = function (cp1, cp2) {
  return (cp1 - 0xd800) * 0x400 + 0x2400 + cp2;
}; //NOTE: excluding NULL and ASCII whitespace


exports.isControlCodePoint = function (cp) {
  return cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f || cp >= 0x7f && cp <= 0x9f;
};

exports.isUndefinedCodePoint = function (cp) {
  return cp >= 0xfdd0 && cp <= 0xfdef || UNDEFINED_CODE_POINTS.indexOf(cp) > -1;
};

/***/ }),

/***/ 6915:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var _classCallCheck = (__webpack_require__(4575)["default"]);

var _createClass = (__webpack_require__(3913)["default"]);

var _inherits = (__webpack_require__(2205)["default"]);

var _createSuper = (__webpack_require__(9842)["default"]);

var Mixin = __webpack_require__(1458);

var ErrorReportingMixinBase = /*#__PURE__*/function (_Mixin) {
  _inherits(ErrorReportingMixinBase, _Mixin);

  var _super = _createSuper(ErrorReportingMixinBase);

  function ErrorReportingMixinBase(host, opts) {
    var _this;

    _classCallCheck(this, ErrorReportingMixinBase);

    _this = _super.call(this, host);
    _this.posTracker = null;
    _this.onParseError = opts.onParseError;
    return _this;
  }

  _createClass(ErrorReportingMixinBase, [{
    key: "_setErrorLocation",
    value: function _setErrorLocation(err) {
      err.startLine = err.endLine = this.posTracker.line;
      err.startCol = err.endCol = this.posTracker.col;
      err.startOffset = err.endOffset = this.posTracker.offset;
    }
  }, {
    key: "_reportError",
    value: function _reportError(code) {
      var err = {
        code: code,
        startLine: -1,
        startCol: -1,
        startOffset: -1,
        endLine: -1,
        endCol: -1,
        endOffset: -1
      };

      this._setErrorLocation(err);

      this.onParseError(err);
    }
  }, {
    key: "_getOverriddenMethods",
    value: function _getOverriddenMethods(mxn) {
      return {
        _err: function _err(code) {
          mxn._reportError(code);
        }
      };
    }
  }]);

  return ErrorReportingMixinBase;
}(Mixin);

module.exports = ErrorReportingMixinBase;

/***/ }),

/***/ 9839:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var _classCallCheck = (__webpack_require__(4575)["default"]);

var _createClass = (__webpack_require__(3913)["default"]);

var _inherits = (__webpack_require__(2205)["default"]);

var _createSuper = (__webpack_require__(9842)["default"]);

var ErrorReportingMixinBase = __webpack_require__(6915);

var ErrorReportingTokenizerMixin = __webpack_require__(5611);

var LocationInfoTokenizerMixin = __webpack_require__(2640);

var Mixin = __webpack_require__(1458);

var ErrorReportingParserMixin = /*#__PURE__*/function (_ErrorReportingMixinB) {
  _inherits(ErrorReportingParserMixin, _ErrorReportingMixinB);

  var _super = _createSuper(ErrorReportingParserMixin);

  function ErrorReportingParserMixin(parser, opts) {
    var _this;

    _classCallCheck(this, ErrorReportingParserMixin);

    _this = _super.call(this, parser, opts);
    _this.opts = opts;
    _this.ctLoc = null;
    _this.locBeforeToken = false;
    return _this;
  }

  _createClass(ErrorReportingParserMixin, [{
    key: "_setErrorLocation",
    value: function _setErrorLocation(err) {
      if (this.ctLoc) {
        err.startLine = this.ctLoc.startLine;
        err.startCol = this.ctLoc.startCol;
        err.startOffset = this.ctLoc.startOffset;
        err.endLine = this.locBeforeToken ? this.ctLoc.startLine : this.ctLoc.endLine;
        err.endCol = this.locBeforeToken ? this.ctLoc.startCol : this.ctLoc.endCol;
        err.endOffset = this.locBeforeToken ? this.ctLoc.startOffset : this.ctLoc.endOffset;
      }
    }
  }, {
    key: "_getOverriddenMethods",
    value: function _getOverriddenMethods(mxn, orig) {
      return {
        _bootstrap: function _bootstrap(document, fragmentContext) {
          orig._bootstrap.call(this, document, fragmentContext);

          Mixin.install(this.tokenizer, ErrorReportingTokenizerMixin, mxn.opts);
          Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);
        },
        _processInputToken: function _processInputToken(token) {
          mxn.ctLoc = token.location;

          orig._processInputToken.call(this, token);
        },
        _err: function _err(code, options) {
          mxn.locBeforeToken = options && options.beforeToken;

          mxn._reportError(code);
        }
      };
    }
  }]);

  return ErrorReportingParserMixin;
}(ErrorReportingMixinBase);

module.exports = ErrorReportingParserMixin;

/***/ }),

/***/ 2459:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var _classCallCheck = (__webpack_require__(4575)["default"]);

var _createClass = (__webpack_require__(3913)["default"]);

var _get = (__webpack_require__(6525)["default"]);

var _getPrototypeOf = (__webpack_require__(9754)["default"]);

var _inherits = (__webpack_require__(2205)["default"]);

var _createSuper = (__webpack_require__(9842)["default"]);

var ErrorReportingMixinBase = __webpack_require__(6915);

var PositionTrackingPreprocessorMixin = __webpack_require__(64);

var Mixin = __webpack_require__(1458);

var ErrorReportingPreprocessorMixin = /*#__PURE__*/function (_ErrorReportingMixinB) {
  _inherits(ErrorReportingPreprocessorMixin, _ErrorReportingMixinB);

  var _super = _createSuper(ErrorReportingPreprocessorMixin);

  function ErrorReportingPreprocessorMixin(preprocessor, opts) {
    var _this;

    _classCallCheck(this, ErrorReportingPreprocessorMixin);

    _this = _super.call(this, preprocessor, opts);
    _this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);
    _this.lastErrOffset = -1;
    return _this;
  }

  _createClass(ErrorReportingPreprocessorMixin, [{
    key: "_reportError",
    value: function _reportError(code) {
      //NOTE: avoid reporting error twice on advance/retreat
      if (this.lastErrOffset !== this.posTracker.offset) {
        this.lastErrOffset = this.posTracker.offset;

        _get(_getPrototypeOf(ErrorReportingPreprocessorMixin.prototype), "_reportError", this).call(this, code);
      }
    }
  }]);

  return ErrorReportingPreprocessorMixin;
}(ErrorReportingMixinBase);

module.exports = ErrorReportingPreprocessorMixin;

/***/ }),

/***/ 5611:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var _createClass = (__webpack_require__(3913)["default"]);

var _classCallCheck = (__webpack_require__(4575)["default"]);

var _inherits = (__webpack_require__(2205)["default"]);

var _createSuper = (__webpack_require__(9842)["default"]);

var ErrorReportingMixinBase = __webpack_require__(6915);

var ErrorReportingPreprocessorMixin = __webpack_require__(2459);

var Mixin = __webpack_require__(1458);

var ErrorReportingTokenizerMixin = /*#__PURE__*/function (_ErrorReportingMixinB) {
  _inherits(ErrorReportingTokenizerMixin, _ErrorReportingMixinB);

  var _super = _createSuper(ErrorReportingTokenizerMixin);

  function ErrorReportingTokenizerMixin(tokenizer, opts) {
    var _this;

    _classCallCheck(this, ErrorReportingTokenizerMixin);

    _this = _super.call(this, tokenizer, opts);
    var preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);
    _this.posTracker = preprocessorMixin.posTracker;
    return _this;
  }

  return _createClass(ErrorReportingTokenizerMixin);
}(ErrorReportingMixinBase);

module.exports = ErrorReportingTokenizerMixin;

/***/ }),

/***/ 4936:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var _classCallCheck = (__webpack_require__(4575)["default"]);

var _createClass = (__webpack_require__(3913)["default"]);

var _inherits = (__webpack_require__(2205)["default"]);

var _createSuper = (__webpack_require__(9842)["default"]);

var Mixin = __webpack_require__(1458);

var LocationInfoOpenElementStackMixin = /*#__PURE__*/function (_Mixin) {
  _inherits(LocationInfoOpenElementStackMixin, _Mixin);

  var _super = _createSuper(LocationInfoOpenElementStackMixin);

  function LocationInfoOpenElementStackMixin(stack, opts) {
    var _this;

    _classCallCheck(this, LocationInfoOpenElementStackMixin);

    _this = _super.call(this, stack);
    _this.onItemPop = opts.onItemPop;
    return _this;
  }

  _createClass(LocationInfoOpenElementStackMixin, [{
    key: "_getOverriddenMethods",
    value: function _getOverriddenMethods(mxn, orig) {
      return {
        pop: function pop() {
          mxn.onItemPop(this.current);
          orig.pop.call(this);
        },
        popAllUpToHtmlElement: function popAllUpToHtmlElement() {
          for (var i = this.stackTop; i > 0; i--) {
            mxn.onItemPop(this.items[i]);
          }

          orig.popAllUpToHtmlElement.call(this);
        },
        remove: function remove(element) {
          mxn.onItemPop(this.current);
          orig.remove.call(this, element);
        }
      };
    }
  }]);

  return LocationInfoOpenElementStackMixin;
}(Mixin);

module.exports = LocationInfoOpenElementStackMixin;

/***/ }),

/***/ 9037:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var _classCallCheck = (__webpack_require__(4575)["default"]);

var _createClass = (__webpack_require__(3913)["default"]);

var _inherits = (__webpack_require__(2205)["default"]);

var _createSuper = (__webpack_require__(9842)["default"]);

var Mixin = __webpack_require__(1458);

var Tokenizer = __webpack_require__(3085);

var LocationInfoTokenizerMixin = __webpack_require__(2640);

var LocationInfoOpenElementStackMixin = __webpack_require__(4936);

var HTML = __webpack_require__(9539); //Aliases


var $ = HTML.TAG_NAMES;

var LocationInfoParserMixin = /*#__PURE__*/function (_Mixin) {
  _inherits(LocationInfoParserMixin, _Mixin);

  var _super = _createSuper(LocationInfoParserMixin);

  function LocationInfoParserMixin(parser) {
    var _this;

    _classCallCheck(this, LocationInfoParserMixin);

    _this = _super.call(this, parser);
    _this.parser = parser;
    _this.treeAdapter = _this.parser.treeAdapter;
    _this.posTracker = null;
    _this.lastStartTagToken = null;
    _this.lastFosterParentingLocation = null;
    _this.currentToken = null;
    return _this;
  }

  _createClass(LocationInfoParserMixin, [{
    key: "_setStartLocation",
    value: function _setStartLocation(element) {
      var loc = null;

      if (this.lastStartTagToken) {
        loc = Object.assign({}, this.lastStartTagToken.location);
        loc.startTag = this.lastStartTagToken.location;
      }

      this.treeAdapter.setNodeSourceCodeLocation(element, loc);
    }
  }, {
    key: "_setEndLocation",
    value: function _setEndLocation(element, closingToken) {
      var loc = this.treeAdapter.getNodeSourceCodeLocation(element);

      if (loc) {
        if (closingToken.location) {
          var ctLoc = closingToken.location;
          var tn = this.treeAdapter.getTagName(element); // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing
          // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.

          var isClosingEndTag = closingToken.type === Tokenizer.END_TAG_TOKEN && tn === closingToken.tagName;
          var endLoc = {};

          if (isClosingEndTag) {
            endLoc.endTag = Object.assign({}, ctLoc);
            endLoc.endLine = ctLoc.endLine;
            endLoc.endCol = ctLoc.endCol;
            endLoc.endOffset = ctLoc.endOffset;
          } else {
            endLoc.endLine = ctLoc.startLine;
            endLoc.endCol = ctLoc.startCol;
            endLoc.endOffset = ctLoc.startOffset;
          }

          this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);
        }
      }
    }
  }, {
    key: "_getOverriddenMethods",
    value: function _getOverriddenMethods(mxn, orig) {
      return {
        _bootstrap: function _bootstrap(document, fragmentContext) {
          orig._bootstrap.call(this, document, fragmentContext);

          mxn.lastStartTagToken = null;
          mxn.lastFosterParentingLocation = null;
          mxn.currentToken = null;
          var tokenizerMixin = Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);
          mxn.posTracker = tokenizerMixin.posTracker;
          Mixin.install(this.openElements, LocationInfoOpenElementStackMixin, {
            onItemPop: function onItemPop(element) {
              mxn._setEndLocation(element, mxn.currentToken);
            }
          });
        },
        _runParsingLoop: function _runParsingLoop(scriptHandler) {
          orig._runParsingLoop.call(this, scriptHandler); // NOTE: generate location info for elements
          // that remains on open element stack


          for (var i = this.openElements.stackTop; i >= 0; i--) {
            mxn._setEndLocation(this.openElements.items[i], mxn.currentToken);
          }
        },
        //Token processing
        _processTokenInForeignContent: function _processTokenInForeignContent(token) {
          mxn.currentToken = token;

          orig._processTokenInForeignContent.call(this, token);
        },
        _processToken: function _processToken(token) {
          mxn.currentToken = token;

          orig._processToken.call(this, token); //NOTE: <body> and <html> are never popped from the stack, so we need to updated
          //their end location explicitly.


          var requireExplicitUpdate = token.type === Tokenizer.END_TAG_TOKEN && (token.tagName === $.HTML || token.tagName === $.BODY && this.openElements.hasInScope($.BODY));

          if (requireExplicitUpdate) {
            for (var i = this.openElements.stackTop; i >= 0; i--) {
              var element = this.openElements.items[i];

              if (this.treeAdapter.getTagName(element) === token.tagName) {
                mxn._setEndLocation(element, token);

                break;
              }
            }
          }
        },
        //Doctype
        _setDocumentType: function _setDocumentType(token) {
          orig._setDocumentType.call(this, token);

          var documentChildren = this.treeAdapter.getChildNodes(this.document);
          var cnLength = documentChildren.length;

          for (var i = 0; i < cnLength; i++) {
            var node = documentChildren[i];

            if (this.treeAdapter.isDocumentTypeNode(node)) {
              this.treeAdapter.setNodeSourceCodeLocation(node, token.location);
              break;
            }
          }
        },
        //Elements
        _attachElementToTree: function _attachElementToTree(element) {
          //NOTE: _attachElementToTree is called from _appendElement, _insertElement and _insertTemplate methods.
          //So we will use token location stored in this methods for the element.
          mxn._setStartLocation(element);

          mxn.lastStartTagToken = null;

          orig._attachElementToTree.call(this, element);
        },
        _appendElement: function _appendElement(token, namespaceURI) {
          mxn.lastStartTagToken = token;

          orig._appendElement.call(this, token, namespaceURI);
        },
        _insertElement: function _insertElement(token, namespaceURI) {
          mxn.lastStartTagToken = token;

          orig._insertElement.call(this, token, namespaceURI);
        },
        _insertTemplate: function _insertTemplate(token) {
          mxn.lastStartTagToken = token;

          orig._insertTemplate.call(this, token);

          var tmplContent = this.treeAdapter.getTemplateContent(this.openElements.current);
          this.treeAdapter.setNodeSourceCodeLocation(tmplContent, null);
        },
        _insertFakeRootElement: function _insertFakeRootElement() {
          orig._insertFakeRootElement.call(this);

          this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current, null);
        },
        //Comments
        _appendCommentNode: function _appendCommentNode(token, parent) {
          orig._appendCommentNode.call(this, token, parent);

          var children = this.treeAdapter.getChildNodes(parent);
          var commentNode = children[children.length - 1];
          this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);
        },
        //Text
        _findFosterParentingLocation: function _findFosterParentingLocation() {
          //NOTE: store last foster parenting location, so we will be able to find inserted text
          //in case of foster parenting
          mxn.lastFosterParentingLocation = orig._findFosterParentingLocation.call(this);
          return mxn.lastFosterParentingLocation;
        },
        _insertCharacters: function _insertCharacters(token) {
          orig._insertCharacters.call(this, token);

          var hasFosterParent = this._shouldFosterParentOnInsertion();

          var parent = hasFosterParent && mxn.lastFosterParentingLocation.parent || this.openElements.currentTmplContent || this.openElements.current;
          var siblings = this.treeAdapter.getChildNodes(parent);
          var textNodeIdx = hasFosterParent && mxn.lastFosterParentingLocation.beforeElement ? siblings.indexOf(mxn.lastFosterParentingLocation.beforeElement) - 1 : siblings.length - 1;
          var textNode = siblings[textNodeIdx]; //NOTE: if we have location assigned by another token, then just update end position

          var tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);

          if (tnLoc) {
            var _token$location = token.location,
                endLine = _token$location.endLine,
                endCol = _token$location.endCol,
                endOffset = _token$location.endOffset;
            this.treeAdapter.updateNodeSourceCodeLocation(textNode, {
              endLine: endLine,
              endCol: endCol,
              endOffset: endOffset
            });
          } else {
            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);
          }
        }
      };
    }
  }]);

  return LocationInfoParserMixin;
}(Mixin);

module.exports = LocationInfoParserMixin;

/***/ }),

/***/ 2640:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var _classCallCheck = (__webpack_require__(4575)["default"]);

var _createClass = (__webpack_require__(3913)["default"]);

var _inherits = (__webpack_require__(2205)["default"]);

var _createSuper = (__webpack_require__(9842)["default"]);

var Mixin = __webpack_require__(1458);

var Tokenizer = __webpack_require__(3085);

var PositionTrackingPreprocessorMixin = __webpack_require__(64);

var LocationInfoTokenizerMixin = /*#__PURE__*/function (_Mixin) {
  _inherits(LocationInfoTokenizerMixin, _Mixin);

  var _super = _createSuper(LocationInfoTokenizerMixin);

  function LocationInfoTokenizerMixin(tokenizer) {
    var _this;

    _classCallCheck(this, LocationInfoTokenizerMixin);

    _this = _super.call(this, tokenizer);
    _this.tokenizer = tokenizer;
    _this.posTracker = Mixin.install(tokenizer.preprocessor, PositionTrackingPreprocessorMixin);
    _this.currentAttrLocation = null;
    _this.ctLoc = null;
    return _this;
  }

  _createClass(LocationInfoTokenizerMixin, [{
    key: "_getCurrentLocation",
    value: function _getCurrentLocation() {
      return {
        startLine: this.posTracker.line,
        startCol: this.posTracker.col,
        startOffset: this.posTracker.offset,
        endLine: -1,
        endCol: -1,
        endOffset: -1
      };
    }
  }, {
    key: "_attachCurrentAttrLocationInfo",
    value: function _attachCurrentAttrLocationInfo() {
      this.currentAttrLocation.endLine = this.posTracker.line;
      this.currentAttrLocation.endCol = this.posTracker.col;
      this.currentAttrLocation.endOffset = this.posTracker.offset;
      var currentToken = this.tokenizer.currentToken;
      var currentAttr = this.tokenizer.currentAttr;

      if (!currentToken.location.attrs) {
        currentToken.location.attrs = Object.create(null);
      }

      currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;
    }
  }, {
    key: "_getOverriddenMethods",
    value: function _getOverriddenMethods(mxn, orig) {
      var methods = {
        _createStartTagToken: function _createStartTagToken() {
          orig._createStartTagToken.call(this);

          this.currentToken.location = mxn.ctLoc;
        },
        _createEndTagToken: function _createEndTagToken() {
          orig._createEndTagToken.call(this);

          this.currentToken.location = mxn.ctLoc;
        },
        _createCommentToken: function _createCommentToken() {
          orig._createCommentToken.call(this);

          this.currentToken.location = mxn.ctLoc;
        },
        _createDoctypeToken: function _createDoctypeToken(initialName) {
          orig._createDoctypeToken.call(this, initialName);

          this.currentToken.location = mxn.ctLoc;
        },
        _createCharacterToken: function _createCharacterToken(type, ch) {
          orig._createCharacterToken.call(this, type, ch);

          this.currentCharacterToken.location = mxn.ctLoc;
        },
        _createEOFToken: function _createEOFToken() {
          orig._createEOFToken.call(this);

          this.currentToken.location = mxn._getCurrentLocation();
        },
        _createAttr: function _createAttr(attrNameFirstCh) {
          orig._createAttr.call(this, attrNameFirstCh);

          mxn.currentAttrLocation = mxn._getCurrentLocation();
        },
        _leaveAttrName: function _leaveAttrName(toState) {
          orig._leaveAttrName.call(this, toState);

          mxn._attachCurrentAttrLocationInfo();
        },
        _leaveAttrValue: function _leaveAttrValue(toState) {
          orig._leaveAttrValue.call(this, toState);

          mxn._attachCurrentAttrLocationInfo();
        },
        _emitCurrentToken: function _emitCurrentToken() {
          var ctLoc = this.currentToken.location; //NOTE: if we have pending character token make it's end location equal to the
          //current token's start location.

          if (this.currentCharacterToken) {
            this.currentCharacterToken.location.endLine = ctLoc.startLine;
            this.currentCharacterToken.location.endCol = ctLoc.startCol;
            this.currentCharacterToken.location.endOffset = ctLoc.startOffset;
          }

          if (this.currentToken.type === Tokenizer.EOF_TOKEN) {
            ctLoc.endLine = ctLoc.startLine;
            ctLoc.endCol = ctLoc.startCol;
            ctLoc.endOffset = ctLoc.startOffset;
          } else {
            ctLoc.endLine = mxn.posTracker.line;
            ctLoc.endCol = mxn.posTracker.col + 1;
            ctLoc.endOffset = mxn.posTracker.offset + 1;
          }

          orig._emitCurrentToken.call(this);
        },
        _emitCurrentCharacterToken: function _emitCurrentCharacterToken() {
          var ctLoc = this.currentCharacterToken && this.currentCharacterToken.location; //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),
          //then set it's location at the current preprocessor position.
          //We don't need to increment preprocessor position, since character token
          //emission is always forced by the start of the next character token here.
          //So, we already have advanced position.

          if (ctLoc && ctLoc.endOffset === -1) {
            ctLoc.endLine = mxn.posTracker.line;
            ctLoc.endCol = mxn.posTracker.col;
            ctLoc.endOffset = mxn.posTracker.offset;
          }

          orig._emitCurrentCharacterToken.call(this);
        }
      }; //NOTE: patch initial states for each mode to obtain token start position

      Object.keys(Tokenizer.MODE).forEach(function (modeName) {
        var state = Tokenizer.MODE[modeName];

        methods[state] = function (cp) {
          mxn.ctLoc = mxn._getCurrentLocation();
          orig[state].call(this, cp);
        };
      });
      return methods;
    }
  }]);

  return LocationInfoTokenizerMixin;
}(Mixin);

module.exports = LocationInfoTokenizerMixin;

/***/ }),

/***/ 64:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var _classCallCheck = (__webpack_require__(4575)["default"]);

var _createClass = (__webpack_require__(3913)["default"]);

var _inherits = (__webpack_require__(2205)["default"]);

var _createSuper = (__webpack_require__(9842)["default"]);

var Mixin = __webpack_require__(1458);

var PositionTrackingPreprocessorMixin = /*#__PURE__*/function (_Mixin) {
  _inherits(PositionTrackingPreprocessorMixin, _Mixin);

  var _super = _createSuper(PositionTrackingPreprocessorMixin);

  function PositionTrackingPreprocessorMixin(preprocessor) {
    var _this;

    _classCallCheck(this, PositionTrackingPreprocessorMixin);

    _this = _super.call(this, preprocessor);
    _this.preprocessor = preprocessor;
    _this.isEol = false;
    _this.lineStartPos = 0;
    _this.droppedBufferSize = 0;
    _this.offset = 0;
    _this.col = 0;
    _this.line = 1;
    return _this;
  }

  _createClass(PositionTrackingPreprocessorMixin, [{
    key: "_getOverriddenMethods",
    value: function _getOverriddenMethods(mxn, orig) {
      return {
        advance: function advance() {
          var pos = this.pos + 1;
          var ch = this.html[pos]; //NOTE: LF should be in the last column of the line

          if (mxn.isEol) {
            mxn.isEol = false;
            mxn.line++;
            mxn.lineStartPos = pos;
          }

          if (ch === '\n' || ch === '\r' && this.html[pos + 1] !== '\n') {
            mxn.isEol = true;
          }

          mxn.col = pos - mxn.lineStartPos + 1;
          mxn.offset = mxn.droppedBufferSize + pos;
          return orig.advance.call(this);
        },
        retreat: function retreat() {
          orig.retreat.call(this);
          mxn.isEol = false;
          mxn.col = this.pos - mxn.lineStartPos + 1;
        },
        dropParsedChunk: function dropParsedChunk() {
          var prevPos = this.pos;
          orig.dropParsedChunk.call(this);
          var reduction = prevPos - this.pos;
          mxn.lineStartPos -= reduction;
          mxn.droppedBufferSize += reduction;
          mxn.offset = mxn.droppedBufferSize + this.pos;
        }
      };
    }
  }]);

  return PositionTrackingPreprocessorMixin;
}(Mixin);

module.exports = PositionTrackingPreprocessorMixin;

/***/ }),

/***/ 2708:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
 //Const

var _classCallCheck = (__webpack_require__(4575)["default"]);

var _createClass = (__webpack_require__(3913)["default"]);

var NOAH_ARK_CAPACITY = 3; //List of formatting elements

var FormattingElementList = /*#__PURE__*/function () {
  function FormattingElementList(treeAdapter) {
    _classCallCheck(this, FormattingElementList);

    this.length = 0;
    this.entries = [];
    this.treeAdapter = treeAdapter;
    this.bookmark = null;
  } //Noah Ark's condition
  //OPTIMIZATION: at first we try to find possible candidates for exclusion using
  //lightweight heuristics without thorough attributes check.


  _createClass(FormattingElementList, [{
    key: "_getNoahArkConditionCandidates",
    value: function _getNoahArkConditionCandidates(newElement) {
      var candidates = [];

      if (this.length >= NOAH_ARK_CAPACITY) {
        var neAttrsLength = this.treeAdapter.getAttrList(newElement).length;
        var neTagName = this.treeAdapter.getTagName(newElement);
        var neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);

        for (var i = this.length - 1; i >= 0; i--) {
          var entry = this.entries[i];

          if (entry.type === FormattingElementList.MARKER_ENTRY) {
            break;
          }

          var element = entry.element;
          var elementAttrs = this.treeAdapter.getAttrList(element);
          var isCandidate = this.treeAdapter.getTagName(element) === neTagName && this.treeAdapter.getNamespaceURI(element) === neNamespaceURI && elementAttrs.length === neAttrsLength;

          if (isCandidate) {
            candidates.push({
              idx: i,
              attrs: elementAttrs
            });
          }
        }
      }

      return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;
    }
  }, {
    key: "_ensureNoahArkCondition",
    value: function _ensureNoahArkCondition(newElement) {
      var candidates = this._getNoahArkConditionCandidates(newElement);

      var cLength = candidates.length;

      if (cLength) {
        var neAttrs = this.treeAdapter.getAttrList(newElement);
        var neAttrsLength = neAttrs.length;
        var neAttrsMap = Object.create(null); //NOTE: build attrs map for the new element so we can perform fast lookups

        for (var i = 0; i < neAttrsLength; i++) {
          var neAttr = neAttrs[i];
          neAttrsMap[neAttr.name] = neAttr.value;
        }

        for (var _i = 0; _i < neAttrsLength; _i++) {
          for (var j = 0; j < cLength; j++) {
            var cAttr = candidates[j].attrs[_i];

            if (neAttrsMap[cAttr.name] !== cAttr.value) {
              candidates.splice(j, 1);
              cLength--;
            }

            if (candidates.length < NOAH_ARK_CAPACITY) {
              return;
            }
          }
        } //NOTE: remove bottommost candidates until Noah's Ark condition will not be met


        for (var _i2 = cLength - 1; _i2 >= NOAH_ARK_CAPACITY - 1; _i2--) {
          this.entries.splice(candidates[_i2].idx, 1);
          this.length--;
        }
      }
    } //Mutations

  }, {
    key: "insertMarker",
    value: function insertMarker() {
      this.entries.push({
        type: FormattingElementList.MARKER_ENTRY
      });
      this.length++;
    }
  }, {
    key: "pushElement",
    value: function pushElement(element, token) {
      this._ensureNoahArkCondition(element);

      this.entries.push({
        type: FormattingElementList.ELEMENT_ENTRY,
        element: element,
        token: token
      });
      this.length++;
    }
  }, {
    key: "insertElementAfterBookmark",
    value: function insertElementAfterBookmark(element, token) {
      var bookmarkIdx = this.length - 1;

      for (; bookmarkIdx >= 0; bookmarkIdx--) {
        if (this.entries[bookmarkIdx] === this.bookmark) {
          break;
        }
      }

      this.entries.splice(bookmarkIdx + 1, 0, {
        type: FormattingElementList.ELEMENT_ENTRY,
        element: element,
        token: token
      });
      this.length++;
    }
  }, {
    key: "removeEntry",
    value: function removeEntry(entry) {
      for (var i = this.length - 1; i >= 0; i--) {
        if (this.entries[i] === entry) {
          this.entries.splice(i, 1);
          this.length--;
          break;
        }
      }
    }
  }, {
    key: "clearToLastMarker",
    value: function clearToLastMarker() {
      while (this.length) {
        var entry = this.entries.pop();
        this.length--;

        if (entry.type === FormattingElementList.MARKER_ENTRY) {
          break;
        }
      }
    } //Search

  }, {
    key: "getElementEntryInScopeWithTagName",
    value: function getElementEntryInScopeWithTagName(tagName) {
      for (var i = this.length - 1; i >= 0; i--) {
        var entry = this.entries[i];

        if (entry.type === FormattingElementList.MARKER_ENTRY) {
          return null;
        }

        if (this.treeAdapter.getTagName(entry.element) === tagName) {
          return entry;
        }
      }

      return null;
    }
  }, {
    key: "getElementEntry",
    value: function getElementEntry(element) {
      for (var i = this.length - 1; i >= 0; i--) {
        var entry = this.entries[i];

        if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element === element) {
          return entry;
        }
      }

      return null;
    }
  }]);

  return FormattingElementList;
}(); //Entry types


FormattingElementList.MARKER_ENTRY = 'MARKER_ENTRY';
FormattingElementList.ELEMENT_ENTRY = 'ELEMENT_ENTRY';
module.exports = FormattingElementList;

/***/ }),

/***/ 8992:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var _classCallCheck = (__webpack_require__(4575)["default"]);

var _createClass = (__webpack_require__(3913)["default"]);

var _defineProperty = (__webpack_require__(9713)["default"]);

var _INSERTION_MODE_RESET, _TEMPLATE_INSERTION_M, _INITIAL_MODE, _BEFORE_HTML_MODE, _BEFORE_HEAD_MODE, _IN_HEAD_MODE, _IN_HEAD_NO_SCRIPT_MO, _AFTER_HEAD_MODE, _IN_BODY_MODE, _TEXT_MODE, _IN_TABLE_MODE, _IN_TABLE_TEXT_MODE, _IN_CAPTION_MODE, _IN_COLUMN_GROUP_MODE, _IN_TABLE_BODY_MODE, _IN_ROW_MODE, _IN_CELL_MODE, _IN_SELECT_MODE, _IN_SELECT_IN_TABLE_M, _IN_TEMPLATE_MODE, _AFTER_BODY_MODE, _IN_FRAMESET_MODE, _AFTER_FRAMESET_MODE, _AFTER_AFTER_BODY_MOD, _AFTER_AFTER_FRAMESET, _TOKEN_HANDLERS;

var Tokenizer = __webpack_require__(3085);

var OpenElementStack = __webpack_require__(4808);

var FormattingElementList = __webpack_require__(2708);

var LocationInfoParserMixin = __webpack_require__(9037);

var ErrorReportingParserMixin = __webpack_require__(9839);

var Mixin = __webpack_require__(1458);

var defaultTreeAdapter = __webpack_require__(3860);

var mergeOptions = __webpack_require__(3874);

var doctype = __webpack_require__(4802);

var foreignContent = __webpack_require__(5478);

var ERR = __webpack_require__(4551);

var unicode = __webpack_require__(4529);

var HTML = __webpack_require__(9539); //Aliases


var $ = HTML.TAG_NAMES;
var NS = HTML.NAMESPACES;
var ATTRS = HTML.ATTRS;
var DEFAULT_OPTIONS = {
  scriptingEnabled: true,
  sourceCodeLocationInfo: false,
  onParseError: null,
  treeAdapter: defaultTreeAdapter
}; //Misc constants

var HIDDEN_INPUT_TYPE = 'hidden'; //Adoption agency loops iteration count

var AA_OUTER_LOOP_ITER = 8;
var AA_INNER_LOOP_ITER = 3; //Insertion modes

var INITIAL_MODE = 'INITIAL_MODE';
var BEFORE_HTML_MODE = 'BEFORE_HTML_MODE';
var BEFORE_HEAD_MODE = 'BEFORE_HEAD_MODE';
var IN_HEAD_MODE = 'IN_HEAD_MODE';
var IN_HEAD_NO_SCRIPT_MODE = 'IN_HEAD_NO_SCRIPT_MODE';
var AFTER_HEAD_MODE = 'AFTER_HEAD_MODE';
var IN_BODY_MODE = 'IN_BODY_MODE';
var TEXT_MODE = 'TEXT_MODE';
var IN_TABLE_MODE = 'IN_TABLE_MODE';
var IN_TABLE_TEXT_MODE = 'IN_TABLE_TEXT_MODE';
var IN_CAPTION_MODE = 'IN_CAPTION_MODE';
var IN_COLUMN_GROUP_MODE = 'IN_COLUMN_GROUP_MODE';
var IN_TABLE_BODY_MODE = 'IN_TABLE_BODY_MODE';
var IN_ROW_MODE = 'IN_ROW_MODE';
var IN_CELL_MODE = 'IN_CELL_MODE';
var IN_SELECT_MODE = 'IN_SELECT_MODE';
var IN_SELECT_IN_TABLE_MODE = 'IN_SELECT_IN_TABLE_MODE';
var IN_TEMPLATE_MODE = 'IN_TEMPLATE_MODE';
var AFTER_BODY_MODE = 'AFTER_BODY_MODE';
var IN_FRAMESET_MODE = 'IN_FRAMESET_MODE';
var AFTER_FRAMESET_MODE = 'AFTER_FRAMESET_MODE';
var AFTER_AFTER_BODY_MODE = 'AFTER_AFTER_BODY_MODE';
var AFTER_AFTER_FRAMESET_MODE = 'AFTER_AFTER_FRAMESET_MODE'; //Insertion mode reset map

var INSERTION_MODE_RESET_MAP = (_INSERTION_MODE_RESET = {}, _defineProperty(_INSERTION_MODE_RESET, $.TR, IN_ROW_MODE), _defineProperty(_INSERTION_MODE_RESET, $.TBODY, IN_TABLE_BODY_MODE), _defineProperty(_INSERTION_MODE_RESET, $.THEAD, IN_TABLE_BODY_MODE), _defineProperty(_INSERTION_MODE_RESET, $.TFOOT, IN_TABLE_BODY_MODE), _defineProperty(_INSERTION_MODE_RESET, $.CAPTION, IN_CAPTION_MODE), _defineProperty(_INSERTION_MODE_RESET, $.COLGROUP, IN_COLUMN_GROUP_MODE), _defineProperty(_INSERTION_MODE_RESET, $.TABLE, IN_TABLE_MODE), _defineProperty(_INSERTION_MODE_RESET, $.BODY, IN_BODY_MODE), _defineProperty(_INSERTION_MODE_RESET, $.FRAMESET, IN_FRAMESET_MODE), _INSERTION_MODE_RESET); //Template insertion mode switch map

var TEMPLATE_INSERTION_MODE_SWITCH_MAP = (_TEMPLATE_INSERTION_M = {}, _defineProperty(_TEMPLATE_INSERTION_M, $.CAPTION, IN_TABLE_MODE), _defineProperty(_TEMPLATE_INSERTION_M, $.COLGROUP, IN_TABLE_MODE), _defineProperty(_TEMPLATE_INSERTION_M, $.TBODY, IN_TABLE_MODE), _defineProperty(_TEMPLATE_INSERTION_M, $.TFOOT, IN_TABLE_MODE), _defineProperty(_TEMPLATE_INSERTION_M, $.THEAD, IN_TABLE_MODE), _defineProperty(_TEMPLATE_INSERTION_M, $.COL, IN_COLUMN_GROUP_MODE), _defineProperty(_TEMPLATE_INSERTION_M, $.TR, IN_TABLE_BODY_MODE), _defineProperty(_TEMPLATE_INSERTION_M, $.TD, IN_ROW_MODE), _defineProperty(_TEMPLATE_INSERTION_M, $.TH, IN_ROW_MODE), _TEMPLATE_INSERTION_M); //Token handlers map for insertion modes

var TOKEN_HANDLERS = (_TOKEN_HANDLERS = {}, _defineProperty(_TOKEN_HANDLERS, INITIAL_MODE, (_INITIAL_MODE = {}, _defineProperty(_INITIAL_MODE, Tokenizer.CHARACTER_TOKEN, tokenInInitialMode), _defineProperty(_INITIAL_MODE, Tokenizer.NULL_CHARACTER_TOKEN, tokenInInitialMode), _defineProperty(_INITIAL_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, ignoreToken), _defineProperty(_INITIAL_MODE, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_INITIAL_MODE, Tokenizer.DOCTYPE_TOKEN, doctypeInInitialMode), _defineProperty(_INITIAL_MODE, Tokenizer.START_TAG_TOKEN, tokenInInitialMode), _defineProperty(_INITIAL_MODE, Tokenizer.END_TAG_TOKEN, tokenInInitialMode), _defineProperty(_INITIAL_MODE, Tokenizer.EOF_TOKEN, tokenInInitialMode), _INITIAL_MODE)), _defineProperty(_TOKEN_HANDLERS, BEFORE_HTML_MODE, (_BEFORE_HTML_MODE = {}, _defineProperty(_BEFORE_HTML_MODE, Tokenizer.CHARACTER_TOKEN, tokenBeforeHtml), _defineProperty(_BEFORE_HTML_MODE, Tokenizer.NULL_CHARACTER_TOKEN, tokenBeforeHtml), _defineProperty(_BEFORE_HTML_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, ignoreToken), _defineProperty(_BEFORE_HTML_MODE, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_BEFORE_HTML_MODE, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_BEFORE_HTML_MODE, Tokenizer.START_TAG_TOKEN, startTagBeforeHtml), _defineProperty(_BEFORE_HTML_MODE, Tokenizer.END_TAG_TOKEN, endTagBeforeHtml), _defineProperty(_BEFORE_HTML_MODE, Tokenizer.EOF_TOKEN, tokenBeforeHtml), _BEFORE_HTML_MODE)), _defineProperty(_TOKEN_HANDLERS, BEFORE_HEAD_MODE, (_BEFORE_HEAD_MODE = {}, _defineProperty(_BEFORE_HEAD_MODE, Tokenizer.CHARACTER_TOKEN, tokenBeforeHead), _defineProperty(_BEFORE_HEAD_MODE, Tokenizer.NULL_CHARACTER_TOKEN, tokenBeforeHead), _defineProperty(_BEFORE_HEAD_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, ignoreToken), _defineProperty(_BEFORE_HEAD_MODE, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_BEFORE_HEAD_MODE, Tokenizer.DOCTYPE_TOKEN, misplacedDoctype), _defineProperty(_BEFORE_HEAD_MODE, Tokenizer.START_TAG_TOKEN, startTagBeforeHead), _defineProperty(_BEFORE_HEAD_MODE, Tokenizer.END_TAG_TOKEN, endTagBeforeHead), _defineProperty(_BEFORE_HEAD_MODE, Tokenizer.EOF_TOKEN, tokenBeforeHead), _BEFORE_HEAD_MODE)), _defineProperty(_TOKEN_HANDLERS, IN_HEAD_MODE, (_IN_HEAD_MODE = {}, _defineProperty(_IN_HEAD_MODE, Tokenizer.CHARACTER_TOKEN, tokenInHead), _defineProperty(_IN_HEAD_MODE, Tokenizer.NULL_CHARACTER_TOKEN, tokenInHead), _defineProperty(_IN_HEAD_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, insertCharacters), _defineProperty(_IN_HEAD_MODE, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_IN_HEAD_MODE, Tokenizer.DOCTYPE_TOKEN, misplacedDoctype), _defineProperty(_IN_HEAD_MODE, Tokenizer.START_TAG_TOKEN, startTagInHead), _defineProperty(_IN_HEAD_MODE, Tokenizer.END_TAG_TOKEN, endTagInHead), _defineProperty(_IN_HEAD_MODE, Tokenizer.EOF_TOKEN, tokenInHead), _IN_HEAD_MODE)), _defineProperty(_TOKEN_HANDLERS, IN_HEAD_NO_SCRIPT_MODE, (_IN_HEAD_NO_SCRIPT_MO = {}, _defineProperty(_IN_HEAD_NO_SCRIPT_MO, Tokenizer.CHARACTER_TOKEN, tokenInHeadNoScript), _defineProperty(_IN_HEAD_NO_SCRIPT_MO, Tokenizer.NULL_CHARACTER_TOKEN, tokenInHeadNoScript), _defineProperty(_IN_HEAD_NO_SCRIPT_MO, Tokenizer.WHITESPACE_CHARACTER_TOKEN, insertCharacters), _defineProperty(_IN_HEAD_NO_SCRIPT_MO, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_IN_HEAD_NO_SCRIPT_MO, Tokenizer.DOCTYPE_TOKEN, misplacedDoctype), _defineProperty(_IN_HEAD_NO_SCRIPT_MO, Tokenizer.START_TAG_TOKEN, startTagInHeadNoScript), _defineProperty(_IN_HEAD_NO_SCRIPT_MO, Tokenizer.END_TAG_TOKEN, endTagInHeadNoScript), _defineProperty(_IN_HEAD_NO_SCRIPT_MO, Tokenizer.EOF_TOKEN, tokenInHeadNoScript), _IN_HEAD_NO_SCRIPT_MO)), _defineProperty(_TOKEN_HANDLERS, AFTER_HEAD_MODE, (_AFTER_HEAD_MODE = {}, _defineProperty(_AFTER_HEAD_MODE, Tokenizer.CHARACTER_TOKEN, tokenAfterHead), _defineProperty(_AFTER_HEAD_MODE, Tokenizer.NULL_CHARACTER_TOKEN, tokenAfterHead), _defineProperty(_AFTER_HEAD_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, insertCharacters), _defineProperty(_AFTER_HEAD_MODE, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_AFTER_HEAD_MODE, Tokenizer.DOCTYPE_TOKEN, misplacedDoctype), _defineProperty(_AFTER_HEAD_MODE, Tokenizer.START_TAG_TOKEN, startTagAfterHead), _defineProperty(_AFTER_HEAD_MODE, Tokenizer.END_TAG_TOKEN, endTagAfterHead), _defineProperty(_AFTER_HEAD_MODE, Tokenizer.EOF_TOKEN, tokenAfterHead), _AFTER_HEAD_MODE)), _defineProperty(_TOKEN_HANDLERS, IN_BODY_MODE, (_IN_BODY_MODE = {}, _defineProperty(_IN_BODY_MODE, Tokenizer.CHARACTER_TOKEN, characterInBody), _defineProperty(_IN_BODY_MODE, Tokenizer.NULL_CHARACTER_TOKEN, ignoreToken), _defineProperty(_IN_BODY_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, whitespaceCharacterInBody), _defineProperty(_IN_BODY_MODE, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_IN_BODY_MODE, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_IN_BODY_MODE, Tokenizer.START_TAG_TOKEN, startTagInBody), _defineProperty(_IN_BODY_MODE, Tokenizer.END_TAG_TOKEN, endTagInBody), _defineProperty(_IN_BODY_MODE, Tokenizer.EOF_TOKEN, eofInBody), _IN_BODY_MODE)), _defineProperty(_TOKEN_HANDLERS, TEXT_MODE, (_TEXT_MODE = {}, _defineProperty(_TEXT_MODE, Tokenizer.CHARACTER_TOKEN, insertCharacters), _defineProperty(_TEXT_MODE, Tokenizer.NULL_CHARACTER_TOKEN, insertCharacters), _defineProperty(_TEXT_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, insertCharacters), _defineProperty(_TEXT_MODE, Tokenizer.COMMENT_TOKEN, ignoreToken), _defineProperty(_TEXT_MODE, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_TEXT_MODE, Tokenizer.START_TAG_TOKEN, ignoreToken), _defineProperty(_TEXT_MODE, Tokenizer.END_TAG_TOKEN, endTagInText), _defineProperty(_TEXT_MODE, Tokenizer.EOF_TOKEN, eofInText), _TEXT_MODE)), _defineProperty(_TOKEN_HANDLERS, IN_TABLE_MODE, (_IN_TABLE_MODE = {}, _defineProperty(_IN_TABLE_MODE, Tokenizer.CHARACTER_TOKEN, characterInTable), _defineProperty(_IN_TABLE_MODE, Tokenizer.NULL_CHARACTER_TOKEN, characterInTable), _defineProperty(_IN_TABLE_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, characterInTable), _defineProperty(_IN_TABLE_MODE, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_IN_TABLE_MODE, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_IN_TABLE_MODE, Tokenizer.START_TAG_TOKEN, startTagInTable), _defineProperty(_IN_TABLE_MODE, Tokenizer.END_TAG_TOKEN, endTagInTable), _defineProperty(_IN_TABLE_MODE, Tokenizer.EOF_TOKEN, eofInBody), _IN_TABLE_MODE)), _defineProperty(_TOKEN_HANDLERS, IN_TABLE_TEXT_MODE, (_IN_TABLE_TEXT_MODE = {}, _defineProperty(_IN_TABLE_TEXT_MODE, Tokenizer.CHARACTER_TOKEN, characterInTableText), _defineProperty(_IN_TABLE_TEXT_MODE, Tokenizer.NULL_CHARACTER_TOKEN, ignoreToken), _defineProperty(_IN_TABLE_TEXT_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, whitespaceCharacterInTableText), _defineProperty(_IN_TABLE_TEXT_MODE, Tokenizer.COMMENT_TOKEN, tokenInTableText), _defineProperty(_IN_TABLE_TEXT_MODE, Tokenizer.DOCTYPE_TOKEN, tokenInTableText), _defineProperty(_IN_TABLE_TEXT_MODE, Tokenizer.START_TAG_TOKEN, tokenInTableText), _defineProperty(_IN_TABLE_TEXT_MODE, Tokenizer.END_TAG_TOKEN, tokenInTableText), _defineProperty(_IN_TABLE_TEXT_MODE, Tokenizer.EOF_TOKEN, tokenInTableText), _IN_TABLE_TEXT_MODE)), _defineProperty(_TOKEN_HANDLERS, IN_CAPTION_MODE, (_IN_CAPTION_MODE = {}, _defineProperty(_IN_CAPTION_MODE, Tokenizer.CHARACTER_TOKEN, characterInBody), _defineProperty(_IN_CAPTION_MODE, Tokenizer.NULL_CHARACTER_TOKEN, ignoreToken), _defineProperty(_IN_CAPTION_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, whitespaceCharacterInBody), _defineProperty(_IN_CAPTION_MODE, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_IN_CAPTION_MODE, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_IN_CAPTION_MODE, Tokenizer.START_TAG_TOKEN, startTagInCaption), _defineProperty(_IN_CAPTION_MODE, Tokenizer.END_TAG_TOKEN, endTagInCaption), _defineProperty(_IN_CAPTION_MODE, Tokenizer.EOF_TOKEN, eofInBody), _IN_CAPTION_MODE)), _defineProperty(_TOKEN_HANDLERS, IN_COLUMN_GROUP_MODE, (_IN_COLUMN_GROUP_MODE = {}, _defineProperty(_IN_COLUMN_GROUP_MODE, Tokenizer.CHARACTER_TOKEN, tokenInColumnGroup), _defineProperty(_IN_COLUMN_GROUP_MODE, Tokenizer.NULL_CHARACTER_TOKEN, tokenInColumnGroup), _defineProperty(_IN_COLUMN_GROUP_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, insertCharacters), _defineProperty(_IN_COLUMN_GROUP_MODE, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_IN_COLUMN_GROUP_MODE, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_IN_COLUMN_GROUP_MODE, Tokenizer.START_TAG_TOKEN, startTagInColumnGroup), _defineProperty(_IN_COLUMN_GROUP_MODE, Tokenizer.END_TAG_TOKEN, endTagInColumnGroup), _defineProperty(_IN_COLUMN_GROUP_MODE, Tokenizer.EOF_TOKEN, eofInBody), _IN_COLUMN_GROUP_MODE)), _defineProperty(_TOKEN_HANDLERS, IN_TABLE_BODY_MODE, (_IN_TABLE_BODY_MODE = {}, _defineProperty(_IN_TABLE_BODY_MODE, Tokenizer.CHARACTER_TOKEN, characterInTable), _defineProperty(_IN_TABLE_BODY_MODE, Tokenizer.NULL_CHARACTER_TOKEN, characterInTable), _defineProperty(_IN_TABLE_BODY_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, characterInTable), _defineProperty(_IN_TABLE_BODY_MODE, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_IN_TABLE_BODY_MODE, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_IN_TABLE_BODY_MODE, Tokenizer.START_TAG_TOKEN, startTagInTableBody), _defineProperty(_IN_TABLE_BODY_MODE, Tokenizer.END_TAG_TOKEN, endTagInTableBody), _defineProperty(_IN_TABLE_BODY_MODE, Tokenizer.EOF_TOKEN, eofInBody), _IN_TABLE_BODY_MODE)), _defineProperty(_TOKEN_HANDLERS, IN_ROW_MODE, (_IN_ROW_MODE = {}, _defineProperty(_IN_ROW_MODE, Tokenizer.CHARACTER_TOKEN, characterInTable), _defineProperty(_IN_ROW_MODE, Tokenizer.NULL_CHARACTER_TOKEN, characterInTable), _defineProperty(_IN_ROW_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, characterInTable), _defineProperty(_IN_ROW_MODE, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_IN_ROW_MODE, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_IN_ROW_MODE, Tokenizer.START_TAG_TOKEN, startTagInRow), _defineProperty(_IN_ROW_MODE, Tokenizer.END_TAG_TOKEN, endTagInRow), _defineProperty(_IN_ROW_MODE, Tokenizer.EOF_TOKEN, eofInBody), _IN_ROW_MODE)), _defineProperty(_TOKEN_HANDLERS, IN_CELL_MODE, (_IN_CELL_MODE = {}, _defineProperty(_IN_CELL_MODE, Tokenizer.CHARACTER_TOKEN, characterInBody), _defineProperty(_IN_CELL_MODE, Tokenizer.NULL_CHARACTER_TOKEN, ignoreToken), _defineProperty(_IN_CELL_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, whitespaceCharacterInBody), _defineProperty(_IN_CELL_MODE, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_IN_CELL_MODE, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_IN_CELL_MODE, Tokenizer.START_TAG_TOKEN, startTagInCell), _defineProperty(_IN_CELL_MODE, Tokenizer.END_TAG_TOKEN, endTagInCell), _defineProperty(_IN_CELL_MODE, Tokenizer.EOF_TOKEN, eofInBody), _IN_CELL_MODE)), _defineProperty(_TOKEN_HANDLERS, IN_SELECT_MODE, (_IN_SELECT_MODE = {}, _defineProperty(_IN_SELECT_MODE, Tokenizer.CHARACTER_TOKEN, insertCharacters), _defineProperty(_IN_SELECT_MODE, Tokenizer.NULL_CHARACTER_TOKEN, ignoreToken), _defineProperty(_IN_SELECT_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, insertCharacters), _defineProperty(_IN_SELECT_MODE, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_IN_SELECT_MODE, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_IN_SELECT_MODE, Tokenizer.START_TAG_TOKEN, startTagInSelect), _defineProperty(_IN_SELECT_MODE, Tokenizer.END_TAG_TOKEN, endTagInSelect), _defineProperty(_IN_SELECT_MODE, Tokenizer.EOF_TOKEN, eofInBody), _IN_SELECT_MODE)), _defineProperty(_TOKEN_HANDLERS, IN_SELECT_IN_TABLE_MODE, (_IN_SELECT_IN_TABLE_M = {}, _defineProperty(_IN_SELECT_IN_TABLE_M, Tokenizer.CHARACTER_TOKEN, insertCharacters), _defineProperty(_IN_SELECT_IN_TABLE_M, Tokenizer.NULL_CHARACTER_TOKEN, ignoreToken), _defineProperty(_IN_SELECT_IN_TABLE_M, Tokenizer.WHITESPACE_CHARACTER_TOKEN, insertCharacters), _defineProperty(_IN_SELECT_IN_TABLE_M, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_IN_SELECT_IN_TABLE_M, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_IN_SELECT_IN_TABLE_M, Tokenizer.START_TAG_TOKEN, startTagInSelectInTable), _defineProperty(_IN_SELECT_IN_TABLE_M, Tokenizer.END_TAG_TOKEN, endTagInSelectInTable), _defineProperty(_IN_SELECT_IN_TABLE_M, Tokenizer.EOF_TOKEN, eofInBody), _IN_SELECT_IN_TABLE_M)), _defineProperty(_TOKEN_HANDLERS, IN_TEMPLATE_MODE, (_IN_TEMPLATE_MODE = {}, _defineProperty(_IN_TEMPLATE_MODE, Tokenizer.CHARACTER_TOKEN, characterInBody), _defineProperty(_IN_TEMPLATE_MODE, Tokenizer.NULL_CHARACTER_TOKEN, ignoreToken), _defineProperty(_IN_TEMPLATE_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, whitespaceCharacterInBody), _defineProperty(_IN_TEMPLATE_MODE, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_IN_TEMPLATE_MODE, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_IN_TEMPLATE_MODE, Tokenizer.START_TAG_TOKEN, startTagInTemplate), _defineProperty(_IN_TEMPLATE_MODE, Tokenizer.END_TAG_TOKEN, endTagInTemplate), _defineProperty(_IN_TEMPLATE_MODE, Tokenizer.EOF_TOKEN, eofInTemplate), _IN_TEMPLATE_MODE)), _defineProperty(_TOKEN_HANDLERS, AFTER_BODY_MODE, (_AFTER_BODY_MODE = {}, _defineProperty(_AFTER_BODY_MODE, Tokenizer.CHARACTER_TOKEN, tokenAfterBody), _defineProperty(_AFTER_BODY_MODE, Tokenizer.NULL_CHARACTER_TOKEN, tokenAfterBody), _defineProperty(_AFTER_BODY_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, whitespaceCharacterInBody), _defineProperty(_AFTER_BODY_MODE, Tokenizer.COMMENT_TOKEN, appendCommentToRootHtmlElement), _defineProperty(_AFTER_BODY_MODE, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_AFTER_BODY_MODE, Tokenizer.START_TAG_TOKEN, startTagAfterBody), _defineProperty(_AFTER_BODY_MODE, Tokenizer.END_TAG_TOKEN, endTagAfterBody), _defineProperty(_AFTER_BODY_MODE, Tokenizer.EOF_TOKEN, stopParsing), _AFTER_BODY_MODE)), _defineProperty(_TOKEN_HANDLERS, IN_FRAMESET_MODE, (_IN_FRAMESET_MODE = {}, _defineProperty(_IN_FRAMESET_MODE, Tokenizer.CHARACTER_TOKEN, ignoreToken), _defineProperty(_IN_FRAMESET_MODE, Tokenizer.NULL_CHARACTER_TOKEN, ignoreToken), _defineProperty(_IN_FRAMESET_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, insertCharacters), _defineProperty(_IN_FRAMESET_MODE, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_IN_FRAMESET_MODE, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_IN_FRAMESET_MODE, Tokenizer.START_TAG_TOKEN, startTagInFrameset), _defineProperty(_IN_FRAMESET_MODE, Tokenizer.END_TAG_TOKEN, endTagInFrameset), _defineProperty(_IN_FRAMESET_MODE, Tokenizer.EOF_TOKEN, stopParsing), _IN_FRAMESET_MODE)), _defineProperty(_TOKEN_HANDLERS, AFTER_FRAMESET_MODE, (_AFTER_FRAMESET_MODE = {}, _defineProperty(_AFTER_FRAMESET_MODE, Tokenizer.CHARACTER_TOKEN, ignoreToken), _defineProperty(_AFTER_FRAMESET_MODE, Tokenizer.NULL_CHARACTER_TOKEN, ignoreToken), _defineProperty(_AFTER_FRAMESET_MODE, Tokenizer.WHITESPACE_CHARACTER_TOKEN, insertCharacters), _defineProperty(_AFTER_FRAMESET_MODE, Tokenizer.COMMENT_TOKEN, appendComment), _defineProperty(_AFTER_FRAMESET_MODE, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_AFTER_FRAMESET_MODE, Tokenizer.START_TAG_TOKEN, startTagAfterFrameset), _defineProperty(_AFTER_FRAMESET_MODE, Tokenizer.END_TAG_TOKEN, endTagAfterFrameset), _defineProperty(_AFTER_FRAMESET_MODE, Tokenizer.EOF_TOKEN, stopParsing), _AFTER_FRAMESET_MODE)), _defineProperty(_TOKEN_HANDLERS, AFTER_AFTER_BODY_MODE, (_AFTER_AFTER_BODY_MOD = {}, _defineProperty(_AFTER_AFTER_BODY_MOD, Tokenizer.CHARACTER_TOKEN, tokenAfterAfterBody), _defineProperty(_AFTER_AFTER_BODY_MOD, Tokenizer.NULL_CHARACTER_TOKEN, tokenAfterAfterBody), _defineProperty(_AFTER_AFTER_BODY_MOD, Tokenizer.WHITESPACE_CHARACTER_TOKEN, whitespaceCharacterInBody), _defineProperty(_AFTER_AFTER_BODY_MOD, Tokenizer.COMMENT_TOKEN, appendCommentToDocument), _defineProperty(_AFTER_AFTER_BODY_MOD, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_AFTER_AFTER_BODY_MOD, Tokenizer.START_TAG_TOKEN, startTagAfterAfterBody), _defineProperty(_AFTER_AFTER_BODY_MOD, Tokenizer.END_TAG_TOKEN, tokenAfterAfterBody), _defineProperty(_AFTER_AFTER_BODY_MOD, Tokenizer.EOF_TOKEN, stopParsing), _AFTER_AFTER_BODY_MOD)), _defineProperty(_TOKEN_HANDLERS, AFTER_AFTER_FRAMESET_MODE, (_AFTER_AFTER_FRAMESET = {}, _defineProperty(_AFTER_AFTER_FRAMESET, Tokenizer.CHARACTER_TOKEN, ignoreToken), _defineProperty(_AFTER_AFTER_FRAMESET, Tokenizer.NULL_CHARACTER_TOKEN, ignoreToken), _defineProperty(_AFTER_AFTER_FRAMESET, Tokenizer.WHITESPACE_CHARACTER_TOKEN, whitespaceCharacterInBody), _defineProperty(_AFTER_AFTER_FRAMESET, Tokenizer.COMMENT_TOKEN, appendCommentToDocument), _defineProperty(_AFTER_AFTER_FRAMESET, Tokenizer.DOCTYPE_TOKEN, ignoreToken), _defineProperty(_AFTER_AFTER_FRAMESET, Tokenizer.START_TAG_TOKEN, startTagAfterAfterFrameset), _defineProperty(_AFTER_AFTER_FRAMESET, Tokenizer.END_TAG_TOKEN, ignoreToken), _defineProperty(_AFTER_AFTER_FRAMESET, Tokenizer.EOF_TOKEN, stopParsing), _AFTER_AFTER_FRAMESET)), _TOKEN_HANDLERS); //Parser

var Parser = /*#__PURE__*/function () {
  function Parser(options) {
    _classCallCheck(this, Parser);

    this.options = mergeOptions(DEFAULT_OPTIONS, options);
    this.treeAdapter = this.options.treeAdapter;
    this.pendingScript = null;

    if (this.options.sourceCodeLocationInfo) {
      Mixin.install(this, LocationInfoParserMixin);
    }

    if (this.options.onParseError) {
      Mixin.install(this, ErrorReportingParserMixin, {
        onParseError: this.options.onParseError
      });
    }
  } // API


  _createClass(Parser, [{
    key: "parse",
    value: function parse(html) {
      var document = this.treeAdapter.createDocument();

      this._bootstrap(document, null);

      this.tokenizer.write(html, true);

      this._runParsingLoop(null);

      return document;
    }
  }, {
    key: "parseFragment",
    value: function parseFragment(html, fragmentContext) {
      //NOTE: use <template> element as a fragment context if context element was not provided,
      //so we will parse in "forgiving" manner
      if (!fragmentContext) {
        fragmentContext = this.treeAdapter.createElement($.TEMPLATE, NS.HTML, []);
      } //NOTE: create fake element which will be used as 'document' for fragment parsing.
      //This is important for jsdom there 'document' can't be recreated, therefore
      //fragment parsing causes messing of the main `document`.


      var documentMock = this.treeAdapter.createElement('documentmock', NS.HTML, []);

      this._bootstrap(documentMock, fragmentContext);

      if (this.treeAdapter.getTagName(fragmentContext) === $.TEMPLATE) {
        this._pushTmplInsertionMode(IN_TEMPLATE_MODE);
      }

      this._initTokenizerForFragmentParsing();

      this._insertFakeRootElement();

      this._resetInsertionMode();

      this._findFormInFragmentContext();

      this.tokenizer.write(html, true);

      this._runParsingLoop(null);

      var rootElement = this.treeAdapter.getFirstChild(documentMock);
      var fragment = this.treeAdapter.createDocumentFragment();

      this._adoptNodes(rootElement, fragment);

      return fragment;
    } //Bootstrap parser

  }, {
    key: "_bootstrap",
    value: function _bootstrap(document, fragmentContext) {
      this.tokenizer = new Tokenizer(this.options);
      this.stopped = false;
      this.insertionMode = INITIAL_MODE;
      this.originalInsertionMode = '';
      this.document = document;
      this.fragmentContext = fragmentContext;
      this.headElement = null;
      this.formElement = null;
      this.openElements = new OpenElementStack(this.document, this.treeAdapter);
      this.activeFormattingElements = new FormattingElementList(this.treeAdapter);
      this.tmplInsertionModeStack = [];
      this.tmplInsertionModeStackTop = -1;
      this.currentTmplInsertionMode = null;
      this.pendingCharacterTokens = [];
      this.hasNonWhitespacePendingCharacterToken = false;
      this.framesetOk = true;
      this.skipNextNewLine = false;
      this.fosterParentingEnabled = false;
    } //Errors

  }, {
    key: "_err",
    value: function _err() {// NOTE: err reporting is noop by default. Enabled by mixin.
    } //Parsing loop

  }, {
    key: "_runParsingLoop",
    value: function _runParsingLoop(scriptHandler) {
      while (!this.stopped) {
        this._setupTokenizerCDATAMode();

        var token = this.tokenizer.getNextToken();

        if (token.type === Tokenizer.HIBERNATION_TOKEN) {
          break;
        }

        if (this.skipNextNewLine) {
          this.skipNextNewLine = false;

          if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === '\n') {
            if (token.chars.length === 1) {
              continue;
            }

            token.chars = token.chars.substr(1);
          }
        }

        this._processInputToken(token);

        if (scriptHandler && this.pendingScript) {
          break;
        }
      }
    }
  }, {
    key: "runParsingLoopForCurrentChunk",
    value: function runParsingLoopForCurrentChunk(writeCallback, scriptHandler) {
      this._runParsingLoop(scriptHandler);

      if (scriptHandler && this.pendingScript) {
        var script = this.pendingScript;
        this.pendingScript = null;
        scriptHandler(script);
        return;
      }

      if (writeCallback) {
        writeCallback();
      }
    } //Text parsing

  }, {
    key: "_setupTokenizerCDATAMode",
    value: function _setupTokenizerCDATAMode() {
      var current = this._getAdjustedCurrentElement();

      this.tokenizer.allowCDATA = current && current !== this.document && this.treeAdapter.getNamespaceURI(current) !== NS.HTML && !this._isIntegrationPoint(current);
    }
  }, {
    key: "_switchToTextParsing",
    value: function _switchToTextParsing(currentToken, nextTokenizerState) {
      this._insertElement(currentToken, NS.HTML);

      this.tokenizer.state = nextTokenizerState;
      this.originalInsertionMode = this.insertionMode;
      this.insertionMode = TEXT_MODE;
    }
  }, {
    key: "switchToPlaintextParsing",
    value: function switchToPlaintextParsing() {
      this.insertionMode = TEXT_MODE;
      this.originalInsertionMode = IN_BODY_MODE;
      this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
    } //Fragment parsing

  }, {
    key: "_getAdjustedCurrentElement",
    value: function _getAdjustedCurrentElement() {
      return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;
    }
  }, {
    key: "_findFormInFragmentContext",
    value: function _findFormInFragmentContext() {
      var node = this.fragmentContext;

      do {
        if (this.treeAdapter.getTagName(node) === $.FORM) {
          this.formElement = node;
          break;
        }

        node = this.treeAdapter.getParentNode(node);
      } while (node);
    }
  }, {
    key: "_initTokenizerForFragmentParsing",
    value: function _initTokenizerForFragmentParsing() {
      if (this.treeAdapter.getNamespaceURI(this.fragmentContext) === NS.HTML) {
        var tn = this.treeAdapter.getTagName(this.fragmentContext);

        if (tn === $.TITLE || tn === $.TEXTAREA) {
          this.tokenizer.state = Tokenizer.MODE.RCDATA;
        } else if (tn === $.STYLE || tn === $.XMP || tn === $.IFRAME || tn === $.NOEMBED || tn === $.NOFRAMES || tn === $.NOSCRIPT) {
          this.tokenizer.state = Tokenizer.MODE.RAWTEXT;
        } else if (tn === $.SCRIPT) {
          this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;
        } else if (tn === $.PLAINTEXT) {
          this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
        }
      }
    } //Tree mutation

  }, {
    key: "_setDocumentType",
    value: function _setDocumentType(token) {
      var name = token.name || '';
      var publicId = token.publicId || '';
      var systemId = token.systemId || '';
      this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);
    }
  }, {
    key: "_attachElementToTree",
    value: function _attachElementToTree(element) {
      if (this._shouldFosterParentOnInsertion()) {
        this._fosterParentElement(element);
      } else {
        var parent = this.openElements.currentTmplContent || this.openElements.current;
        this.treeAdapter.appendChild(parent, element);
      }
    }
  }, {
    key: "_appendElement",
    value: function _appendElement(token, namespaceURI) {
      var element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);

      this._attachElementToTree(element);
    }
  }, {
    key: "_insertElement",
    value: function _insertElement(token, namespaceURI) {
      var element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);

      this._attachElementToTree(element);

      this.openElements.push(element);
    }
  }, {
    key: "_insertFakeElement",
    value: function _insertFakeElement(tagName) {
      var element = this.treeAdapter.createElement(tagName, NS.HTML, []);

      this._attachElementToTree(element);

      this.openElements.push(element);
    }
  }, {
    key: "_insertTemplate",
    value: function _insertTemplate(token) {
      var tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);
      var content = this.treeAdapter.createDocumentFragment();
      this.treeAdapter.setTemplateContent(tmpl, content);

      this._attachElementToTree(tmpl);

      this.openElements.push(tmpl);
    }
  }, {
    key: "_insertFakeRootElement",
    value: function _insertFakeRootElement() {
      var element = this.treeAdapter.createElement($.HTML, NS.HTML, []);
      this.treeAdapter.appendChild(this.openElements.current, element);
      this.openElements.push(element);
    }
  }, {
    key: "_appendCommentNode",
    value: function _appendCommentNode(token, parent) {
      var commentNode = this.treeAdapter.createCommentNode(token.data);
      this.treeAdapter.appendChild(parent, commentNode);
    }
  }, {
    key: "_insertCharacters",
    value: function _insertCharacters(token) {
      if (this._shouldFosterParentOnInsertion()) {
        this._fosterParentText(token.chars);
      } else {
        var parent = this.openElements.currentTmplContent || this.openElements.current;
        this.treeAdapter.insertText(parent, token.chars);
      }
    }
  }, {
    key: "_adoptNodes",
    value: function _adoptNodes(donor, recipient) {
      for (var child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {
        this.treeAdapter.detachNode(child);
        this.treeAdapter.appendChild(recipient, child);
      }
    } //Token processing

  }, {
    key: "_shouldProcessTokenInForeignContent",
    value: function _shouldProcessTokenInForeignContent(token) {
      var current = this._getAdjustedCurrentElement();

      if (!current || current === this.document) {
        return false;
      }

      var ns = this.treeAdapter.getNamespaceURI(current);

      if (ns === NS.HTML) {
        return false;
      }

      if (this.treeAdapter.getTagName(current) === $.ANNOTATION_XML && ns === NS.MATHML && token.type === Tokenizer.START_TAG_TOKEN && token.tagName === $.SVG) {
        return false;
      }

      var isCharacterToken = token.type === Tokenizer.CHARACTER_TOKEN || token.type === Tokenizer.NULL_CHARACTER_TOKEN || token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN;
      var isMathMLTextStartTag = token.type === Tokenizer.START_TAG_TOKEN && token.tagName !== $.MGLYPH && token.tagName !== $.MALIGNMARK;

      if ((isMathMLTextStartTag || isCharacterToken) && this._isIntegrationPoint(current, NS.MATHML)) {
        return false;
      }

      if ((token.type === Tokenizer.START_TAG_TOKEN || isCharacterToken) && this._isIntegrationPoint(current, NS.HTML)) {
        return false;
      }

      return token.type !== Tokenizer.EOF_TOKEN;
    }
  }, {
    key: "_processToken",
    value: function _processToken(token) {
      TOKEN_HANDLERS[this.insertionMode][token.type](this, token);
    }
  }, {
    key: "_processTokenInBodyMode",
    value: function _processTokenInBodyMode(token) {
      TOKEN_HANDLERS[IN_BODY_MODE][token.type](this, token);
    }
  }, {
    key: "_processTokenInForeignContent",
    value: function _processTokenInForeignContent(token) {
      if (token.type === Tokenizer.CHARACTER_TOKEN) {
        characterInForeignContent(this, token);
      } else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN) {
        nullCharacterInForeignContent(this, token);
      } else if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN) {
        insertCharacters(this, token);
      } else if (token.type === Tokenizer.COMMENT_TOKEN) {
        appendComment(this, token);
      } else if (token.type === Tokenizer.START_TAG_TOKEN) {
        startTagInForeignContent(this, token);
      } else if (token.type === Tokenizer.END_TAG_TOKEN) {
        endTagInForeignContent(this, token);
      }
    }
  }, {
    key: "_processInputToken",
    value: function _processInputToken(token) {
      if (this._shouldProcessTokenInForeignContent(token)) {
        this._processTokenInForeignContent(token);
      } else {
        this._processToken(token);
      }

      if (token.type === Tokenizer.START_TAG_TOKEN && token.selfClosing && !token.ackSelfClosing) {
        this._err(ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);
      }
    } //Integration points

  }, {
    key: "_isIntegrationPoint",
    value: function _isIntegrationPoint(element, foreignNS) {
      var tn = this.treeAdapter.getTagName(element);
      var ns = this.treeAdapter.getNamespaceURI(element);
      var attrs = this.treeAdapter.getAttrList(element);
      return foreignContent.isIntegrationPoint(tn, ns, attrs, foreignNS);
    } //Active formatting elements reconstruction

  }, {
    key: "_reconstructActiveFormattingElements",
    value: function _reconstructActiveFormattingElements() {
      var listLength = this.activeFormattingElements.length;

      if (listLength) {
        var unopenIdx = listLength;
        var entry = null;

        do {
          unopenIdx--;
          entry = this.activeFormattingElements.entries[unopenIdx];

          if (entry.type === FormattingElementList.MARKER_ENTRY || this.openElements.contains(entry.element)) {
            unopenIdx++;
            break;
          }
        } while (unopenIdx > 0);

        for (var i = unopenIdx; i < listLength; i++) {
          entry = this.activeFormattingElements.entries[i];

          this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));

          entry.element = this.openElements.current;
        }
      }
    } //Close elements

  }, {
    key: "_closeTableCell",
    value: function _closeTableCell() {
      this.openElements.generateImpliedEndTags();
      this.openElements.popUntilTableCellPopped();
      this.activeFormattingElements.clearToLastMarker();
      this.insertionMode = IN_ROW_MODE;
    }
  }, {
    key: "_closePElement",
    value: function _closePElement() {
      this.openElements.generateImpliedEndTagsWithExclusion($.P);
      this.openElements.popUntilTagNamePopped($.P);
    } //Insertion modes

  }, {
    key: "_resetInsertionMode",
    value: function _resetInsertionMode() {
      for (var i = this.openElements.stackTop, last = false; i >= 0; i--) {
        var element = this.openElements.items[i];

        if (i === 0) {
          last = true;

          if (this.fragmentContext) {
            element = this.fragmentContext;
          }
        }

        var tn = this.treeAdapter.getTagName(element);
        var newInsertionMode = INSERTION_MODE_RESET_MAP[tn];

        if (newInsertionMode) {
          this.insertionMode = newInsertionMode;
          break;
        } else if (!last && (tn === $.TD || tn === $.TH)) {
          this.insertionMode = IN_CELL_MODE;
          break;
        } else if (!last && tn === $.HEAD) {
          this.insertionMode = IN_HEAD_MODE;
          break;
        } else if (tn === $.SELECT) {
          this._resetInsertionModeForSelect(i);

          break;
        } else if (tn === $.TEMPLATE) {
          this.insertionMode = this.currentTmplInsertionMode;
          break;
        } else if (tn === $.HTML) {
          this.insertionMode = this.headElement ? AFTER_HEAD_MODE : BEFORE_HEAD_MODE;
          break;
        } else if (last) {
          this.insertionMode = IN_BODY_MODE;
          break;
        }
      }
    }
  }, {
    key: "_resetInsertionModeForSelect",
    value: function _resetInsertionModeForSelect(selectIdx) {
      if (selectIdx > 0) {
        for (var i = selectIdx - 1; i > 0; i--) {
          var ancestor = this.openElements.items[i];
          var tn = this.treeAdapter.getTagName(ancestor);

          if (tn === $.TEMPLATE) {
            break;
          } else if (tn === $.TABLE) {
            this.insertionMode = IN_SELECT_IN_TABLE_MODE;
            return;
          }
        }
      }

      this.insertionMode = IN_SELECT_MODE;
    }
  }, {
    key: "_pushTmplInsertionMode",
    value: function _pushTmplInsertionMode(mode) {
      this.tmplInsertionModeStack.push(mode);
      this.tmplInsertionModeStackTop++;
      this.currentTmplInsertionMode = mode;
    }
  }, {
    key: "_popTmplInsertionMode",
    value: function _popTmplInsertionMode() {
      this.tmplInsertionModeStack.pop();
      this.tmplInsertionModeStackTop--;
      this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];
    } //Foster parenting

  }, {
    key: "_isElementCausesFosterParenting",
    value: function _isElementCausesFosterParenting(element) {
      var tn = this.treeAdapter.getTagName(element);
      return tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR;
    }
  }, {
    key: "_shouldFosterParentOnInsertion",
    value: function _shouldFosterParentOnInsertion() {
      return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);
    }
  }, {
    key: "_findFosterParentingLocation",
    value: function _findFosterParentingLocation() {
      var location = {
        parent: null,
        beforeElement: null
      };

      for (var i = this.openElements.stackTop; i >= 0; i--) {
        var openElement = this.openElements.items[i];
        var tn = this.treeAdapter.getTagName(openElement);
        var ns = this.treeAdapter.getNamespaceURI(openElement);

        if (tn === $.TEMPLATE && ns === NS.HTML) {
          location.parent = this.treeAdapter.getTemplateContent(openElement);
          break;
        } else if (tn === $.TABLE) {
          location.parent = this.treeAdapter.getParentNode(openElement);

          if (location.parent) {
            location.beforeElement = openElement;
          } else {
            location.parent = this.openElements.items[i - 1];
          }

          break;
        }
      }

      if (!location.parent) {
        location.parent = this.openElements.items[0];
      }

      return location;
    }
  }, {
    key: "_fosterParentElement",
    value: function _fosterParentElement(element) {
      var location = this._findFosterParentingLocation();

      if (location.beforeElement) {
        this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);
      } else {
        this.treeAdapter.appendChild(location.parent, element);
      }
    }
  }, {
    key: "_fosterParentText",
    value: function _fosterParentText(chars) {
      var location = this._findFosterParentingLocation();

      if (location.beforeElement) {
        this.treeAdapter.insertTextBefore(location.parent, chars, location.beforeElement);
      } else {
        this.treeAdapter.insertText(location.parent, chars);
      }
    } //Special elements

  }, {
    key: "_isSpecialElement",
    value: function _isSpecialElement(element) {
      var tn = this.treeAdapter.getTagName(element);
      var ns = this.treeAdapter.getNamespaceURI(element);
      return HTML.SPECIAL_ELEMENTS[ns][tn];
    }
  }]);

  return Parser;
}();

module.exports = Parser; //Adoption agency algorithm
//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)
//------------------------------------------------------------------
//Steps 5-8 of the algorithm

function aaObtainFormattingElementEntry(p, token) {
  var formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);

  if (formattingElementEntry) {
    if (!p.openElements.contains(formattingElementEntry.element)) {
      p.activeFormattingElements.removeEntry(formattingElementEntry);
      formattingElementEntry = null;
    } else if (!p.openElements.hasInScope(token.tagName)) {
      formattingElementEntry = null;
    }
  } else {
    genericEndTagInBody(p, token);
  }

  return formattingElementEntry;
} //Steps 9 and 10 of the algorithm


function aaObtainFurthestBlock(p, formattingElementEntry) {
  var furthestBlock = null;

  for (var i = p.openElements.stackTop; i >= 0; i--) {
    var element = p.openElements.items[i];

    if (element === formattingElementEntry.element) {
      break;
    }

    if (p._isSpecialElement(element)) {
      furthestBlock = element;
    }
  }

  if (!furthestBlock) {
    p.openElements.popUntilElementPopped(formattingElementEntry.element);
    p.activeFormattingElements.removeEntry(formattingElementEntry);
  }

  return furthestBlock;
} //Step 13 of the algorithm


function aaInnerLoop(p, furthestBlock, formattingElement) {
  var lastElement = furthestBlock;
  var nextElement = p.openElements.getCommonAncestor(furthestBlock);

  for (var i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {
    //NOTE: store next element for the next loop iteration (it may be deleted from the stack by step 9.5)
    nextElement = p.openElements.getCommonAncestor(element);
    var elementEntry = p.activeFormattingElements.getElementEntry(element);
    var counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;
    var shouldRemoveFromOpenElements = !elementEntry || counterOverflow;

    if (shouldRemoveFromOpenElements) {
      if (counterOverflow) {
        p.activeFormattingElements.removeEntry(elementEntry);
      }

      p.openElements.remove(element);
    } else {
      element = aaRecreateElementFromEntry(p, elementEntry);

      if (lastElement === furthestBlock) {
        p.activeFormattingElements.bookmark = elementEntry;
      }

      p.treeAdapter.detachNode(lastElement);
      p.treeAdapter.appendChild(element, lastElement);
      lastElement = element;
    }
  }

  return lastElement;
} //Step 13.7 of the algorithm


function aaRecreateElementFromEntry(p, elementEntry) {
  var ns = p.treeAdapter.getNamespaceURI(elementEntry.element);
  var newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);
  p.openElements.replace(elementEntry.element, newElement);
  elementEntry.element = newElement;
  return newElement;
} //Step 14 of the algorithm


function aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {
  if (p._isElementCausesFosterParenting(commonAncestor)) {
    p._fosterParentElement(lastElement);
  } else {
    var tn = p.treeAdapter.getTagName(commonAncestor);
    var ns = p.treeAdapter.getNamespaceURI(commonAncestor);

    if (tn === $.TEMPLATE && ns === NS.HTML) {
      commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);
    }

    p.treeAdapter.appendChild(commonAncestor, lastElement);
  }
} //Steps 15-19 of the algorithm


function aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {
  var ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);
  var token = formattingElementEntry.token;
  var newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);

  p._adoptNodes(furthestBlock, newElement);

  p.treeAdapter.appendChild(furthestBlock, newElement);
  p.activeFormattingElements.insertElementAfterBookmark(newElement, formattingElementEntry.token);
  p.activeFormattingElements.removeEntry(formattingElementEntry);
  p.openElements.remove(formattingElementEntry.element);
  p.openElements.insertAfter(furthestBlock, newElement);
} //Algorithm entry point


function callAdoptionAgency(p, token) {
  var formattingElementEntry;

  for (var i = 0; i < AA_OUTER_LOOP_ITER; i++) {
    formattingElementEntry = aaObtainFormattingElementEntry(p, token, formattingElementEntry);

    if (!formattingElementEntry) {
      break;
    }

    var furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);

    if (!furthestBlock) {
      break;
    }

    p.activeFormattingElements.bookmark = formattingElementEntry;
    var lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);
    var commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);
    p.treeAdapter.detachNode(lastElement);
    aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);
    aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);
  }
} //Generic token handlers
//------------------------------------------------------------------


function ignoreToken() {//NOTE: do nothing =)
}

function misplacedDoctype(p) {
  p._err(ERR.misplacedDoctype);
}

function appendComment(p, token) {
  p._appendCommentNode(token, p.openElements.currentTmplContent || p.openElements.current);
}

function appendCommentToRootHtmlElement(p, token) {
  p._appendCommentNode(token, p.openElements.items[0]);
}

function appendCommentToDocument(p, token) {
  p._appendCommentNode(token, p.document);
}

function insertCharacters(p, token) {
  p._insertCharacters(token);
}

function stopParsing(p) {
  p.stopped = true;
} // The "initial" insertion mode
//------------------------------------------------------------------


function doctypeInInitialMode(p, token) {
  p._setDocumentType(token);

  var mode = token.forceQuirks ? HTML.DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);

  if (!doctype.isConforming(token)) {
    p._err(ERR.nonConformingDoctype);
  }

  p.treeAdapter.setDocumentMode(p.document, mode);
  p.insertionMode = BEFORE_HTML_MODE;
}

function tokenInInitialMode(p, token) {
  p._err(ERR.missingDoctype, {
    beforeToken: true
  });

  p.treeAdapter.setDocumentMode(p.document, HTML.DOCUMENT_MODE.QUIRKS);
  p.insertionMode = BEFORE_HTML_MODE;

  p._processToken(token);
} // The "before html" insertion mode
//------------------------------------------------------------------


function startTagBeforeHtml(p, token) {
  if (token.tagName === $.HTML) {
    p._insertElement(token, NS.HTML);

    p.insertionMode = BEFORE_HEAD_MODE;
  } else {
    tokenBeforeHtml(p, token);
  }
}

function endTagBeforeHtml(p, token) {
  var tn = token.tagName;

  if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {
    tokenBeforeHtml(p, token);
  }
}

function tokenBeforeHtml(p, token) {
  p._insertFakeRootElement();

  p.insertionMode = BEFORE_HEAD_MODE;

  p._processToken(token);
} // The "before head" insertion mode
//------------------------------------------------------------------


function startTagBeforeHead(p, token) {
  var tn = token.tagName;

  if (tn === $.HTML) {
    startTagInBody(p, token);
  } else if (tn === $.HEAD) {
    p._insertElement(token, NS.HTML);

    p.headElement = p.openElements.current;
    p.insertionMode = IN_HEAD_MODE;
  } else {
    tokenBeforeHead(p, token);
  }
}

function endTagBeforeHead(p, token) {
  var tn = token.tagName;

  if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {
    tokenBeforeHead(p, token);
  } else {
    p._err(ERR.endTagWithoutMatchingOpenElement);
  }
}

function tokenBeforeHead(p, token) {
  p._insertFakeElement($.HEAD);

  p.headElement = p.openElements.current;
  p.insertionMode = IN_HEAD_MODE;

  p._processToken(token);
} // The "in head" insertion mode
//------------------------------------------------------------------


function startTagInHead(p, token) {
  var tn = token.tagName;

  if (tn === $.HTML) {
    startTagInBody(p, token);
  } else if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META) {
    p._appendElement(token, NS.HTML);

    token.ackSelfClosing = true;
  } else if (tn === $.TITLE) {
    p._switchToTextParsing(token, Tokenizer.MODE.RCDATA);
  } else if (tn === $.NOSCRIPT) {
    if (p.options.scriptingEnabled) {
      p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
    } else {
      p._insertElement(token, NS.HTML);

      p.insertionMode = IN_HEAD_NO_SCRIPT_MODE;
    }
  } else if (tn === $.NOFRAMES || tn === $.STYLE) {
    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
  } else if (tn === $.SCRIPT) {
    p._switchToTextParsing(token, Tokenizer.MODE.SCRIPT_DATA);
  } else if (tn === $.TEMPLATE) {
    p._insertTemplate(token, NS.HTML);

    p.activeFormattingElements.insertMarker();
    p.framesetOk = false;
    p.insertionMode = IN_TEMPLATE_MODE;

    p._pushTmplInsertionMode(IN_TEMPLATE_MODE);
  } else if (tn === $.HEAD) {
    p._err(ERR.misplacedStartTagForHeadElement);
  } else {
    tokenInHead(p, token);
  }
}

function endTagInHead(p, token) {
  var tn = token.tagName;

  if (tn === $.HEAD) {
    p.openElements.pop();
    p.insertionMode = AFTER_HEAD_MODE;
  } else if (tn === $.BODY || tn === $.BR || tn === $.HTML) {
    tokenInHead(p, token);
  } else if (tn === $.TEMPLATE) {
    if (p.openElements.tmplCount > 0) {
      p.openElements.generateImpliedEndTagsThoroughly();

      if (p.openElements.currentTagName !== $.TEMPLATE) {
        p._err(ERR.closingOfElementWithOpenChildElements);
      }

      p.openElements.popUntilTagNamePopped($.TEMPLATE);
      p.activeFormattingElements.clearToLastMarker();

      p._popTmplInsertionMode();

      p._resetInsertionMode();
    } else {
      p._err(ERR.endTagWithoutMatchingOpenElement);
    }
  } else {
    p._err(ERR.endTagWithoutMatchingOpenElement);
  }
}

function tokenInHead(p, token) {
  p.openElements.pop();
  p.insertionMode = AFTER_HEAD_MODE;

  p._processToken(token);
} // The "in head no script" insertion mode
//------------------------------------------------------------------


function startTagInHeadNoScript(p, token) {
  var tn = token.tagName;

  if (tn === $.HTML) {
    startTagInBody(p, token);
  } else if (tn === $.BASEFONT || tn === $.BGSOUND || tn === $.HEAD || tn === $.LINK || tn === $.META || tn === $.NOFRAMES || tn === $.STYLE) {
    startTagInHead(p, token);
  } else if (tn === $.NOSCRIPT) {
    p._err(ERR.nestedNoscriptInHead);
  } else {
    tokenInHeadNoScript(p, token);
  }
}

function endTagInHeadNoScript(p, token) {
  var tn = token.tagName;

  if (tn === $.NOSCRIPT) {
    p.openElements.pop();
    p.insertionMode = IN_HEAD_MODE;
  } else if (tn === $.BR) {
    tokenInHeadNoScript(p, token);
  } else {
    p._err(ERR.endTagWithoutMatchingOpenElement);
  }
}

function tokenInHeadNoScript(p, token) {
  var errCode = token.type === Tokenizer.EOF_TOKEN ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;

  p._err(errCode);

  p.openElements.pop();
  p.insertionMode = IN_HEAD_MODE;

  p._processToken(token);
} // The "after head" insertion mode
//------------------------------------------------------------------


function startTagAfterHead(p, token) {
  var tn = token.tagName;

  if (tn === $.HTML) {
    startTagInBody(p, token);
  } else if (tn === $.BODY) {
    p._insertElement(token, NS.HTML);

    p.framesetOk = false;
    p.insertionMode = IN_BODY_MODE;
  } else if (tn === $.FRAMESET) {
    p._insertElement(token, NS.HTML);

    p.insertionMode = IN_FRAMESET_MODE;
  } else if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META || tn === $.NOFRAMES || tn === $.SCRIPT || tn === $.STYLE || tn === $.TEMPLATE || tn === $.TITLE) {
    p._err(ERR.abandonedHeadElementChild);

    p.openElements.push(p.headElement);
    startTagInHead(p, token);
    p.openElements.remove(p.headElement);
  } else if (tn === $.HEAD) {
    p._err(ERR.misplacedStartTagForHeadElement);
  } else {
    tokenAfterHead(p, token);
  }
}

function endTagAfterHead(p, token) {
  var tn = token.tagName;

  if (tn === $.BODY || tn === $.HTML || tn === $.BR) {
    tokenAfterHead(p, token);
  } else if (tn === $.TEMPLATE) {
    endTagInHead(p, token);
  } else {
    p._err(ERR.endTagWithoutMatchingOpenElement);
  }
}

function tokenAfterHead(p, token) {
  p._insertFakeElement($.BODY);

  p.insertionMode = IN_BODY_MODE;

  p._processToken(token);
} // The "in body" insertion mode
//------------------------------------------------------------------


function whitespaceCharacterInBody(p, token) {
  p._reconstructActiveFormattingElements();

  p._insertCharacters(token);
}

function characterInBody(p, token) {
  p._reconstructActiveFormattingElements();

  p._insertCharacters(token);

  p.framesetOk = false;
}

function htmlStartTagInBody(p, token) {
  if (p.openElements.tmplCount === 0) {
    p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);
  }
}

function bodyStartTagInBody(p, token) {
  var bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();

  if (bodyElement && p.openElements.tmplCount === 0) {
    p.framesetOk = false;
    p.treeAdapter.adoptAttributes(bodyElement, token.attrs);
  }
}

function framesetStartTagInBody(p, token) {
  var bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();

  if (p.framesetOk && bodyElement) {
    p.treeAdapter.detachNode(bodyElement);
    p.openElements.popAllUpToHtmlElement();

    p._insertElement(token, NS.HTML);

    p.insertionMode = IN_FRAMESET_MODE;
  }
}

function addressStartTagInBody(p, token) {
  if (p.openElements.hasInButtonScope($.P)) {
    p._closePElement();
  }

  p._insertElement(token, NS.HTML);
}

function numberedHeaderStartTagInBody(p, token) {
  if (p.openElements.hasInButtonScope($.P)) {
    p._closePElement();
  }

  var tn = p.openElements.currentTagName;

  if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {
    p.openElements.pop();
  }

  p._insertElement(token, NS.HTML);
}

function preStartTagInBody(p, token) {
  if (p.openElements.hasInButtonScope($.P)) {
    p._closePElement();
  }

  p._insertElement(token, NS.HTML); //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move
  //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)


  p.skipNextNewLine = true;
  p.framesetOk = false;
}

function formStartTagInBody(p, token) {
  var inTemplate = p.openElements.tmplCount > 0;

  if (!p.formElement || inTemplate) {
    if (p.openElements.hasInButtonScope($.P)) {
      p._closePElement();
    }

    p._insertElement(token, NS.HTML);

    if (!inTemplate) {
      p.formElement = p.openElements.current;
    }
  }
}

function listItemStartTagInBody(p, token) {
  p.framesetOk = false;
  var tn = token.tagName;

  for (var i = p.openElements.stackTop; i >= 0; i--) {
    var element = p.openElements.items[i];
    var elementTn = p.treeAdapter.getTagName(element);
    var closeTn = null;

    if (tn === $.LI && elementTn === $.LI) {
      closeTn = $.LI;
    } else if ((tn === $.DD || tn === $.DT) && (elementTn === $.DD || elementTn === $.DT)) {
      closeTn = elementTn;
    }

    if (closeTn) {
      p.openElements.generateImpliedEndTagsWithExclusion(closeTn);
      p.openElements.popUntilTagNamePopped(closeTn);
      break;
    }

    if (elementTn !== $.ADDRESS && elementTn !== $.DIV && elementTn !== $.P && p._isSpecialElement(element)) {
      break;
    }
  }

  if (p.openElements.hasInButtonScope($.P)) {
    p._closePElement();
  }

  p._insertElement(token, NS.HTML);
}

function plaintextStartTagInBody(p, token) {
  if (p.openElements.hasInButtonScope($.P)) {
    p._closePElement();
  }

  p._insertElement(token, NS.HTML);

  p.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
}

function buttonStartTagInBody(p, token) {
  if (p.openElements.hasInScope($.BUTTON)) {
    p.openElements.generateImpliedEndTags();
    p.openElements.popUntilTagNamePopped($.BUTTON);
  }

  p._reconstructActiveFormattingElements();

  p._insertElement(token, NS.HTML);

  p.framesetOk = false;
}

function aStartTagInBody(p, token) {
  var activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName($.A);

  if (activeElementEntry) {
    callAdoptionAgency(p, token);
    p.openElements.remove(activeElementEntry.element);
    p.activeFormattingElements.removeEntry(activeElementEntry);
  }

  p._reconstructActiveFormattingElements();

  p._insertElement(token, NS.HTML);

  p.activeFormattingElements.pushElement(p.openElements.current, token);
}

function bStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();

  p._insertElement(token, NS.HTML);

  p.activeFormattingElements.pushElement(p.openElements.current, token);
}

function nobrStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();

  if (p.openElements.hasInScope($.NOBR)) {
    callAdoptionAgency(p, token);

    p._reconstructActiveFormattingElements();
  }

  p._insertElement(token, NS.HTML);

  p.activeFormattingElements.pushElement(p.openElements.current, token);
}

function appletStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();

  p._insertElement(token, NS.HTML);

  p.activeFormattingElements.insertMarker();
  p.framesetOk = false;
}

function tableStartTagInBody(p, token) {
  if (p.treeAdapter.getDocumentMode(p.document) !== HTML.DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {
    p._closePElement();
  }

  p._insertElement(token, NS.HTML);

  p.framesetOk = false;
  p.insertionMode = IN_TABLE_MODE;
}

function areaStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();

  p._appendElement(token, NS.HTML);

  p.framesetOk = false;
  token.ackSelfClosing = true;
}

function inputStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();

  p._appendElement(token, NS.HTML);

  var inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);

  if (!inputType || inputType.toLowerCase() !== HIDDEN_INPUT_TYPE) {
    p.framesetOk = false;
  }

  token.ackSelfClosing = true;
}

function paramStartTagInBody(p, token) {
  p._appendElement(token, NS.HTML);

  token.ackSelfClosing = true;
}

function hrStartTagInBody(p, token) {
  if (p.openElements.hasInButtonScope($.P)) {
    p._closePElement();
  }

  p._appendElement(token, NS.HTML);

  p.framesetOk = false;
  token.ackSelfClosing = true;
}

function imageStartTagInBody(p, token) {
  token.tagName = $.IMG;
  areaStartTagInBody(p, token);
}

function textareaStartTagInBody(p, token) {
  p._insertElement(token, NS.HTML); //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move
  //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)


  p.skipNextNewLine = true;
  p.tokenizer.state = Tokenizer.MODE.RCDATA;
  p.originalInsertionMode = p.insertionMode;
  p.framesetOk = false;
  p.insertionMode = TEXT_MODE;
}

function xmpStartTagInBody(p, token) {
  if (p.openElements.hasInButtonScope($.P)) {
    p._closePElement();
  }

  p._reconstructActiveFormattingElements();

  p.framesetOk = false;

  p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
}

function iframeStartTagInBody(p, token) {
  p.framesetOk = false;

  p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
} //NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse
//<noembed> as a rawtext.


function noembedStartTagInBody(p, token) {
  p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
}

function selectStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();

  p._insertElement(token, NS.HTML);

  p.framesetOk = false;

  if (p.insertionMode === IN_TABLE_MODE || p.insertionMode === IN_CAPTION_MODE || p.insertionMode === IN_TABLE_BODY_MODE || p.insertionMode === IN_ROW_MODE || p.insertionMode === IN_CELL_MODE) {
    p.insertionMode = IN_SELECT_IN_TABLE_MODE;
  } else {
    p.insertionMode = IN_SELECT_MODE;
  }
}

function optgroupStartTagInBody(p, token) {
  if (p.openElements.currentTagName === $.OPTION) {
    p.openElements.pop();
  }

  p._reconstructActiveFormattingElements();

  p._insertElement(token, NS.HTML);
}

function rbStartTagInBody(p, token) {
  if (p.openElements.hasInScope($.RUBY)) {
    p.openElements.generateImpliedEndTags();
  }

  p._insertElement(token, NS.HTML);
}

function rtStartTagInBody(p, token) {
  if (p.openElements.hasInScope($.RUBY)) {
    p.openElements.generateImpliedEndTagsWithExclusion($.RTC);
  }

  p._insertElement(token, NS.HTML);
}

function menuStartTagInBody(p, token) {
  if (p.openElements.hasInButtonScope($.P)) {
    p._closePElement();
  }

  p._insertElement(token, NS.HTML);
}

function mathStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();

  foreignContent.adjustTokenMathMLAttrs(token);
  foreignContent.adjustTokenXMLAttrs(token);

  if (token.selfClosing) {
    p._appendElement(token, NS.MATHML);
  } else {
    p._insertElement(token, NS.MATHML);
  }

  token.ackSelfClosing = true;
}

function svgStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();

  foreignContent.adjustTokenSVGAttrs(token);
  foreignContent.adjustTokenXMLAttrs(token);

  if (token.selfClosing) {
    p._appendElement(token, NS.SVG);
  } else {
    p._insertElement(token, NS.SVG);
  }

  token.ackSelfClosing = true;
}

function genericStartTagInBody(p, token) {
  p._reconstructActiveFormattingElements();

  p._insertElement(token, NS.HTML);
} //OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.
//It's faster than using dictionary.


function startTagInBody(p, token) {
  var tn = token.tagName;

  switch (tn.length) {
    case 1:
      if (tn === $.I || tn === $.S || tn === $.B || tn === $.U) {
        bStartTagInBody(p, token);
      } else if (tn === $.P) {
        addressStartTagInBody(p, token);
      } else if (tn === $.A) {
        aStartTagInBody(p, token);
      } else {
        genericStartTagInBody(p, token);
      }

      break;

    case 2:
      if (tn === $.DL || tn === $.OL || tn === $.UL) {
        addressStartTagInBody(p, token);
      } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {
        numberedHeaderStartTagInBody(p, token);
      } else if (tn === $.LI || tn === $.DD || tn === $.DT) {
        listItemStartTagInBody(p, token);
      } else if (tn === $.EM || tn === $.TT) {
        bStartTagInBody(p, token);
      } else if (tn === $.BR) {
        areaStartTagInBody(p, token);
      } else if (tn === $.HR) {
        hrStartTagInBody(p, token);
      } else if (tn === $.RB) {
        rbStartTagInBody(p, token);
      } else if (tn === $.RT || tn === $.RP) {
        rtStartTagInBody(p, token);
      } else if (tn !== $.TH && tn !== $.TD && tn !== $.TR) {
        genericStartTagInBody(p, token);
      }

      break;

    case 3:
      if (tn === $.DIV || tn === $.DIR || tn === $.NAV) {
        addressStartTagInBody(p, token);
      } else if (tn === $.PRE) {
        preStartTagInBody(p, token);
      } else if (tn === $.BIG) {
        bStartTagInBody(p, token);
      } else if (tn === $.IMG || tn === $.WBR) {
        areaStartTagInBody(p, token);
      } else if (tn === $.XMP) {
        xmpStartTagInBody(p, token);
      } else if (tn === $.SVG) {
        svgStartTagInBody(p, token);
      } else if (tn === $.RTC) {
        rbStartTagInBody(p, token);
      } else if (tn !== $.COL) {
        genericStartTagInBody(p, token);
      }

      break;

    case 4:
      if (tn === $.HTML) {
        htmlStartTagInBody(p, token);
      } else if (tn === $.BASE || tn === $.LINK || tn === $.META) {
        startTagInHead(p, token);
      } else if (tn === $.BODY) {
        bodyStartTagInBody(p, token);
      } else if (tn === $.MAIN || tn === $.MENU) {
        addressStartTagInBody(p, token);
      } else if (tn === $.FORM) {
        formStartTagInBody(p, token);
      } else if (tn === $.CODE || tn === $.FONT) {
        bStartTagInBody(p, token);
      } else if (tn === $.NOBR) {
        nobrStartTagInBody(p, token);
      } else if (tn === $.AREA) {
        areaStartTagInBody(p, token);
      } else if (tn === $.MATH) {
        mathStartTagInBody(p, token);
      } else if (tn === $.MENU) {
        menuStartTagInBody(p, token);
      } else if (tn !== $.HEAD) {
        genericStartTagInBody(p, token);
      }

      break;

    case 5:
      if (tn === $.STYLE || tn === $.TITLE) {
        startTagInHead(p, token);
      } else if (tn === $.ASIDE) {
        addressStartTagInBody(p, token);
      } else if (tn === $.SMALL) {
        bStartTagInBody(p, token);
      } else if (tn === $.TABLE) {
        tableStartTagInBody(p, token);
      } else if (tn === $.EMBED) {
        areaStartTagInBody(p, token);
      } else if (tn === $.INPUT) {
        inputStartTagInBody(p, token);
      } else if (tn === $.PARAM || tn === $.TRACK) {
        paramStartTagInBody(p, token);
      } else if (tn === $.IMAGE) {
        imageStartTagInBody(p, token);
      } else if (tn !== $.FRAME && tn !== $.TBODY && tn !== $.TFOOT && tn !== $.THEAD) {
        genericStartTagInBody(p, token);
      }

      break;

    case 6:
      if (tn === $.SCRIPT) {
        startTagInHead(p, token);
      } else if (tn === $.CENTER || tn === $.FIGURE || tn === $.FOOTER || tn === $.HEADER || tn === $.HGROUP || tn === $.DIALOG) {
        addressStartTagInBody(p, token);
      } else if (tn === $.BUTTON) {
        buttonStartTagInBody(p, token);
      } else if (tn === $.STRIKE || tn === $.STRONG) {
        bStartTagInBody(p, token);
      } else if (tn === $.APPLET || tn === $.OBJECT) {
        appletStartTagInBody(p, token);
      } else if (tn === $.KEYGEN) {
        areaStartTagInBody(p, token);
      } else if (tn === $.SOURCE) {
        paramStartTagInBody(p, token);
      } else if (tn === $.IFRAME) {
        iframeStartTagInBody(p, token);
      } else if (tn === $.SELECT) {
        selectStartTagInBody(p, token);
      } else if (tn === $.OPTION) {
        optgroupStartTagInBody(p, token);
      } else {
        genericStartTagInBody(p, token);
      }

      break;

    case 7:
      if (tn === $.BGSOUND) {
        startTagInHead(p, token);
      } else if (tn === $.DETAILS || tn === $.ADDRESS || tn === $.ARTICLE || tn === $.SECTION || tn === $.SUMMARY) {
        addressStartTagInBody(p, token);
      } else if (tn === $.LISTING) {
        preStartTagInBody(p, token);
      } else if (tn === $.MARQUEE) {
        appletStartTagInBody(p, token);
      } else if (tn === $.NOEMBED) {
        noembedStartTagInBody(p, token);
      } else if (tn !== $.CAPTION) {
        genericStartTagInBody(p, token);
      }

      break;

    case 8:
      if (tn === $.BASEFONT) {
        startTagInHead(p, token);
      } else if (tn === $.FRAMESET) {
        framesetStartTagInBody(p, token);
      } else if (tn === $.FIELDSET) {
        addressStartTagInBody(p, token);
      } else if (tn === $.TEXTAREA) {
        textareaStartTagInBody(p, token);
      } else if (tn === $.TEMPLATE) {
        startTagInHead(p, token);
      } else if (tn === $.NOSCRIPT) {
        if (p.options.scriptingEnabled) {
          noembedStartTagInBody(p, token);
        } else {
          genericStartTagInBody(p, token);
        }
      } else if (tn === $.OPTGROUP) {
        optgroupStartTagInBody(p, token);
      } else if (tn !== $.COLGROUP) {
        genericStartTagInBody(p, token);
      }

      break;

    case 9:
      if (tn === $.PLAINTEXT) {
        plaintextStartTagInBody(p, token);
      } else {
        genericStartTagInBody(p, token);
      }

      break;

    case 10:
      if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {
        addressStartTagInBody(p, token);
      } else {
        genericStartTagInBody(p, token);
      }

      break;

    default:
      genericStartTagInBody(p, token);
  }
}

function bodyEndTagInBody(p) {
  if (p.openElements.hasInScope($.BODY)) {
    p.insertionMode = AFTER_BODY_MODE;
  }
}

function htmlEndTagInBody(p, token) {
  if (p.openElements.hasInScope($.BODY)) {
    p.insertionMode = AFTER_BODY_MODE;

    p._processToken(token);
  }
}

function addressEndTagInBody(p, token) {
  var tn = token.tagName;

  if (p.openElements.hasInScope(tn)) {
    p.openElements.generateImpliedEndTags();
    p.openElements.popUntilTagNamePopped(tn);
  }
}

function formEndTagInBody(p) {
  var inTemplate = p.openElements.tmplCount > 0;
  var formElement = p.formElement;

  if (!inTemplate) {
    p.formElement = null;
  }

  if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {
    p.openElements.generateImpliedEndTags();

    if (inTemplate) {
      p.openElements.popUntilTagNamePopped($.FORM);
    } else {
      p.openElements.remove(formElement);
    }
  }
}

function pEndTagInBody(p) {
  if (!p.openElements.hasInButtonScope($.P)) {
    p._insertFakeElement($.P);
  }

  p._closePElement();
}

function liEndTagInBody(p) {
  if (p.openElements.hasInListItemScope($.LI)) {
    p.openElements.generateImpliedEndTagsWithExclusion($.LI);
    p.openElements.popUntilTagNamePopped($.LI);
  }
}

function ddEndTagInBody(p, token) {
  var tn = token.tagName;

  if (p.openElements.hasInScope(tn)) {
    p.openElements.generateImpliedEndTagsWithExclusion(tn);
    p.openElements.popUntilTagNamePopped(tn);
  }
}

function numberedHeaderEndTagInBody(p) {
  if (p.openElements.hasNumberedHeaderInScope()) {
    p.openElements.generateImpliedEndTags();
    p.openElements.popUntilNumberedHeaderPopped();
  }
}

function appletEndTagInBody(p, token) {
  var tn = token.tagName;

  if (p.openElements.hasInScope(tn)) {
    p.openElements.generateImpliedEndTags();
    p.openElements.popUntilTagNamePopped(tn);
    p.activeFormattingElements.clearToLastMarker();
  }
}

function brEndTagInBody(p) {
  p._reconstructActiveFormattingElements();

  p._insertFakeElement($.BR);

  p.openElements.pop();
  p.framesetOk = false;
}

function genericEndTagInBody(p, token) {
  var tn = token.tagName;

  for (var i = p.openElements.stackTop; i > 0; i--) {
    var element = p.openElements.items[i];

    if (p.treeAdapter.getTagName(element) === tn) {
      p.openElements.generateImpliedEndTagsWithExclusion(tn);
      p.openElements.popUntilElementPopped(element);
      break;
    }

    if (p._isSpecialElement(element)) {
      break;
    }
  }
} //OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.
//It's faster than using dictionary.


function endTagInBody(p, token) {
  var tn = token.tagName;

  switch (tn.length) {
    case 1:
      if (tn === $.A || tn === $.B || tn === $.I || tn === $.S || tn === $.U) {
        callAdoptionAgency(p, token);
      } else if (tn === $.P) {
        pEndTagInBody(p, token);
      } else {
        genericEndTagInBody(p, token);
      }

      break;

    case 2:
      if (tn === $.DL || tn === $.UL || tn === $.OL) {
        addressEndTagInBody(p, token);
      } else if (tn === $.LI) {
        liEndTagInBody(p, token);
      } else if (tn === $.DD || tn === $.DT) {
        ddEndTagInBody(p, token);
      } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {
        numberedHeaderEndTagInBody(p, token);
      } else if (tn === $.BR) {
        brEndTagInBody(p, token);
      } else if (tn === $.EM || tn === $.TT) {
        callAdoptionAgency(p, token);
      } else {
        genericEndTagInBody(p, token);
      }

      break;

    case 3:
      if (tn === $.BIG) {
        callAdoptionAgency(p, token);
      } else if (tn === $.DIR || tn === $.DIV || tn === $.NAV || tn === $.PRE) {
        addressEndTagInBody(p, token);
      } else {
        genericEndTagInBody(p, token);
      }

      break;

    case 4:
      if (tn === $.BODY) {
        bodyEndTagInBody(p, token);
      } else if (tn === $.HTML) {
        htmlEndTagInBody(p, token);
      } else if (tn === $.FORM) {
        formEndTagInBody(p, token);
      } else if (tn === $.CODE || tn === $.FONT || tn === $.NOBR) {
        callAdoptionAgency(p, token);
      } else if (tn === $.MAIN || tn === $.MENU) {
        addressEndTagInBody(p, token);
      } else {
        genericEndTagInBody(p, token);
      }

      break;

    case 5:
      if (tn === $.ASIDE) {
        addressEndTagInBody(p, token);
      } else if (tn === $.SMALL) {
        callAdoptionAgency(p, token);
      } else {
        genericEndTagInBody(p, token);
      }

      break;

    case 6:
      if (tn === $.CENTER || tn === $.FIGURE || tn === $.FOOTER || tn === $.HEADER || tn === $.HGROUP || tn === $.DIALOG) {
        addressEndTagInBody(p, token);
      } else if (tn === $.APPLET || tn === $.OBJECT) {
        appletEndTagInBody(p, token);
      } else if (tn === $.STRIKE || tn === $.STRONG) {
        callAdoptionAgency(p, token);
      } else {
        genericEndTagInBody(p, token);
      }

      break;

    case 7:
      if (tn === $.ADDRESS || tn === $.ARTICLE || tn === $.DETAILS || tn === $.SECTION || tn === $.SUMMARY || tn === $.LISTING) {
        addressEndTagInBody(p, token);
      } else if (tn === $.MARQUEE) {
        appletEndTagInBody(p, token);
      } else {
        genericEndTagInBody(p, token);
      }

      break;

    case 8:
      if (tn === $.FIELDSET) {
        addressEndTagInBody(p, token);
      } else if (tn === $.TEMPLATE) {
        endTagInHead(p, token);
      } else {
        genericEndTagInBody(p, token);
      }

      break;

    case 10:
      if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {
        addressEndTagInBody(p, token);
      } else {
        genericEndTagInBody(p, token);
      }

      break;

    default:
      genericEndTagInBody(p, token);
  }
}

function eofInBody(p, token) {
  if (p.tmplInsertionModeStackTop > -1) {
    eofInTemplate(p, token);
  } else {
    p.stopped = true;
  }
} // The "text" insertion mode
//------------------------------------------------------------------


function endTagInText(p, token) {
  if (token.tagName === $.SCRIPT) {
    p.pendingScript = p.openElements.current;
  }

  p.openElements.pop();
  p.insertionMode = p.originalInsertionMode;
}

function eofInText(p, token) {
  p._err(ERR.eofInElementThatCanContainOnlyText);

  p.openElements.pop();
  p.insertionMode = p.originalInsertionMode;

  p._processToken(token);
} // The "in table" insertion mode
//------------------------------------------------------------------


function characterInTable(p, token) {
  var curTn = p.openElements.currentTagName;

  if (curTn === $.TABLE || curTn === $.TBODY || curTn === $.TFOOT || curTn === $.THEAD || curTn === $.TR) {
    p.pendingCharacterTokens = [];
    p.hasNonWhitespacePendingCharacterToken = false;
    p.originalInsertionMode = p.insertionMode;
    p.insertionMode = IN_TABLE_TEXT_MODE;

    p._processToken(token);
  } else {
    tokenInTable(p, token);
  }
}

function captionStartTagInTable(p, token) {
  p.openElements.clearBackToTableContext();
  p.activeFormattingElements.insertMarker();

  p._insertElement(token, NS.HTML);

  p.insertionMode = IN_CAPTION_MODE;
}

function colgroupStartTagInTable(p, token) {
  p.openElements.clearBackToTableContext();

  p._insertElement(token, NS.HTML);

  p.insertionMode = IN_COLUMN_GROUP_MODE;
}

function colStartTagInTable(p, token) {
  p.openElements.clearBackToTableContext();

  p._insertFakeElement($.COLGROUP);

  p.insertionMode = IN_COLUMN_GROUP_MODE;

  p._processToken(token);
}

function tbodyStartTagInTable(p, token) {
  p.openElements.clearBackToTableContext();

  p._insertElement(token, NS.HTML);

  p.insertionMode = IN_TABLE_BODY_MODE;
}

function tdStartTagInTable(p, token) {
  p.openElements.clearBackToTableContext();

  p._insertFakeElement($.TBODY);

  p.insertionMode = IN_TABLE_BODY_MODE;

  p._processToken(token);
}

function tableStartTagInTable(p, token) {
  if (p.openElements.hasInTableScope($.TABLE)) {
    p.openElements.popUntilTagNamePopped($.TABLE);

    p._resetInsertionMode();

    p._processToken(token);
  }
}

function inputStartTagInTable(p, token) {
  var inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);

  if (inputType && inputType.toLowerCase() === HIDDEN_INPUT_TYPE) {
    p._appendElement(token, NS.HTML);
  } else {
    tokenInTable(p, token);
  }

  token.ackSelfClosing = true;
}

function formStartTagInTable(p, token) {
  if (!p.formElement && p.openElements.tmplCount === 0) {
    p._insertElement(token, NS.HTML);

    p.formElement = p.openElements.current;
    p.openElements.pop();
  }
}

function startTagInTable(p, token) {
  var tn = token.tagName;

  switch (tn.length) {
    case 2:
      if (tn === $.TD || tn === $.TH || tn === $.TR) {
        tdStartTagInTable(p, token);
      } else {
        tokenInTable(p, token);
      }

      break;

    case 3:
      if (tn === $.COL) {
        colStartTagInTable(p, token);
      } else {
        tokenInTable(p, token);
      }

      break;

    case 4:
      if (tn === $.FORM) {
        formStartTagInTable(p, token);
      } else {
        tokenInTable(p, token);
      }

      break;

    case 5:
      if (tn === $.TABLE) {
        tableStartTagInTable(p, token);
      } else if (tn === $.STYLE) {
        startTagInHead(p, token);
      } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {
        tbodyStartTagInTable(p, token);
      } else if (tn === $.INPUT) {
        inputStartTagInTable(p, token);
      } else {
        tokenInTable(p, token);
      }

      break;

    case 6:
      if (tn === $.SCRIPT) {
        startTagInHead(p, token);
      } else {
        tokenInTable(p, token);
      }

      break;

    case 7:
      if (tn === $.CAPTION) {
        captionStartTagInTable(p, token);
      } else {
        tokenInTable(p, token);
      }

      break;

    case 8:
      if (tn === $.COLGROUP) {
        colgroupStartTagInTable(p, token);
      } else if (tn === $.TEMPLATE) {
        startTagInHead(p, token);
      } else {
        tokenInTable(p, token);
      }

      break;

    default:
      tokenInTable(p, token);
  }
}

function endTagInTable(p, token) {
  var tn = token.tagName;

  if (tn === $.TABLE) {
    if (p.openElements.hasInTableScope($.TABLE)) {
      p.openElements.popUntilTagNamePopped($.TABLE);

      p._resetInsertionMode();
    }
  } else if (tn === $.TEMPLATE) {
    endTagInHead(p, token);
  } else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML && tn !== $.TBODY && tn !== $.TD && tn !== $.TFOOT && tn !== $.TH && tn !== $.THEAD && tn !== $.TR) {
    tokenInTable(p, token);
  }
}

function tokenInTable(p, token) {
  var savedFosterParentingState = p.fosterParentingEnabled;
  p.fosterParentingEnabled = true;

  p._processTokenInBodyMode(token);

  p.fosterParentingEnabled = savedFosterParentingState;
} // The "in table text" insertion mode
//------------------------------------------------------------------


function whitespaceCharacterInTableText(p, token) {
  p.pendingCharacterTokens.push(token);
}

function characterInTableText(p, token) {
  p.pendingCharacterTokens.push(token);
  p.hasNonWhitespacePendingCharacterToken = true;
}

function tokenInTableText(p, token) {
  var i = 0;

  if (p.hasNonWhitespacePendingCharacterToken) {
    for (; i < p.pendingCharacterTokens.length; i++) {
      tokenInTable(p, p.pendingCharacterTokens[i]);
    }
  } else {
    for (; i < p.pendingCharacterTokens.length; i++) {
      p._insertCharacters(p.pendingCharacterTokens[i]);
    }
  }

  p.insertionMode = p.originalInsertionMode;

  p._processToken(token);
} // The "in caption" insertion mode
//------------------------------------------------------------------


function startTagInCaption(p, token) {
  var tn = token.tagName;

  if (tn === $.CAPTION || tn === $.COL || tn === $.COLGROUP || tn === $.TBODY || tn === $.TD || tn === $.TFOOT || tn === $.TH || tn === $.THEAD || tn === $.TR) {
    if (p.openElements.hasInTableScope($.CAPTION)) {
      p.openElements.generateImpliedEndTags();
      p.openElements.popUntilTagNamePopped($.CAPTION);
      p.activeFormattingElements.clearToLastMarker();
      p.insertionMode = IN_TABLE_MODE;

      p._processToken(token);
    }
  } else {
    startTagInBody(p, token);
  }
}

function endTagInCaption(p, token) {
  var tn = token.tagName;

  if (tn === $.CAPTION || tn === $.TABLE) {
    if (p.openElements.hasInTableScope($.CAPTION)) {
      p.openElements.generateImpliedEndTags();
      p.openElements.popUntilTagNamePopped($.CAPTION);
      p.activeFormattingElements.clearToLastMarker();
      p.insertionMode = IN_TABLE_MODE;

      if (tn === $.TABLE) {
        p._processToken(token);
      }
    }
  } else if (tn !== $.BODY && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML && tn !== $.TBODY && tn !== $.TD && tn !== $.TFOOT && tn !== $.TH && tn !== $.THEAD && tn !== $.TR) {
    endTagInBody(p, token);
  }
} // The "in column group" insertion mode
//------------------------------------------------------------------


function startTagInColumnGroup(p, token) {
  var tn = token.tagName;

  if (tn === $.HTML) {
    startTagInBody(p, token);
  } else if (tn === $.COL) {
    p._appendElement(token, NS.HTML);

    token.ackSelfClosing = true;
  } else if (tn === $.TEMPLATE) {
    startTagInHead(p, token);
  } else {
    tokenInColumnGroup(p, token);
  }
}

function endTagInColumnGroup(p, token) {
  var tn = token.tagName;

  if (tn === $.COLGROUP) {
    if (p.openElements.currentTagName === $.COLGROUP) {
      p.openElements.pop();
      p.insertionMode = IN_TABLE_MODE;
    }
  } else if (tn === $.TEMPLATE) {
    endTagInHead(p, token);
  } else if (tn !== $.COL) {
    tokenInColumnGroup(p, token);
  }
}

function tokenInColumnGroup(p, token) {
  if (p.openElements.currentTagName === $.COLGROUP) {
    p.openElements.pop();
    p.insertionMode = IN_TABLE_MODE;

    p._processToken(token);
  }
} // The "in table body" insertion mode
//------------------------------------------------------------------


function startTagInTableBody(p, token) {
  var tn = token.tagName;

  if (tn === $.TR) {
    p.openElements.clearBackToTableBodyContext();

    p._insertElement(token, NS.HTML);

    p.insertionMode = IN_ROW_MODE;
  } else if (tn === $.TH || tn === $.TD) {
    p.openElements.clearBackToTableBodyContext();

    p._insertFakeElement($.TR);

    p.insertionMode = IN_ROW_MODE;

    p._processToken(token);
  } else if (tn === $.CAPTION || tn === $.COL || tn === $.COLGROUP || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {
    if (p.openElements.hasTableBodyContextInTableScope()) {
      p.openElements.clearBackToTableBodyContext();
      p.openElements.pop();
      p.insertionMode = IN_TABLE_MODE;

      p._processToken(token);
    }
  } else {
    startTagInTable(p, token);
  }
}

function endTagInTableBody(p, token) {
  var tn = token.tagName;

  if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {
    if (p.openElements.hasInTableScope(tn)) {
      p.openElements.clearBackToTableBodyContext();
      p.openElements.pop();
      p.insertionMode = IN_TABLE_MODE;
    }
  } else if (tn === $.TABLE) {
    if (p.openElements.hasTableBodyContextInTableScope()) {
      p.openElements.clearBackToTableBodyContext();
      p.openElements.pop();
      p.insertionMode = IN_TABLE_MODE;

      p._processToken(token);
    }
  } else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP || tn !== $.HTML && tn !== $.TD && tn !== $.TH && tn !== $.TR) {
    endTagInTable(p, token);
  }
} // The "in row" insertion mode
//------------------------------------------------------------------


function startTagInRow(p, token) {
  var tn = token.tagName;

  if (tn === $.TH || tn === $.TD) {
    p.openElements.clearBackToTableRowContext();

    p._insertElement(token, NS.HTML);

    p.insertionMode = IN_CELL_MODE;
    p.activeFormattingElements.insertMarker();
  } else if (tn === $.CAPTION || tn === $.COL || tn === $.COLGROUP || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR) {
    if (p.openElements.hasInTableScope($.TR)) {
      p.openElements.clearBackToTableRowContext();
      p.openElements.pop();
      p.insertionMode = IN_TABLE_BODY_MODE;

      p._processToken(token);
    }
  } else {
    startTagInTable(p, token);
  }
}

function endTagInRow(p, token) {
  var tn = token.tagName;

  if (tn === $.TR) {
    if (p.openElements.hasInTableScope($.TR)) {
      p.openElements.clearBackToTableRowContext();
      p.openElements.pop();
      p.insertionMode = IN_TABLE_BODY_MODE;
    }
  } else if (tn === $.TABLE) {
    if (p.openElements.hasInTableScope($.TR)) {
      p.openElements.clearBackToTableRowContext();
      p.openElements.pop();
      p.insertionMode = IN_TABLE_BODY_MODE;

      p._processToken(token);
    }
  } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {
    if (p.openElements.hasInTableScope(tn) || p.openElements.hasInTableScope($.TR)) {
      p.openElements.clearBackToTableRowContext();
      p.openElements.pop();
      p.insertionMode = IN_TABLE_BODY_MODE;

      p._processToken(token);
    }
  } else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP || tn !== $.HTML && tn !== $.TD && tn !== $.TH) {
    endTagInTable(p, token);
  }
} // The "in cell" insertion mode
//------------------------------------------------------------------


function startTagInCell(p, token) {
  var tn = token.tagName;

  if (tn === $.CAPTION || tn === $.COL || tn === $.COLGROUP || tn === $.TBODY || tn === $.TD || tn === $.TFOOT || tn === $.TH || tn === $.THEAD || tn === $.TR) {
    if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {
      p._closeTableCell();

      p._processToken(token);
    }
  } else {
    startTagInBody(p, token);
  }
}

function endTagInCell(p, token) {
  var tn = token.tagName;

  if (tn === $.TD || tn === $.TH) {
    if (p.openElements.hasInTableScope(tn)) {
      p.openElements.generateImpliedEndTags();
      p.openElements.popUntilTagNamePopped(tn);
      p.activeFormattingElements.clearToLastMarker();
      p.insertionMode = IN_ROW_MODE;
    }
  } else if (tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR) {
    if (p.openElements.hasInTableScope(tn)) {
      p._closeTableCell();

      p._processToken(token);
    }
  } else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML) {
    endTagInBody(p, token);
  }
} // The "in select" insertion mode
//------------------------------------------------------------------


function startTagInSelect(p, token) {
  var tn = token.tagName;

  if (tn === $.HTML) {
    startTagInBody(p, token);
  } else if (tn === $.OPTION) {
    if (p.openElements.currentTagName === $.OPTION) {
      p.openElements.pop();
    }

    p._insertElement(token, NS.HTML);
  } else if (tn === $.OPTGROUP) {
    if (p.openElements.currentTagName === $.OPTION) {
      p.openElements.pop();
    }

    if (p.openElements.currentTagName === $.OPTGROUP) {
      p.openElements.pop();
    }

    p._insertElement(token, NS.HTML);
  } else if (tn === $.INPUT || tn === $.KEYGEN || tn === $.TEXTAREA || tn === $.SELECT) {
    if (p.openElements.hasInSelectScope($.SELECT)) {
      p.openElements.popUntilTagNamePopped($.SELECT);

      p._resetInsertionMode();

      if (tn !== $.SELECT) {
        p._processToken(token);
      }
    }
  } else if (tn === $.SCRIPT || tn === $.TEMPLATE) {
    startTagInHead(p, token);
  }
}

function endTagInSelect(p, token) {
  var tn = token.tagName;

  if (tn === $.OPTGROUP) {
    var prevOpenElement = p.openElements.items[p.openElements.stackTop - 1];
    var prevOpenElementTn = prevOpenElement && p.treeAdapter.getTagName(prevOpenElement);

    if (p.openElements.currentTagName === $.OPTION && prevOpenElementTn === $.OPTGROUP) {
      p.openElements.pop();
    }

    if (p.openElements.currentTagName === $.OPTGROUP) {
      p.openElements.pop();
    }
  } else if (tn === $.OPTION) {
    if (p.openElements.currentTagName === $.OPTION) {
      p.openElements.pop();
    }
  } else if (tn === $.SELECT && p.openElements.hasInSelectScope($.SELECT)) {
    p.openElements.popUntilTagNamePopped($.SELECT);

    p._resetInsertionMode();
  } else if (tn === $.TEMPLATE) {
    endTagInHead(p, token);
  }
} //12.2.5.4.17 The "in select in table" insertion mode
//------------------------------------------------------------------


function startTagInSelectInTable(p, token) {
  var tn = token.tagName;

  if (tn === $.CAPTION || tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR || tn === $.TD || tn === $.TH) {
    p.openElements.popUntilTagNamePopped($.SELECT);

    p._resetInsertionMode();

    p._processToken(token);
  } else {
    startTagInSelect(p, token);
  }
}

function endTagInSelectInTable(p, token) {
  var tn = token.tagName;

  if (tn === $.CAPTION || tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR || tn === $.TD || tn === $.TH) {
    if (p.openElements.hasInTableScope(tn)) {
      p.openElements.popUntilTagNamePopped($.SELECT);

      p._resetInsertionMode();

      p._processToken(token);
    }
  } else {
    endTagInSelect(p, token);
  }
} // The "in template" insertion mode
//------------------------------------------------------------------


function startTagInTemplate(p, token) {
  var tn = token.tagName;

  if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META || tn === $.NOFRAMES || tn === $.SCRIPT || tn === $.STYLE || tn === $.TEMPLATE || tn === $.TITLE) {
    startTagInHead(p, token);
  } else {
    var newInsertionMode = TEMPLATE_INSERTION_MODE_SWITCH_MAP[tn] || IN_BODY_MODE;

    p._popTmplInsertionMode();

    p._pushTmplInsertionMode(newInsertionMode);

    p.insertionMode = newInsertionMode;

    p._processToken(token);
  }
}

function endTagInTemplate(p, token) {
  if (token.tagName === $.TEMPLATE) {
    endTagInHead(p, token);
  }
}

function eofInTemplate(p, token) {
  if (p.openElements.tmplCount > 0) {
    p.openElements.popUntilTagNamePopped($.TEMPLATE);
    p.activeFormattingElements.clearToLastMarker();

    p._popTmplInsertionMode();

    p._resetInsertionMode();

    p._processToken(token);
  } else {
    p.stopped = true;
  }
} // The "after body" insertion mode
//------------------------------------------------------------------


function startTagAfterBody(p, token) {
  if (token.tagName === $.HTML) {
    startTagInBody(p, token);
  } else {
    tokenAfterBody(p, token);
  }
}

function endTagAfterBody(p, token) {
  if (token.tagName === $.HTML) {
    if (!p.fragmentContext) {
      p.insertionMode = AFTER_AFTER_BODY_MODE;
    }
  } else {
    tokenAfterBody(p, token);
  }
}

function tokenAfterBody(p, token) {
  p.insertionMode = IN_BODY_MODE;

  p._processToken(token);
} // The "in frameset" insertion mode
//------------------------------------------------------------------


function startTagInFrameset(p, token) {
  var tn = token.tagName;

  if (tn === $.HTML) {
    startTagInBody(p, token);
  } else if (tn === $.FRAMESET) {
    p._insertElement(token, NS.HTML);
  } else if (tn === $.FRAME) {
    p._appendElement(token, NS.HTML);

    token.ackSelfClosing = true;
  } else if (tn === $.NOFRAMES) {
    startTagInHead(p, token);
  }
}

function endTagInFrameset(p, token) {
  if (token.tagName === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {
    p.openElements.pop();

    if (!p.fragmentContext && p.openElements.currentTagName !== $.FRAMESET) {
      p.insertionMode = AFTER_FRAMESET_MODE;
    }
  }
} // The "after frameset" insertion mode
//------------------------------------------------------------------


function startTagAfterFrameset(p, token) {
  var tn = token.tagName;

  if (tn === $.HTML) {
    startTagInBody(p, token);
  } else if (tn === $.NOFRAMES) {
    startTagInHead(p, token);
  }
}

function endTagAfterFrameset(p, token) {
  if (token.tagName === $.HTML) {
    p.insertionMode = AFTER_AFTER_FRAMESET_MODE;
  }
} // The "after after body" insertion mode
//------------------------------------------------------------------


function startTagAfterAfterBody(p, token) {
  if (token.tagName === $.HTML) {
    startTagInBody(p, token);
  } else {
    tokenAfterAfterBody(p, token);
  }
}

function tokenAfterAfterBody(p, token) {
  p.insertionMode = IN_BODY_MODE;

  p._processToken(token);
} // The "after after frameset" insertion mode
//------------------------------------------------------------------


function startTagAfterAfterFrameset(p, token) {
  var tn = token.tagName;

  if (tn === $.HTML) {
    startTagInBody(p, token);
  } else if (tn === $.NOFRAMES) {
    startTagInHead(p, token);
  }
} // The rules for parsing tokens in foreign content
//------------------------------------------------------------------


function nullCharacterInForeignContent(p, token) {
  token.chars = unicode.REPLACEMENT_CHARACTER;

  p._insertCharacters(token);
}

function characterInForeignContent(p, token) {
  p._insertCharacters(token);

  p.framesetOk = false;
}

function startTagInForeignContent(p, token) {
  if (foreignContent.causesExit(token) && !p.fragmentContext) {
    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML && !p._isIntegrationPoint(p.openElements.current)) {
      p.openElements.pop();
    }

    p._processToken(token);
  } else {
    var current = p._getAdjustedCurrentElement();

    var currentNs = p.treeAdapter.getNamespaceURI(current);

    if (currentNs === NS.MATHML) {
      foreignContent.adjustTokenMathMLAttrs(token);
    } else if (currentNs === NS.SVG) {
      foreignContent.adjustTokenSVGTagName(token);
      foreignContent.adjustTokenSVGAttrs(token);
    }

    foreignContent.adjustTokenXMLAttrs(token);

    if (token.selfClosing) {
      p._appendElement(token, currentNs);
    } else {
      p._insertElement(token, currentNs);
    }

    token.ackSelfClosing = true;
  }
}

function endTagInForeignContent(p, token) {
  for (var i = p.openElements.stackTop; i > 0; i--) {
    var element = p.openElements.items[i];

    if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {
      p._processToken(token);

      break;
    }

    if (p.treeAdapter.getTagName(element).toLowerCase() === token.tagName) {
      p.openElements.popUntilElementPopped(element);
      break;
    }
  }
}

/***/ }),

/***/ 4808:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var _classCallCheck = (__webpack_require__(4575)["default"]);

var _createClass = (__webpack_require__(3913)["default"]);

var HTML = __webpack_require__(9539); //Aliases


var $ = HTML.TAG_NAMES;
var NS = HTML.NAMESPACES; //Element utils
//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.
//It's faster than using dictionary.

function isImpliedEndTagRequired(tn) {
  switch (tn.length) {
    case 1:
      return tn === $.P;

    case 2:
      return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;

    case 3:
      return tn === $.RTC;

    case 6:
      return tn === $.OPTION;

    case 8:
      return tn === $.OPTGROUP;
  }

  return false;
}

function isImpliedEndTagRequiredThoroughly(tn) {
  switch (tn.length) {
    case 1:
      return tn === $.P;

    case 2:
      return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI || tn === $.TD || tn === $.TH || tn === $.TR;

    case 3:
      return tn === $.RTC;

    case 5:
      return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;

    case 6:
      return tn === $.OPTION;

    case 7:
      return tn === $.CAPTION;

    case 8:
      return tn === $.OPTGROUP || tn === $.COLGROUP;
  }

  return false;
}

function isScopingElement(tn, ns) {
  switch (tn.length) {
    case 2:
      if (tn === $.TD || tn === $.TH) {
        return ns === NS.HTML;
      } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {
        return ns === NS.MATHML;
      }

      break;

    case 4:
      if (tn === $.HTML) {
        return ns === NS.HTML;
      } else if (tn === $.DESC) {
        return ns === NS.SVG;
      }

      break;

    case 5:
      if (tn === $.TABLE) {
        return ns === NS.HTML;
      } else if (tn === $.MTEXT) {
        return ns === NS.MATHML;
      } else if (tn === $.TITLE) {
        return ns === NS.SVG;
      }

      break;

    case 6:
      return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;

    case 7:
      return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;

    case 8:
      return tn === $.TEMPLATE && ns === NS.HTML;

    case 13:
      return tn === $.FOREIGN_OBJECT && ns === NS.SVG;

    case 14:
      return tn === $.ANNOTATION_XML && ns === NS.MATHML;
  }

  return false;
} //Stack of open elements


var OpenElementStack = /*#__PURE__*/function () {
  function OpenElementStack(document, treeAdapter) {
    _classCallCheck(this, OpenElementStack);

    this.stackTop = -1;
    this.items = [];
    this.current = document;
    this.currentTagName = null;
    this.currentTmplContent = null;
    this.tmplCount = 0;
    this.treeAdapter = treeAdapter;
  } //Index of element


  _createClass(OpenElementStack, [{
    key: "_indexOf",
    value: function _indexOf(element) {
      var idx = -1;

      for (var i = this.stackTop; i >= 0; i--) {
        if (this.items[i] === element) {
          idx = i;
          break;
        }
      }

      return idx;
    } //Update current element

  }, {
    key: "_isInTemplate",
    value: function _isInTemplate() {
      return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;
    }
  }, {
    key: "_updateCurrentElement",
    value: function _updateCurrentElement() {
      this.current = this.items[this.stackTop];
      this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);
      this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;
    } //Mutations

  }, {
    key: "push",
    value: function push(element) {
      this.items[++this.stackTop] = element;

      this._updateCurrentElement();

      if (this._isInTemplate()) {
        this.tmplCount++;
      }
    }
  }, {
    key: "pop",
    value: function pop() {
      this.stackTop--;

      if (this.tmplCount > 0 && this._isInTemplate()) {
        this.tmplCount--;
      }

      this._updateCurrentElement();
    }
  }, {
    key: "replace",
    value: function replace(oldElement, newElement) {
      var idx = this._indexOf(oldElement);

      this.items[idx] = newElement;

      if (idx === this.stackTop) {
        this._updateCurrentElement();
      }
    }
  }, {
    key: "insertAfter",
    value: function insertAfter(referenceElement, newElement) {
      var insertionIdx = this._indexOf(referenceElement) + 1;
      this.items.splice(insertionIdx, 0, newElement);

      if (insertionIdx === ++this.stackTop) {
        this._updateCurrentElement();
      }
    }
  }, {
    key: "popUntilTagNamePopped",
    value: function popUntilTagNamePopped(tagName) {
      while (this.stackTop > -1) {
        var tn = this.currentTagName;
        var ns = this.treeAdapter.getNamespaceURI(this.current);
        this.pop();

        if (tn === tagName && ns === NS.HTML) {
          break;
        }
      }
    }
  }, {
    key: "popUntilElementPopped",
    value: function popUntilElementPopped(element) {
      while (this.stackTop > -1) {
        var poppedElement = this.current;
        this.pop();

        if (poppedElement === element) {
          break;
        }
      }
    }
  }, {
    key: "popUntilNumberedHeaderPopped",
    value: function popUntilNumberedHeaderPopped() {
      while (this.stackTop > -1) {
        var tn = this.currentTagName;
        var ns = this.treeAdapter.getNamespaceURI(this.current);
        this.pop();

        if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6 && ns === NS.HTML) {
          break;
        }
      }
    }
  }, {
    key: "popUntilTableCellPopped",
    value: function popUntilTableCellPopped() {
      while (this.stackTop > -1) {
        var tn = this.currentTagName;
        var ns = this.treeAdapter.getNamespaceURI(this.current);
        this.pop();

        if (tn === $.TD || tn === $.TH && ns === NS.HTML) {
          break;
        }
      }
    }
  }, {
    key: "popAllUpToHtmlElement",
    value: function popAllUpToHtmlElement() {
      //NOTE: here we assume that root <html> element is always first in the open element stack, so
      //we perform this fast stack clean up.
      this.stackTop = 0;

      this._updateCurrentElement();
    }
  }, {
    key: "clearBackToTableContext",
    value: function clearBackToTableContext() {
      while (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {
        this.pop();
      }
    }
  }, {
    key: "clearBackToTableBodyContext",
    value: function clearBackToTableBodyContext() {
      while (this.currentTagName !== $.TBODY && this.currentTagName !== $.TFOOT && this.currentTagName !== $.THEAD && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {
        this.pop();
      }
    }
  }, {
    key: "clearBackToTableRowContext",
    value: function clearBackToTableRowContext() {
      while (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {
        this.pop();
      }
    }
  }, {
    key: "remove",
    value: function remove(element) {
      for (var i = this.stackTop; i >= 0; i--) {
        if (this.items[i] === element) {
          this.items.splice(i, 1);
          this.stackTop--;

          this._updateCurrentElement();

          break;
        }
      }
    } //Search

  }, {
    key: "tryPeekProperlyNestedBodyElement",
    value: function tryPeekProperlyNestedBodyElement() {
      //Properly nested <body> element (should be second element in stack).
      var element = this.items[1];
      return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;
    }
  }, {
    key: "contains",
    value: function contains(element) {
      return this._indexOf(element) > -1;
    }
  }, {
    key: "getCommonAncestor",
    value: function getCommonAncestor(element) {
      var elementIdx = this._indexOf(element);

      return --elementIdx >= 0 ? this.items[elementIdx] : null;
    }
  }, {
    key: "isRootHtmlElementCurrent",
    value: function isRootHtmlElementCurrent() {
      return this.stackTop === 0 && this.currentTagName === $.HTML;
    } //Element in scope

  }, {
    key: "hasInScope",
    value: function hasInScope(tagName) {
      for (var i = this.stackTop; i >= 0; i--) {
        var tn = this.treeAdapter.getTagName(this.items[i]);
        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);

        if (tn === tagName && ns === NS.HTML) {
          return true;
        }

        if (isScopingElement(tn, ns)) {
          return false;
        }
      }

      return true;
    }
  }, {
    key: "hasNumberedHeaderInScope",
    value: function hasNumberedHeaderInScope() {
      for (var i = this.stackTop; i >= 0; i--) {
        var tn = this.treeAdapter.getTagName(this.items[i]);
        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);

        if ((tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) && ns === NS.HTML) {
          return true;
        }

        if (isScopingElement(tn, ns)) {
          return false;
        }
      }

      return true;
    }
  }, {
    key: "hasInListItemScope",
    value: function hasInListItemScope(tagName) {
      for (var i = this.stackTop; i >= 0; i--) {
        var tn = this.treeAdapter.getTagName(this.items[i]);
        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);

        if (tn === tagName && ns === NS.HTML) {
          return true;
        }

        if ((tn === $.UL || tn === $.OL) && ns === NS.HTML || isScopingElement(tn, ns)) {
          return false;
        }
      }

      return true;
    }
  }, {
    key: "hasInButtonScope",
    value: function hasInButtonScope(tagName) {
      for (var i = this.stackTop; i >= 0; i--) {
        var tn = this.treeAdapter.getTagName(this.items[i]);
        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);

        if (tn === tagName && ns === NS.HTML) {
          return true;
        }

        if (tn === $.BUTTON && ns === NS.HTML || isScopingElement(tn, ns)) {
          return false;
        }
      }

      return true;
    }
  }, {
    key: "hasInTableScope",
    value: function hasInTableScope(tagName) {
      for (var i = this.stackTop; i >= 0; i--) {
        var tn = this.treeAdapter.getTagName(this.items[i]);
        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);

        if (ns !== NS.HTML) {
          continue;
        }

        if (tn === tagName) {
          return true;
        }

        if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {
          return false;
        }
      }

      return true;
    }
  }, {
    key: "hasTableBodyContextInTableScope",
    value: function hasTableBodyContextInTableScope() {
      for (var i = this.stackTop; i >= 0; i--) {
        var tn = this.treeAdapter.getTagName(this.items[i]);
        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);

        if (ns !== NS.HTML) {
          continue;
        }

        if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {
          return true;
        }

        if (tn === $.TABLE || tn === $.HTML) {
          return false;
        }
      }

      return true;
    }
  }, {
    key: "hasInSelectScope",
    value: function hasInSelectScope(tagName) {
      for (var i = this.stackTop; i >= 0; i--) {
        var tn = this.treeAdapter.getTagName(this.items[i]);
        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);

        if (ns !== NS.HTML) {
          continue;
        }

        if (tn === tagName) {
          return true;
        }

        if (tn !== $.OPTION && tn !== $.OPTGROUP) {
          return false;
        }
      }

      return true;
    } //Implied end tags

  }, {
    key: "generateImpliedEndTags",
    value: function generateImpliedEndTags() {
      while (isImpliedEndTagRequired(this.currentTagName)) {
        this.pop();
      }
    }
  }, {
    key: "generateImpliedEndTagsThoroughly",
    value: function generateImpliedEndTagsThoroughly() {
      while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {
        this.pop();
      }
    }
  }, {
    key: "generateImpliedEndTagsWithExclusion",
    value: function generateImpliedEndTagsWithExclusion(exclusionTagName) {
      while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {
        this.pop();
      }
    }
  }]);

  return OpenElementStack;
}();

module.exports = OpenElementStack;

/***/ }),

/***/ 3085:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var _classCallCheck = (__webpack_require__(4575)["default"]);

var _createClass = (__webpack_require__(3913)["default"]);

var Preprocessor = __webpack_require__(147);

var unicode = __webpack_require__(4529);

var neTree = __webpack_require__(9908);

var ERR = __webpack_require__(4551); //Aliases


var $ = unicode.CODE_POINTS;
var $$ = unicode.CODE_POINT_SEQUENCES; //C1 Unicode control character reference replacements

var C1_CONTROLS_REFERENCE_REPLACEMENTS = {
  0x80: 0x20ac,
  0x82: 0x201a,
  0x83: 0x0192,
  0x84: 0x201e,
  0x85: 0x2026,
  0x86: 0x2020,
  0x87: 0x2021,
  0x88: 0x02c6,
  0x89: 0x2030,
  0x8a: 0x0160,
  0x8b: 0x2039,
  0x8c: 0x0152,
  0x8e: 0x017d,
  0x91: 0x2018,
  0x92: 0x2019,
  0x93: 0x201c,
  0x94: 0x201d,
  0x95: 0x2022,
  0x96: 0x2013,
  0x97: 0x2014,
  0x98: 0x02dc,
  0x99: 0x2122,
  0x9a: 0x0161,
  0x9b: 0x203a,
  0x9c: 0x0153,
  0x9e: 0x017e,
  0x9f: 0x0178
}; // Named entity tree flags

var HAS_DATA_FLAG = 1 << 0;
var DATA_DUPLET_FLAG = 1 << 1;
var HAS_BRANCHES_FLAG = 1 << 2;
var MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG; //States

var DATA_STATE = 'DATA_STATE';
var RCDATA_STATE = 'RCDATA_STATE';
var RAWTEXT_STATE = 'RAWTEXT_STATE';
var SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE';
var PLAINTEXT_STATE = 'PLAINTEXT_STATE';
var TAG_OPEN_STATE = 'TAG_OPEN_STATE';
var END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE';
var TAG_NAME_STATE = 'TAG_NAME_STATE';
var RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE';
var RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE';
var RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE';
var RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE';
var RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE';
var RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE';
var SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE';
var SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE';
var SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE';
var SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE';
var SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE';
var SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE';
var SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE';
var SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE';
var SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE';
var SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE';
var SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE';
var SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE';
var SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE';
var SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE';
var SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE';
var SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE';
var SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE';
var BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE';
var ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE';
var AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE';
var BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE';
var ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE';
var ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE';
var ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE';
var AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE';
var SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE';
var BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE';
var MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE';
var COMMENT_START_STATE = 'COMMENT_START_STATE';
var COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE';
var COMMENT_STATE = 'COMMENT_STATE';
var COMMENT_LESS_THAN_SIGN_STATE = 'COMMENT_LESS_THAN_SIGN_STATE';
var COMMENT_LESS_THAN_SIGN_BANG_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_STATE';
var COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE';
var COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE';
var COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE';
var COMMENT_END_STATE = 'COMMENT_END_STATE';
var COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE';
var DOCTYPE_STATE = 'DOCTYPE_STATE';
var BEFORE_DOCTYPE_NAME_STATE = 'BEFORE_DOCTYPE_NAME_STATE';
var DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE';
var AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE';
var AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE = 'AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE';
var BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE';
var DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE';
var DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE';
var AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE';
var BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE';
var AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE = 'AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE';
var BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE';
var DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE';
var DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE';
var AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE';
var BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE';
var CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';
var CDATA_SECTION_BRACKET_STATE = 'CDATA_SECTION_BRACKET_STATE';
var CDATA_SECTION_END_STATE = 'CDATA_SECTION_END_STATE';
var CHARACTER_REFERENCE_STATE = 'CHARACTER_REFERENCE_STATE';
var NAMED_CHARACTER_REFERENCE_STATE = 'NAMED_CHARACTER_REFERENCE_STATE';
var AMBIGUOUS_AMPERSAND_STATE = 'AMBIGUOS_AMPERSAND_STATE';
var NUMERIC_CHARACTER_REFERENCE_STATE = 'NUMERIC_CHARACTER_REFERENCE_STATE';
var HEXADEMICAL_CHARACTER_REFERENCE_START_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_START_STATE';
var DECIMAL_CHARACTER_REFERENCE_START_STATE = 'DECIMAL_CHARACTER_REFERENCE_START_STATE';
var HEXADEMICAL_CHARACTER_REFERENCE_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_STATE';
var DECIMAL_CHARACTER_REFERENCE_STATE = 'DECIMAL_CHARACTER_REFERENCE_STATE';
var NUMERIC_CHARACTER_REFERENCE_END_STATE = 'NUMERIC_CHARACTER_REFERENCE_END_STATE'; //Utils
//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline
//this functions if they will be situated in another module due to context switch.
//Always perform inlining check before modifying this functions ('node --trace-inlining').

function isWhitespace(cp) {
  return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;
}

function isAsciiDigit(cp) {
  return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;
}

function isAsciiUpper(cp) {
  return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;
}

function isAsciiLower(cp) {
  return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;
}

function isAsciiLetter(cp) {
  return isAsciiLower(cp) || isAsciiUpper(cp);
}

function isAsciiAlphaNumeric(cp) {
  return isAsciiLetter(cp) || isAsciiDigit(cp);
}

function isAsciiUpperHexDigit(cp) {
  return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;
}

function isAsciiLowerHexDigit(cp) {
  return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;
}

function isAsciiHexDigit(cp) {
  return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);
}

function toAsciiLowerCodePoint(cp) {
  return cp + 0x0020;
} //NOTE: String.fromCharCode() function can handle only characters from BMP subset.
//So, we need to workaround this manually.
//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)


function toChar(cp) {
  if (cp <= 0xffff) {
    return String.fromCharCode(cp);
  }

  cp -= 0x10000;
  return String.fromCharCode(cp >>> 10 & 0x3ff | 0xd800) + String.fromCharCode(0xdc00 | cp & 0x3ff);
}

function toAsciiLowerChar(cp) {
  return String.fromCharCode(toAsciiLowerCodePoint(cp));
}

function findNamedEntityTreeBranch(nodeIx, cp) {
  var branchCount = neTree[++nodeIx];
  var lo = ++nodeIx;
  var hi = lo + branchCount - 1;

  while (lo <= hi) {
    var mid = lo + hi >>> 1;
    var midCp = neTree[mid];

    if (midCp < cp) {
      lo = mid + 1;
    } else if (midCp > cp) {
      hi = mid - 1;
    } else {
      return neTree[mid + branchCount];
    }
  }

  return -1;
} //Tokenizer


var Tokenizer = /*#__PURE__*/function () {
  function Tokenizer() {
    _classCallCheck(this, Tokenizer);

    this.preprocessor = new Preprocessor();
    this.tokenQueue = [];
    this.allowCDATA = false;
    this.state = DATA_STATE;
    this.returnState = '';
    this.charRefCode = -1;
    this.tempBuff = [];
    this.lastStartTagName = '';
    this.consumedAfterSnapshot = -1;
    this.active = false;
    this.currentCharacterToken = null;
    this.currentToken = null;
    this.currentAttr = null;
  } //Errors


  _createClass(Tokenizer, [{
    key: "_err",
    value: function _err() {// NOTE: err reporting is noop by default. Enabled by mixin.
    }
  }, {
    key: "_errOnNextCodePoint",
    value: function _errOnNextCodePoint(err) {
      this._consume();

      this._err(err);

      this._unconsume();
    } //API

  }, {
    key: "getNextToken",
    value: function getNextToken() {
      while (!this.tokenQueue.length && this.active) {
        this.consumedAfterSnapshot = 0;

        var cp = this._consume();

        if (!this._ensureHibernation()) {
          this[this.state](cp);
        }
      }

      return this.tokenQueue.shift();
    }
  }, {
    key: "write",
    value: function write(chunk, isLastChunk) {
      this.active = true;
      this.preprocessor.write(chunk, isLastChunk);
    }
  }, {
    key: "insertHtmlAtCurrentPos",
    value: function insertHtmlAtCurrentPos(chunk) {
      this.active = true;
      this.preprocessor.insertHtmlAtCurrentPos(chunk);
    } //Hibernation

  }, {
    key: "_ensureHibernation",
    value: function _ensureHibernation() {
      if (this.preprocessor.endOfChunkHit) {
        for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--) {
          this.preprocessor.retreat();
        }

        this.active = false;
        this.tokenQueue.push({
          type: Tokenizer.HIBERNATION_TOKEN
        });
        return true;
      }

      return false;
    } //Consumption

  }, {
    key: "_consume",
    value: function _consume() {
      this.consumedAfterSnapshot++;
      return this.preprocessor.advance();
    }
  }, {
    key: "_unconsume",
    value: function _unconsume() {
      this.consumedAfterSnapshot--;
      this.preprocessor.retreat();
    }
  }, {
    key: "_reconsumeInState",
    value: function _reconsumeInState(state) {
      this.state = state;

      this._unconsume();
    }
  }, {
    key: "_consumeSequenceIfMatch",
    value: function _consumeSequenceIfMatch(pattern, startCp, caseSensitive) {
      var consumedCount = 0;
      var isMatch = true;
      var patternLength = pattern.length;
      var patternPos = 0;
      var cp = startCp;
      var patternCp = void 0;

      for (; patternPos < patternLength; patternPos++) {
        if (patternPos > 0) {
          cp = this._consume();
          consumedCount++;
        }

        if (cp === $.EOF) {
          isMatch = false;
          break;
        }

        patternCp = pattern[patternPos];

        if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {
          isMatch = false;
          break;
        }
      }

      if (!isMatch) {
        while (consumedCount--) {
          this._unconsume();
        }
      }

      return isMatch;
    } //Temp buffer

  }, {
    key: "_isTempBufferEqualToScriptString",
    value: function _isTempBufferEqualToScriptString() {
      if (this.tempBuff.length !== $$.SCRIPT_STRING.length) {
        return false;
      }

      for (var i = 0; i < this.tempBuff.length; i++) {
        if (this.tempBuff[i] !== $$.SCRIPT_STRING[i]) {
          return false;
        }
      }

      return true;
    } //Token creation

  }, {
    key: "_createStartTagToken",
    value: function _createStartTagToken() {
      this.currentToken = {
        type: Tokenizer.START_TAG_TOKEN,
        tagName: '',
        selfClosing: false,
        ackSelfClosing: false,
        attrs: []
      };
    }
  }, {
    key: "_createEndTagToken",
    value: function _createEndTagToken() {
      this.currentToken = {
        type: Tokenizer.END_TAG_TOKEN,
        tagName: '',
        selfClosing: false,
        attrs: []
      };
    }
  }, {
    key: "_createCommentToken",
    value: function _createCommentToken() {
      this.currentToken = {
        type: Tokenizer.COMMENT_TOKEN,
        data: ''
      };
    }
  }, {
    key: "_createDoctypeToken",
    value: function _createDoctypeToken(initialName) {
      this.currentToken = {
        type: Tokenizer.DOCTYPE_TOKEN,
        name: initialName,
        forceQuirks: false,
        publicId: null,
        systemId: null
      };
    }
  }, {
    key: "_createCharacterToken",
    value: function _createCharacterToken(type, ch) {
      this.currentCharacterToken = {
        type: type,
        chars: ch
      };
    }
  }, {
    key: "_createEOFToken",
    value: function _createEOFToken() {
      this.currentToken = {
        type: Tokenizer.EOF_TOKEN
      };
    } //Tag attributes

  }, {
    key: "_createAttr",
    value: function _createAttr(attrNameFirstCh) {
      this.currentAttr = {
        name: attrNameFirstCh,
        value: ''
      };
    }
  }, {
    key: "_leaveAttrName",
    value: function _leaveAttrName(toState) {
      if (Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) === null) {
        this.currentToken.attrs.push(this.currentAttr);
      } else {
        this._err(ERR.duplicateAttribute);
      }

      this.state = toState;
    }
  }, {
    key: "_leaveAttrValue",
    value: function _leaveAttrValue(toState) {
      this.state = toState;
    } //Token emission

  }, {
    key: "_emitCurrentToken",
    value: function _emitCurrentToken() {
      this._emitCurrentCharacterToken();

      var ct = this.currentToken;
      this.currentToken = null; //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.

      if (ct.type === Tokenizer.START_TAG_TOKEN) {
        this.lastStartTagName = ct.tagName;
      } else if (ct.type === Tokenizer.END_TAG_TOKEN) {
        if (ct.attrs.length > 0) {
          this._err(ERR.endTagWithAttributes);
        }

        if (ct.selfClosing) {
          this._err(ERR.endTagWithTrailingSolidus);
        }
      }

      this.tokenQueue.push(ct);
    }
  }, {
    key: "_emitCurrentCharacterToken",
    value: function _emitCurrentCharacterToken() {
      if (this.currentCharacterToken) {
        this.tokenQueue.push(this.currentCharacterToken);
        this.currentCharacterToken = null;
      }
    }
  }, {
    key: "_emitEOFToken",
    value: function _emitEOFToken() {
      this._createEOFToken();

      this._emitCurrentToken();
    } //Characters emission
    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).
    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.
    //If we have a sequence of characters that belong to the same group, parser can process it
    //as a single solid character token.
    //So, there are 3 types of character tokens in parse5:
    //1)NULL_CHARACTER_TOKEN - \u0000-character sequences (e.g. '\u0000\u0000\u0000')
    //2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\n  \r\t   \f')
    //3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')

  }, {
    key: "_appendCharToCurrentCharacterToken",
    value: function _appendCharToCurrentCharacterToken(type, ch) {
      if (this.currentCharacterToken && this.currentCharacterToken.type !== type) {
        this._emitCurrentCharacterToken();
      }

      if (this.currentCharacterToken) {
        this.currentCharacterToken.chars += ch;
      } else {
        this._createCharacterToken(type, ch);
      }
    }
  }, {
    key: "_emitCodePoint",
    value: function _emitCodePoint(cp) {
      var type = Tokenizer.CHARACTER_TOKEN;

      if (isWhitespace(cp)) {
        type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;
      } else if (cp === $.NULL) {
        type = Tokenizer.NULL_CHARACTER_TOKEN;
      }

      this._appendCharToCurrentCharacterToken(type, toChar(cp));
    }
  }, {
    key: "_emitSeveralCodePoints",
    value: function _emitSeveralCodePoints(codePoints) {
      for (var i = 0; i < codePoints.length; i++) {
        this._emitCodePoint(codePoints[i]);
      }
    } //NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.
    //So we can avoid additional checks here.

  }, {
    key: "_emitChars",
    value: function _emitChars(ch) {
      this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);
    } // Character reference helpers

  }, {
    key: "_matchNamedCharacterReference",
    value: function _matchNamedCharacterReference(startCp) {
      var result = null;
      var excess = 1;
      var i = findNamedEntityTreeBranch(0, startCp);
      this.tempBuff.push(startCp);

      while (i > -1) {
        var current = neTree[i];
        var inNode = current < MAX_BRANCH_MARKER_VALUE;
        var nodeWithData = inNode && current & HAS_DATA_FLAG;

        if (nodeWithData) {
          //NOTE: we use greedy search, so we continue lookup at this point
          result = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];
          excess = 0;
        }

        var cp = this._consume();

        this.tempBuff.push(cp);
        excess++;

        if (cp === $.EOF) {
          break;
        }

        if (inNode) {
          i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;
        } else {
          i = cp === current ? ++i : -1;
        }
      }

      while (excess--) {
        this.tempBuff.pop();

        this._unconsume();
      }

      return result;
    }
  }, {
    key: "_isCharacterReferenceInAttribute",
    value: function _isCharacterReferenceInAttribute() {
      return this.returnState === ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE || this.returnState === ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE || this.returnState === ATTRIBUTE_VALUE_UNQUOTED_STATE;
    }
  }, {
    key: "_isCharacterReferenceAttributeQuirk",
    value: function _isCharacterReferenceAttributeQuirk(withSemicolon) {
      if (!withSemicolon && this._isCharacterReferenceInAttribute()) {
        var nextCp = this._consume();

        this._unconsume();

        return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);
      }

      return false;
    }
  }, {
    key: "_flushCodePointsConsumedAsCharacterReference",
    value: function _flushCodePointsConsumedAsCharacterReference() {
      if (this._isCharacterReferenceInAttribute()) {
        for (var i = 0; i < this.tempBuff.length; i++) {
          this.currentAttr.value += toChar(this.tempBuff[i]);
        }
      } else {
        this._emitSeveralCodePoints(this.tempBuff);
      }

      this.tempBuff = [];
    } // State machine
    // Data state
    //------------------------------------------------------------------

  }, {
    key: DATA_STATE,
    value: function value(cp) {
      this.preprocessor.dropParsedChunk();

      if (cp === $.LESS_THAN_SIGN) {
        this.state = TAG_OPEN_STATE;
      } else if (cp === $.AMPERSAND) {
        this.returnState = DATA_STATE;
        this.state = CHARACTER_REFERENCE_STATE;
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this._emitCodePoint(cp);
      } else if (cp === $.EOF) {
        this._emitEOFToken();
      } else {
        this._emitCodePoint(cp);
      }
    } //  RCDATA state
    //------------------------------------------------------------------

  }, {
    key: RCDATA_STATE,
    value: function value(cp) {
      this.preprocessor.dropParsedChunk();

      if (cp === $.AMPERSAND) {
        this.returnState = RCDATA_STATE;
        this.state = CHARACTER_REFERENCE_STATE;
      } else if (cp === $.LESS_THAN_SIGN) {
        this.state = RCDATA_LESS_THAN_SIGN_STATE;
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this._emitChars(unicode.REPLACEMENT_CHARACTER);
      } else if (cp === $.EOF) {
        this._emitEOFToken();
      } else {
        this._emitCodePoint(cp);
      }
    } // RAWTEXT state
    //------------------------------------------------------------------

  }, {
    key: RAWTEXT_STATE,
    value: function value(cp) {
      this.preprocessor.dropParsedChunk();

      if (cp === $.LESS_THAN_SIGN) {
        this.state = RAWTEXT_LESS_THAN_SIGN_STATE;
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this._emitChars(unicode.REPLACEMENT_CHARACTER);
      } else if (cp === $.EOF) {
        this._emitEOFToken();
      } else {
        this._emitCodePoint(cp);
      }
    } // Script data state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_STATE,
    value: function value(cp) {
      this.preprocessor.dropParsedChunk();

      if (cp === $.LESS_THAN_SIGN) {
        this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this._emitChars(unicode.REPLACEMENT_CHARACTER);
      } else if (cp === $.EOF) {
        this._emitEOFToken();
      } else {
        this._emitCodePoint(cp);
      }
    } // PLAINTEXT state
    //------------------------------------------------------------------

  }, {
    key: PLAINTEXT_STATE,
    value: function value(cp) {
      this.preprocessor.dropParsedChunk();

      if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this._emitChars(unicode.REPLACEMENT_CHARACTER);
      } else if (cp === $.EOF) {
        this._emitEOFToken();
      } else {
        this._emitCodePoint(cp);
      }
    } // Tag open state
    //------------------------------------------------------------------

  }, {
    key: TAG_OPEN_STATE,
    value: function value(cp) {
      if (cp === $.EXCLAMATION_MARK) {
        this.state = MARKUP_DECLARATION_OPEN_STATE;
      } else if (cp === $.SOLIDUS) {
        this.state = END_TAG_OPEN_STATE;
      } else if (isAsciiLetter(cp)) {
        this._createStartTagToken();

        this._reconsumeInState(TAG_NAME_STATE);
      } else if (cp === $.QUESTION_MARK) {
        this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);

        this._createCommentToken();

        this._reconsumeInState(BOGUS_COMMENT_STATE);
      } else if (cp === $.EOF) {
        this._err(ERR.eofBeforeTagName);

        this._emitChars('<');

        this._emitEOFToken();
      } else {
        this._err(ERR.invalidFirstCharacterOfTagName);

        this._emitChars('<');

        this._reconsumeInState(DATA_STATE);
      }
    } // End tag open state
    //------------------------------------------------------------------

  }, {
    key: END_TAG_OPEN_STATE,
    value: function value(cp) {
      if (isAsciiLetter(cp)) {
        this._createEndTagToken();

        this._reconsumeInState(TAG_NAME_STATE);
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._err(ERR.missingEndTagName);

        this.state = DATA_STATE;
      } else if (cp === $.EOF) {
        this._err(ERR.eofBeforeTagName);

        this._emitChars('</');

        this._emitEOFToken();
      } else {
        this._err(ERR.invalidFirstCharacterOfTagName);

        this._createCommentToken();

        this._reconsumeInState(BOGUS_COMMENT_STATE);
      }
    } // Tag name state
    //------------------------------------------------------------------

  }, {
    key: TAG_NAME_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        this.state = BEFORE_ATTRIBUTE_NAME_STATE;
      } else if (cp === $.SOLIDUS) {
        this.state = SELF_CLOSING_START_TAG_STATE;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this.state = DATA_STATE;

        this._emitCurrentToken();
      } else if (isAsciiUpper(cp)) {
        this.currentToken.tagName += toAsciiLowerChar(cp);
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this.currentToken.tagName += unicode.REPLACEMENT_CHARACTER;
      } else if (cp === $.EOF) {
        this._err(ERR.eofInTag);

        this._emitEOFToken();
      } else {
        this.currentToken.tagName += toChar(cp);
      }
    } // RCDATA less-than sign state
    //------------------------------------------------------------------

  }, {
    key: RCDATA_LESS_THAN_SIGN_STATE,
    value: function value(cp) {
      if (cp === $.SOLIDUS) {
        this.tempBuff = [];
        this.state = RCDATA_END_TAG_OPEN_STATE;
      } else {
        this._emitChars('<');

        this._reconsumeInState(RCDATA_STATE);
      }
    } // RCDATA end tag open state
    //------------------------------------------------------------------

  }, {
    key: RCDATA_END_TAG_OPEN_STATE,
    value: function value(cp) {
      if (isAsciiLetter(cp)) {
        this._createEndTagToken();

        this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);
      } else {
        this._emitChars('</');

        this._reconsumeInState(RCDATA_STATE);
      }
    } // RCDATA end tag name state
    //------------------------------------------------------------------

  }, {
    key: RCDATA_END_TAG_NAME_STATE,
    value: function value(cp) {
      if (isAsciiUpper(cp)) {
        this.currentToken.tagName += toAsciiLowerChar(cp);
        this.tempBuff.push(cp);
      } else if (isAsciiLower(cp)) {
        this.currentToken.tagName += toChar(cp);
        this.tempBuff.push(cp);
      } else {
        if (this.lastStartTagName === this.currentToken.tagName) {
          if (isWhitespace(cp)) {
            this.state = BEFORE_ATTRIBUTE_NAME_STATE;
            return;
          }

          if (cp === $.SOLIDUS) {
            this.state = SELF_CLOSING_START_TAG_STATE;
            return;
          }

          if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;

            this._emitCurrentToken();

            return;
          }
        }

        this._emitChars('</');

        this._emitSeveralCodePoints(this.tempBuff);

        this._reconsumeInState(RCDATA_STATE);
      }
    } // RAWTEXT less-than sign state
    //------------------------------------------------------------------

  }, {
    key: RAWTEXT_LESS_THAN_SIGN_STATE,
    value: function value(cp) {
      if (cp === $.SOLIDUS) {
        this.tempBuff = [];
        this.state = RAWTEXT_END_TAG_OPEN_STATE;
      } else {
        this._emitChars('<');

        this._reconsumeInState(RAWTEXT_STATE);
      }
    } // RAWTEXT end tag open state
    //------------------------------------------------------------------

  }, {
    key: RAWTEXT_END_TAG_OPEN_STATE,
    value: function value(cp) {
      if (isAsciiLetter(cp)) {
        this._createEndTagToken();

        this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);
      } else {
        this._emitChars('</');

        this._reconsumeInState(RAWTEXT_STATE);
      }
    } // RAWTEXT end tag name state
    //------------------------------------------------------------------

  }, {
    key: RAWTEXT_END_TAG_NAME_STATE,
    value: function value(cp) {
      if (isAsciiUpper(cp)) {
        this.currentToken.tagName += toAsciiLowerChar(cp);
        this.tempBuff.push(cp);
      } else if (isAsciiLower(cp)) {
        this.currentToken.tagName += toChar(cp);
        this.tempBuff.push(cp);
      } else {
        if (this.lastStartTagName === this.currentToken.tagName) {
          if (isWhitespace(cp)) {
            this.state = BEFORE_ATTRIBUTE_NAME_STATE;
            return;
          }

          if (cp === $.SOLIDUS) {
            this.state = SELF_CLOSING_START_TAG_STATE;
            return;
          }

          if (cp === $.GREATER_THAN_SIGN) {
            this._emitCurrentToken();

            this.state = DATA_STATE;
            return;
          }
        }

        this._emitChars('</');

        this._emitSeveralCodePoints(this.tempBuff);

        this._reconsumeInState(RAWTEXT_STATE);
      }
    } // Script data less-than sign state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_LESS_THAN_SIGN_STATE,
    value: function value(cp) {
      if (cp === $.SOLIDUS) {
        this.tempBuff = [];
        this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;
      } else if (cp === $.EXCLAMATION_MARK) {
        this.state = SCRIPT_DATA_ESCAPE_START_STATE;

        this._emitChars('<!');
      } else {
        this._emitChars('<');

        this._reconsumeInState(SCRIPT_DATA_STATE);
      }
    } // Script data end tag open state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_END_TAG_OPEN_STATE,
    value: function value(cp) {
      if (isAsciiLetter(cp)) {
        this._createEndTagToken();

        this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);
      } else {
        this._emitChars('</');

        this._reconsumeInState(SCRIPT_DATA_STATE);
      }
    } // Script data end tag name state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_END_TAG_NAME_STATE,
    value: function value(cp) {
      if (isAsciiUpper(cp)) {
        this.currentToken.tagName += toAsciiLowerChar(cp);
        this.tempBuff.push(cp);
      } else if (isAsciiLower(cp)) {
        this.currentToken.tagName += toChar(cp);
        this.tempBuff.push(cp);
      } else {
        if (this.lastStartTagName === this.currentToken.tagName) {
          if (isWhitespace(cp)) {
            this.state = BEFORE_ATTRIBUTE_NAME_STATE;
            return;
          } else if (cp === $.SOLIDUS) {
            this.state = SELF_CLOSING_START_TAG_STATE;
            return;
          } else if (cp === $.GREATER_THAN_SIGN) {
            this._emitCurrentToken();

            this.state = DATA_STATE;
            return;
          }
        }

        this._emitChars('</');

        this._emitSeveralCodePoints(this.tempBuff);

        this._reconsumeInState(SCRIPT_DATA_STATE);
      }
    } // Script data escape start state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_ESCAPE_START_STATE,
    value: function value(cp) {
      if (cp === $.HYPHEN_MINUS) {
        this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;

        this._emitChars('-');
      } else {
        this._reconsumeInState(SCRIPT_DATA_STATE);
      }
    } // Script data escape start dash state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_ESCAPE_START_DASH_STATE,
    value: function value(cp) {
      if (cp === $.HYPHEN_MINUS) {
        this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;

        this._emitChars('-');
      } else {
        this._reconsumeInState(SCRIPT_DATA_STATE);
      }
    } // Script data escaped state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_ESCAPED_STATE,
    value: function value(cp) {
      if (cp === $.HYPHEN_MINUS) {
        this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;

        this._emitChars('-');
      } else if (cp === $.LESS_THAN_SIGN) {
        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this._emitChars(unicode.REPLACEMENT_CHARACTER);
      } else if (cp === $.EOF) {
        this._err(ERR.eofInScriptHtmlCommentLikeText);

        this._emitEOFToken();
      } else {
        this._emitCodePoint(cp);
      }
    } // Script data escaped dash state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_ESCAPED_DASH_STATE,
    value: function value(cp) {
      if (cp === $.HYPHEN_MINUS) {
        this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;

        this._emitChars('-');
      } else if (cp === $.LESS_THAN_SIGN) {
        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this.state = SCRIPT_DATA_ESCAPED_STATE;

        this._emitChars(unicode.REPLACEMENT_CHARACTER);
      } else if (cp === $.EOF) {
        this._err(ERR.eofInScriptHtmlCommentLikeText);

        this._emitEOFToken();
      } else {
        this.state = SCRIPT_DATA_ESCAPED_STATE;

        this._emitCodePoint(cp);
      }
    } // Script data escaped dash dash state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_ESCAPED_DASH_DASH_STATE,
    value: function value(cp) {
      if (cp === $.HYPHEN_MINUS) {
        this._emitChars('-');
      } else if (cp === $.LESS_THAN_SIGN) {
        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this.state = SCRIPT_DATA_STATE;

        this._emitChars('>');
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this.state = SCRIPT_DATA_ESCAPED_STATE;

        this._emitChars(unicode.REPLACEMENT_CHARACTER);
      } else if (cp === $.EOF) {
        this._err(ERR.eofInScriptHtmlCommentLikeText);

        this._emitEOFToken();
      } else {
        this.state = SCRIPT_DATA_ESCAPED_STATE;

        this._emitCodePoint(cp);
      }
    } // Script data escaped less-than sign state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE,
    value: function value(cp) {
      if (cp === $.SOLIDUS) {
        this.tempBuff = [];
        this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;
      } else if (isAsciiLetter(cp)) {
        this.tempBuff = [];

        this._emitChars('<');

        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);
      } else {
        this._emitChars('<');

        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
      }
    } // Script data escaped end tag open state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE,
    value: function value(cp) {
      if (isAsciiLetter(cp)) {
        this._createEndTagToken();

        this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);
      } else {
        this._emitChars('</');

        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
      }
    } // Script data escaped end tag name state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE,
    value: function value(cp) {
      if (isAsciiUpper(cp)) {
        this.currentToken.tagName += toAsciiLowerChar(cp);
        this.tempBuff.push(cp);
      } else if (isAsciiLower(cp)) {
        this.currentToken.tagName += toChar(cp);
        this.tempBuff.push(cp);
      } else {
        if (this.lastStartTagName === this.currentToken.tagName) {
          if (isWhitespace(cp)) {
            this.state = BEFORE_ATTRIBUTE_NAME_STATE;
            return;
          }

          if (cp === $.SOLIDUS) {
            this.state = SELF_CLOSING_START_TAG_STATE;
            return;
          }

          if (cp === $.GREATER_THAN_SIGN) {
            this._emitCurrentToken();

            this.state = DATA_STATE;
            return;
          }
        }

        this._emitChars('</');

        this._emitSeveralCodePoints(this.tempBuff);

        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
      }
    } // Script data double escape start state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE,
    value: function value(cp) {
      if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {
        this.state = this._isTempBufferEqualToScriptString() ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE : SCRIPT_DATA_ESCAPED_STATE;

        this._emitCodePoint(cp);
      } else if (isAsciiUpper(cp)) {
        this.tempBuff.push(toAsciiLowerCodePoint(cp));

        this._emitCodePoint(cp);
      } else if (isAsciiLower(cp)) {
        this.tempBuff.push(cp);

        this._emitCodePoint(cp);
      } else {
        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
      }
    } // Script data double escaped state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_DOUBLE_ESCAPED_STATE,
    value: function value(cp) {
      if (cp === $.HYPHEN_MINUS) {
        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;

        this._emitChars('-');
      } else if (cp === $.LESS_THAN_SIGN) {
        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;

        this._emitChars('<');
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this._emitChars(unicode.REPLACEMENT_CHARACTER);
      } else if (cp === $.EOF) {
        this._err(ERR.eofInScriptHtmlCommentLikeText);

        this._emitEOFToken();
      } else {
        this._emitCodePoint(cp);
      }
    } // Script data double escaped dash state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE,
    value: function value(cp) {
      if (cp === $.HYPHEN_MINUS) {
        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;

        this._emitChars('-');
      } else if (cp === $.LESS_THAN_SIGN) {
        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;

        this._emitChars('<');
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;

        this._emitChars(unicode.REPLACEMENT_CHARACTER);
      } else if (cp === $.EOF) {
        this._err(ERR.eofInScriptHtmlCommentLikeText);

        this._emitEOFToken();
      } else {
        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;

        this._emitCodePoint(cp);
      }
    } // Script data double escaped dash dash state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE,
    value: function value(cp) {
      if (cp === $.HYPHEN_MINUS) {
        this._emitChars('-');
      } else if (cp === $.LESS_THAN_SIGN) {
        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;

        this._emitChars('<');
      } else if (cp === $.GREATER_THAN_SIGN) {
        this.state = SCRIPT_DATA_STATE;

        this._emitChars('>');
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;

        this._emitChars(unicode.REPLACEMENT_CHARACTER);
      } else if (cp === $.EOF) {
        this._err(ERR.eofInScriptHtmlCommentLikeText);

        this._emitEOFToken();
      } else {
        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;

        this._emitCodePoint(cp);
      }
    } // Script data double escaped less-than sign state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE,
    value: function value(cp) {
      if (cp === $.SOLIDUS) {
        this.tempBuff = [];
        this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;

        this._emitChars('/');
      } else {
        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);
      }
    } // Script data double escape end state
    //------------------------------------------------------------------

  }, {
    key: SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE,
    value: function value(cp) {
      if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {
        this.state = this._isTempBufferEqualToScriptString() ? SCRIPT_DATA_ESCAPED_STATE : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;

        this._emitCodePoint(cp);
      } else if (isAsciiUpper(cp)) {
        this.tempBuff.push(toAsciiLowerCodePoint(cp));

        this._emitCodePoint(cp);
      } else if (isAsciiLower(cp)) {
        this.tempBuff.push(cp);

        this._emitCodePoint(cp);
      } else {
        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);
      }
    } // Before attribute name state
    //------------------------------------------------------------------

  }, {
    key: BEFORE_ATTRIBUTE_NAME_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        return;
      }

      if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {
        this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);
      } else if (cp === $.EQUALS_SIGN) {
        this._err(ERR.unexpectedEqualsSignBeforeAttributeName);

        this._createAttr('=');

        this.state = ATTRIBUTE_NAME_STATE;
      } else {
        this._createAttr('');

        this._reconsumeInState(ATTRIBUTE_NAME_STATE);
      }
    } // Attribute name state
    //------------------------------------------------------------------

  }, {
    key: ATTRIBUTE_NAME_STATE,
    value: function value(cp) {
      if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {
        this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);

        this._unconsume();
      } else if (cp === $.EQUALS_SIGN) {
        this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);
      } else if (isAsciiUpper(cp)) {
        this.currentAttr.name += toAsciiLowerChar(cp);
      } else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN) {
        this._err(ERR.unexpectedCharacterInAttributeName);

        this.currentAttr.name += toChar(cp);
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this.currentAttr.name += unicode.REPLACEMENT_CHARACTER;
      } else {
        this.currentAttr.name += toChar(cp);
      }
    } // After attribute name state
    //------------------------------------------------------------------

  }, {
    key: AFTER_ATTRIBUTE_NAME_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        return;
      }

      if (cp === $.SOLIDUS) {
        this.state = SELF_CLOSING_START_TAG_STATE;
      } else if (cp === $.EQUALS_SIGN) {
        this.state = BEFORE_ATTRIBUTE_VALUE_STATE;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this.state = DATA_STATE;

        this._emitCurrentToken();
      } else if (cp === $.EOF) {
        this._err(ERR.eofInTag);

        this._emitEOFToken();
      } else {
        this._createAttr('');

        this._reconsumeInState(ATTRIBUTE_NAME_STATE);
      }
    } // Before attribute value state
    //------------------------------------------------------------------

  }, {
    key: BEFORE_ATTRIBUTE_VALUE_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        return;
      }

      if (cp === $.QUOTATION_MARK) {
        this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;
      } else if (cp === $.APOSTROPHE) {
        this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._err(ERR.missingAttributeValue);

        this.state = DATA_STATE;

        this._emitCurrentToken();
      } else {
        this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);
      }
    } // Attribute value (double-quoted) state
    //------------------------------------------------------------------

  }, {
    key: ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE,
    value: function value(cp) {
      if (cp === $.QUOTATION_MARK) {
        this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;
      } else if (cp === $.AMPERSAND) {
        this.returnState = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;
        this.state = CHARACTER_REFERENCE_STATE;
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;
      } else if (cp === $.EOF) {
        this._err(ERR.eofInTag);

        this._emitEOFToken();
      } else {
        this.currentAttr.value += toChar(cp);
      }
    } // Attribute value (single-quoted) state
    //------------------------------------------------------------------

  }, {
    key: ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE,
    value: function value(cp) {
      if (cp === $.APOSTROPHE) {
        this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;
      } else if (cp === $.AMPERSAND) {
        this.returnState = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;
        this.state = CHARACTER_REFERENCE_STATE;
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;
      } else if (cp === $.EOF) {
        this._err(ERR.eofInTag);

        this._emitEOFToken();
      } else {
        this.currentAttr.value += toChar(cp);
      }
    } // Attribute value (unquoted) state
    //------------------------------------------------------------------

  }, {
    key: ATTRIBUTE_VALUE_UNQUOTED_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);
      } else if (cp === $.AMPERSAND) {
        this.returnState = ATTRIBUTE_VALUE_UNQUOTED_STATE;
        this.state = CHARACTER_REFERENCE_STATE;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._leaveAttrValue(DATA_STATE);

        this._emitCurrentToken();
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;
      } else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN || cp === $.EQUALS_SIGN || cp === $.GRAVE_ACCENT) {
        this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);

        this.currentAttr.value += toChar(cp);
      } else if (cp === $.EOF) {
        this._err(ERR.eofInTag);

        this._emitEOFToken();
      } else {
        this.currentAttr.value += toChar(cp);
      }
    } // After attribute value (quoted) state
    //------------------------------------------------------------------

  }, {
    key: AFTER_ATTRIBUTE_VALUE_QUOTED_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);
      } else if (cp === $.SOLIDUS) {
        this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._leaveAttrValue(DATA_STATE);

        this._emitCurrentToken();
      } else if (cp === $.EOF) {
        this._err(ERR.eofInTag);

        this._emitEOFToken();
      } else {
        this._err(ERR.missingWhitespaceBetweenAttributes);

        this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);
      }
    } // Self-closing start tag state
    //------------------------------------------------------------------

  }, {
    key: SELF_CLOSING_START_TAG_STATE,
    value: function value(cp) {
      if (cp === $.GREATER_THAN_SIGN) {
        this.currentToken.selfClosing = true;
        this.state = DATA_STATE;

        this._emitCurrentToken();
      } else if (cp === $.EOF) {
        this._err(ERR.eofInTag);

        this._emitEOFToken();
      } else {
        this._err(ERR.unexpectedSolidusInTag);

        this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);
      }
    } // Bogus comment state
    //------------------------------------------------------------------

  }, {
    key: BOGUS_COMMENT_STATE,
    value: function value(cp) {
      if (cp === $.GREATER_THAN_SIGN) {
        this.state = DATA_STATE;

        this._emitCurrentToken();
      } else if (cp === $.EOF) {
        this._emitCurrentToken();

        this._emitEOFToken();
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this.currentToken.data += unicode.REPLACEMENT_CHARACTER;
      } else {
        this.currentToken.data += toChar(cp);
      }
    } // Markup declaration open state
    //------------------------------------------------------------------

  }, {
    key: MARKUP_DECLARATION_OPEN_STATE,
    value: function value(cp) {
      if (this._consumeSequenceIfMatch($$.DASH_DASH_STRING, cp, true)) {
        this._createCommentToken();

        this.state = COMMENT_START_STATE;
      } else if (this._consumeSequenceIfMatch($$.DOCTYPE_STRING, cp, false)) {
        this.state = DOCTYPE_STATE;
      } else if (this._consumeSequenceIfMatch($$.CDATA_START_STRING, cp, true)) {
        if (this.allowCDATA) {
          this.state = CDATA_SECTION_STATE;
        } else {
          this._err(ERR.cdataInHtmlContent);

          this._createCommentToken();

          this.currentToken.data = '[CDATA[';
          this.state = BOGUS_COMMENT_STATE;
        }
      } //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup
      //results are no longer valid and we will need to start over.
      else if (!this._ensureHibernation()) {
        this._err(ERR.incorrectlyOpenedComment);

        this._createCommentToken();

        this._reconsumeInState(BOGUS_COMMENT_STATE);
      }
    } // Comment start state
    //------------------------------------------------------------------

  }, {
    key: COMMENT_START_STATE,
    value: function value(cp) {
      if (cp === $.HYPHEN_MINUS) {
        this.state = COMMENT_START_DASH_STATE;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._err(ERR.abruptClosingOfEmptyComment);

        this.state = DATA_STATE;

        this._emitCurrentToken();
      } else {
        this._reconsumeInState(COMMENT_STATE);
      }
    } // Comment start dash state
    //------------------------------------------------------------------

  }, {
    key: COMMENT_START_DASH_STATE,
    value: function value(cp) {
      if (cp === $.HYPHEN_MINUS) {
        this.state = COMMENT_END_STATE;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._err(ERR.abruptClosingOfEmptyComment);

        this.state = DATA_STATE;

        this._emitCurrentToken();
      } else if (cp === $.EOF) {
        this._err(ERR.eofInComment);

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this.currentToken.data += '-';

        this._reconsumeInState(COMMENT_STATE);
      }
    } // Comment state
    //------------------------------------------------------------------

  }, {
    key: COMMENT_STATE,
    value: function value(cp) {
      if (cp === $.HYPHEN_MINUS) {
        this.state = COMMENT_END_DASH_STATE;
      } else if (cp === $.LESS_THAN_SIGN) {
        this.currentToken.data += '<';
        this.state = COMMENT_LESS_THAN_SIGN_STATE;
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this.currentToken.data += unicode.REPLACEMENT_CHARACTER;
      } else if (cp === $.EOF) {
        this._err(ERR.eofInComment);

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this.currentToken.data += toChar(cp);
      }
    } // Comment less-than sign state
    //------------------------------------------------------------------

  }, {
    key: COMMENT_LESS_THAN_SIGN_STATE,
    value: function value(cp) {
      if (cp === $.EXCLAMATION_MARK) {
        this.currentToken.data += '!';
        this.state = COMMENT_LESS_THAN_SIGN_BANG_STATE;
      } else if (cp === $.LESS_THAN_SIGN) {
        this.currentToken.data += '!';
      } else {
        this._reconsumeInState(COMMENT_STATE);
      }
    } // Comment less-than sign bang state
    //------------------------------------------------------------------

  }, {
    key: COMMENT_LESS_THAN_SIGN_BANG_STATE,
    value: function value(cp) {
      if (cp === $.HYPHEN_MINUS) {
        this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE;
      } else {
        this._reconsumeInState(COMMENT_STATE);
      }
    } // Comment less-than sign bang dash state
    //------------------------------------------------------------------

  }, {
    key: COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE,
    value: function value(cp) {
      if (cp === $.HYPHEN_MINUS) {
        this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE;
      } else {
        this._reconsumeInState(COMMENT_END_DASH_STATE);
      }
    } // Comment less-than sign bang dash dash state
    //------------------------------------------------------------------

  }, {
    key: COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE,
    value: function value(cp) {
      if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {
        this._err(ERR.nestedComment);
      }

      this._reconsumeInState(COMMENT_END_STATE);
    } // Comment end dash state
    //------------------------------------------------------------------

  }, {
    key: COMMENT_END_DASH_STATE,
    value: function value(cp) {
      if (cp === $.HYPHEN_MINUS) {
        this.state = COMMENT_END_STATE;
      } else if (cp === $.EOF) {
        this._err(ERR.eofInComment);

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this.currentToken.data += '-';

        this._reconsumeInState(COMMENT_STATE);
      }
    } // Comment end state
    //------------------------------------------------------------------

  }, {
    key: COMMENT_END_STATE,
    value: function value(cp) {
      if (cp === $.GREATER_THAN_SIGN) {
        this.state = DATA_STATE;

        this._emitCurrentToken();
      } else if (cp === $.EXCLAMATION_MARK) {
        this.state = COMMENT_END_BANG_STATE;
      } else if (cp === $.HYPHEN_MINUS) {
        this.currentToken.data += '-';
      } else if (cp === $.EOF) {
        this._err(ERR.eofInComment);

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this.currentToken.data += '--';

        this._reconsumeInState(COMMENT_STATE);
      }
    } // Comment end bang state
    //------------------------------------------------------------------

  }, {
    key: COMMENT_END_BANG_STATE,
    value: function value(cp) {
      if (cp === $.HYPHEN_MINUS) {
        this.currentToken.data += '--!';
        this.state = COMMENT_END_DASH_STATE;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._err(ERR.incorrectlyClosedComment);

        this.state = DATA_STATE;

        this._emitCurrentToken();
      } else if (cp === $.EOF) {
        this._err(ERR.eofInComment);

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this.currentToken.data += '--!';

        this._reconsumeInState(COMMENT_STATE);
      }
    } // DOCTYPE state
    //------------------------------------------------------------------

  }, {
    key: DOCTYPE_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        this.state = BEFORE_DOCTYPE_NAME_STATE;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);
      } else if (cp === $.EOF) {
        this._err(ERR.eofInDoctype);

        this._createDoctypeToken(null);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this._err(ERR.missingWhitespaceBeforeDoctypeName);

        this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);
      }
    } // Before DOCTYPE name state
    //------------------------------------------------------------------

  }, {
    key: BEFORE_DOCTYPE_NAME_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        return;
      }

      if (isAsciiUpper(cp)) {
        this._createDoctypeToken(toAsciiLowerChar(cp));

        this.state = DOCTYPE_NAME_STATE;
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this._createDoctypeToken(unicode.REPLACEMENT_CHARACTER);

        this.state = DOCTYPE_NAME_STATE;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._err(ERR.missingDoctypeName);

        this._createDoctypeToken(null);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this.state = DATA_STATE;
      } else if (cp === $.EOF) {
        this._err(ERR.eofInDoctype);

        this._createDoctypeToken(null);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this._createDoctypeToken(toChar(cp));

        this.state = DOCTYPE_NAME_STATE;
      }
    } // DOCTYPE name state
    //------------------------------------------------------------------

  }, {
    key: DOCTYPE_NAME_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        this.state = AFTER_DOCTYPE_NAME_STATE;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this.state = DATA_STATE;

        this._emitCurrentToken();
      } else if (isAsciiUpper(cp)) {
        this.currentToken.name += toAsciiLowerChar(cp);
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this.currentToken.name += unicode.REPLACEMENT_CHARACTER;
      } else if (cp === $.EOF) {
        this._err(ERR.eofInDoctype);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this.currentToken.name += toChar(cp);
      }
    } // After DOCTYPE name state
    //------------------------------------------------------------------

  }, {
    key: AFTER_DOCTYPE_NAME_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        return;
      }

      if (cp === $.GREATER_THAN_SIGN) {
        this.state = DATA_STATE;

        this._emitCurrentToken();
      } else if (cp === $.EOF) {
        this._err(ERR.eofInDoctype);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this._emitEOFToken();
      } else if (this._consumeSequenceIfMatch($$.PUBLIC_STRING, cp, false)) {
        this.state = AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE;
      } else if (this._consumeSequenceIfMatch($$.SYSTEM_STRING, cp, false)) {
        this.state = AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE;
      } //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup
      //results are no longer valid and we will need to start over.
      else if (!this._ensureHibernation()) {
        this._err(ERR.invalidCharacterSequenceAfterDoctypeName);

        this.currentToken.forceQuirks = true;

        this._reconsumeInState(BOGUS_DOCTYPE_STATE);
      }
    } // After DOCTYPE public keyword state
    //------------------------------------------------------------------

  }, {
    key: AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;
      } else if (cp === $.QUOTATION_MARK) {
        this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);

        this.currentToken.publicId = '';
        this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;
      } else if (cp === $.APOSTROPHE) {
        this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);

        this.currentToken.publicId = '';
        this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._err(ERR.missingDoctypePublicIdentifier);

        this.currentToken.forceQuirks = true;
        this.state = DATA_STATE;

        this._emitCurrentToken();
      } else if (cp === $.EOF) {
        this._err(ERR.eofInDoctype);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);

        this.currentToken.forceQuirks = true;

        this._reconsumeInState(BOGUS_DOCTYPE_STATE);
      }
    } // Before DOCTYPE public identifier state
    //------------------------------------------------------------------

  }, {
    key: BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        return;
      }

      if (cp === $.QUOTATION_MARK) {
        this.currentToken.publicId = '';
        this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;
      } else if (cp === $.APOSTROPHE) {
        this.currentToken.publicId = '';
        this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._err(ERR.missingDoctypePublicIdentifier);

        this.currentToken.forceQuirks = true;
        this.state = DATA_STATE;

        this._emitCurrentToken();
      } else if (cp === $.EOF) {
        this._err(ERR.eofInDoctype);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);

        this.currentToken.forceQuirks = true;

        this._reconsumeInState(BOGUS_DOCTYPE_STATE);
      }
    } // DOCTYPE public identifier (double-quoted) state
    //------------------------------------------------------------------

  }, {
    key: DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE,
    value: function value(cp) {
      if (cp === $.QUOTATION_MARK) {
        this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._err(ERR.abruptDoctypePublicIdentifier);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this.state = DATA_STATE;
      } else if (cp === $.EOF) {
        this._err(ERR.eofInDoctype);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this.currentToken.publicId += toChar(cp);
      }
    } // DOCTYPE public identifier (single-quoted) state
    //------------------------------------------------------------------

  }, {
    key: DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE,
    value: function value(cp) {
      if (cp === $.APOSTROPHE) {
        this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._err(ERR.abruptDoctypePublicIdentifier);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this.state = DATA_STATE;
      } else if (cp === $.EOF) {
        this._err(ERR.eofInDoctype);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this.currentToken.publicId += toChar(cp);
      }
    } // After DOCTYPE public identifier state
    //------------------------------------------------------------------

  }, {
    key: AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this.state = DATA_STATE;

        this._emitCurrentToken();
      } else if (cp === $.QUOTATION_MARK) {
        this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);

        this.currentToken.systemId = '';
        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
      } else if (cp === $.APOSTROPHE) {
        this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);

        this.currentToken.systemId = '';
        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
      } else if (cp === $.EOF) {
        this._err(ERR.eofInDoctype);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);

        this.currentToken.forceQuirks = true;

        this._reconsumeInState(BOGUS_DOCTYPE_STATE);
      }
    } // Between DOCTYPE public and system identifiers state
    //------------------------------------------------------------------

  }, {
    key: BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        return;
      }

      if (cp === $.GREATER_THAN_SIGN) {
        this._emitCurrentToken();

        this.state = DATA_STATE;
      } else if (cp === $.QUOTATION_MARK) {
        this.currentToken.systemId = '';
        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
      } else if (cp === $.APOSTROPHE) {
        this.currentToken.systemId = '';
        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
      } else if (cp === $.EOF) {
        this._err(ERR.eofInDoctype);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);

        this.currentToken.forceQuirks = true;

        this._reconsumeInState(BOGUS_DOCTYPE_STATE);
      }
    } // After DOCTYPE system keyword state
    //------------------------------------------------------------------

  }, {
    key: AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;
      } else if (cp === $.QUOTATION_MARK) {
        this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);

        this.currentToken.systemId = '';
        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
      } else if (cp === $.APOSTROPHE) {
        this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);

        this.currentToken.systemId = '';
        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._err(ERR.missingDoctypeSystemIdentifier);

        this.currentToken.forceQuirks = true;
        this.state = DATA_STATE;

        this._emitCurrentToken();
      } else if (cp === $.EOF) {
        this._err(ERR.eofInDoctype);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);

        this.currentToken.forceQuirks = true;

        this._reconsumeInState(BOGUS_DOCTYPE_STATE);
      }
    } // Before DOCTYPE system identifier state
    //------------------------------------------------------------------

  }, {
    key: BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        return;
      }

      if (cp === $.QUOTATION_MARK) {
        this.currentToken.systemId = '';
        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
      } else if (cp === $.APOSTROPHE) {
        this.currentToken.systemId = '';
        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._err(ERR.missingDoctypeSystemIdentifier);

        this.currentToken.forceQuirks = true;
        this.state = DATA_STATE;

        this._emitCurrentToken();
      } else if (cp === $.EOF) {
        this._err(ERR.eofInDoctype);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);

        this.currentToken.forceQuirks = true;

        this._reconsumeInState(BOGUS_DOCTYPE_STATE);
      }
    } // DOCTYPE system identifier (double-quoted) state
    //------------------------------------------------------------------

  }, {
    key: DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE,
    value: function value(cp) {
      if (cp === $.QUOTATION_MARK) {
        this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._err(ERR.abruptDoctypeSystemIdentifier);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this.state = DATA_STATE;
      } else if (cp === $.EOF) {
        this._err(ERR.eofInDoctype);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this.currentToken.systemId += toChar(cp);
      }
    } // DOCTYPE system identifier (single-quoted) state
    //------------------------------------------------------------------

  }, {
    key: DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE,
    value: function value(cp) {
      if (cp === $.APOSTROPHE) {
        this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);

        this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;
      } else if (cp === $.GREATER_THAN_SIGN) {
        this._err(ERR.abruptDoctypeSystemIdentifier);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this.state = DATA_STATE;
      } else if (cp === $.EOF) {
        this._err(ERR.eofInDoctype);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this.currentToken.systemId += toChar(cp);
      }
    } // After DOCTYPE system identifier state
    //------------------------------------------------------------------

  }, {
    key: AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE,
    value: function value(cp) {
      if (isWhitespace(cp)) {
        return;
      }

      if (cp === $.GREATER_THAN_SIGN) {
        this._emitCurrentToken();

        this.state = DATA_STATE;
      } else if (cp === $.EOF) {
        this._err(ERR.eofInDoctype);

        this.currentToken.forceQuirks = true;

        this._emitCurrentToken();

        this._emitEOFToken();
      } else {
        this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);

        this._reconsumeInState(BOGUS_DOCTYPE_STATE);
      }
    } // Bogus DOCTYPE state
    //------------------------------------------------------------------

  }, {
    key: BOGUS_DOCTYPE_STATE,
    value: function value(cp) {
      if (cp === $.GREATER_THAN_SIGN) {
        this._emitCurrentToken();

        this.state = DATA_STATE;
      } else if (cp === $.NULL) {
        this._err(ERR.unexpectedNullCharacter);
      } else if (cp === $.EOF) {
        this._emitCurrentToken();

        this._emitEOFToken();
      }
    } // CDATA section state
    //------------------------------------------------------------------

  }, {
    key: CDATA_SECTION_STATE,
    value: function value(cp) {
      if (cp === $.RIGHT_SQUARE_BRACKET) {
        this.state = CDATA_SECTION_BRACKET_STATE;
      } else if (cp === $.EOF) {
        this._err(ERR.eofInCdata);

        this._emitEOFToken();
      } else {
        this._emitCodePoint(cp);
      }
    } // CDATA section bracket state
    //------------------------------------------------------------------

  }, {
    key: CDATA_SECTION_BRACKET_STATE,
    value: function value(cp) {
      if (cp === $.RIGHT_SQUARE_BRACKET) {
        this.state = CDATA_SECTION_END_STATE;
      } else {
        this._emitChars(']');

        this._reconsumeInState(CDATA_SECTION_STATE);
      }
    } // CDATA section end state
    //------------------------------------------------------------------

  }, {
    key: CDATA_SECTION_END_STATE,
    value: function value(cp) {
      if (cp === $.GREATER_THAN_SIGN) {
        this.state = DATA_STATE;
      } else if (cp === $.RIGHT_SQUARE_BRACKET) {
        this._emitChars(']');
      } else {
        this._emitChars(']]');

        this._reconsumeInState(CDATA_SECTION_STATE);
      }
    } // Character reference state
    //------------------------------------------------------------------

  }, {
    key: CHARACTER_REFERENCE_STATE,
    value: function value(cp) {
      this.tempBuff = [$.AMPERSAND];

      if (cp === $.NUMBER_SIGN) {
        this.tempBuff.push(cp);
        this.state = NUMERIC_CHARACTER_REFERENCE_STATE;
      } else if (isAsciiAlphaNumeric(cp)) {
        this._reconsumeInState(NAMED_CHARACTER_REFERENCE_STATE);
      } else {
        this._flushCodePointsConsumedAsCharacterReference();

        this._reconsumeInState(this.returnState);
      }
    } // Named character reference state
    //------------------------------------------------------------------

  }, {
    key: NAMED_CHARACTER_REFERENCE_STATE,
    value: function value(cp) {
      var matchResult = this._matchNamedCharacterReference(cp); //NOTE: matching can be abrupted by hibernation. In that case match
      //results are no longer valid and we will need to start over.


      if (this._ensureHibernation()) {
        this.tempBuff = [$.AMPERSAND];
      } else if (matchResult) {
        var withSemicolon = this.tempBuff[this.tempBuff.length - 1] === $.SEMICOLON;

        if (!this._isCharacterReferenceAttributeQuirk(withSemicolon)) {
          if (!withSemicolon) {
            this._errOnNextCodePoint(ERR.missingSemicolonAfterCharacterReference);
          }

          this.tempBuff = matchResult;
        }

        this._flushCodePointsConsumedAsCharacterReference();

        this.state = this.returnState;
      } else {
        this._flushCodePointsConsumedAsCharacterReference();

        this.state = AMBIGUOUS_AMPERSAND_STATE;
      }
    } // Ambiguos ampersand state
    //------------------------------------------------------------------

  }, {
    key: AMBIGUOUS_AMPERSAND_STATE,
    value: function value(cp) {
      if (isAsciiAlphaNumeric(cp)) {
        if (this._isCharacterReferenceInAttribute()) {
          this.currentAttr.value += toChar(cp);
        } else {
          this._emitCodePoint(cp);
        }
      } else {
        if (cp === $.SEMICOLON) {
          this._err(ERR.unknownNamedCharacterReference);
        }

        this._reconsumeInState(this.returnState);
      }
    } // Numeric character reference state
    //------------------------------------------------------------------

  }, {
    key: NUMERIC_CHARACTER_REFERENCE_STATE,
    value: function value(cp) {
      this.charRefCode = 0;

      if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {
        this.tempBuff.push(cp);
        this.state = HEXADEMICAL_CHARACTER_REFERENCE_START_STATE;
      } else {
        this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_START_STATE);
      }
    } // Hexademical character reference start state
    //------------------------------------------------------------------

  }, {
    key: HEXADEMICAL_CHARACTER_REFERENCE_START_STATE,
    value: function value(cp) {
      if (isAsciiHexDigit(cp)) {
        this._reconsumeInState(HEXADEMICAL_CHARACTER_REFERENCE_STATE);
      } else {
        this._err(ERR.absenceOfDigitsInNumericCharacterReference);

        this._flushCodePointsConsumedAsCharacterReference();

        this._reconsumeInState(this.returnState);
      }
    } // Decimal character reference start state
    //------------------------------------------------------------------

  }, {
    key: DECIMAL_CHARACTER_REFERENCE_START_STATE,
    value: function value(cp) {
      if (isAsciiDigit(cp)) {
        this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_STATE);
      } else {
        this._err(ERR.absenceOfDigitsInNumericCharacterReference);

        this._flushCodePointsConsumedAsCharacterReference();

        this._reconsumeInState(this.returnState);
      }
    } // Hexademical character reference state
    //------------------------------------------------------------------

  }, {
    key: HEXADEMICAL_CHARACTER_REFERENCE_STATE,
    value: function value(cp) {
      if (isAsciiUpperHexDigit(cp)) {
        this.charRefCode = this.charRefCode * 16 + cp - 0x37;
      } else if (isAsciiLowerHexDigit(cp)) {
        this.charRefCode = this.charRefCode * 16 + cp - 0x57;
      } else if (isAsciiDigit(cp)) {
        this.charRefCode = this.charRefCode * 16 + cp - 0x30;
      } else if (cp === $.SEMICOLON) {
        this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;
      } else {
        this._err(ERR.missingSemicolonAfterCharacterReference);

        this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);
      }
    } // Decimal character reference state
    //------------------------------------------------------------------

  }, {
    key: DECIMAL_CHARACTER_REFERENCE_STATE,
    value: function value(cp) {
      if (isAsciiDigit(cp)) {
        this.charRefCode = this.charRefCode * 10 + cp - 0x30;
      } else if (cp === $.SEMICOLON) {
        this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;
      } else {
        this._err(ERR.missingSemicolonAfterCharacterReference);

        this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);
      }
    } // Numeric character reference end state
    //------------------------------------------------------------------

  }, {
    key: NUMERIC_CHARACTER_REFERENCE_END_STATE,
    value: function value() {
      if (this.charRefCode === $.NULL) {
        this._err(ERR.nullCharacterReference);

        this.charRefCode = $.REPLACEMENT_CHARACTER;
      } else if (this.charRefCode > 0x10ffff) {
        this._err(ERR.characterReferenceOutsideUnicodeRange);

        this.charRefCode = $.REPLACEMENT_CHARACTER;
      } else if (unicode.isSurrogate(this.charRefCode)) {
        this._err(ERR.surrogateCharacterReference);

        this.charRefCode = $.REPLACEMENT_CHARACTER;
      } else if (unicode.isUndefinedCodePoint(this.charRefCode)) {
        this._err(ERR.noncharacterCharacterReference);
      } else if (unicode.isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {
        this._err(ERR.controlCharacterReference);

        var replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS[this.charRefCode];

        if (replacement) {
          this.charRefCode = replacement;
        }
      }

      this.tempBuff = [this.charRefCode];

      this._flushCodePointsConsumedAsCharacterReference();

      this._reconsumeInState(this.returnState);
    }
  }]);

  return Tokenizer;
}(); //Token types


Tokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';
Tokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';
Tokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';
Tokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';
Tokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';
Tokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';
Tokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';
Tokenizer.EOF_TOKEN = 'EOF_TOKEN';
Tokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN'; //Tokenizer initial states for different modes

Tokenizer.MODE = {
  DATA: DATA_STATE,
  RCDATA: RCDATA_STATE,
  RAWTEXT: RAWTEXT_STATE,
  SCRIPT_DATA: SCRIPT_DATA_STATE,
  PLAINTEXT: PLAINTEXT_STATE
}; //Static

Tokenizer.getTokenAttr = function (token, attrName) {
  for (var i = token.attrs.length - 1; i >= 0; i--) {
    if (token.attrs[i].name === attrName) {
      return token.attrs[i].value;
    }
  }

  return null;
};

module.exports = Tokenizer;

/***/ }),

/***/ 9908:
/***/ (function(module) {

"use strict";
 //NOTE: this file contains auto-generated array mapped radix tree that is used for the named entity references consumption
//(details: https://github.com/inikulin/parse5/tree/master/scripts/generate-named-entity-data/README.md)

module.exports = new Uint16Array([4, 52, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 106, 303, 412, 810, 1432, 1701, 1796, 1987, 2114, 2360, 2420, 2484, 3170, 3251, 4140, 4393, 4575, 4610, 5106, 5512, 5728, 6117, 6274, 6315, 6345, 6427, 6516, 7002, 7910, 8733, 9323, 9870, 10170, 10631, 10893, 11318, 11386, 11467, 12773, 13092, 14474, 14922, 15448, 15542, 16419, 17666, 18166, 18611, 19004, 19095, 19298, 19397, 4, 16, 69, 77, 97, 98, 99, 102, 103, 108, 109, 110, 111, 112, 114, 115, 116, 117, 140, 150, 158, 169, 176, 194, 199, 210, 216, 222, 226, 242, 256, 266, 283, 294, 108, 105, 103, 5, 198, 1, 59, 148, 1, 198, 80, 5, 38, 1, 59, 156, 1, 38, 99, 117, 116, 101, 5, 193, 1, 59, 167, 1, 193, 114, 101, 118, 101, 59, 1, 258, 4, 2, 105, 121, 182, 191, 114, 99, 5, 194, 1, 59, 189, 1, 194, 59, 1, 1040, 114, 59, 3, 55349, 56580, 114, 97, 118, 101, 5, 192, 1, 59, 208, 1, 192, 112, 104, 97, 59, 1, 913, 97, 99, 114, 59, 1, 256, 100, 59, 1, 10835, 4, 2, 103, 112, 232, 237, 111, 110, 59, 1, 260, 102, 59, 3, 55349, 56632, 112, 108, 121, 70, 117, 110, 99, 116, 105, 111, 110, 59, 1, 8289, 105, 110, 103, 5, 197, 1, 59, 264, 1, 197, 4, 2, 99, 115, 272, 277, 114, 59, 3, 55349, 56476, 105, 103, 110, 59, 1, 8788, 105, 108, 100, 101, 5, 195, 1, 59, 292, 1, 195, 109, 108, 5, 196, 1, 59, 301, 1, 196, 4, 8, 97, 99, 101, 102, 111, 114, 115, 117, 321, 350, 354, 383, 388, 394, 400, 405, 4, 2, 99, 114, 327, 336, 107, 115, 108, 97, 115, 104, 59, 1, 8726, 4, 2, 118, 119, 342, 345, 59, 1, 10983, 101, 100, 59, 1, 8966, 121, 59, 1, 1041, 4, 3, 99, 114, 116, 362, 369, 379, 97, 117, 115, 101, 59, 1, 8757, 110, 111, 117, 108, 108, 105, 115, 59, 1, 8492, 97, 59, 1, 914, 114, 59, 3, 55349, 56581, 112, 102, 59, 3, 55349, 56633, 101, 118, 101, 59, 1, 728, 99, 114, 59, 1, 8492, 109, 112, 101, 113, 59, 1, 8782, 4, 14, 72, 79, 97, 99, 100, 101, 102, 104, 105, 108, 111, 114, 115, 117, 442, 447, 456, 504, 542, 547, 569, 573, 577, 616, 678, 784, 790, 796, 99, 121, 59, 1, 1063, 80, 89, 5, 169, 1, 59, 454, 1, 169, 4, 3, 99, 112, 121, 464, 470, 497, 117, 116, 101, 59, 1, 262, 4, 2, 59, 105, 476, 478, 1, 8914, 116, 97, 108, 68, 105, 102, 102, 101, 114, 101, 110, 116, 105, 97, 108, 68, 59, 1, 8517, 108, 101, 121, 115, 59, 1, 8493, 4, 4, 97, 101, 105, 111, 514, 520, 530, 535, 114, 111, 110, 59, 1, 268, 100, 105, 108, 5, 199, 1, 59, 528, 1, 199, 114, 99, 59, 1, 264, 110, 105, 110, 116, 59, 1, 8752, 111, 116, 59, 1, 266, 4, 2, 100, 110, 553, 560, 105, 108, 108, 97, 59, 1, 184, 116, 101, 114, 68, 111, 116, 59, 1, 183, 114, 59, 1, 8493, 105, 59, 1, 935, 114, 99, 108, 101, 4, 4, 68, 77, 80, 84, 591, 596, 603, 609, 111, 116, 59, 1, 8857, 105, 110, 117, 115, 59, 1, 8854, 108, 117, 115, 59, 1, 8853, 105, 109, 101, 115, 59, 1, 8855, 111, 4, 2, 99, 115, 623, 646, 107, 119, 105, 115, 101, 67, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8754, 101, 67, 117, 114, 108, 121, 4, 2, 68, 81, 658, 671, 111, 117, 98, 108, 101, 81, 117, 111, 116, 101, 59, 1, 8221, 117, 111, 116, 101, 59, 1, 8217, 4, 4, 108, 110, 112, 117, 688, 701, 736, 753, 111, 110, 4, 2, 59, 101, 696, 698, 1, 8759, 59, 1, 10868, 4, 3, 103, 105, 116, 709, 717, 722, 114, 117, 101, 110, 116, 59, 1, 8801, 110, 116, 59, 1, 8751, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8750, 4, 2, 102, 114, 742, 745, 59, 1, 8450, 111, 100, 117, 99, 116, 59, 1, 8720, 110, 116, 101, 114, 67, 108, 111, 99, 107, 119, 105, 115, 101, 67, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8755, 111, 115, 115, 59, 1, 10799, 99, 114, 59, 3, 55349, 56478, 112, 4, 2, 59, 67, 803, 805, 1, 8915, 97, 112, 59, 1, 8781, 4, 11, 68, 74, 83, 90, 97, 99, 101, 102, 105, 111, 115, 834, 850, 855, 860, 865, 888, 903, 916, 921, 1011, 1415, 4, 2, 59, 111, 840, 842, 1, 8517, 116, 114, 97, 104, 100, 59, 1, 10513, 99, 121, 59, 1, 1026, 99, 121, 59, 1, 1029, 99, 121, 59, 1, 1039, 4, 3, 103, 114, 115, 873, 879, 883, 103, 101, 114, 59, 1, 8225, 114, 59, 1, 8609, 104, 118, 59, 1, 10980, 4, 2, 97, 121, 894, 900, 114, 111, 110, 59, 1, 270, 59, 1, 1044, 108, 4, 2, 59, 116, 910, 912, 1, 8711, 97, 59, 1, 916, 114, 59, 3, 55349, 56583, 4, 2, 97, 102, 927, 998, 4, 2, 99, 109, 933, 992, 114, 105, 116, 105, 99, 97, 108, 4, 4, 65, 68, 71, 84, 950, 957, 978, 985, 99, 117, 116, 101, 59, 1, 180, 111, 4, 2, 116, 117, 964, 967, 59, 1, 729, 98, 108, 101, 65, 99, 117, 116, 101, 59, 1, 733, 114, 97, 118, 101, 59, 1, 96, 105, 108, 100, 101, 59, 1, 732, 111, 110, 100, 59, 1, 8900, 102, 101, 114, 101, 110, 116, 105, 97, 108, 68, 59, 1, 8518, 4, 4, 112, 116, 117, 119, 1021, 1026, 1048, 1249, 102, 59, 3, 55349, 56635, 4, 3, 59, 68, 69, 1034, 1036, 1041, 1, 168, 111, 116, 59, 1, 8412, 113, 117, 97, 108, 59, 1, 8784, 98, 108, 101, 4, 6, 67, 68, 76, 82, 85, 86, 1065, 1082, 1101, 1189, 1211, 1236, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8751, 111, 4, 2, 116, 119, 1089, 1092, 59, 1, 168, 110, 65, 114, 114, 111, 119, 59, 1, 8659, 4, 2, 101, 111, 1107, 1141, 102, 116, 4, 3, 65, 82, 84, 1117, 1124, 1136, 114, 114, 111, 119, 59, 1, 8656, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8660, 101, 101, 59, 1, 10980, 110, 103, 4, 2, 76, 82, 1149, 1177, 101, 102, 116, 4, 2, 65, 82, 1158, 1165, 114, 114, 111, 119, 59, 1, 10232, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10234, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10233, 105, 103, 104, 116, 4, 2, 65, 84, 1199, 1206, 114, 114, 111, 119, 59, 1, 8658, 101, 101, 59, 1, 8872, 112, 4, 2, 65, 68, 1218, 1225, 114, 114, 111, 119, 59, 1, 8657, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8661, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8741, 110, 4, 6, 65, 66, 76, 82, 84, 97, 1264, 1292, 1299, 1352, 1391, 1408, 114, 114, 111, 119, 4, 3, 59, 66, 85, 1276, 1278, 1283, 1, 8595, 97, 114, 59, 1, 10515, 112, 65, 114, 114, 111, 119, 59, 1, 8693, 114, 101, 118, 101, 59, 1, 785, 101, 102, 116, 4, 3, 82, 84, 86, 1310, 1323, 1334, 105, 103, 104, 116, 86, 101, 99, 116, 111, 114, 59, 1, 10576, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10590, 101, 99, 116, 111, 114, 4, 2, 59, 66, 1345, 1347, 1, 8637, 97, 114, 59, 1, 10582, 105, 103, 104, 116, 4, 2, 84, 86, 1362, 1373, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10591, 101, 99, 116, 111, 114, 4, 2, 59, 66, 1384, 1386, 1, 8641, 97, 114, 59, 1, 10583, 101, 101, 4, 2, 59, 65, 1399, 1401, 1, 8868, 114, 114, 111, 119, 59, 1, 8615, 114, 114, 111, 119, 59, 1, 8659, 4, 2, 99, 116, 1421, 1426, 114, 59, 3, 55349, 56479, 114, 111, 107, 59, 1, 272, 4, 16, 78, 84, 97, 99, 100, 102, 103, 108, 109, 111, 112, 113, 115, 116, 117, 120, 1466, 1470, 1478, 1489, 1515, 1520, 1525, 1536, 1544, 1593, 1609, 1617, 1650, 1664, 1668, 1677, 71, 59, 1, 330, 72, 5, 208, 1, 59, 1476, 1, 208, 99, 117, 116, 101, 5, 201, 1, 59, 1487, 1, 201, 4, 3, 97, 105, 121, 1497, 1503, 1512, 114, 111, 110, 59, 1, 282, 114, 99, 5, 202, 1, 59, 1510, 1, 202, 59, 1, 1069, 111, 116, 59, 1, 278, 114, 59, 3, 55349, 56584, 114, 97, 118, 101, 5, 200, 1, 59, 1534, 1, 200, 101, 109, 101, 110, 116, 59, 1, 8712, 4, 2, 97, 112, 1550, 1555, 99, 114, 59, 1, 274, 116, 121, 4, 2, 83, 86, 1563, 1576, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9723, 101, 114, 121, 83, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9643, 4, 2, 103, 112, 1599, 1604, 111, 110, 59, 1, 280, 102, 59, 3, 55349, 56636, 115, 105, 108, 111, 110, 59, 1, 917, 117, 4, 2, 97, 105, 1624, 1640, 108, 4, 2, 59, 84, 1631, 1633, 1, 10869, 105, 108, 100, 101, 59, 1, 8770, 108, 105, 98, 114, 105, 117, 109, 59, 1, 8652, 4, 2, 99, 105, 1656, 1660, 114, 59, 1, 8496, 109, 59, 1, 10867, 97, 59, 1, 919, 109, 108, 5, 203, 1, 59, 1675, 1, 203, 4, 2, 105, 112, 1683, 1689, 115, 116, 115, 59, 1, 8707, 111, 110, 101, 110, 116, 105, 97, 108, 69, 59, 1, 8519, 4, 5, 99, 102, 105, 111, 115, 1713, 1717, 1722, 1762, 1791, 121, 59, 1, 1060, 114, 59, 3, 55349, 56585, 108, 108, 101, 100, 4, 2, 83, 86, 1732, 1745, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9724, 101, 114, 121, 83, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9642, 4, 3, 112, 114, 117, 1770, 1775, 1781, 102, 59, 3, 55349, 56637, 65, 108, 108, 59, 1, 8704, 114, 105, 101, 114, 116, 114, 102, 59, 1, 8497, 99, 114, 59, 1, 8497, 4, 12, 74, 84, 97, 98, 99, 100, 102, 103, 111, 114, 115, 116, 1822, 1827, 1834, 1848, 1855, 1877, 1882, 1887, 1890, 1896, 1978, 1984, 99, 121, 59, 1, 1027, 5, 62, 1, 59, 1832, 1, 62, 109, 109, 97, 4, 2, 59, 100, 1843, 1845, 1, 915, 59, 1, 988, 114, 101, 118, 101, 59, 1, 286, 4, 3, 101, 105, 121, 1863, 1869, 1874, 100, 105, 108, 59, 1, 290, 114, 99, 59, 1, 284, 59, 1, 1043, 111, 116, 59, 1, 288, 114, 59, 3, 55349, 56586, 59, 1, 8921, 112, 102, 59, 3, 55349, 56638, 101, 97, 116, 101, 114, 4, 6, 69, 70, 71, 76, 83, 84, 1915, 1933, 1944, 1953, 1959, 1971, 113, 117, 97, 108, 4, 2, 59, 76, 1925, 1927, 1, 8805, 101, 115, 115, 59, 1, 8923, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8807, 114, 101, 97, 116, 101, 114, 59, 1, 10914, 101, 115, 115, 59, 1, 8823, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 10878, 105, 108, 100, 101, 59, 1, 8819, 99, 114, 59, 3, 55349, 56482, 59, 1, 8811, 4, 8, 65, 97, 99, 102, 105, 111, 115, 117, 2005, 2012, 2026, 2032, 2036, 2049, 2073, 2089, 82, 68, 99, 121, 59, 1, 1066, 4, 2, 99, 116, 2018, 2023, 101, 107, 59, 1, 711, 59, 1, 94, 105, 114, 99, 59, 1, 292, 114, 59, 1, 8460, 108, 98, 101, 114, 116, 83, 112, 97, 99, 101, 59, 1, 8459, 4, 2, 112, 114, 2055, 2059, 102, 59, 1, 8461, 105, 122, 111, 110, 116, 97, 108, 76, 105, 110, 101, 59, 1, 9472, 4, 2, 99, 116, 2079, 2083, 114, 59, 1, 8459, 114, 111, 107, 59, 1, 294, 109, 112, 4, 2, 68, 69, 2097, 2107, 111, 119, 110, 72, 117, 109, 112, 59, 1, 8782, 113, 117, 97, 108, 59, 1, 8783, 4, 14, 69, 74, 79, 97, 99, 100, 102, 103, 109, 110, 111, 115, 116, 117, 2144, 2149, 2155, 2160, 2171, 2189, 2194, 2198, 2209, 2245, 2307, 2329, 2334, 2341, 99, 121, 59, 1, 1045, 108, 105, 103, 59, 1, 306, 99, 121, 59, 1, 1025, 99, 117, 116, 101, 5, 205, 1, 59, 2169, 1, 205, 4, 2, 105, 121, 2177, 2186, 114, 99, 5, 206, 1, 59, 2184, 1, 206, 59, 1, 1048, 111, 116, 59, 1, 304, 114, 59, 1, 8465, 114, 97, 118, 101, 5, 204, 1, 59, 2207, 1, 204, 4, 3, 59, 97, 112, 2217, 2219, 2238, 1, 8465, 4, 2, 99, 103, 2225, 2229, 114, 59, 1, 298, 105, 110, 97, 114, 121, 73, 59, 1, 8520, 108, 105, 101, 115, 59, 1, 8658, 4, 2, 116, 118, 2251, 2281, 4, 2, 59, 101, 2257, 2259, 1, 8748, 4, 2, 103, 114, 2265, 2271, 114, 97, 108, 59, 1, 8747, 115, 101, 99, 116, 105, 111, 110, 59, 1, 8898, 105, 115, 105, 98, 108, 101, 4, 2, 67, 84, 2293, 2300, 111, 109, 109, 97, 59, 1, 8291, 105, 109, 101, 115, 59, 1, 8290, 4, 3, 103, 112, 116, 2315, 2320, 2325, 111, 110, 59, 1, 302, 102, 59, 3, 55349, 56640, 97, 59, 1, 921, 99, 114, 59, 1, 8464, 105, 108, 100, 101, 59, 1, 296, 4, 2, 107, 109, 2347, 2352, 99, 121, 59, 1, 1030, 108, 5, 207, 1, 59, 2358, 1, 207, 4, 5, 99, 102, 111, 115, 117, 2372, 2386, 2391, 2397, 2414, 4, 2, 105, 121, 2378, 2383, 114, 99, 59, 1, 308, 59, 1, 1049, 114, 59, 3, 55349, 56589, 112, 102, 59, 3, 55349, 56641, 4, 2, 99, 101, 2403, 2408, 114, 59, 3, 55349, 56485, 114, 99, 121, 59, 1, 1032, 107, 99, 121, 59, 1, 1028, 4, 7, 72, 74, 97, 99, 102, 111, 115, 2436, 2441, 2446, 2452, 2467, 2472, 2478, 99, 121, 59, 1, 1061, 99, 121, 59, 1, 1036, 112, 112, 97, 59, 1, 922, 4, 2, 101, 121, 2458, 2464, 100, 105, 108, 59, 1, 310, 59, 1, 1050, 114, 59, 3, 55349, 56590, 112, 102, 59, 3, 55349, 56642, 99, 114, 59, 3, 55349, 56486, 4, 11, 74, 84, 97, 99, 101, 102, 108, 109, 111, 115, 116, 2508, 2513, 2520, 2562, 2585, 2981, 2986, 3004, 3011, 3146, 3167, 99, 121, 59, 1, 1033, 5, 60, 1, 59, 2518, 1, 60, 4, 5, 99, 109, 110, 112, 114, 2532, 2538, 2544, 2548, 2558, 117, 116, 101, 59, 1, 313, 98, 100, 97, 59, 1, 923, 103, 59, 1, 10218, 108, 97, 99, 101, 116, 114, 102, 59, 1, 8466, 114, 59, 1, 8606, 4, 3, 97, 101, 121, 2570, 2576, 2582, 114, 111, 110, 59, 1, 317, 100, 105, 108, 59, 1, 315, 59, 1, 1051, 4, 2, 102, 115, 2591, 2907, 116, 4, 10, 65, 67, 68, 70, 82, 84, 85, 86, 97, 114, 2614, 2663, 2672, 2728, 2735, 2760, 2820, 2870, 2888, 2895, 4, 2, 110, 114, 2620, 2633, 103, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10216, 114, 111, 119, 4, 3, 59, 66, 82, 2644, 2646, 2651, 1, 8592, 97, 114, 59, 1, 8676, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8646, 101, 105, 108, 105, 110, 103, 59, 1, 8968, 111, 4, 2, 117, 119, 2679, 2692, 98, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10214, 110, 4, 2, 84, 86, 2699, 2710, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10593, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2721, 2723, 1, 8643, 97, 114, 59, 1, 10585, 108, 111, 111, 114, 59, 1, 8970, 105, 103, 104, 116, 4, 2, 65, 86, 2745, 2752, 114, 114, 111, 119, 59, 1, 8596, 101, 99, 116, 111, 114, 59, 1, 10574, 4, 2, 101, 114, 2766, 2792, 101, 4, 3, 59, 65, 86, 2775, 2777, 2784, 1, 8867, 114, 114, 111, 119, 59, 1, 8612, 101, 99, 116, 111, 114, 59, 1, 10586, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 2806, 2808, 2813, 1, 8882, 97, 114, 59, 1, 10703, 113, 117, 97, 108, 59, 1, 8884, 112, 4, 3, 68, 84, 86, 2829, 2841, 2852, 111, 119, 110, 86, 101, 99, 116, 111, 114, 59, 1, 10577, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10592, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2863, 2865, 1, 8639, 97, 114, 59, 1, 10584, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2881, 2883, 1, 8636, 97, 114, 59, 1, 10578, 114, 114, 111, 119, 59, 1, 8656, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8660, 115, 4, 6, 69, 70, 71, 76, 83, 84, 2922, 2936, 2947, 2956, 2962, 2974, 113, 117, 97, 108, 71, 114, 101, 97, 116, 101, 114, 59, 1, 8922, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8806, 114, 101, 97, 116, 101, 114, 59, 1, 8822, 101, 115, 115, 59, 1, 10913, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 10877, 105, 108, 100, 101, 59, 1, 8818, 114, 59, 3, 55349, 56591, 4, 2, 59, 101, 2992, 2994, 1, 8920, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8666, 105, 100, 111, 116, 59, 1, 319, 4, 3, 110, 112, 119, 3019, 3110, 3115, 103, 4, 4, 76, 82, 108, 114, 3030, 3058, 3070, 3098, 101, 102, 116, 4, 2, 65, 82, 3039, 3046, 114, 114, 111, 119, 59, 1, 10229, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10231, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10230, 101, 102, 116, 4, 2, 97, 114, 3079, 3086, 114, 114, 111, 119, 59, 1, 10232, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10234, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10233, 102, 59, 3, 55349, 56643, 101, 114, 4, 2, 76, 82, 3123, 3134, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8601, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8600, 4, 3, 99, 104, 116, 3154, 3158, 3161, 114, 59, 1, 8466, 59, 1, 8624, 114, 111, 107, 59, 1, 321, 59, 1, 8810, 4, 8, 97, 99, 101, 102, 105, 111, 115, 117, 3188, 3192, 3196, 3222, 3227, 3237, 3243, 3248, 112, 59, 1, 10501, 121, 59, 1, 1052, 4, 2, 100, 108, 3202, 3213, 105, 117, 109, 83, 112, 97, 99, 101, 59, 1, 8287, 108, 105, 110, 116, 114, 102, 59, 1, 8499, 114, 59, 3, 55349, 56592, 110, 117, 115, 80, 108, 117, 115, 59, 1, 8723, 112, 102, 59, 3, 55349, 56644, 99, 114, 59, 1, 8499, 59, 1, 924, 4, 9, 74, 97, 99, 101, 102, 111, 115, 116, 117, 3271, 3276, 3283, 3306, 3422, 3427, 4120, 4126, 4137, 99, 121, 59, 1, 1034, 99, 117, 116, 101, 59, 1, 323, 4, 3, 97, 101, 121, 3291, 3297, 3303, 114, 111, 110, 59, 1, 327, 100, 105, 108, 59, 1, 325, 59, 1, 1053, 4, 3, 103, 115, 119, 3314, 3380, 3415, 97, 116, 105, 118, 101, 4, 3, 77, 84, 86, 3327, 3340, 3365, 101, 100, 105, 117, 109, 83, 112, 97, 99, 101, 59, 1, 8203, 104, 105, 4, 2, 99, 110, 3348, 3357, 107, 83, 112, 97, 99, 101, 59, 1, 8203, 83, 112, 97, 99, 101, 59, 1, 8203, 101, 114, 121, 84, 104, 105, 110, 83, 112, 97, 99, 101, 59, 1, 8203, 116, 101, 100, 4, 2, 71, 76, 3389, 3405, 114, 101, 97, 116, 101, 114, 71, 114, 101, 97, 116, 101, 114, 59, 1, 8811, 101, 115, 115, 76, 101, 115, 115, 59, 1, 8810, 76, 105, 110, 101, 59, 1, 10, 114, 59, 3, 55349, 56593, 4, 4, 66, 110, 112, 116, 3437, 3444, 3460, 3464, 114, 101, 97, 107, 59, 1, 8288, 66, 114, 101, 97, 107, 105, 110, 103, 83, 112, 97, 99, 101, 59, 1, 160, 102, 59, 1, 8469, 4, 13, 59, 67, 68, 69, 71, 72, 76, 78, 80, 82, 83, 84, 86, 3492, 3494, 3517, 3536, 3578, 3657, 3685, 3784, 3823, 3860, 3915, 4066, 4107, 1, 10988, 4, 2, 111, 117, 3500, 3510, 110, 103, 114, 117, 101, 110, 116, 59, 1, 8802, 112, 67, 97, 112, 59, 1, 8813, 111, 117, 98, 108, 101, 86, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8742, 4, 3, 108, 113, 120, 3544, 3552, 3571, 101, 109, 101, 110, 116, 59, 1, 8713, 117, 97, 108, 4, 2, 59, 84, 3561, 3563, 1, 8800, 105, 108, 100, 101, 59, 3, 8770, 824, 105, 115, 116, 115, 59, 1, 8708, 114, 101, 97, 116, 101, 114, 4, 7, 59, 69, 70, 71, 76, 83, 84, 3600, 3602, 3609, 3621, 3631, 3637, 3650, 1, 8815, 113, 117, 97, 108, 59, 1, 8817, 117, 108, 108, 69, 113, 117, 97, 108, 59, 3, 8807, 824, 114, 101, 97, 116, 101, 114, 59, 3, 8811, 824, 101, 115, 115, 59, 1, 8825, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 3, 10878, 824, 105, 108, 100, 101, 59, 1, 8821, 117, 109, 112, 4, 2, 68, 69, 3666, 3677, 111, 119, 110, 72, 117, 109, 112, 59, 3, 8782, 824, 113, 117, 97, 108, 59, 3, 8783, 824, 101, 4, 2, 102, 115, 3692, 3724, 116, 84, 114, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 3709, 3711, 3717, 1, 8938, 97, 114, 59, 3, 10703, 824, 113, 117, 97, 108, 59, 1, 8940, 115, 4, 6, 59, 69, 71, 76, 83, 84, 3739, 3741, 3748, 3757, 3764, 3777, 1, 8814, 113, 117, 97, 108, 59, 1, 8816, 114, 101, 97, 116, 101, 114, 59, 1, 8824, 101, 115, 115, 59, 3, 8810, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 3, 10877, 824, 105, 108, 100, 101, 59, 1, 8820, 101, 115, 116, 101, 100, 4, 2, 71, 76, 3795, 3812, 114, 101, 97, 116, 101, 114, 71, 114, 101, 97, 116, 101, 114, 59, 3, 10914, 824, 101, 115, 115, 76, 101, 115, 115, 59, 3, 10913, 824, 114, 101, 99, 101, 100, 101, 115, 4, 3, 59, 69, 83, 3838, 3840, 3848, 1, 8832, 113, 117, 97, 108, 59, 3, 10927, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8928, 4, 2, 101, 105, 3866, 3881, 118, 101, 114, 115, 101, 69, 108, 101, 109, 101, 110, 116, 59, 1, 8716, 103, 104, 116, 84, 114, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 3900, 3902, 3908, 1, 8939, 97, 114, 59, 3, 10704, 824, 113, 117, 97, 108, 59, 1, 8941, 4, 2, 113, 117, 3921, 3973, 117, 97, 114, 101, 83, 117, 4, 2, 98, 112, 3933, 3952, 115, 101, 116, 4, 2, 59, 69, 3942, 3945, 3, 8847, 824, 113, 117, 97, 108, 59, 1, 8930, 101, 114, 115, 101, 116, 4, 2, 59, 69, 3963, 3966, 3, 8848, 824, 113, 117, 97, 108, 59, 1, 8931, 4, 3, 98, 99, 112, 3981, 4000, 4045, 115, 101, 116, 4, 2, 59, 69, 3990, 3993, 3, 8834, 8402, 113, 117, 97, 108, 59, 1, 8840, 99, 101, 101, 100, 115, 4, 4, 59, 69, 83, 84, 4015, 4017, 4025, 4037, 1, 8833, 113, 117, 97, 108, 59, 3, 10928, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8929, 105, 108, 100, 101, 59, 3, 8831, 824, 101, 114, 115, 101, 116, 4, 2, 59, 69, 4056, 4059, 3, 8835, 8402, 113, 117, 97, 108, 59, 1, 8841, 105, 108, 100, 101, 4, 4, 59, 69, 70, 84, 4080, 4082, 4089, 4100, 1, 8769, 113, 117, 97, 108, 59, 1, 8772, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8775, 105, 108, 100, 101, 59, 1, 8777, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8740, 99, 114, 59, 3, 55349, 56489, 105, 108, 100, 101, 5, 209, 1, 59, 4135, 1, 209, 59, 1, 925, 4, 14, 69, 97, 99, 100, 102, 103, 109, 111, 112, 114, 115, 116, 117, 118, 4170, 4176, 4187, 4205, 4212, 4217, 4228, 4253, 4259, 4292, 4295, 4316, 4337, 4346, 108, 105, 103, 59, 1, 338, 99, 117, 116, 101, 5, 211, 1, 59, 4185, 1, 211, 4, 2, 105, 121, 4193, 4202, 114, 99, 5, 212, 1, 59, 4200, 1, 212, 59, 1, 1054, 98, 108, 97, 99, 59, 1, 336, 114, 59, 3, 55349, 56594, 114, 97, 118, 101, 5, 210, 1, 59, 4226, 1, 210, 4, 3, 97, 101, 105, 4236, 4241, 4246, 99, 114, 59, 1, 332, 103, 97, 59, 1, 937, 99, 114, 111, 110, 59, 1, 927, 112, 102, 59, 3, 55349, 56646, 101, 110, 67, 117, 114, 108, 121, 4, 2, 68, 81, 4272, 4285, 111, 117, 98, 108, 101, 81, 117, 111, 116, 101, 59, 1, 8220, 117, 111, 116, 101, 59, 1, 8216, 59, 1, 10836, 4, 2, 99, 108, 4301, 4306, 114, 59, 3, 55349, 56490, 97, 115, 104, 5, 216, 1, 59, 4314, 1, 216, 105, 4, 2, 108, 109, 4323, 4332, 100, 101, 5, 213, 1, 59, 4330, 1, 213, 101, 115, 59, 1, 10807, 109, 108, 5, 214, 1, 59, 4344, 1, 214, 101, 114, 4, 2, 66, 80, 4354, 4380, 4, 2, 97, 114, 4360, 4364, 114, 59, 1, 8254, 97, 99, 4, 2, 101, 107, 4372, 4375, 59, 1, 9182, 101, 116, 59, 1, 9140, 97, 114, 101, 110, 116, 104, 101, 115, 105, 115, 59, 1, 9180, 4, 9, 97, 99, 102, 104, 105, 108, 111, 114, 115, 4413, 4422, 4426, 4431, 4435, 4438, 4448, 4471, 4561, 114, 116, 105, 97, 108, 68, 59, 1, 8706, 121, 59, 1, 1055, 114, 59, 3, 55349, 56595, 105, 59, 1, 934, 59, 1, 928, 117, 115, 77, 105, 110, 117, 115, 59, 1, 177, 4, 2, 105, 112, 4454, 4467, 110, 99, 97, 114, 101, 112, 108, 97, 110, 101, 59, 1, 8460, 102, 59, 1, 8473, 4, 4, 59, 101, 105, 111, 4481, 4483, 4526, 4531, 1, 10939, 99, 101, 100, 101, 115, 4, 4, 59, 69, 83, 84, 4498, 4500, 4507, 4519, 1, 8826, 113, 117, 97, 108, 59, 1, 10927, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8828, 105, 108, 100, 101, 59, 1, 8830, 109, 101, 59, 1, 8243, 4, 2, 100, 112, 4537, 4543, 117, 99, 116, 59, 1, 8719, 111, 114, 116, 105, 111, 110, 4, 2, 59, 97, 4555, 4557, 1, 8759, 108, 59, 1, 8733, 4, 2, 99, 105, 4567, 4572, 114, 59, 3, 55349, 56491, 59, 1, 936, 4, 4, 85, 102, 111, 115, 4585, 4594, 4599, 4604, 79, 84, 5, 34, 1, 59, 4592, 1, 34, 114, 59, 3, 55349, 56596, 112, 102, 59, 1, 8474, 99, 114, 59, 3, 55349, 56492, 4, 12, 66, 69, 97, 99, 101, 102, 104, 105, 111, 114, 115, 117, 4636, 4642, 4650, 4681, 4704, 4763, 4767, 4771, 5047, 5069, 5081, 5094, 97, 114, 114, 59, 1, 10512, 71, 5, 174, 1, 59, 4648, 1, 174, 4, 3, 99, 110, 114, 4658, 4664, 4668, 117, 116, 101, 59, 1, 340, 103, 59, 1, 10219, 114, 4, 2, 59, 116, 4675, 4677, 1, 8608, 108, 59, 1, 10518, 4, 3, 97, 101, 121, 4689, 4695, 4701, 114, 111, 110, 59, 1, 344, 100, 105, 108, 59, 1, 342, 59, 1, 1056, 4, 2, 59, 118, 4710, 4712, 1, 8476, 101, 114, 115, 101, 4, 2, 69, 85, 4722, 4748, 4, 2, 108, 113, 4728, 4736, 101, 109, 101, 110, 116, 59, 1, 8715, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 8651, 112, 69, 113, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 10607, 114, 59, 1, 8476, 111, 59, 1, 929, 103, 104, 116, 4, 8, 65, 67, 68, 70, 84, 85, 86, 97, 4792, 4840, 4849, 4905, 4912, 4972, 5022, 5040, 4, 2, 110, 114, 4798, 4811, 103, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10217, 114, 111, 119, 4, 3, 59, 66, 76, 4822, 4824, 4829, 1, 8594, 97, 114, 59, 1, 8677, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8644, 101, 105, 108, 105, 110, 103, 59, 1, 8969, 111, 4, 2, 117, 119, 4856, 4869, 98, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10215, 110, 4, 2, 84, 86, 4876, 4887, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10589, 101, 99, 116, 111, 114, 4, 2, 59, 66, 4898, 4900, 1, 8642, 97, 114, 59, 1, 10581, 108, 111, 111, 114, 59, 1, 8971, 4, 2, 101, 114, 4918, 4944, 101, 4, 3, 59, 65, 86, 4927, 4929, 4936, 1, 8866, 114, 114, 111, 119, 59, 1, 8614, 101, 99, 116, 111, 114, 59, 1, 10587, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 4958, 4960, 4965, 1, 8883, 97, 114, 59, 1, 10704, 113, 117, 97, 108, 59, 1, 8885, 112, 4, 3, 68, 84, 86, 4981, 4993, 5004, 111, 119, 110, 86, 101, 99, 116, 111, 114, 59, 1, 10575, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10588, 101, 99, 116, 111, 114, 4, 2, 59, 66, 5015, 5017, 1, 8638, 97, 114, 59, 1, 10580, 101, 99, 116, 111, 114, 4, 2, 59, 66, 5033, 5035, 1, 8640, 97, 114, 59, 1, 10579, 114, 114, 111, 119, 59, 1, 8658, 4, 2, 112, 117, 5053, 5057, 102, 59, 1, 8477, 110, 100, 73, 109, 112, 108, 105, 101, 115, 59, 1, 10608, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8667, 4, 2, 99, 104, 5087, 5091, 114, 59, 1, 8475, 59, 1, 8625, 108, 101, 68, 101, 108, 97, 121, 101, 100, 59, 1, 10740, 4, 13, 72, 79, 97, 99, 102, 104, 105, 109, 111, 113, 115, 116, 117, 5134, 5150, 5157, 5164, 5198, 5203, 5259, 5265, 5277, 5283, 5374, 5380, 5385, 4, 2, 67, 99, 5140, 5146, 72, 99, 121, 59, 1, 1065, 121, 59, 1, 1064, 70, 84, 99, 121, 59, 1, 1068, 99, 117, 116, 101, 59, 1, 346, 4, 5, 59, 97, 101, 105, 121, 5176, 5178, 5184, 5190, 5195, 1, 10940, 114, 111, 110, 59, 1, 352, 100, 105, 108, 59, 1, 350, 114, 99, 59, 1, 348, 59, 1, 1057, 114, 59, 3, 55349, 56598, 111, 114, 116, 4, 4, 68, 76, 82, 85, 5216, 5227, 5238, 5250, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8595, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8592, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8594, 112, 65, 114, 114, 111, 119, 59, 1, 8593, 103, 109, 97, 59, 1, 931, 97, 108, 108, 67, 105, 114, 99, 108, 101, 59, 1, 8728, 112, 102, 59, 3, 55349, 56650, 4, 2, 114, 117, 5289, 5293, 116, 59, 1, 8730, 97, 114, 101, 4, 4, 59, 73, 83, 85, 5306, 5308, 5322, 5367, 1, 9633, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 59, 1, 8851, 117, 4, 2, 98, 112, 5329, 5347, 115, 101, 116, 4, 2, 59, 69, 5338, 5340, 1, 8847, 113, 117, 97, 108, 59, 1, 8849, 101, 114, 115, 101, 116, 4, 2, 59, 69, 5358, 5360, 1, 8848, 113, 117, 97, 108, 59, 1, 8850, 110, 105, 111, 110, 59, 1, 8852, 99, 114, 59, 3, 55349, 56494, 97, 114, 59, 1, 8902, 4, 4, 98, 99, 109, 112, 5395, 5420, 5475, 5478, 4, 2, 59, 115, 5401, 5403, 1, 8912, 101, 116, 4, 2, 59, 69, 5411, 5413, 1, 8912, 113, 117, 97, 108, 59, 1, 8838, 4, 2, 99, 104, 5426, 5468, 101, 101, 100, 115, 4, 4, 59, 69, 83, 84, 5440, 5442, 5449, 5461, 1, 8827, 113, 117, 97, 108, 59, 1, 10928, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8829, 105, 108, 100, 101, 59, 1, 8831, 84, 104, 97, 116, 59, 1, 8715, 59, 1, 8721, 4, 3, 59, 101, 115, 5486, 5488, 5507, 1, 8913, 114, 115, 101, 116, 4, 2, 59, 69, 5498, 5500, 1, 8835, 113, 117, 97, 108, 59, 1, 8839, 101, 116, 59, 1, 8913, 4, 11, 72, 82, 83, 97, 99, 102, 104, 105, 111, 114, 115, 5536, 5546, 5552, 5567, 5579, 5602, 5607, 5655, 5695, 5701, 5711, 79, 82, 78, 5, 222, 1, 59, 5544, 1, 222, 65, 68, 69, 59, 1, 8482, 4, 2, 72, 99, 5558, 5563, 99, 121, 59, 1, 1035, 121, 59, 1, 1062, 4, 2, 98, 117, 5573, 5576, 59, 1, 9, 59, 1, 932, 4, 3, 97, 101, 121, 5587, 5593, 5599, 114, 111, 110, 59, 1, 356, 100, 105, 108, 59, 1, 354, 59, 1, 1058, 114, 59, 3, 55349, 56599, 4, 2, 101, 105, 5613, 5631, 4, 2, 114, 116, 5619, 5627, 101, 102, 111, 114, 101, 59, 1, 8756, 97, 59, 1, 920, 4, 2, 99, 110, 5637, 5647, 107, 83, 112, 97, 99, 101, 59, 3, 8287, 8202, 83, 112, 97, 99, 101, 59, 1, 8201, 108, 100, 101, 4, 4, 59, 69, 70, 84, 5668, 5670, 5677, 5688, 1, 8764, 113, 117, 97, 108, 59, 1, 8771, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8773, 105, 108, 100, 101, 59, 1, 8776, 112, 102, 59, 3, 55349, 56651, 105, 112, 108, 101, 68, 111, 116, 59, 1, 8411, 4, 2, 99, 116, 5717, 5722, 114, 59, 3, 55349, 56495, 114, 111, 107, 59, 1, 358, 4, 14, 97, 98, 99, 100, 102, 103, 109, 110, 111, 112, 114, 115, 116, 117, 5758, 5789, 5805, 5823, 5830, 5835, 5846, 5852, 5921, 5937, 6089, 6095, 6101, 6108, 4, 2, 99, 114, 5764, 5774, 117, 116, 101, 5, 218, 1, 59, 5772, 1, 218, 114, 4, 2, 59, 111, 5781, 5783, 1, 8607, 99, 105, 114, 59, 1, 10569, 114, 4, 2, 99, 101, 5796, 5800, 121, 59, 1, 1038, 118, 101, 59, 1, 364, 4, 2, 105, 121, 5811, 5820, 114, 99, 5, 219, 1, 59, 5818, 1, 219, 59, 1, 1059, 98, 108, 97, 99, 59, 1, 368, 114, 59, 3, 55349, 56600, 114, 97, 118, 101, 5, 217, 1, 59, 5844, 1, 217, 97, 99, 114, 59, 1, 362, 4, 2, 100, 105, 5858, 5905, 101, 114, 4, 2, 66, 80, 5866, 5892, 4, 2, 97, 114, 5872, 5876, 114, 59, 1, 95, 97, 99, 4, 2, 101, 107, 5884, 5887, 59, 1, 9183, 101, 116, 59, 1, 9141, 97, 114, 101, 110, 116, 104, 101, 115, 105, 115, 59, 1, 9181, 111, 110, 4, 2, 59, 80, 5913, 5915, 1, 8899, 108, 117, 115, 59, 1, 8846, 4, 2, 103, 112, 5927, 5932, 111, 110, 59, 1, 370, 102, 59, 3, 55349, 56652, 4, 8, 65, 68, 69, 84, 97, 100, 112, 115, 5955, 5985, 5996, 6009, 6026, 6033, 6044, 6075, 114, 114, 111, 119, 4, 3, 59, 66, 68, 5967, 5969, 5974, 1, 8593, 97, 114, 59, 1, 10514, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8645, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8597, 113, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 10606, 101, 101, 4, 2, 59, 65, 6017, 6019, 1, 8869, 114, 114, 111, 119, 59, 1, 8613, 114, 114, 111, 119, 59, 1, 8657, 111, 119, 110, 97, 114, 114, 111, 119, 59, 1, 8661, 101, 114, 4, 2, 76, 82, 6052, 6063, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8598, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8599, 105, 4, 2, 59, 108, 6082, 6084, 1, 978, 111, 110, 59, 1, 933, 105, 110, 103, 59, 1, 366, 99, 114, 59, 3, 55349, 56496, 105, 108, 100, 101, 59, 1, 360, 109, 108, 5, 220, 1, 59, 6115, 1, 220, 4, 9, 68, 98, 99, 100, 101, 102, 111, 115, 118, 6137, 6143, 6148, 6152, 6166, 6250, 6255, 6261, 6267, 97, 115, 104, 59, 1, 8875, 97, 114, 59, 1, 10987, 121, 59, 1, 1042, 97, 115, 104, 4, 2, 59, 108, 6161, 6163, 1, 8873, 59, 1, 10982, 4, 2, 101, 114, 6172, 6175, 59, 1, 8897, 4, 3, 98, 116, 121, 6183, 6188, 6238, 97, 114, 59, 1, 8214, 4, 2, 59, 105, 6194, 6196, 1, 8214, 99, 97, 108, 4, 4, 66, 76, 83, 84, 6209, 6214, 6220, 6231, 97, 114, 59, 1, 8739, 105, 110, 101, 59, 1, 124, 101, 112, 97, 114, 97, 116, 111, 114, 59, 1, 10072, 105, 108, 100, 101, 59, 1, 8768, 84, 104, 105, 110, 83, 112, 97, 99, 101, 59, 1, 8202, 114, 59, 3, 55349, 56601, 112, 102, 59, 3, 55349, 56653, 99, 114, 59, 3, 55349, 56497, 100, 97, 115, 104, 59, 1, 8874, 4, 5, 99, 101, 102, 111, 115, 6286, 6292, 6298, 6303, 6309, 105, 114, 99, 59, 1, 372, 100, 103, 101, 59, 1, 8896, 114, 59, 3, 55349, 56602, 112, 102, 59, 3, 55349, 56654, 99, 114, 59, 3, 55349, 56498, 4, 4, 102, 105, 111, 115, 6325, 6330, 6333, 6339, 114, 59, 3, 55349, 56603, 59, 1, 926, 112, 102, 59, 3, 55349, 56655, 99, 114, 59, 3, 55349, 56499, 4, 9, 65, 73, 85, 97, 99, 102, 111, 115, 117, 6365, 6370, 6375, 6380, 6391, 6405, 6410, 6416, 6422, 99, 121, 59, 1, 1071, 99, 121, 59, 1, 1031, 99, 121, 59, 1, 1070, 99, 117, 116, 101, 5, 221, 1, 59, 6389, 1, 221, 4, 2, 105, 121, 6397, 6402, 114, 99, 59, 1, 374, 59, 1, 1067, 114, 59, 3, 55349, 56604, 112, 102, 59, 3, 55349, 56656, 99, 114, 59, 3, 55349, 56500, 109, 108, 59, 1, 376, 4, 8, 72, 97, 99, 100, 101, 102, 111, 115, 6445, 6450, 6457, 6472, 6477, 6501, 6505, 6510, 99, 121, 59, 1, 1046, 99, 117, 116, 101, 59, 1, 377, 4, 2, 97, 121, 6463, 6469, 114, 111, 110, 59, 1, 381, 59, 1, 1047, 111, 116, 59, 1, 379, 4, 2, 114, 116, 6483, 6497, 111, 87, 105, 100, 116, 104, 83, 112, 97, 99, 101, 59, 1, 8203, 97, 59, 1, 918, 114, 59, 1, 8488, 112, 102, 59, 1, 8484, 99, 114, 59, 3, 55349, 56501, 4, 16, 97, 98, 99, 101, 102, 103, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 6550, 6561, 6568, 6612, 6622, 6634, 6645, 6672, 6699, 6854, 6870, 6923, 6933, 6963, 6974, 6983, 99, 117, 116, 101, 5, 225, 1, 59, 6559, 1, 225, 114, 101, 118, 101, 59, 1, 259, 4, 6, 59, 69, 100, 105, 117, 121, 6582, 6584, 6588, 6591, 6600, 6609, 1, 8766, 59, 3, 8766, 819, 59, 1, 8767, 114, 99, 5, 226, 1, 59, 6598, 1, 226, 116, 101, 5, 180, 1, 59, 6607, 1, 180, 59, 1, 1072, 108, 105, 103, 5, 230, 1, 59, 6620, 1, 230, 4, 2, 59, 114, 6628, 6630, 1, 8289, 59, 3, 55349, 56606, 114, 97, 118, 101, 5, 224, 1, 59, 6643, 1, 224, 4, 2, 101, 112, 6651, 6667, 4, 2, 102, 112, 6657, 6663, 115, 121, 109, 59, 1, 8501, 104, 59, 1, 8501, 104, 97, 59, 1, 945, 4, 2, 97, 112, 6678, 6692, 4, 2, 99, 108, 6684, 6688, 114, 59, 1, 257, 103, 59, 1, 10815, 5, 38, 1, 59, 6697, 1, 38, 4, 2, 100, 103, 6705, 6737, 4, 5, 59, 97, 100, 115, 118, 6717, 6719, 6724, 6727, 6734, 1, 8743, 110, 100, 59, 1, 10837, 59, 1, 10844, 108, 111, 112, 101, 59, 1, 10840, 59, 1, 10842, 4, 7, 59, 101, 108, 109, 114, 115, 122, 6753, 6755, 6758, 6762, 6814, 6835, 6848, 1, 8736, 59, 1, 10660, 101, 59, 1, 8736, 115, 100, 4, 2, 59, 97, 6770, 6772, 1, 8737, 4, 8, 97, 98, 99, 100, 101, 102, 103, 104, 6790, 6793, 6796, 6799, 6802, 6805, 6808, 6811, 59, 1, 10664, 59, 1, 10665, 59, 1, 10666, 59, 1, 10667, 59, 1, 10668, 59, 1, 10669, 59, 1, 10670, 59, 1, 10671, 116, 4, 2, 59, 118, 6821, 6823, 1, 8735, 98, 4, 2, 59, 100, 6830, 6832, 1, 8894, 59, 1, 10653, 4, 2, 112, 116, 6841, 6845, 104, 59, 1, 8738, 59, 1, 197, 97, 114, 114, 59, 1, 9084, 4, 2, 103, 112, 6860, 6865, 111, 110, 59, 1, 261, 102, 59, 3, 55349, 56658, 4, 7, 59, 69, 97, 101, 105, 111, 112, 6886, 6888, 6891, 6897, 6900, 6904, 6908, 1, 8776, 59, 1, 10864, 99, 105, 114, 59, 1, 10863, 59, 1, 8778, 100, 59, 1, 8779, 115, 59, 1, 39, 114, 111, 120, 4, 2, 59, 101, 6917, 6919, 1, 8776, 113, 59, 1, 8778, 105, 110, 103, 5, 229, 1, 59, 6931, 1, 229, 4, 3, 99, 116, 121, 6941, 6946, 6949, 114, 59, 3, 55349, 56502, 59, 1, 42, 109, 112, 4, 2, 59, 101, 6957, 6959, 1, 8776, 113, 59, 1, 8781, 105, 108, 100, 101, 5, 227, 1, 59, 6972, 1, 227, 109, 108, 5, 228, 1, 59, 6981, 1, 228, 4, 2, 99, 105, 6989, 6997, 111, 110, 105, 110, 116, 59, 1, 8755, 110, 116, 59, 1, 10769, 4, 16, 78, 97, 98, 99, 100, 101, 102, 105, 107, 108, 110, 111, 112, 114, 115, 117, 7036, 7041, 7119, 7135, 7149, 7155, 7219, 7224, 7347, 7354, 7463, 7489, 7786, 7793, 7814, 7866, 111, 116, 59, 1, 10989, 4, 2, 99, 114, 7047, 7094, 107, 4, 4, 99, 101, 112, 115, 7058, 7064, 7073, 7080, 111, 110, 103, 59, 1, 8780, 112, 115, 105, 108, 111, 110, 59, 1, 1014, 114, 105, 109, 101, 59, 1, 8245, 105, 109, 4, 2, 59, 101, 7088, 7090, 1, 8765, 113, 59, 1, 8909, 4, 2, 118, 119, 7100, 7105, 101, 101, 59, 1, 8893, 101, 100, 4, 2, 59, 103, 7113, 7115, 1, 8965, 101, 59, 1, 8965, 114, 107, 4, 2, 59, 116, 7127, 7129, 1, 9141, 98, 114, 107, 59, 1, 9142, 4, 2, 111, 121, 7141, 7146, 110, 103, 59, 1, 8780, 59, 1, 1073, 113, 117, 111, 59, 1, 8222, 4, 5, 99, 109, 112, 114, 116, 7167, 7181, 7188, 7193, 7199, 97, 117, 115, 4, 2, 59, 101, 7176, 7178, 1, 8757, 59, 1, 8757, 112, 116, 121, 118, 59, 1, 10672, 115, 105, 59, 1, 1014, 110, 111, 117, 59, 1, 8492, 4, 3, 97, 104, 119, 7207, 7210, 7213, 59, 1, 946, 59, 1, 8502, 101, 101, 110, 59, 1, 8812, 114, 59, 3, 55349, 56607, 103, 4, 7, 99, 111, 115, 116, 117, 118, 119, 7241, 7262, 7288, 7305, 7328, 7335, 7340, 4, 3, 97, 105, 117, 7249, 7253, 7258, 112, 59, 1, 8898, 114, 99, 59, 1, 9711, 112, 59, 1, 8899, 4, 3, 100, 112, 116, 7270, 7275, 7281, 111, 116, 59, 1, 10752, 108, 117, 115, 59, 1, 10753, 105, 109, 101, 115, 59, 1, 10754, 4, 2, 113, 116, 7294, 7300, 99, 117, 112, 59, 1, 10758, 97, 114, 59, 1, 9733, 114, 105, 97, 110, 103, 108, 101, 4, 2, 100, 117, 7318, 7324, 111, 119, 110, 59, 1, 9661, 112, 59, 1, 9651, 112, 108, 117, 115, 59, 1, 10756, 101, 101, 59, 1, 8897, 101, 100, 103, 101, 59, 1, 8896, 97, 114, 111, 119, 59, 1, 10509, 4, 3, 97, 107, 111, 7362, 7436, 7458, 4, 2, 99, 110, 7368, 7432, 107, 4, 3, 108, 115, 116, 7377, 7386, 7394, 111, 122, 101, 110, 103, 101, 59, 1, 10731, 113, 117, 97, 114, 101, 59, 1, 9642, 114, 105, 97, 110, 103, 108, 101, 4, 4, 59, 100, 108, 114, 7411, 7413, 7419, 7425, 1, 9652, 111, 119, 110, 59, 1, 9662, 101, 102, 116, 59, 1, 9666, 105, 103, 104, 116, 59, 1, 9656, 107, 59, 1, 9251, 4, 2, 49, 51, 7442, 7454, 4, 2, 50, 52, 7448, 7451, 59, 1, 9618, 59, 1, 9617, 52, 59, 1, 9619, 99, 107, 59, 1, 9608, 4, 2, 101, 111, 7469, 7485, 4, 2, 59, 113, 7475, 7478, 3, 61, 8421, 117, 105, 118, 59, 3, 8801, 8421, 116, 59, 1, 8976, 4, 4, 112, 116, 119, 120, 7499, 7504, 7517, 7523, 102, 59, 3, 55349, 56659, 4, 2, 59, 116, 7510, 7512, 1, 8869, 111, 109, 59, 1, 8869, 116, 105, 101, 59, 1, 8904, 4, 12, 68, 72, 85, 86, 98, 100, 104, 109, 112, 116, 117, 118, 7549, 7571, 7597, 7619, 7655, 7660, 7682, 7708, 7715, 7721, 7728, 7750, 4, 4, 76, 82, 108, 114, 7559, 7562, 7565, 7568, 59, 1, 9559, 59, 1, 9556, 59, 1, 9558, 59, 1, 9555, 4, 5, 59, 68, 85, 100, 117, 7583, 7585, 7588, 7591, 7594, 1, 9552, 59, 1, 9574, 59, 1, 9577, 59, 1, 9572, 59, 1, 9575, 4, 4, 76, 82, 108, 114, 7607, 7610, 7613, 7616, 59, 1, 9565, 59, 1, 9562, 59, 1, 9564, 59, 1, 9561, 4, 7, 59, 72, 76, 82, 104, 108, 114, 7635, 7637, 7640, 7643, 7646, 7649, 7652, 1, 9553, 59, 1, 9580, 59, 1, 9571, 59, 1, 9568, 59, 1, 9579, 59, 1, 9570, 59, 1, 9567, 111, 120, 59, 1, 10697, 4, 4, 76, 82, 108, 114, 7670, 7673, 7676, 7679, 59, 1, 9557, 59, 1, 9554, 59, 1, 9488, 59, 1, 9484, 4, 5, 59, 68, 85, 100, 117, 7694, 7696, 7699, 7702, 7705, 1, 9472, 59, 1, 9573, 59, 1, 9576, 59, 1, 9516, 59, 1, 9524, 105, 110, 117, 115, 59, 1, 8863, 108, 117, 115, 59, 1, 8862, 105, 109, 101, 115, 59, 1, 8864, 4, 4, 76, 82, 108, 114, 7738, 7741, 7744, 7747, 59, 1, 9563, 59, 1, 9560, 59, 1, 9496, 59, 1, 9492, 4, 7, 59, 72, 76, 82, 104, 108, 114, 7766, 7768, 7771, 7774, 7777, 7780, 7783, 1, 9474, 59, 1, 9578, 59, 1, 9569, 59, 1, 9566, 59, 1, 9532, 59, 1, 9508, 59, 1, 9500, 114, 105, 109, 101, 59, 1, 8245, 4, 2, 101, 118, 7799, 7804, 118, 101, 59, 1, 728, 98, 97, 114, 5, 166, 1, 59, 7812, 1, 166, 4, 4, 99, 101, 105, 111, 7824, 7829, 7834, 7846, 114, 59, 3, 55349, 56503, 109, 105, 59, 1, 8271, 109, 4, 2, 59, 101, 7841, 7843, 1, 8765, 59, 1, 8909, 108, 4, 3, 59, 98, 104, 7855, 7857, 7860, 1, 92, 59, 1, 10693, 115, 117, 98, 59, 1, 10184, 4, 2, 108, 109, 7872, 7885, 108, 4, 2, 59, 101, 7879, 7881, 1, 8226, 116, 59, 1, 8226, 112, 4, 3, 59, 69, 101, 7894, 7896, 7899, 1, 8782, 59, 1, 10926, 4, 2, 59, 113, 7905, 7907, 1, 8783, 59, 1, 8783, 4, 15, 97, 99, 100, 101, 102, 104, 105, 108, 111, 114, 115, 116, 117, 119, 121, 7942, 8021, 8075, 8080, 8121, 8126, 8157, 8279, 8295, 8430, 8446, 8485, 8491, 8707, 8726, 4, 3, 99, 112, 114, 7950, 7956, 8007, 117, 116, 101, 59, 1, 263, 4, 6, 59, 97, 98, 99, 100, 115, 7970, 7972, 7977, 7984, 7998, 8003, 1, 8745, 110, 100, 59, 1, 10820, 114, 99, 117, 112, 59, 1, 10825, 4, 2, 97, 117, 7990, 7994, 112, 59, 1, 10827, 112, 59, 1, 10823, 111, 116, 59, 1, 10816, 59, 3, 8745, 65024, 4, 2, 101, 111, 8013, 8017, 116, 59, 1, 8257, 110, 59, 1, 711, 4, 4, 97, 101, 105, 117, 8031, 8046, 8056, 8061, 4, 2, 112, 114, 8037, 8041, 115, 59, 1, 10829, 111, 110, 59, 1, 269, 100, 105, 108, 5, 231, 1, 59, 8054, 1, 231, 114, 99, 59, 1, 265, 112, 115, 4, 2, 59, 115, 8069, 8071, 1, 10828, 109, 59, 1, 10832, 111, 116, 59, 1, 267, 4, 3, 100, 109, 110, 8088, 8097, 8104, 105, 108, 5, 184, 1, 59, 8095, 1, 184, 112, 116, 121, 118, 59, 1, 10674, 116, 5, 162, 2, 59, 101, 8112, 8114, 1, 162, 114, 100, 111, 116, 59, 1, 183, 114, 59, 3, 55349, 56608, 4, 3, 99, 101, 105, 8134, 8138, 8154, 121, 59, 1, 1095, 99, 107, 4, 2, 59, 109, 8146, 8148, 1, 10003, 97, 114, 107, 59, 1, 10003, 59, 1, 967, 114, 4, 7, 59, 69, 99, 101, 102, 109, 115, 8174, 8176, 8179, 8258, 8261, 8268, 8273, 1, 9675, 59, 1, 10691, 4, 3, 59, 101, 108, 8187, 8189, 8193, 1, 710, 113, 59, 1, 8791, 101, 4, 2, 97, 100, 8200, 8223, 114, 114, 111, 119, 4, 2, 108, 114, 8210, 8216, 101, 102, 116, 59, 1, 8634, 105, 103, 104, 116, 59, 1, 8635, 4, 5, 82, 83, 97, 99, 100, 8235, 8238, 8241, 8246, 8252, 59, 1, 174, 59, 1, 9416, 115, 116, 59, 1, 8859, 105, 114, 99, 59, 1, 8858, 97, 115, 104, 59, 1, 8861, 59, 1, 8791, 110, 105, 110, 116, 59, 1, 10768, 105, 100, 59, 1, 10991, 99, 105, 114, 59, 1, 10690, 117, 98, 115, 4, 2, 59, 117, 8288, 8290, 1, 9827, 105, 116, 59, 1, 9827, 4, 4, 108, 109, 110, 112, 8305, 8326, 8376, 8400, 111, 110, 4, 2, 59, 101, 8313, 8315, 1, 58, 4, 2, 59, 113, 8321, 8323, 1, 8788, 59, 1, 8788, 4, 2, 109, 112, 8332, 8344, 97, 4, 2, 59, 116, 8339, 8341, 1, 44, 59, 1, 64, 4, 3, 59, 102, 108, 8352, 8354, 8358, 1, 8705, 110, 59, 1, 8728, 101, 4, 2, 109, 120, 8365, 8371, 101, 110, 116, 59, 1, 8705, 101, 115, 59, 1, 8450, 4, 2, 103, 105, 8382, 8395, 4, 2, 59, 100, 8388, 8390, 1, 8773, 111, 116, 59, 1, 10861, 110, 116, 59, 1, 8750, 4, 3, 102, 114, 121, 8408, 8412, 8417, 59, 3, 55349, 56660, 111, 100, 59, 1, 8720, 5, 169, 2, 59, 115, 8424, 8426, 1, 169, 114, 59, 1, 8471, 4, 2, 97, 111, 8436, 8441, 114, 114, 59, 1, 8629, 115, 115, 59, 1, 10007, 4, 2, 99, 117, 8452, 8457, 114, 59, 3, 55349, 56504, 4, 2, 98, 112, 8463, 8474, 4, 2, 59, 101, 8469, 8471, 1, 10959, 59, 1, 10961, 4, 2, 59, 101, 8480, 8482, 1, 10960, 59, 1, 10962, 100, 111, 116, 59, 1, 8943, 4, 7, 100, 101, 108, 112, 114, 118, 119, 8507, 8522, 8536, 8550, 8600, 8697, 8702, 97, 114, 114, 4, 2, 108, 114, 8516, 8519, 59, 1, 10552, 59, 1, 10549, 4, 2, 112, 115, 8528, 8532, 114, 59, 1, 8926, 99, 59, 1, 8927, 97, 114, 114, 4, 2, 59, 112, 8545, 8547, 1, 8630, 59, 1, 10557, 4, 6, 59, 98, 99, 100, 111, 115, 8564, 8566, 8573, 8587, 8592, 8596, 1, 8746, 114, 99, 97, 112, 59, 1, 10824, 4, 2, 97, 117, 8579, 8583, 112, 59, 1, 10822, 112, 59, 1, 10826, 111, 116, 59, 1, 8845, 114, 59, 1, 10821, 59, 3, 8746, 65024, 4, 4, 97, 108, 114, 118, 8610, 8623, 8663, 8672, 114, 114, 4, 2, 59, 109, 8618, 8620, 1, 8631, 59, 1, 10556, 121, 4, 3, 101, 118, 119, 8632, 8651, 8656, 113, 4, 2, 112, 115, 8639, 8645, 114, 101, 99, 59, 1, 8926, 117, 99, 99, 59, 1, 8927, 101, 101, 59, 1, 8910, 101, 100, 103, 101, 59, 1, 8911, 101, 110, 5, 164, 1, 59, 8670, 1, 164, 101, 97, 114, 114, 111, 119, 4, 2, 108, 114, 8684, 8690, 101, 102, 116, 59, 1, 8630, 105, 103, 104, 116, 59, 1, 8631, 101, 101, 59, 1, 8910, 101, 100, 59, 1, 8911, 4, 2, 99, 105, 8713, 8721, 111, 110, 105, 110, 116, 59, 1, 8754, 110, 116, 59, 1, 8753, 108, 99, 116, 121, 59, 1, 9005, 4, 19, 65, 72, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 111, 114, 115, 116, 117, 119, 122, 8773, 8778, 8783, 8821, 8839, 8854, 8887, 8914, 8930, 8944, 9036, 9041, 9058, 9197, 9227, 9258, 9281, 9297, 9305, 114, 114, 59, 1, 8659, 97, 114, 59, 1, 10597, 4, 4, 103, 108, 114, 115, 8793, 8799, 8805, 8809, 103, 101, 114, 59, 1, 8224, 101, 116, 104, 59, 1, 8504, 114, 59, 1, 8595, 104, 4, 2, 59, 118, 8816, 8818, 1, 8208, 59, 1, 8867, 4, 2, 107, 108, 8827, 8834, 97, 114, 111, 119, 59, 1, 10511, 97, 99, 59, 1, 733, 4, 2, 97, 121, 8845, 8851, 114, 111, 110, 59, 1, 271, 59, 1, 1076, 4, 3, 59, 97, 111, 8862, 8864, 8880, 1, 8518, 4, 2, 103, 114, 8870, 8876, 103, 101, 114, 59, 1, 8225, 114, 59, 1, 8650, 116, 115, 101, 113, 59, 1, 10871, 4, 3, 103, 108, 109, 8895, 8902, 8907, 5, 176, 1, 59, 8900, 1, 176, 116, 97, 59, 1, 948, 112, 116, 121, 118, 59, 1, 10673, 4, 2, 105, 114, 8920, 8926, 115, 104, 116, 59, 1, 10623, 59, 3, 55349, 56609, 97, 114, 4, 2, 108, 114, 8938, 8941, 59, 1, 8643, 59, 1, 8642, 4, 5, 97, 101, 103, 115, 118, 8956, 8986, 8989, 8996, 9001, 109, 4, 3, 59, 111, 115, 8965, 8967, 8983, 1, 8900, 110, 100, 4, 2, 59, 115, 8975, 8977, 1, 8900, 117, 105, 116, 59, 1, 9830, 59, 1, 9830, 59, 1, 168, 97, 109, 109, 97, 59, 1, 989, 105, 110, 59, 1, 8946, 4, 3, 59, 105, 111, 9009, 9011, 9031, 1, 247, 100, 101, 5, 247, 2, 59, 111, 9020, 9022, 1, 247, 110, 116, 105, 109, 101, 115, 59, 1, 8903, 110, 120, 59, 1, 8903, 99, 121, 59, 1, 1106, 99, 4, 2, 111, 114, 9048, 9053, 114, 110, 59, 1, 8990, 111, 112, 59, 1, 8973, 4, 5, 108, 112, 116, 117, 119, 9070, 9076, 9081, 9130, 9144, 108, 97, 114, 59, 1, 36, 102, 59, 3, 55349, 56661, 4, 5, 59, 101, 109, 112, 115, 9093, 9095, 9109, 9116, 9122, 1, 729, 113, 4, 2, 59, 100, 9102, 9104, 1, 8784, 111, 116, 59, 1, 8785, 105, 110, 117, 115, 59, 1, 8760, 108, 117, 115, 59, 1, 8724, 113, 117, 97, 114, 101, 59, 1, 8865, 98, 108, 101, 98, 97, 114, 119, 101, 100, 103, 101, 59, 1, 8966, 110, 4, 3, 97, 100, 104, 9153, 9160, 9172, 114, 114, 111, 119, 59, 1, 8595, 111, 119, 110, 97, 114, 114, 111, 119, 115, 59, 1, 8650, 97, 114, 112, 111, 111, 110, 4, 2, 108, 114, 9184, 9190, 101, 102, 116, 59, 1, 8643, 105, 103, 104, 116, 59, 1, 8642, 4, 2, 98, 99, 9203, 9211, 107, 97, 114, 111, 119, 59, 1, 10512, 4, 2, 111, 114, 9217, 9222, 114, 110, 59, 1, 8991, 111, 112, 59, 1, 8972, 4, 3, 99, 111, 116, 9235, 9248, 9252, 4, 2, 114, 121, 9241, 9245, 59, 3, 55349, 56505, 59, 1, 1109, 108, 59, 1, 10742, 114, 111, 107, 59, 1, 273, 4, 2, 100, 114, 9264, 9269, 111, 116, 59, 1, 8945, 105, 4, 2, 59, 102, 9276, 9278, 1, 9663, 59, 1, 9662, 4, 2, 97, 104, 9287, 9292, 114, 114, 59, 1, 8693, 97, 114, 59, 1, 10607, 97, 110, 103, 108, 101, 59, 1, 10662, 4, 2, 99, 105, 9311, 9315, 121, 59, 1, 1119, 103, 114, 97, 114, 114, 59, 1, 10239, 4, 18, 68, 97, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 9361, 9376, 9398, 9439, 9444, 9447, 9462, 9495, 9531, 9585, 9598, 9614, 9659, 9755, 9771, 9792, 9808, 9826, 4, 2, 68, 111, 9367, 9372, 111, 116, 59, 1, 10871, 116, 59, 1, 8785, 4, 2, 99, 115, 9382, 9392, 117, 116, 101, 5, 233, 1, 59, 9390, 1, 233, 116, 101, 114, 59, 1, 10862, 4, 4, 97, 105, 111, 121, 9408, 9414, 9430, 9436, 114, 111, 110, 59, 1, 283, 114, 4, 2, 59, 99, 9421, 9423, 1, 8790, 5, 234, 1, 59, 9428, 1, 234, 108, 111, 110, 59, 1, 8789, 59, 1, 1101, 111, 116, 59, 1, 279, 59, 1, 8519, 4, 2, 68, 114, 9453, 9458, 111, 116, 59, 1, 8786, 59, 3, 55349, 56610, 4, 3, 59, 114, 115, 9470, 9472, 9482, 1, 10906, 97, 118, 101, 5, 232, 1, 59, 9480, 1, 232, 4, 2, 59, 100, 9488, 9490, 1, 10902, 111, 116, 59, 1, 10904, 4, 4, 59, 105, 108, 115, 9505, 9507, 9515, 9518, 1, 10905, 110, 116, 101, 114, 115, 59, 1, 9191, 59, 1, 8467, 4, 2, 59, 100, 9524, 9526, 1, 10901, 111, 116, 59, 1, 10903, 4, 3, 97, 112, 115, 9539, 9544, 9564, 99, 114, 59, 1, 275, 116, 121, 4, 3, 59, 115, 118, 9554, 9556, 9561, 1, 8709, 101, 116, 59, 1, 8709, 59, 1, 8709, 112, 4, 2, 49, 59, 9571, 9583, 4, 2, 51, 52, 9577, 9580, 59, 1, 8196, 59, 1, 8197, 1, 8195, 4, 2, 103, 115, 9591, 9594, 59, 1, 331, 112, 59, 1, 8194, 4, 2, 103, 112, 9604, 9609, 111, 110, 59, 1, 281, 102, 59, 3, 55349, 56662, 4, 3, 97, 108, 115, 9622, 9635, 9640, 114, 4, 2, 59, 115, 9629, 9631, 1, 8917, 108, 59, 1, 10723, 117, 115, 59, 1, 10865, 105, 4, 3, 59, 108, 118, 9649, 9651, 9656, 1, 949, 111, 110, 59, 1, 949, 59, 1, 1013, 4, 4, 99, 115, 117, 118, 9669, 9686, 9716, 9747, 4, 2, 105, 111, 9675, 9680, 114, 99, 59, 1, 8790, 108, 111, 110, 59, 1, 8789, 4, 2, 105, 108, 9692, 9696, 109, 59, 1, 8770, 97, 110, 116, 4, 2, 103, 108, 9705, 9710, 116, 114, 59, 1, 10902, 101, 115, 115, 59, 1, 10901, 4, 3, 97, 101, 105, 9724, 9729, 9734, 108, 115, 59, 1, 61, 115, 116, 59, 1, 8799, 118, 4, 2, 59, 68, 9741, 9743, 1, 8801, 68, 59, 1, 10872, 112, 97, 114, 115, 108, 59, 1, 10725, 4, 2, 68, 97, 9761, 9766, 111, 116, 59, 1, 8787, 114, 114, 59, 1, 10609, 4, 3, 99, 100, 105, 9779, 9783, 9788, 114, 59, 1, 8495, 111, 116, 59, 1, 8784, 109, 59, 1, 8770, 4, 2, 97, 104, 9798, 9801, 59, 1, 951, 5, 240, 1, 59, 9806, 1, 240, 4, 2, 109, 114, 9814, 9822, 108, 5, 235, 1, 59, 9820, 1, 235, 111, 59, 1, 8364, 4, 3, 99, 105, 112, 9834, 9838, 9843, 108, 59, 1, 33, 115, 116, 59, 1, 8707, 4, 2, 101, 111, 9849, 9859, 99, 116, 97, 116, 105, 111, 110, 59, 1, 8496, 110, 101, 110, 116, 105, 97, 108, 101, 59, 1, 8519, 4, 12, 97, 99, 101, 102, 105, 106, 108, 110, 111, 112, 114, 115, 9896, 9910, 9914, 9921, 9954, 9960, 9967, 9989, 9994, 10027, 10036, 10164, 108, 108, 105, 110, 103, 100, 111, 116, 115, 101, 113, 59, 1, 8786, 121, 59, 1, 1092, 109, 97, 108, 101, 59, 1, 9792, 4, 3, 105, 108, 114, 9929, 9935, 9950, 108, 105, 103, 59, 1, 64259, 4, 2, 105, 108, 9941, 9945, 103, 59, 1, 64256, 105, 103, 59, 1, 64260, 59, 3, 55349, 56611, 108, 105, 103, 59, 1, 64257, 108, 105, 103, 59, 3, 102, 106, 4, 3, 97, 108, 116, 9975, 9979, 9984, 116, 59, 1, 9837, 105, 103, 59, 1, 64258, 110, 115, 59, 1, 9649, 111, 102, 59, 1, 402, 4, 2, 112, 114, 10000, 10005, 102, 59, 3, 55349, 56663, 4, 2, 97, 107, 10011, 10016, 108, 108, 59, 1, 8704, 4, 2, 59, 118, 10022, 10024, 1, 8916, 59, 1, 10969, 97, 114, 116, 105, 110, 116, 59, 1, 10765, 4, 2, 97, 111, 10042, 10159, 4, 2, 99, 115, 10048, 10155, 4, 6, 49, 50, 51, 52, 53, 55, 10062, 10102, 10114, 10135, 10139, 10151, 4, 6, 50, 51, 52, 53, 54, 56, 10076, 10083, 10086, 10093, 10096, 10099, 5, 189, 1, 59, 10081, 1, 189, 59, 1, 8531, 5, 188, 1, 59, 10091, 1, 188, 59, 1, 8533, 59, 1, 8537, 59, 1, 8539, 4, 2, 51, 53, 10108, 10111, 59, 1, 8532, 59, 1, 8534, 4, 3, 52, 53, 56, 10122, 10129, 10132, 5, 190, 1, 59, 10127, 1, 190, 59, 1, 8535, 59, 1, 8540, 53, 59, 1, 8536, 4, 2, 54, 56, 10145, 10148, 59, 1, 8538, 59, 1, 8541, 56, 59, 1, 8542, 108, 59, 1, 8260, 119, 110, 59, 1, 8994, 99, 114, 59, 3, 55349, 56507, 4, 17, 69, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110, 111, 114, 115, 116, 118, 10206, 10217, 10247, 10254, 10268, 10273, 10358, 10363, 10374, 10380, 10385, 10406, 10458, 10464, 10470, 10497, 10610, 4, 2, 59, 108, 10212, 10214, 1, 8807, 59, 1, 10892, 4, 3, 99, 109, 112, 10225, 10231, 10244, 117, 116, 101, 59, 1, 501, 109, 97, 4, 2, 59, 100, 10239, 10241, 1, 947, 59, 1, 989, 59, 1, 10886, 114, 101, 118, 101, 59, 1, 287, 4, 2, 105, 121, 10260, 10265, 114, 99, 59, 1, 285, 59, 1, 1075, 111, 116, 59, 1, 289, 4, 4, 59, 108, 113, 115, 10283, 10285, 10288, 10308, 1, 8805, 59, 1, 8923, 4, 3, 59, 113, 115, 10296, 10298, 10301, 1, 8805, 59, 1, 8807, 108, 97, 110, 116, 59, 1, 10878, 4, 4, 59, 99, 100, 108, 10318, 10320, 10324, 10345, 1, 10878, 99, 59, 1, 10921, 111, 116, 4, 2, 59, 111, 10332, 10334, 1, 10880, 4, 2, 59, 108, 10340, 10342, 1, 10882, 59, 1, 10884, 4, 2, 59, 101, 10351, 10354, 3, 8923, 65024, 115, 59, 1, 10900, 114, 59, 3, 55349, 56612, 4, 2, 59, 103, 10369, 10371, 1, 8811, 59, 1, 8921, 109, 101, 108, 59, 1, 8503, 99, 121, 59, 1, 1107, 4, 4, 59, 69, 97, 106, 10395, 10397, 10400, 10403, 1, 8823, 59, 1, 10898, 59, 1, 10917, 59, 1, 10916, 4, 4, 69, 97, 101, 115, 10416, 10419, 10434, 10453, 59, 1, 8809, 112, 4, 2, 59, 112, 10426, 10428, 1, 10890, 114, 111, 120, 59, 1, 10890, 4, 2, 59, 113, 10440, 10442, 1, 10888, 4, 2, 59, 113, 10448, 10450, 1, 10888, 59, 1, 8809, 105, 109, 59, 1, 8935, 112, 102, 59, 3, 55349, 56664, 97, 118, 101, 59, 1, 96, 4, 2, 99, 105, 10476, 10480, 114, 59, 1, 8458, 109, 4, 3, 59, 101, 108, 10489, 10491, 10494, 1, 8819, 59, 1, 10894, 59, 1, 10896, 5, 62, 6, 59, 99, 100, 108, 113, 114, 10512, 10514, 10527, 10532, 10538, 10545, 1, 62, 4, 2, 99, 105, 10520, 10523, 59, 1, 10919, 114, 59, 1, 10874, 111, 116, 59, 1, 8919, 80, 97, 114, 59, 1, 10645, 117, 101, 115, 116, 59, 1, 10876, 4, 5, 97, 100, 101, 108, 115, 10557, 10574, 10579, 10599, 10605, 4, 2, 112, 114, 10563, 10570, 112, 114, 111, 120, 59, 1, 10886, 114, 59, 1, 10616, 111, 116, 59, 1, 8919, 113, 4, 2, 108, 113, 10586, 10592, 101, 115, 115, 59, 1, 8923, 108, 101, 115, 115, 59, 1, 10892, 101, 115, 115, 59, 1, 8823, 105, 109, 59, 1, 8819, 4, 2, 101, 110, 10616, 10626, 114, 116, 110, 101, 113, 113, 59, 3, 8809, 65024, 69, 59, 3, 8809, 65024, 4, 10, 65, 97, 98, 99, 101, 102, 107, 111, 115, 121, 10653, 10658, 10713, 10718, 10724, 10760, 10765, 10786, 10850, 10875, 114, 114, 59, 1, 8660, 4, 4, 105, 108, 109, 114, 10668, 10674, 10678, 10684, 114, 115, 112, 59, 1, 8202, 102, 59, 1, 189, 105, 108, 116, 59, 1, 8459, 4, 2, 100, 114, 10690, 10695, 99, 121, 59, 1, 1098, 4, 3, 59, 99, 119, 10703, 10705, 10710, 1, 8596, 105, 114, 59, 1, 10568, 59, 1, 8621, 97, 114, 59, 1, 8463, 105, 114, 99, 59, 1, 293, 4, 3, 97, 108, 114, 10732, 10748, 10754, 114, 116, 115, 4, 2, 59, 117, 10741, 10743, 1, 9829, 105, 116, 59, 1, 9829, 108, 105, 112, 59, 1, 8230, 99, 111, 110, 59, 1, 8889, 114, 59, 3, 55349, 56613, 115, 4, 2, 101, 119, 10772, 10779, 97, 114, 111, 119, 59, 1, 10533, 97, 114, 111, 119, 59, 1, 10534, 4, 5, 97, 109, 111, 112, 114, 10798, 10803, 10809, 10839, 10844, 114, 114, 59, 1, 8703, 116, 104, 116, 59, 1, 8763, 107, 4, 2, 108, 114, 10816, 10827, 101, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8617, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8618, 102, 59, 3, 55349, 56665, 98, 97, 114, 59, 1, 8213, 4, 3, 99, 108, 116, 10858, 10863, 10869, 114, 59, 3, 55349, 56509, 97, 115, 104, 59, 1, 8463, 114, 111, 107, 59, 1, 295, 4, 2, 98, 112, 10881, 10887, 117, 108, 108, 59, 1, 8259, 104, 101, 110, 59, 1, 8208, 4, 15, 97, 99, 101, 102, 103, 105, 106, 109, 110, 111, 112, 113, 115, 116, 117, 10925, 10936, 10958, 10977, 10990, 11001, 11039, 11045, 11101, 11192, 11220, 11226, 11237, 11285, 11299, 99, 117, 116, 101, 5, 237, 1, 59, 10934, 1, 237, 4, 3, 59, 105, 121, 10944, 10946, 10955, 1, 8291, 114, 99, 5, 238, 1, 59, 10953, 1, 238, 59, 1, 1080, 4, 2, 99, 120, 10964, 10968, 121, 59, 1, 1077, 99, 108, 5, 161, 1, 59, 10975, 1, 161, 4, 2, 102, 114, 10983, 10986, 59, 1, 8660, 59, 3, 55349, 56614, 114, 97, 118, 101, 5, 236, 1, 59, 10999, 1, 236, 4, 4, 59, 105, 110, 111, 11011, 11013, 11028, 11034, 1, 8520, 4, 2, 105, 110, 11019, 11024, 110, 116, 59, 1, 10764, 116, 59, 1, 8749, 102, 105, 110, 59, 1, 10716, 116, 97, 59, 1, 8489, 108, 105, 103, 59, 1, 307, 4, 3, 97, 111, 112, 11053, 11092, 11096, 4, 3, 99, 103, 116, 11061, 11065, 11088, 114, 59, 1, 299, 4, 3, 101, 108, 112, 11073, 11076, 11082, 59, 1, 8465, 105, 110, 101, 59, 1, 8464, 97, 114, 116, 59, 1, 8465, 104, 59, 1, 305, 102, 59, 1, 8887, 101, 100, 59, 1, 437, 4, 5, 59, 99, 102, 111, 116, 11113, 11115, 11121, 11136, 11142, 1, 8712, 97, 114, 101, 59, 1, 8453, 105, 110, 4, 2, 59, 116, 11129, 11131, 1, 8734, 105, 101, 59, 1, 10717, 100, 111, 116, 59, 1, 305, 4, 5, 59, 99, 101, 108, 112, 11154, 11156, 11161, 11179, 11186, 1, 8747, 97, 108, 59, 1, 8890, 4, 2, 103, 114, 11167, 11173, 101, 114, 115, 59, 1, 8484, 99, 97, 108, 59, 1, 8890, 97, 114, 104, 107, 59, 1, 10775, 114, 111, 100, 59, 1, 10812, 4, 4, 99, 103, 112, 116, 11202, 11206, 11211, 11216, 121, 59, 1, 1105, 111, 110, 59, 1, 303, 102, 59, 3, 55349, 56666, 97, 59, 1, 953, 114, 111, 100, 59, 1, 10812, 117, 101, 115, 116, 5, 191, 1, 59, 11235, 1, 191, 4, 2, 99, 105, 11243, 11248, 114, 59, 3, 55349, 56510, 110, 4, 5, 59, 69, 100, 115, 118, 11261, 11263, 11266, 11271, 11282, 1, 8712, 59, 1, 8953, 111, 116, 59, 1, 8949, 4, 2, 59, 118, 11277, 11279, 1, 8948, 59, 1, 8947, 59, 1, 8712, 4, 2, 59, 105, 11291, 11293, 1, 8290, 108, 100, 101, 59, 1, 297, 4, 2, 107, 109, 11305, 11310, 99, 121, 59, 1, 1110, 108, 5, 239, 1, 59, 11316, 1, 239, 4, 6, 99, 102, 109, 111, 115, 117, 11332, 11346, 11351, 11357, 11363, 11380, 4, 2, 105, 121, 11338, 11343, 114, 99, 59, 1, 309, 59, 1, 1081, 114, 59, 3, 55349, 56615, 97, 116, 104, 59, 1, 567, 112, 102, 59, 3, 55349, 56667, 4, 2, 99, 101, 11369, 11374, 114, 59, 3, 55349, 56511, 114, 99, 121, 59, 1, 1112, 107, 99, 121, 59, 1, 1108, 4, 8, 97, 99, 102, 103, 104, 106, 111, 115, 11404, 11418, 11433, 11438, 11445, 11450, 11455, 11461, 112, 112, 97, 4, 2, 59, 118, 11413, 11415, 1, 954, 59, 1, 1008, 4, 2, 101, 121, 11424, 11430, 100, 105, 108, 59, 1, 311, 59, 1, 1082, 114, 59, 3, 55349, 56616, 114, 101, 101, 110, 59, 1, 312, 99, 121, 59, 1, 1093, 99, 121, 59, 1, 1116, 112, 102, 59, 3, 55349, 56668, 99, 114, 59, 3, 55349, 56512, 4, 23, 65, 66, 69, 72, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 11515, 11538, 11544, 11555, 11560, 11721, 11780, 11818, 11868, 12136, 12160, 12171, 12203, 12208, 12246, 12275, 12327, 12509, 12523, 12569, 12641, 12732, 12752, 4, 3, 97, 114, 116, 11523, 11528, 11532, 114, 114, 59, 1, 8666, 114, 59, 1, 8656, 97, 105, 108, 59, 1, 10523, 97, 114, 114, 59, 1, 10510, 4, 2, 59, 103, 11550, 11552, 1, 8806, 59, 1, 10891, 97, 114, 59, 1, 10594, 4, 9, 99, 101, 103, 109, 110, 112, 113, 114, 116, 11580, 11586, 11594, 11600, 11606, 11624, 11627, 11636, 11694, 117, 116, 101, 59, 1, 314, 109, 112, 116, 121, 118, 59, 1, 10676, 114, 97, 110, 59, 1, 8466, 98, 100, 97, 59, 1, 955, 103, 4, 3, 59, 100, 108, 11615, 11617, 11620, 1, 10216, 59, 1, 10641, 101, 59, 1, 10216, 59, 1, 10885, 117, 111, 5, 171, 1, 59, 11634, 1, 171, 114, 4, 8, 59, 98, 102, 104, 108, 112, 115, 116, 11655, 11657, 11669, 11673, 11677, 11681, 11685, 11690, 1, 8592, 4, 2, 59, 102, 11663, 11665, 1, 8676, 115, 59, 1, 10527, 115, 59, 1, 10525, 107, 59, 1, 8617, 112, 59, 1, 8619, 108, 59, 1, 10553, 105, 109, 59, 1, 10611, 108, 59, 1, 8610, 4, 3, 59, 97, 101, 11702, 11704, 11709, 1, 10923, 105, 108, 59, 1, 10521, 4, 2, 59, 115, 11715, 11717, 1, 10925, 59, 3, 10925, 65024, 4, 3, 97, 98, 114, 11729, 11734, 11739, 114, 114, 59, 1, 10508, 114, 107, 59, 1, 10098, 4, 2, 97, 107, 11745, 11758, 99, 4, 2, 101, 107, 11752, 11755, 59, 1, 123, 59, 1, 91, 4, 2, 101, 115, 11764, 11767, 59, 1, 10635, 108, 4, 2, 100, 117, 11774, 11777, 59, 1, 10639, 59, 1, 10637, 4, 4, 97, 101, 117, 121, 11790, 11796, 11811, 11815, 114, 111, 110, 59, 1, 318, 4, 2, 100, 105, 11802, 11807, 105, 108, 59, 1, 316, 108, 59, 1, 8968, 98, 59, 1, 123, 59, 1, 1083, 4, 4, 99, 113, 114, 115, 11828, 11832, 11845, 11864, 97, 59, 1, 10550, 117, 111, 4, 2, 59, 114, 11840, 11842, 1, 8220, 59, 1, 8222, 4, 2, 100, 117, 11851, 11857, 104, 97, 114, 59, 1, 10599, 115, 104, 97, 114, 59, 1, 10571, 104, 59, 1, 8626, 4, 5, 59, 102, 103, 113, 115, 11880, 11882, 12008, 12011, 12031, 1, 8804, 116, 4, 5, 97, 104, 108, 114, 116, 11895, 11913, 11935, 11947, 11996, 114, 114, 111, 119, 4, 2, 59, 116, 11905, 11907, 1, 8592, 97, 105, 108, 59, 1, 8610, 97, 114, 112, 111, 111, 110, 4, 2, 100, 117, 11925, 11931, 111, 119, 110, 59, 1, 8637, 112, 59, 1, 8636, 101, 102, 116, 97, 114, 114, 111, 119, 115, 59, 1, 8647, 105, 103, 104, 116, 4, 3, 97, 104, 115, 11959, 11974, 11984, 114, 114, 111, 119, 4, 2, 59, 115, 11969, 11971, 1, 8596, 59, 1, 8646, 97, 114, 112, 111, 111, 110, 115, 59, 1, 8651, 113, 117, 105, 103, 97, 114, 114, 111, 119, 59, 1, 8621, 104, 114, 101, 101, 116, 105, 109, 101, 115, 59, 1, 8907, 59, 1, 8922, 4, 3, 59, 113, 115, 12019, 12021, 12024, 1, 8804, 59, 1, 8806, 108, 97, 110, 116, 59, 1, 10877, 4, 5, 59, 99, 100, 103, 115, 12043, 12045, 12049, 12070, 12083, 1, 10877, 99, 59, 1, 10920, 111, 116, 4, 2, 59, 111, 12057, 12059, 1, 10879, 4, 2, 59, 114, 12065, 12067, 1, 10881, 59, 1, 10883, 4, 2, 59, 101, 12076, 12079, 3, 8922, 65024, 115, 59, 1, 10899, 4, 5, 97, 100, 101, 103, 115, 12095, 12103, 12108, 12126, 12131, 112, 112, 114, 111, 120, 59, 1, 10885, 111, 116, 59, 1, 8918, 113, 4, 2, 103, 113, 12115, 12120, 116, 114, 59, 1, 8922, 103, 116, 114, 59, 1, 10891, 116, 114, 59, 1, 8822, 105, 109, 59, 1, 8818, 4, 3, 105, 108, 114, 12144, 12150, 12156, 115, 104, 116, 59, 1, 10620, 111, 111, 114, 59, 1, 8970, 59, 3, 55349, 56617, 4, 2, 59, 69, 12166, 12168, 1, 8822, 59, 1, 10897, 4, 2, 97, 98, 12177, 12198, 114, 4, 2, 100, 117, 12184, 12187, 59, 1, 8637, 4, 2, 59, 108, 12193, 12195, 1, 8636, 59, 1, 10602, 108, 107, 59, 1, 9604, 99, 121, 59, 1, 1113, 4, 5, 59, 97, 99, 104, 116, 12220, 12222, 12227, 12235, 12241, 1, 8810, 114, 114, 59, 1, 8647, 111, 114, 110, 101, 114, 59, 1, 8990, 97, 114, 100, 59, 1, 10603, 114, 105, 59, 1, 9722, 4, 2, 105, 111, 12252, 12258, 100, 111, 116, 59, 1, 320, 117, 115, 116, 4, 2, 59, 97, 12267, 12269, 1, 9136, 99, 104, 101, 59, 1, 9136, 4, 4, 69, 97, 101, 115, 12285, 12288, 12303, 12322, 59, 1, 8808, 112, 4, 2, 59, 112, 12295, 12297, 1, 10889, 114, 111, 120, 59, 1, 10889, 4, 2, 59, 113, 12309, 12311, 1, 10887, 4, 2, 59, 113, 12317, 12319, 1, 10887, 59, 1, 8808, 105, 109, 59, 1, 8934, 4, 8, 97, 98, 110, 111, 112, 116, 119, 122, 12345, 12359, 12364, 12421, 12446, 12467, 12474, 12490, 4, 2, 110, 114, 12351, 12355, 103, 59, 1, 10220, 114, 59, 1, 8701, 114, 107, 59, 1, 10214, 103, 4, 3, 108, 109, 114, 12373, 12401, 12409, 101, 102, 116, 4, 2, 97, 114, 12382, 12389, 114, 114, 111, 119, 59, 1, 10229, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10231, 97, 112, 115, 116, 111, 59, 1, 10236, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10230, 112, 97, 114, 114, 111, 119, 4, 2, 108, 114, 12433, 12439, 101, 102, 116, 59, 1, 8619, 105, 103, 104, 116, 59, 1, 8620, 4, 3, 97, 102, 108, 12454, 12458, 12462, 114, 59, 1, 10629, 59, 3, 55349, 56669, 117, 115, 59, 1, 10797, 105, 109, 101, 115, 59, 1, 10804, 4, 2, 97, 98, 12480, 12485, 115, 116, 59, 1, 8727, 97, 114, 59, 1, 95, 4, 3, 59, 101, 102, 12498, 12500, 12506, 1, 9674, 110, 103, 101, 59, 1, 9674, 59, 1, 10731, 97, 114, 4, 2, 59, 108, 12517, 12519, 1, 40, 116, 59, 1, 10643, 4, 5, 97, 99, 104, 109, 116, 12535, 12540, 12548, 12561, 12564, 114, 114, 59, 1, 8646, 111, 114, 110, 101, 114, 59, 1, 8991, 97, 114, 4, 2, 59, 100, 12556, 12558, 1, 8651, 59, 1, 10605, 59, 1, 8206, 114, 105, 59, 1, 8895, 4, 6, 97, 99, 104, 105, 113, 116, 12583, 12589, 12594, 12597, 12614, 12635, 113, 117, 111, 59, 1, 8249, 114, 59, 3, 55349, 56513, 59, 1, 8624, 109, 4, 3, 59, 101, 103, 12606, 12608, 12611, 1, 8818, 59, 1, 10893, 59, 1, 10895, 4, 2, 98, 117, 12620, 12623, 59, 1, 91, 111, 4, 2, 59, 114, 12630, 12632, 1, 8216, 59, 1, 8218, 114, 111, 107, 59, 1, 322, 5, 60, 8, 59, 99, 100, 104, 105, 108, 113, 114, 12660, 12662, 12675, 12680, 12686, 12692, 12698, 12705, 1, 60, 4, 2, 99, 105, 12668, 12671, 59, 1, 10918, 114, 59, 1, 10873, 111, 116, 59, 1, 8918, 114, 101, 101, 59, 1, 8907, 109, 101, 115, 59, 1, 8905, 97, 114, 114, 59, 1, 10614, 117, 101, 115, 116, 59, 1, 10875, 4, 2, 80, 105, 12711, 12716, 97, 114, 59, 1, 10646, 4, 3, 59, 101, 102, 12724, 12726, 12729, 1, 9667, 59, 1, 8884, 59, 1, 9666, 114, 4, 2, 100, 117, 12739, 12746, 115, 104, 97, 114, 59, 1, 10570, 104, 97, 114, 59, 1, 10598, 4, 2, 101, 110, 12758, 12768, 114, 116, 110, 101, 113, 113, 59, 3, 8808, 65024, 69, 59, 3, 8808, 65024, 4, 14, 68, 97, 99, 100, 101, 102, 104, 105, 108, 110, 111, 112, 115, 117, 12803, 12809, 12893, 12908, 12914, 12928, 12933, 12937, 13011, 13025, 13032, 13049, 13052, 13069, 68, 111, 116, 59, 1, 8762, 4, 4, 99, 108, 112, 114, 12819, 12827, 12849, 12887, 114, 5, 175, 1, 59, 12825, 1, 175, 4, 2, 101, 116, 12833, 12836, 59, 1, 9794, 4, 2, 59, 101, 12842, 12844, 1, 10016, 115, 101, 59, 1, 10016, 4, 2, 59, 115, 12855, 12857, 1, 8614, 116, 111, 4, 4, 59, 100, 108, 117, 12869, 12871, 12877, 12883, 1, 8614, 111, 119, 110, 59, 1, 8615, 101, 102, 116, 59, 1, 8612, 112, 59, 1, 8613, 107, 101, 114, 59, 1, 9646, 4, 2, 111, 121, 12899, 12905, 109, 109, 97, 59, 1, 10793, 59, 1, 1084, 97, 115, 104, 59, 1, 8212, 97, 115, 117, 114, 101, 100, 97, 110, 103, 108, 101, 59, 1, 8737, 114, 59, 3, 55349, 56618, 111, 59, 1, 8487, 4, 3, 99, 100, 110, 12945, 12954, 12985, 114, 111, 5, 181, 1, 59, 12952, 1, 181, 4, 4, 59, 97, 99, 100, 12964, 12966, 12971, 12976, 1, 8739, 115, 116, 59, 1, 42, 105, 114, 59, 1, 10992, 111, 116, 5, 183, 1, 59, 12983, 1, 183, 117, 115, 4, 3, 59, 98, 100, 12995, 12997, 13000, 1, 8722, 59, 1, 8863, 4, 2, 59, 117, 13006, 13008, 1, 8760, 59, 1, 10794, 4, 2, 99, 100, 13017, 13021, 112, 59, 1, 10971, 114, 59, 1, 8230, 112, 108, 117, 115, 59, 1, 8723, 4, 2, 100, 112, 13038, 13044, 101, 108, 115, 59, 1, 8871, 102, 59, 3, 55349, 56670, 59, 1, 8723, 4, 2, 99, 116, 13058, 13063, 114, 59, 3, 55349, 56514, 112, 111, 115, 59, 1, 8766, 4, 3, 59, 108, 109, 13077, 13079, 13087, 1, 956, 116, 105, 109, 97, 112, 59, 1, 8888, 97, 112, 59, 1, 8888, 4, 24, 71, 76, 82, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 13142, 13165, 13217, 13229, 13247, 13330, 13359, 13414, 13420, 13508, 13513, 13579, 13602, 13626, 13631, 13762, 13767, 13855, 13936, 13995, 14214, 14285, 14312, 14432, 4, 2, 103, 116, 13148, 13152, 59, 3, 8921, 824, 4, 2, 59, 118, 13158, 13161, 3, 8811, 8402, 59, 3, 8811, 824, 4, 3, 101, 108, 116, 13173, 13200, 13204, 102, 116, 4, 2, 97, 114, 13181, 13188, 114, 114, 111, 119, 59, 1, 8653, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8654, 59, 3, 8920, 824, 4, 2, 59, 118, 13210, 13213, 3, 8810, 8402, 59, 3, 8810, 824, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8655, 4, 2, 68, 100, 13235, 13241, 97, 115, 104, 59, 1, 8879, 97, 115, 104, 59, 1, 8878, 4, 5, 98, 99, 110, 112, 116, 13259, 13264, 13270, 13275, 13308, 108, 97, 59, 1, 8711, 117, 116, 101, 59, 1, 324, 103, 59, 3, 8736, 8402, 4, 5, 59, 69, 105, 111, 112, 13287, 13289, 13293, 13298, 13302, 1, 8777, 59, 3, 10864, 824, 100, 59, 3, 8779, 824, 115, 59, 1, 329, 114, 111, 120, 59, 1, 8777, 117, 114, 4, 2, 59, 97, 13316, 13318, 1, 9838, 108, 4, 2, 59, 115, 13325, 13327, 1, 9838, 59, 1, 8469, 4, 2, 115, 117, 13336, 13344, 112, 5, 160, 1, 59, 13342, 1, 160, 109, 112, 4, 2, 59, 101, 13352, 13355, 3, 8782, 824, 59, 3, 8783, 824, 4, 5, 97, 101, 111, 117, 121, 13371, 13385, 13391, 13407, 13411, 4, 2, 112, 114, 13377, 13380, 59, 1, 10819, 111, 110, 59, 1, 328, 100, 105, 108, 59, 1, 326, 110, 103, 4, 2, 59, 100, 13399, 13401, 1, 8775, 111, 116, 59, 3, 10861, 824, 112, 59, 1, 10818, 59, 1, 1085, 97, 115, 104, 59, 1, 8211, 4, 7, 59, 65, 97, 100, 113, 115, 120, 13436, 13438, 13443, 13466, 13472, 13478, 13494, 1, 8800, 114, 114, 59, 1, 8663, 114, 4, 2, 104, 114, 13450, 13454, 107, 59, 1, 10532, 4, 2, 59, 111, 13460, 13462, 1, 8599, 119, 59, 1, 8599, 111, 116, 59, 3, 8784, 824, 117, 105, 118, 59, 1, 8802, 4, 2, 101, 105, 13484, 13489, 97, 114, 59, 1, 10536, 109, 59, 3, 8770, 824, 105, 115, 116, 4, 2, 59, 115, 13503, 13505, 1, 8708, 59, 1, 8708, 114, 59, 3, 55349, 56619, 4, 4, 69, 101, 115, 116, 13523, 13527, 13563, 13568, 59, 3, 8807, 824, 4, 3, 59, 113, 115, 13535, 13537, 13559, 1, 8817, 4, 3, 59, 113, 115, 13545, 13547, 13551, 1, 8817, 59, 3, 8807, 824, 108, 97, 110, 116, 59, 3, 10878, 824, 59, 3, 10878, 824, 105, 109, 59, 1, 8821, 4, 2, 59, 114, 13574, 13576, 1, 8815, 59, 1, 8815, 4, 3, 65, 97, 112, 13587, 13592, 13597, 114, 114, 59, 1, 8654, 114, 114, 59, 1, 8622, 97, 114, 59, 1, 10994, 4, 3, 59, 115, 118, 13610, 13612, 13623, 1, 8715, 4, 2, 59, 100, 13618, 13620, 1, 8956, 59, 1, 8954, 59, 1, 8715, 99, 121, 59, 1, 1114, 4, 7, 65, 69, 97, 100, 101, 115, 116, 13647, 13652, 13656, 13661, 13665, 13737, 13742, 114, 114, 59, 1, 8653, 59, 3, 8806, 824, 114, 114, 59, 1, 8602, 114, 59, 1, 8229, 4, 4, 59, 102, 113, 115, 13675, 13677, 13703, 13725, 1, 8816, 116, 4, 2, 97, 114, 13684, 13691, 114, 114, 111, 119, 59, 1, 8602, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8622, 4, 3, 59, 113, 115, 13711, 13713, 13717, 1, 8816, 59, 3, 8806, 824, 108, 97, 110, 116, 59, 3, 10877, 824, 4, 2, 59, 115, 13731, 13734, 3, 10877, 824, 59, 1, 8814, 105, 109, 59, 1, 8820, 4, 2, 59, 114, 13748, 13750, 1, 8814, 105, 4, 2, 59, 101, 13757, 13759, 1, 8938, 59, 1, 8940, 105, 100, 59, 1, 8740, 4, 2, 112, 116, 13773, 13778, 102, 59, 3, 55349, 56671, 5, 172, 3, 59, 105, 110, 13787, 13789, 13829, 1, 172, 110, 4, 4, 59, 69, 100, 118, 13800, 13802, 13806, 13812, 1, 8713, 59, 3, 8953, 824, 111, 116, 59, 3, 8949, 824, 4, 3, 97, 98, 99, 13820, 13823, 13826, 59, 1, 8713, 59, 1, 8951, 59, 1, 8950, 105, 4, 2, 59, 118, 13836, 13838, 1, 8716, 4, 3, 97, 98, 99, 13846, 13849, 13852, 59, 1, 8716, 59, 1, 8958, 59, 1, 8957, 4, 3, 97, 111, 114, 13863, 13892, 13899, 114, 4, 4, 59, 97, 115, 116, 13874, 13876, 13883, 13888, 1, 8742, 108, 108, 101, 108, 59, 1, 8742, 108, 59, 3, 11005, 8421, 59, 3, 8706, 824, 108, 105, 110, 116, 59, 1, 10772, 4, 3, 59, 99, 101, 13907, 13909, 13914, 1, 8832, 117, 101, 59, 1, 8928, 4, 2, 59, 99, 13920, 13923, 3, 10927, 824, 4, 2, 59, 101, 13929, 13931, 1, 8832, 113, 59, 3, 10927, 824, 4, 4, 65, 97, 105, 116, 13946, 13951, 13971, 13982, 114, 114, 59, 1, 8655, 114, 114, 4, 3, 59, 99, 119, 13961, 13963, 13967, 1, 8603, 59, 3, 10547, 824, 59, 3, 8605, 824, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8603, 114, 105, 4, 2, 59, 101, 13990, 13992, 1, 8939, 59, 1, 8941, 4, 7, 99, 104, 105, 109, 112, 113, 117, 14011, 14036, 14060, 14080, 14085, 14090, 14106, 4, 4, 59, 99, 101, 114, 14021, 14023, 14028, 14032, 1, 8833, 117, 101, 59, 1, 8929, 59, 3, 10928, 824, 59, 3, 55349, 56515, 111, 114, 116, 4, 2, 109, 112, 14045, 14050, 105, 100, 59, 1, 8740, 97, 114, 97, 108, 108, 101, 108, 59, 1, 8742, 109, 4, 2, 59, 101, 14067, 14069, 1, 8769, 4, 2, 59, 113, 14075, 14077, 1, 8772, 59, 1, 8772, 105, 100, 59, 1, 8740, 97, 114, 59, 1, 8742, 115, 117, 4, 2, 98, 112, 14098, 14102, 101, 59, 1, 8930, 101, 59, 1, 8931, 4, 3, 98, 99, 112, 14114, 14157, 14171, 4, 4, 59, 69, 101, 115, 14124, 14126, 14130, 14133, 1, 8836, 59, 3, 10949, 824, 59, 1, 8840, 101, 116, 4, 2, 59, 101, 14141, 14144, 3, 8834, 8402, 113, 4, 2, 59, 113, 14151, 14153, 1, 8840, 59, 3, 10949, 824, 99, 4, 2, 59, 101, 14164, 14166, 1, 8833, 113, 59, 3, 10928, 824, 4, 4, 59, 69, 101, 115, 14181, 14183, 14187, 14190, 1, 8837, 59, 3, 10950, 824, 59, 1, 8841, 101, 116, 4, 2, 59, 101, 14198, 14201, 3, 8835, 8402, 113, 4, 2, 59, 113, 14208, 14210, 1, 8841, 59, 3, 10950, 824, 4, 4, 103, 105, 108, 114, 14224, 14228, 14238, 14242, 108, 59, 1, 8825, 108, 100, 101, 5, 241, 1, 59, 14236, 1, 241, 103, 59, 1, 8824, 105, 97, 110, 103, 108, 101, 4, 2, 108, 114, 14254, 14269, 101, 102, 116, 4, 2, 59, 101, 14263, 14265, 1, 8938, 113, 59, 1, 8940, 105, 103, 104, 116, 4, 2, 59, 101, 14279, 14281, 1, 8939, 113, 59, 1, 8941, 4, 2, 59, 109, 14291, 14293, 1, 957, 4, 3, 59, 101, 115, 14301, 14303, 14308, 1, 35, 114, 111, 59, 1, 8470, 112, 59, 1, 8199, 4, 9, 68, 72, 97, 100, 103, 105, 108, 114, 115, 14332, 14338, 14344, 14349, 14355, 14369, 14376, 14408, 14426, 97, 115, 104, 59, 1, 8877, 97, 114, 114, 59, 1, 10500, 112, 59, 3, 8781, 8402, 97, 115, 104, 59, 1, 8876, 4, 2, 101, 116, 14361, 14365, 59, 3, 8805, 8402, 59, 3, 62, 8402, 110, 102, 105, 110, 59, 1, 10718, 4, 3, 65, 101, 116, 14384, 14389, 14393, 114, 114, 59, 1, 10498, 59, 3, 8804, 8402, 4, 2, 59, 114, 14399, 14402, 3, 60, 8402, 105, 101, 59, 3, 8884, 8402, 4, 2, 65, 116, 14414, 14419, 114, 114, 59, 1, 10499, 114, 105, 101, 59, 3, 8885, 8402, 105, 109, 59, 3, 8764, 8402, 4, 3, 65, 97, 110, 14440, 14445, 14468, 114, 114, 59, 1, 8662, 114, 4, 2, 104, 114, 14452, 14456, 107, 59, 1, 10531, 4, 2, 59, 111, 14462, 14464, 1, 8598, 119, 59, 1, 8598, 101, 97, 114, 59, 1, 10535, 4, 18, 83, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 111, 112, 114, 115, 116, 117, 118, 14512, 14515, 14535, 14560, 14597, 14603, 14618, 14643, 14657, 14662, 14701, 14741, 14747, 14769, 14851, 14877, 14907, 14916, 59, 1, 9416, 4, 2, 99, 115, 14521, 14531, 117, 116, 101, 5, 243, 1, 59, 14529, 1, 243, 116, 59, 1, 8859, 4, 2, 105, 121, 14541, 14557, 114, 4, 2, 59, 99, 14548, 14550, 1, 8858, 5, 244, 1, 59, 14555, 1, 244, 59, 1, 1086, 4, 5, 97, 98, 105, 111, 115, 14572, 14577, 14583, 14587, 14591, 115, 104, 59, 1, 8861, 108, 97, 99, 59, 1, 337, 118, 59, 1, 10808, 116, 59, 1, 8857, 111, 108, 100, 59, 1, 10684, 108, 105, 103, 59, 1, 339, 4, 2, 99, 114, 14609, 14614, 105, 114, 59, 1, 10687, 59, 3, 55349, 56620, 4, 3, 111, 114, 116, 14626, 14630, 14640, 110, 59, 1, 731, 97, 118, 101, 5, 242, 1, 59, 14638, 1, 242, 59, 1, 10689, 4, 2, 98, 109, 14649, 14654, 97, 114, 59, 1, 10677, 59, 1, 937, 110, 116, 59, 1, 8750, 4, 4, 97, 99, 105, 116, 14672, 14677, 14693, 14698, 114, 114, 59, 1, 8634, 4, 2, 105, 114, 14683, 14687, 114, 59, 1, 10686, 111, 115, 115, 59, 1, 10683, 110, 101, 59, 1, 8254, 59, 1, 10688, 4, 3, 97, 101, 105, 14709, 14714, 14719, 99, 114, 59, 1, 333, 103, 97, 59, 1, 969, 4, 3, 99, 100, 110, 14727, 14733, 14736, 114, 111, 110, 59, 1, 959, 59, 1, 10678, 117, 115, 59, 1, 8854, 112, 102, 59, 3, 55349, 56672, 4, 3, 97, 101, 108, 14755, 14759, 14764, 114, 59, 1, 10679, 114, 112, 59, 1, 10681, 117, 115, 59, 1, 8853, 4, 7, 59, 97, 100, 105, 111, 115, 118, 14785, 14787, 14792, 14831, 14837, 14841, 14848, 1, 8744, 114, 114, 59, 1, 8635, 4, 4, 59, 101, 102, 109, 14802, 14804, 14817, 14824, 1, 10845, 114, 4, 2, 59, 111, 14811, 14813, 1, 8500, 102, 59, 1, 8500, 5, 170, 1, 59, 14822, 1, 170, 5, 186, 1, 59, 14829, 1, 186, 103, 111, 102, 59, 1, 8886, 114, 59, 1, 10838, 108, 111, 112, 101, 59, 1, 10839, 59, 1, 10843, 4, 3, 99, 108, 111, 14859, 14863, 14873, 114, 59, 1, 8500, 97, 115, 104, 5, 248, 1, 59, 14871, 1, 248, 108, 59, 1, 8856, 105, 4, 2, 108, 109, 14884, 14893, 100, 101, 5, 245, 1, 59, 14891, 1, 245, 101, 115, 4, 2, 59, 97, 14901, 14903, 1, 8855, 115, 59, 1, 10806, 109, 108, 5, 246, 1, 59, 14914, 1, 246, 98, 97, 114, 59, 1, 9021, 4, 12, 97, 99, 101, 102, 104, 105, 108, 109, 111, 114, 115, 117, 14948, 14992, 14996, 15033, 15038, 15068, 15090, 15189, 15192, 15222, 15427, 15441, 114, 4, 4, 59, 97, 115, 116, 14959, 14961, 14976, 14989, 1, 8741, 5, 182, 2, 59, 108, 14968, 14970, 1, 182, 108, 101, 108, 59, 1, 8741, 4, 2, 105, 108, 14982, 14986, 109, 59, 1, 10995, 59, 1, 11005, 59, 1, 8706, 121, 59, 1, 1087, 114, 4, 5, 99, 105, 109, 112, 116, 15009, 15014, 15019, 15024, 15027, 110, 116, 59, 1, 37, 111, 100, 59, 1, 46, 105, 108, 59, 1, 8240, 59, 1, 8869, 101, 110, 107, 59, 1, 8241, 114, 59, 3, 55349, 56621, 4, 3, 105, 109, 111, 15046, 15057, 15063, 4, 2, 59, 118, 15052, 15054, 1, 966, 59, 1, 981, 109, 97, 116, 59, 1, 8499, 110, 101, 59, 1, 9742, 4, 3, 59, 116, 118, 15076, 15078, 15087, 1, 960, 99, 104, 102, 111, 114, 107, 59, 1, 8916, 59, 1, 982, 4, 2, 97, 117, 15096, 15119, 110, 4, 2, 99, 107, 15103, 15115, 107, 4, 2, 59, 104, 15110, 15112, 1, 8463, 59, 1, 8462, 118, 59, 1, 8463, 115, 4, 9, 59, 97, 98, 99, 100, 101, 109, 115, 116, 15140, 15142, 15148, 15151, 15156, 15168, 15171, 15179, 15184, 1, 43, 99, 105, 114, 59, 1, 10787, 59, 1, 8862, 105, 114, 59, 1, 10786, 4, 2, 111, 117, 15162, 15165, 59, 1, 8724, 59, 1, 10789, 59, 1, 10866, 110, 5, 177, 1, 59, 15177, 1, 177, 105, 109, 59, 1, 10790, 119, 111, 59, 1, 10791, 59, 1, 177, 4, 3, 105, 112, 117, 15200, 15208, 15213, 110, 116, 105, 110, 116, 59, 1, 10773, 102, 59, 3, 55349, 56673, 110, 100, 5, 163, 1, 59, 15220, 1, 163, 4, 10, 59, 69, 97, 99, 101, 105, 110, 111, 115, 117, 15244, 15246, 15249, 15253, 15258, 15334, 15347, 15367, 15416, 15421, 1, 8826, 59, 1, 10931, 112, 59, 1, 10935, 117, 101, 59, 1, 8828, 4, 2, 59, 99, 15264, 15266, 1, 10927, 4, 6, 59, 97, 99, 101, 110, 115, 15280, 15282, 15290, 15299, 15303, 15329, 1, 8826, 112, 112, 114, 111, 120, 59, 1, 10935, 117, 114, 108, 121, 101, 113, 59, 1, 8828, 113, 59, 1, 10927, 4, 3, 97, 101, 115, 15311, 15319, 15324, 112, 112, 114, 111, 120, 59, 1, 10937, 113, 113, 59, 1, 10933, 105, 109, 59, 1, 8936, 105, 109, 59, 1, 8830, 109, 101, 4, 2, 59, 115, 15342, 15344, 1, 8242, 59, 1, 8473, 4, 3, 69, 97, 115, 15355, 15358, 15362, 59, 1, 10933, 112, 59, 1, 10937, 105, 109, 59, 1, 8936, 4, 3, 100, 102, 112, 15375, 15378, 15404, 59, 1, 8719, 4, 3, 97, 108, 115, 15386, 15392, 15398, 108, 97, 114, 59, 1, 9006, 105, 110, 101, 59, 1, 8978, 117, 114, 102, 59, 1, 8979, 4, 2, 59, 116, 15410, 15412, 1, 8733, 111, 59, 1, 8733, 105, 109, 59, 1, 8830, 114, 101, 108, 59, 1, 8880, 4, 2, 99, 105, 15433, 15438, 114, 59, 3, 55349, 56517, 59, 1, 968, 110, 99, 115, 112, 59, 1, 8200, 4, 6, 102, 105, 111, 112, 115, 117, 15462, 15467, 15472, 15478, 15485, 15491, 114, 59, 3, 55349, 56622, 110, 116, 59, 1, 10764, 112, 102, 59, 3, 55349, 56674, 114, 105, 109, 101, 59, 1, 8279, 99, 114, 59, 3, 55349, 56518, 4, 3, 97, 101, 111, 15499, 15520, 15534, 116, 4, 2, 101, 105, 15506, 15515, 114, 110, 105, 111, 110, 115, 59, 1, 8461, 110, 116, 59, 1, 10774, 115, 116, 4, 2, 59, 101, 15528, 15530, 1, 63, 113, 59, 1, 8799, 116, 5, 34, 1, 59, 15540, 1, 34, 4, 21, 65, 66, 72, 97, 98, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 15586, 15609, 15615, 15620, 15796, 15855, 15893, 15931, 15977, 16001, 16039, 16183, 16204, 16222, 16228, 16285, 16312, 16318, 16363, 16408, 16416, 4, 3, 97, 114, 116, 15594, 15599, 15603, 114, 114, 59, 1, 8667, 114, 59, 1, 8658, 97, 105, 108, 59, 1, 10524, 97, 114, 114, 59, 1, 10511, 97, 114, 59, 1, 10596, 4, 7, 99, 100, 101, 110, 113, 114, 116, 15636, 15651, 15656, 15664, 15687, 15696, 15770, 4, 2, 101, 117, 15642, 15646, 59, 3, 8765, 817, 116, 101, 59, 1, 341, 105, 99, 59, 1, 8730, 109, 112, 116, 121, 118, 59, 1, 10675, 103, 4, 4, 59, 100, 101, 108, 15675, 15677, 15680, 15683, 1, 10217, 59, 1, 10642, 59, 1, 10661, 101, 59, 1, 10217, 117, 111, 5, 187, 1, 59, 15694, 1, 187, 114, 4, 11, 59, 97, 98, 99, 102, 104, 108, 112, 115, 116, 119, 15721, 15723, 15727, 15739, 15742, 15746, 15750, 15754, 15758, 15763, 15767, 1, 8594, 112, 59, 1, 10613, 4, 2, 59, 102, 15733, 15735, 1, 8677, 115, 59, 1, 10528, 59, 1, 10547, 115, 59, 1, 10526, 107, 59, 1, 8618, 112, 59, 1, 8620, 108, 59, 1, 10565, 105, 109, 59, 1, 10612, 108, 59, 1, 8611, 59, 1, 8605, 4, 2, 97, 105, 15776, 15781, 105, 108, 59, 1, 10522, 111, 4, 2, 59, 110, 15788, 15790, 1, 8758, 97, 108, 115, 59, 1, 8474, 4, 3, 97, 98, 114, 15804, 15809, 15814, 114, 114, 59, 1, 10509, 114, 107, 59, 1, 10099, 4, 2, 97, 107, 15820, 15833, 99, 4, 2, 101, 107, 15827, 15830, 59, 1, 125, 59, 1, 93, 4, 2, 101, 115, 15839, 15842, 59, 1, 10636, 108, 4, 2, 100, 117, 15849, 15852, 59, 1, 10638, 59, 1, 10640, 4, 4, 97, 101, 117, 121, 15865, 15871, 15886, 15890, 114, 111, 110, 59, 1, 345, 4, 2, 100, 105, 15877, 15882, 105, 108, 59, 1, 343, 108, 59, 1, 8969, 98, 59, 1, 125, 59, 1, 1088, 4, 4, 99, 108, 113, 115, 15903, 15907, 15914, 15927, 97, 59, 1, 10551, 100, 104, 97, 114, 59, 1, 10601, 117, 111, 4, 2, 59, 114, 15922, 15924, 1, 8221, 59, 1, 8221, 104, 59, 1, 8627, 4, 3, 97, 99, 103, 15939, 15966, 15970, 108, 4, 4, 59, 105, 112, 115, 15950, 15952, 15957, 15963, 1, 8476, 110, 101, 59, 1, 8475, 97, 114, 116, 59, 1, 8476, 59, 1, 8477, 116, 59, 1, 9645, 5, 174, 1, 59, 15975, 1, 174, 4, 3, 105, 108, 114, 15985, 15991, 15997, 115, 104, 116, 59, 1, 10621, 111, 111, 114, 59, 1, 8971, 59, 3, 55349, 56623, 4, 2, 97, 111, 16007, 16028, 114, 4, 2, 100, 117, 16014, 16017, 59, 1, 8641, 4, 2, 59, 108, 16023, 16025, 1, 8640, 59, 1, 10604, 4, 2, 59, 118, 16034, 16036, 1, 961, 59, 1, 1009, 4, 3, 103, 110, 115, 16047, 16167, 16171, 104, 116, 4, 6, 97, 104, 108, 114, 115, 116, 16063, 16081, 16103, 16130, 16143, 16155, 114, 114, 111, 119, 4, 2, 59, 116, 16073, 16075, 1, 8594, 97, 105, 108, 59, 1, 8611, 97, 114, 112, 111, 111, 110, 4, 2, 100, 117, 16093, 16099, 111, 119, 110, 59, 1, 8641, 112, 59, 1, 8640, 101, 102, 116, 4, 2, 97, 104, 16112, 16120, 114, 114, 111, 119, 115, 59, 1, 8644, 97, 114, 112, 111, 111, 110, 115, 59, 1, 8652, 105, 103, 104, 116, 97, 114, 114, 111, 119, 115, 59, 1, 8649, 113, 117, 105, 103, 97, 114, 114, 111, 119, 59, 1, 8605, 104, 114, 101, 101, 116, 105, 109, 101, 115, 59, 1, 8908, 103, 59, 1, 730, 105, 110, 103, 100, 111, 116, 115, 101, 113, 59, 1, 8787, 4, 3, 97, 104, 109, 16191, 16196, 16201, 114, 114, 59, 1, 8644, 97, 114, 59, 1, 8652, 59, 1, 8207, 111, 117, 115, 116, 4, 2, 59, 97, 16214, 16216, 1, 9137, 99, 104, 101, 59, 1, 9137, 109, 105, 100, 59, 1, 10990, 4, 4, 97, 98, 112, 116, 16238, 16252, 16257, 16278, 4, 2, 110, 114, 16244, 16248, 103, 59, 1, 10221, 114, 59, 1, 8702, 114, 107, 59, 1, 10215, 4, 3, 97, 102, 108, 16265, 16269, 16273, 114, 59, 1, 10630, 59, 3, 55349, 56675, 117, 115, 59, 1, 10798, 105, 109, 101, 115, 59, 1, 10805, 4, 2, 97, 112, 16291, 16304, 114, 4, 2, 59, 103, 16298, 16300, 1, 41, 116, 59, 1, 10644, 111, 108, 105, 110, 116, 59, 1, 10770, 97, 114, 114, 59, 1, 8649, 4, 4, 97, 99, 104, 113, 16328, 16334, 16339, 16342, 113, 117, 111, 59, 1, 8250, 114, 59, 3, 55349, 56519, 59, 1, 8625, 4, 2, 98, 117, 16348, 16351, 59, 1, 93, 111, 4, 2, 59, 114, 16358, 16360, 1, 8217, 59, 1, 8217, 4, 3, 104, 105, 114, 16371, 16377, 16383, 114, 101, 101, 59, 1, 8908, 109, 101, 115, 59, 1, 8906, 105, 4, 4, 59, 101, 102, 108, 16394, 16396, 16399, 16402, 1, 9657, 59, 1, 8885, 59, 1, 9656, 116, 114, 105, 59, 1, 10702, 108, 117, 104, 97, 114, 59, 1, 10600, 59, 1, 8478, 4, 19, 97, 98, 99, 100, 101, 102, 104, 105, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 122, 16459, 16466, 16472, 16572, 16590, 16672, 16687, 16746, 16844, 16850, 16924, 16963, 16988, 17115, 17121, 17154, 17206, 17614, 17656, 99, 117, 116, 101, 59, 1, 347, 113, 117, 111, 59, 1, 8218, 4, 10, 59, 69, 97, 99, 101, 105, 110, 112, 115, 121, 16494, 16496, 16499, 16513, 16518, 16531, 16536, 16556, 16564, 16569, 1, 8827, 59, 1, 10932, 4, 2, 112, 114, 16505, 16508, 59, 1, 10936, 111, 110, 59, 1, 353, 117, 101, 59, 1, 8829, 4, 2, 59, 100, 16524, 16526, 1, 10928, 105, 108, 59, 1, 351, 114, 99, 59, 1, 349, 4, 3, 69, 97, 115, 16544, 16547, 16551, 59, 1, 10934, 112, 59, 1, 10938, 105, 109, 59, 1, 8937, 111, 108, 105, 110, 116, 59, 1, 10771, 105, 109, 59, 1, 8831, 59, 1, 1089, 111, 116, 4, 3, 59, 98, 101, 16582, 16584, 16587, 1, 8901, 59, 1, 8865, 59, 1, 10854, 4, 7, 65, 97, 99, 109, 115, 116, 120, 16606, 16611, 16634, 16642, 16646, 16652, 16668, 114, 114, 59, 1, 8664, 114, 4, 2, 104, 114, 16618, 16622, 107, 59, 1, 10533, 4, 2, 59, 111, 16628, 16630, 1, 8600, 119, 59, 1, 8600, 116, 5, 167, 1, 59, 16640, 1, 167, 105, 59, 1, 59, 119, 97, 114, 59, 1, 10537, 109, 4, 2, 105, 110, 16659, 16665, 110, 117, 115, 59, 1, 8726, 59, 1, 8726, 116, 59, 1, 10038, 114, 4, 2, 59, 111, 16679, 16682, 3, 55349, 56624, 119, 110, 59, 1, 8994, 4, 4, 97, 99, 111, 121, 16697, 16702, 16716, 16739, 114, 112, 59, 1, 9839, 4, 2, 104, 121, 16708, 16713, 99, 121, 59, 1, 1097, 59, 1, 1096, 114, 116, 4, 2, 109, 112, 16724, 16729, 105, 100, 59, 1, 8739, 97, 114, 97, 108, 108, 101, 108, 59, 1, 8741, 5, 173, 1, 59, 16744, 1, 173, 4, 2, 103, 109, 16752, 16770, 109, 97, 4, 3, 59, 102, 118, 16762, 16764, 16767, 1, 963, 59, 1, 962, 59, 1, 962, 4, 8, 59, 100, 101, 103, 108, 110, 112, 114, 16788, 16790, 16795, 16806, 16817, 16828, 16832, 16838, 1, 8764, 111, 116, 59, 1, 10858, 4, 2, 59, 113, 16801, 16803, 1, 8771, 59, 1, 8771, 4, 2, 59, 69, 16812, 16814, 1, 10910, 59, 1, 10912, 4, 2, 59, 69, 16823, 16825, 1, 10909, 59, 1, 10911, 101, 59, 1, 8774, 108, 117, 115, 59, 1, 10788, 97, 114, 114, 59, 1, 10610, 97, 114, 114, 59, 1, 8592, 4, 4, 97, 101, 105, 116, 16860, 16883, 16891, 16904, 4, 2, 108, 115, 16866, 16878, 108, 115, 101, 116, 109, 105, 110, 117, 115, 59, 1, 8726, 104, 112, 59, 1, 10803, 112, 97, 114, 115, 108, 59, 1, 10724, 4, 2, 100, 108, 16897, 16900, 59, 1, 8739, 101, 59, 1, 8995, 4, 2, 59, 101, 16910, 16912, 1, 10922, 4, 2, 59, 115, 16918, 16920, 1, 10924, 59, 3, 10924, 65024, 4, 3, 102, 108, 112, 16932, 16938, 16958, 116, 99, 121, 59, 1, 1100, 4, 2, 59, 98, 16944, 16946, 1, 47, 4, 2, 59, 97, 16952, 16954, 1, 10692, 114, 59, 1, 9023, 102, 59, 3, 55349, 56676, 97, 4, 2, 100, 114, 16970, 16985, 101, 115, 4, 2, 59, 117, 16978, 16980, 1, 9824, 105, 116, 59, 1, 9824, 59, 1, 8741, 4, 3, 99, 115, 117, 16996, 17028, 17089, 4, 2, 97, 117, 17002, 17015, 112, 4, 2, 59, 115, 17009, 17011, 1, 8851, 59, 3, 8851, 65024, 112, 4, 2, 59, 115, 17022, 17024, 1, 8852, 59, 3, 8852, 65024, 117, 4, 2, 98, 112, 17035, 17062, 4, 3, 59, 101, 115, 17043, 17045, 17048, 1, 8847, 59, 1, 8849, 101, 116, 4, 2, 59, 101, 17056, 17058, 1, 8847, 113, 59, 1, 8849, 4, 3, 59, 101, 115, 17070, 17072, 17075, 1, 8848, 59, 1, 8850, 101, 116, 4, 2, 59, 101, 17083, 17085, 1, 8848, 113, 59, 1, 8850, 4, 3, 59, 97, 102, 17097, 17099, 17112, 1, 9633, 114, 4, 2, 101, 102, 17106, 17109, 59, 1, 9633, 59, 1, 9642, 59, 1, 9642, 97, 114, 114, 59, 1, 8594, 4, 4, 99, 101, 109, 116, 17131, 17136, 17142, 17148, 114, 59, 3, 55349, 56520, 116, 109, 110, 59, 1, 8726, 105, 108, 101, 59, 1, 8995, 97, 114, 102, 59, 1, 8902, 4, 2, 97, 114, 17160, 17172, 114, 4, 2, 59, 102, 17167, 17169, 1, 9734, 59, 1, 9733, 4, 2, 97, 110, 17178, 17202, 105, 103, 104, 116, 4, 2, 101, 112, 17188, 17197, 112, 115, 105, 108, 111, 110, 59, 1, 1013, 104, 105, 59, 1, 981, 115, 59, 1, 175, 4, 5, 98, 99, 109, 110, 112, 17218, 17351, 17420, 17423, 17427, 4, 9, 59, 69, 100, 101, 109, 110, 112, 114, 115, 17238, 17240, 17243, 17248, 17261, 17267, 17279, 17285, 17291, 1, 8834, 59, 1, 10949, 111, 116, 59, 1, 10941, 4, 2, 59, 100, 17254, 17256, 1, 8838, 111, 116, 59, 1, 10947, 117, 108, 116, 59, 1, 10945, 4, 2, 69, 101, 17273, 17276, 59, 1, 10955, 59, 1, 8842, 108, 117, 115, 59, 1, 10943, 97, 114, 114, 59, 1, 10617, 4, 3, 101, 105, 117, 17299, 17335, 17339, 116, 4, 3, 59, 101, 110, 17308, 17310, 17322, 1, 8834, 113, 4, 2, 59, 113, 17317, 17319, 1, 8838, 59, 1, 10949, 101, 113, 4, 2, 59, 113, 17330, 17332, 1, 8842, 59, 1, 10955, 109, 59, 1, 10951, 4, 2, 98, 112, 17345, 17348, 59, 1, 10965, 59, 1, 10963, 99, 4, 6, 59, 97, 99, 101, 110, 115, 17366, 17368, 17376, 17385, 17389, 17415, 1, 8827, 112, 112, 114, 111, 120, 59, 1, 10936, 117, 114, 108, 121, 101, 113, 59, 1, 8829, 113, 59, 1, 10928, 4, 3, 97, 101, 115, 17397, 17405, 17410, 112, 112, 114, 111, 120, 59, 1, 10938, 113, 113, 59, 1, 10934, 105, 109, 59, 1, 8937, 105, 109, 59, 1, 8831, 59, 1, 8721, 103, 59, 1, 9834, 4, 13, 49, 50, 51, 59, 69, 100, 101, 104, 108, 109, 110, 112, 115, 17455, 17462, 17469, 17476, 17478, 17481, 17496, 17509, 17524, 17530, 17536, 17548, 17554, 5, 185, 1, 59, 17460, 1, 185, 5, 178, 1, 59, 17467, 1, 178, 5, 179, 1, 59, 17474, 1, 179, 1, 8835, 59, 1, 10950, 4, 2, 111, 115, 17487, 17491, 116, 59, 1, 10942, 117, 98, 59, 1, 10968, 4, 2, 59, 100, 17502, 17504, 1, 8839, 111, 116, 59, 1, 10948, 115, 4, 2, 111, 117, 17516, 17520, 108, 59, 1, 10185, 98, 59, 1, 10967, 97, 114, 114, 59, 1, 10619, 117, 108, 116, 59, 1, 10946, 4, 2, 69, 101, 17542, 17545, 59, 1, 10956, 59, 1, 8843, 108, 117, 115, 59, 1, 10944, 4, 3, 101, 105, 117, 17562, 17598, 17602, 116, 4, 3, 59, 101, 110, 17571, 17573, 17585, 1, 8835, 113, 4, 2, 59, 113, 17580, 17582, 1, 8839, 59, 1, 10950, 101, 113, 4, 2, 59, 113, 17593, 17595, 1, 8843, 59, 1, 10956, 109, 59, 1, 10952, 4, 2, 98, 112, 17608, 17611, 59, 1, 10964, 59, 1, 10966, 4, 3, 65, 97, 110, 17622, 17627, 17650, 114, 114, 59, 1, 8665, 114, 4, 2, 104, 114, 17634, 17638, 107, 59, 1, 10534, 4, 2, 59, 111, 17644, 17646, 1, 8601, 119, 59, 1, 8601, 119, 97, 114, 59, 1, 10538, 108, 105, 103, 5, 223, 1, 59, 17664, 1, 223, 4, 13, 97, 98, 99, 100, 101, 102, 104, 105, 111, 112, 114, 115, 119, 17694, 17709, 17714, 17737, 17742, 17749, 17754, 17860, 17905, 17957, 17964, 18090, 18122, 4, 2, 114, 117, 17700, 17706, 103, 101, 116, 59, 1, 8982, 59, 1, 964, 114, 107, 59, 1, 9140, 4, 3, 97, 101, 121, 17722, 17728, 17734, 114, 111, 110, 59, 1, 357, 100, 105, 108, 59, 1, 355, 59, 1, 1090, 111, 116, 59, 1, 8411, 108, 114, 101, 99, 59, 1, 8981, 114, 59, 3, 55349, 56625, 4, 4, 101, 105, 107, 111, 17764, 17805, 17836, 17851, 4, 2, 114, 116, 17770, 17786, 101, 4, 2, 52, 102, 17777, 17780, 59, 1, 8756, 111, 114, 101, 59, 1, 8756, 97, 4, 3, 59, 115, 118, 17795, 17797, 17802, 1, 952, 121, 109, 59, 1, 977, 59, 1, 977, 4, 2, 99, 110, 17811, 17831, 107, 4, 2, 97, 115, 17818, 17826, 112, 112, 114, 111, 120, 59, 1, 8776, 105, 109, 59, 1, 8764, 115, 112, 59, 1, 8201, 4, 2, 97, 115, 17842, 17846, 112, 59, 1, 8776, 105, 109, 59, 1, 8764, 114, 110, 5, 254, 1, 59, 17858, 1, 254, 4, 3, 108, 109, 110, 17868, 17873, 17901, 100, 101, 59, 1, 732, 101, 115, 5, 215, 3, 59, 98, 100, 17884, 17886, 17898, 1, 215, 4, 2, 59, 97, 17892, 17894, 1, 8864, 114, 59, 1, 10801, 59, 1, 10800, 116, 59, 1, 8749, 4, 3, 101, 112, 115, 17913, 17917, 17953, 97, 59, 1, 10536, 4, 4, 59, 98, 99, 102, 17927, 17929, 17934, 17939, 1, 8868, 111, 116, 59, 1, 9014, 105, 114, 59, 1, 10993, 4, 2, 59, 111, 17945, 17948, 3, 55349, 56677, 114, 107, 59, 1, 10970, 97, 59, 1, 10537, 114, 105, 109, 101, 59, 1, 8244, 4, 3, 97, 105, 112, 17972, 17977, 18082, 100, 101, 59, 1, 8482, 4, 7, 97, 100, 101, 109, 112, 115, 116, 17993, 18051, 18056, 18059, 18066, 18072, 18076, 110, 103, 108, 101, 4, 5, 59, 100, 108, 113, 114, 18009, 18011, 18017, 18032, 18035, 1, 9653, 111, 119, 110, 59, 1, 9663, 101, 102, 116, 4, 2, 59, 101, 18026, 18028, 1, 9667, 113, 59, 1, 8884, 59, 1, 8796, 105, 103, 104, 116, 4, 2, 59, 101, 18045, 18047, 1, 9657, 113, 59, 1, 8885, 111, 116, 59, 1, 9708, 59, 1, 8796, 105, 110, 117, 115, 59, 1, 10810, 108, 117, 115, 59, 1, 10809, 98, 59, 1, 10701, 105, 109, 101, 59, 1, 10811, 101, 122, 105, 117, 109, 59, 1, 9186, 4, 3, 99, 104, 116, 18098, 18111, 18116, 4, 2, 114, 121, 18104, 18108, 59, 3, 55349, 56521, 59, 1, 1094, 99, 121, 59, 1, 1115, 114, 111, 107, 59, 1, 359, 4, 2, 105, 111, 18128, 18133, 120, 116, 59, 1, 8812, 104, 101, 97, 100, 4, 2, 108, 114, 18143, 18154, 101, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8606, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8608, 4, 18, 65, 72, 97, 98, 99, 100, 102, 103, 104, 108, 109, 111, 112, 114, 115, 116, 117, 119, 18204, 18209, 18214, 18234, 18250, 18268, 18292, 18308, 18319, 18343, 18379, 18397, 18413, 18504, 18547, 18553, 18584, 18603, 114, 114, 59, 1, 8657, 97, 114, 59, 1, 10595, 4, 2, 99, 114, 18220, 18230, 117, 116, 101, 5, 250, 1, 59, 18228, 1, 250, 114, 59, 1, 8593, 114, 4, 2, 99, 101, 18241, 18245, 121, 59, 1, 1118, 118, 101, 59, 1, 365, 4, 2, 105, 121, 18256, 18265, 114, 99, 5, 251, 1, 59, 18263, 1, 251, 59, 1, 1091, 4, 3, 97, 98, 104, 18276, 18281, 18287, 114, 114, 59, 1, 8645, 108, 97, 99, 59, 1, 369, 97, 114, 59, 1, 10606, 4, 2, 105, 114, 18298, 18304, 115, 104, 116, 59, 1, 10622, 59, 3, 55349, 56626, 114, 97, 118, 101, 5, 249, 1, 59, 18317, 1, 249, 4, 2, 97, 98, 18325, 18338, 114, 4, 2, 108, 114, 18332, 18335, 59, 1, 8639, 59, 1, 8638, 108, 107, 59, 1, 9600, 4, 2, 99, 116, 18349, 18374, 4, 2, 111, 114, 18355, 18369, 114, 110, 4, 2, 59, 101, 18363, 18365, 1, 8988, 114, 59, 1, 8988, 111, 112, 59, 1, 8975, 114, 105, 59, 1, 9720, 4, 2, 97, 108, 18385, 18390, 99, 114, 59, 1, 363, 5, 168, 1, 59, 18395, 1, 168, 4, 2, 103, 112, 18403, 18408, 111, 110, 59, 1, 371, 102, 59, 3, 55349, 56678, 4, 6, 97, 100, 104, 108, 115, 117, 18427, 18434, 18445, 18470, 18475, 18494, 114, 114, 111, 119, 59, 1, 8593, 111, 119, 110, 97, 114, 114, 111, 119, 59, 1, 8597, 97, 114, 112, 111, 111, 110, 4, 2, 108, 114, 18457, 18463, 101, 102, 116, 59, 1, 8639, 105, 103, 104, 116, 59, 1, 8638, 117, 115, 59, 1, 8846, 105, 4, 3, 59, 104, 108, 18484, 18486, 18489, 1, 965, 59, 1, 978, 111, 110, 59, 1, 965, 112, 97, 114, 114, 111, 119, 115, 59, 1, 8648, 4, 3, 99, 105, 116, 18512, 18537, 18542, 4, 2, 111, 114, 18518, 18532, 114, 110, 4, 2, 59, 101, 18526, 18528, 1, 8989, 114, 59, 1, 8989, 111, 112, 59, 1, 8974, 110, 103, 59, 1, 367, 114, 105, 59, 1, 9721, 99, 114, 59, 3, 55349, 56522, 4, 3, 100, 105, 114, 18561, 18566, 18572, 111, 116, 59, 1, 8944, 108, 100, 101, 59, 1, 361, 105, 4, 2, 59, 102, 18579, 18581, 1, 9653, 59, 1, 9652, 4, 2, 97, 109, 18590, 18595, 114, 114, 59, 1, 8648, 108, 5, 252, 1, 59, 18601, 1, 252, 97, 110, 103, 108, 101, 59, 1, 10663, 4, 15, 65, 66, 68, 97, 99, 100, 101, 102, 108, 110, 111, 112, 114, 115, 122, 18643, 18648, 18661, 18667, 18847, 18851, 18857, 18904, 18909, 18915, 18931, 18937, 18943, 18949, 18996, 114, 114, 59, 1, 8661, 97, 114, 4, 2, 59, 118, 18656, 18658, 1, 10984, 59, 1, 10985, 97, 115, 104, 59, 1, 8872, 4, 2, 110, 114, 18673, 18679, 103, 114, 116, 59, 1, 10652, 4, 7, 101, 107, 110, 112, 114, 115, 116, 18695, 18704, 18711, 18720, 18742, 18754, 18810, 112, 115, 105, 108, 111, 110, 59, 1, 1013, 97, 112, 112, 97, 59, 1, 1008, 111, 116, 104, 105, 110, 103, 59, 1, 8709, 4, 3, 104, 105, 114, 18728, 18732, 18735, 105, 59, 1, 981, 59, 1, 982, 111, 112, 116, 111, 59, 1, 8733, 4, 2, 59, 104, 18748, 18750, 1, 8597, 111, 59, 1, 1009, 4, 2, 105, 117, 18760, 18766, 103, 109, 97, 59, 1, 962, 4, 2, 98, 112, 18772, 18791, 115, 101, 116, 110, 101, 113, 4, 2, 59, 113, 18784, 18787, 3, 8842, 65024, 59, 3, 10955, 65024, 115, 101, 116, 110, 101, 113, 4, 2, 59, 113, 18803, 18806, 3, 8843, 65024, 59, 3, 10956, 65024, 4, 2, 104, 114, 18816, 18822, 101, 116, 97, 59, 1, 977, 105, 97, 110, 103, 108, 101, 4, 2, 108, 114, 18834, 18840, 101, 102, 116, 59, 1, 8882, 105, 103, 104, 116, 59, 1, 8883, 121, 59, 1, 1074, 97, 115, 104, 59, 1, 8866, 4, 3, 101, 108, 114, 18865, 18884, 18890, 4, 3, 59, 98, 101, 18873, 18875, 18880, 1, 8744, 97, 114, 59, 1, 8891, 113, 59, 1, 8794, 108, 105, 112, 59, 1, 8942, 4, 2, 98, 116, 18896, 18901, 97, 114, 59, 1, 124, 59, 1, 124, 114, 59, 3, 55349, 56627, 116, 114, 105, 59, 1, 8882, 115, 117, 4, 2, 98, 112, 18923, 18927, 59, 3, 8834, 8402, 59, 3, 8835, 8402, 112, 102, 59, 3, 55349, 56679, 114, 111, 112, 59, 1, 8733, 116, 114, 105, 59, 1, 8883, 4, 2, 99, 117, 18955, 18960, 114, 59, 3, 55349, 56523, 4, 2, 98, 112, 18966, 18981, 110, 4, 2, 69, 101, 18973, 18977, 59, 3, 10955, 65024, 59, 3, 8842, 65024, 110, 4, 2, 69, 101, 18988, 18992, 59, 3, 10956, 65024, 59, 3, 8843, 65024, 105, 103, 122, 97, 103, 59, 1, 10650, 4, 7, 99, 101, 102, 111, 112, 114, 115, 19020, 19026, 19061, 19066, 19072, 19075, 19089, 105, 114, 99, 59, 1, 373, 4, 2, 100, 105, 19032, 19055, 4, 2, 98, 103, 19038, 19043, 97, 114, 59, 1, 10847, 101, 4, 2, 59, 113, 19050, 19052, 1, 8743, 59, 1, 8793, 101, 114, 112, 59, 1, 8472, 114, 59, 3, 55349, 56628, 112, 102, 59, 3, 55349, 56680, 59, 1, 8472, 4, 2, 59, 101, 19081, 19083, 1, 8768, 97, 116, 104, 59, 1, 8768, 99, 114, 59, 3, 55349, 56524, 4, 14, 99, 100, 102, 104, 105, 108, 109, 110, 111, 114, 115, 117, 118, 119, 19125, 19146, 19152, 19157, 19173, 19176, 19192, 19197, 19202, 19236, 19252, 19269, 19286, 19291, 4, 3, 97, 105, 117, 19133, 19137, 19142, 112, 59, 1, 8898, 114, 99, 59, 1, 9711, 112, 59, 1, 8899, 116, 114, 105, 59, 1, 9661, 114, 59, 3, 55349, 56629, 4, 2, 65, 97, 19163, 19168, 114, 114, 59, 1, 10234, 114, 114, 59, 1, 10231, 59, 1, 958, 4, 2, 65, 97, 19182, 19187, 114, 114, 59, 1, 10232, 114, 114, 59, 1, 10229, 97, 112, 59, 1, 10236, 105, 115, 59, 1, 8955, 4, 3, 100, 112, 116, 19210, 19215, 19230, 111, 116, 59, 1, 10752, 4, 2, 102, 108, 19221, 19225, 59, 3, 55349, 56681, 117, 115, 59, 1, 10753, 105, 109, 101, 59, 1, 10754, 4, 2, 65, 97, 19242, 19247, 114, 114, 59, 1, 10233, 114, 114, 59, 1, 10230, 4, 2, 99, 113, 19258, 19263, 114, 59, 3, 55349, 56525, 99, 117, 112, 59, 1, 10758, 4, 2, 112, 116, 19275, 19281, 108, 117, 115, 59, 1, 10756, 114, 105, 59, 1, 9651, 101, 101, 59, 1, 8897, 101, 100, 103, 101, 59, 1, 8896, 4, 8, 97, 99, 101, 102, 105, 111, 115, 117, 19316, 19335, 19349, 19357, 19362, 19367, 19373, 19379, 99, 4, 2, 117, 121, 19323, 19332, 116, 101, 5, 253, 1, 59, 19330, 1, 253, 59, 1, 1103, 4, 2, 105, 121, 19341, 19346, 114, 99, 59, 1, 375, 59, 1, 1099, 110, 5, 165, 1, 59, 19355, 1, 165, 114, 59, 3, 55349, 56630, 99, 121, 59, 1, 1111, 112, 102, 59, 3, 55349, 56682, 99, 114, 59, 3, 55349, 56526, 4, 2, 99, 109, 19385, 19389, 121, 59, 1, 1102, 108, 5, 255, 1, 59, 19395, 1, 255, 4, 10, 97, 99, 100, 101, 102, 104, 105, 111, 115, 119, 19419, 19426, 19441, 19446, 19462, 19467, 19472, 19480, 19486, 19492, 99, 117, 116, 101, 59, 1, 378, 4, 2, 97, 121, 19432, 19438, 114, 111, 110, 59, 1, 382, 59, 1, 1079, 111, 116, 59, 1, 380, 4, 2, 101, 116, 19452, 19458, 116, 114, 102, 59, 1, 8488, 97, 59, 1, 950, 114, 59, 3, 55349, 56631, 99, 121, 59, 1, 1078, 103, 114, 97, 114, 114, 59, 1, 8669, 112, 102, 59, 3, 55349, 56683, 99, 114, 59, 3, 55349, 56527, 4, 2, 106, 110, 19498, 19501, 59, 1, 8205, 106, 59, 1, 8204]);

/***/ }),

/***/ 147:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var _classCallCheck = (__webpack_require__(4575)["default"]);

var _createClass = (__webpack_require__(3913)["default"]);

var unicode = __webpack_require__(4529);

var ERR = __webpack_require__(4551); //Aliases


var $ = unicode.CODE_POINTS; //Const

var DEFAULT_BUFFER_WATERLINE = 1 << 16; //Preprocessor
//NOTE: HTML input preprocessing
//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)

var Preprocessor = /*#__PURE__*/function () {
  function Preprocessor() {
    _classCallCheck(this, Preprocessor);

    this.html = null;
    this.pos = -1;
    this.lastGapPos = -1;
    this.lastCharPos = -1;
    this.gapStack = [];
    this.skipNextNewLine = false;
    this.lastChunkWritten = false;
    this.endOfChunkHit = false;
    this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;
  }

  _createClass(Preprocessor, [{
    key: "_err",
    value: function _err() {// NOTE: err reporting is noop by default. Enabled by mixin.
    }
  }, {
    key: "_addGap",
    value: function _addGap() {
      this.gapStack.push(this.lastGapPos);
      this.lastGapPos = this.pos;
    }
  }, {
    key: "_processSurrogate",
    value: function _processSurrogate(cp) {
      //NOTE: try to peek a surrogate pair
      if (this.pos !== this.lastCharPos) {
        var nextCp = this.html.charCodeAt(this.pos + 1);

        if (unicode.isSurrogatePair(nextCp)) {
          //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.
          this.pos++; //NOTE: add gap that should be avoided during retreat

          this._addGap();

          return unicode.getSurrogatePairCodePoint(cp, nextCp);
        }
      } //NOTE: we are at the end of a chunk, therefore we can't infer surrogate pair yet.
      else if (!this.lastChunkWritten) {
        this.endOfChunkHit = true;
        return $.EOF;
      } //NOTE: isolated surrogate


      this._err(ERR.surrogateInInputStream);

      return cp;
    }
  }, {
    key: "dropParsedChunk",
    value: function dropParsedChunk() {
      if (this.pos > this.bufferWaterline) {
        this.lastCharPos -= this.pos;
        this.html = this.html.substring(this.pos);
        this.pos = 0;
        this.lastGapPos = -1;
        this.gapStack = [];
      }
    }
  }, {
    key: "write",
    value: function write(chunk, isLastChunk) {
      if (this.html) {
        this.html += chunk;
      } else {
        this.html = chunk;
      }

      this.lastCharPos = this.html.length - 1;
      this.endOfChunkHit = false;
      this.lastChunkWritten = isLastChunk;
    }
  }, {
    key: "insertHtmlAtCurrentPos",
    value: function insertHtmlAtCurrentPos(chunk) {
      this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1, this.html.length);
      this.lastCharPos = this.html.length - 1;
      this.endOfChunkHit = false;
    }
  }, {
    key: "advance",
    value: function advance() {
      this.pos++;

      if (this.pos > this.lastCharPos) {
        this.endOfChunkHit = !this.lastChunkWritten;
        return $.EOF;
      }

      var cp = this.html.charCodeAt(this.pos); //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character
      //must be ignored.

      if (this.skipNextNewLine && cp === $.LINE_FEED) {
        this.skipNextNewLine = false;

        this._addGap();

        return this.advance();
      } //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters


      if (cp === $.CARRIAGE_RETURN) {
        this.skipNextNewLine = true;
        return $.LINE_FEED;
      }

      this.skipNextNewLine = false;

      if (unicode.isSurrogate(cp)) {
        cp = this._processSurrogate(cp);
      } //OPTIMIZATION: first check if code point is in the common allowed
      //range (ASCII alphanumeric, whitespaces, big chunk of BMP)
      //before going into detailed performance cost validation.


      var isCommonValidRange = cp > 0x1f && cp < 0x7f || cp === $.LINE_FEED || cp === $.CARRIAGE_RETURN || cp > 0x9f && cp < 0xfdd0;

      if (!isCommonValidRange) {
        this._checkForProblematicCharacters(cp);
      }

      return cp;
    }
  }, {
    key: "_checkForProblematicCharacters",
    value: function _checkForProblematicCharacters(cp) {
      if (unicode.isControlCodePoint(cp)) {
        this._err(ERR.controlCharacterInInputStream);
      } else if (unicode.isUndefinedCodePoint(cp)) {
        this._err(ERR.noncharacterInInputStream);
      }
    }
  }, {
    key: "retreat",
    value: function retreat() {
      if (this.pos === this.lastGapPos) {
        this.lastGapPos = this.gapStack.pop();
        this.pos--;
      }

      this.pos--;
    }
  }]);

  return Preprocessor;
}();

module.exports = Preprocessor;

/***/ }),

/***/ 3860:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _require = __webpack_require__(9539),
    DOCUMENT_MODE = _require.DOCUMENT_MODE; //Node construction


exports.createDocument = function () {
  return {
    nodeName: '#document',
    mode: DOCUMENT_MODE.NO_QUIRKS,
    childNodes: []
  };
};

exports.createDocumentFragment = function () {
  return {
    nodeName: '#document-fragment',
    childNodes: []
  };
};

exports.createElement = function (tagName, namespaceURI, attrs) {
  return {
    nodeName: tagName,
    tagName: tagName,
    attrs: attrs,
    namespaceURI: namespaceURI,
    childNodes: [],
    parentNode: null
  };
};

exports.createCommentNode = function (data) {
  return {
    nodeName: '#comment',
    data: data,
    parentNode: null
  };
};

var createTextNode = function createTextNode(value) {
  return {
    nodeName: '#text',
    value: value,
    parentNode: null
  };
}; //Tree mutation


var appendChild = exports.appendChild = function (parentNode, newNode) {
  parentNode.childNodes.push(newNode);
  newNode.parentNode = parentNode;
};

var insertBefore = exports.insertBefore = function (parentNode, newNode, referenceNode) {
  var insertionIdx = parentNode.childNodes.indexOf(referenceNode);
  parentNode.childNodes.splice(insertionIdx, 0, newNode);
  newNode.parentNode = parentNode;
};

exports.setTemplateContent = function (templateElement, contentElement) {
  templateElement.content = contentElement;
};

exports.getTemplateContent = function (templateElement) {
  return templateElement.content;
};

exports.setDocumentType = function (document, name, publicId, systemId) {
  var doctypeNode = null;

  for (var i = 0; i < document.childNodes.length; i++) {
    if (document.childNodes[i].nodeName === '#documentType') {
      doctypeNode = document.childNodes[i];
      break;
    }
  }

  if (doctypeNode) {
    doctypeNode.name = name;
    doctypeNode.publicId = publicId;
    doctypeNode.systemId = systemId;
  } else {
    appendChild(document, {
      nodeName: '#documentType',
      name: name,
      publicId: publicId,
      systemId: systemId
    });
  }
};

exports.setDocumentMode = function (document, mode) {
  document.mode = mode;
};

exports.getDocumentMode = function (document) {
  return document.mode;
};

exports.detachNode = function (node) {
  if (node.parentNode) {
    var idx = node.parentNode.childNodes.indexOf(node);
    node.parentNode.childNodes.splice(idx, 1);
    node.parentNode = null;
  }
};

exports.insertText = function (parentNode, text) {
  if (parentNode.childNodes.length) {
    var prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];

    if (prevNode.nodeName === '#text') {
      prevNode.value += text;
      return;
    }
  }

  appendChild(parentNode, createTextNode(text));
};

exports.insertTextBefore = function (parentNode, text, referenceNode) {
  var prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];

  if (prevNode && prevNode.nodeName === '#text') {
    prevNode.value += text;
  } else {
    insertBefore(parentNode, createTextNode(text), referenceNode);
  }
};

exports.adoptAttributes = function (recipient, attrs) {
  var recipientAttrsMap = [];

  for (var i = 0; i < recipient.attrs.length; i++) {
    recipientAttrsMap.push(recipient.attrs[i].name);
  }

  for (var j = 0; j < attrs.length; j++) {
    if (recipientAttrsMap.indexOf(attrs[j].name) === -1) {
      recipient.attrs.push(attrs[j]);
    }
  }
}; //Tree traversing


exports.getFirstChild = function (node) {
  return node.childNodes[0];
};

exports.getChildNodes = function (node) {
  return node.childNodes;
};

exports.getParentNode = function (node) {
  return node.parentNode;
};

exports.getAttrList = function (element) {
  return element.attrs;
}; //Node data


exports.getTagName = function (element) {
  return element.tagName;
};

exports.getNamespaceURI = function (element) {
  return element.namespaceURI;
};

exports.getTextNodeContent = function (textNode) {
  return textNode.value;
};

exports.getCommentNodeContent = function (commentNode) {
  return commentNode.data;
};

exports.getDocumentTypeNodeName = function (doctypeNode) {
  return doctypeNode.name;
};

exports.getDocumentTypeNodePublicId = function (doctypeNode) {
  return doctypeNode.publicId;
};

exports.getDocumentTypeNodeSystemId = function (doctypeNode) {
  return doctypeNode.systemId;
}; //Node types


exports.isTextNode = function (node) {
  return node.nodeName === '#text';
};

exports.isCommentNode = function (node) {
  return node.nodeName === '#comment';
};

exports.isDocumentTypeNode = function (node) {
  return node.nodeName === '#documentType';
};

exports.isElementNode = function (node) {
  return !!node.tagName;
}; // Source code location


exports.setNodeSourceCodeLocation = function (node, location) {
  node.sourceCodeLocation = location;
};

exports.getNodeSourceCodeLocation = function (node) {
  return node.sourceCodeLocation;
};

exports.updateNodeSourceCodeLocation = function (node, endLocation) {
  node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);
};

/***/ }),

/***/ 3874:
/***/ (function(module) {

"use strict";


module.exports = function mergeOptions(defaults, options) {
  options = options || Object.create(null);
  return [defaults, options].reduce(function (merged, optObj) {
    Object.keys(optObj).forEach(function (key) {
      merged[key] = optObj[key];
    });
    return merged;
  }, Object.create(null));
};

/***/ }),

/***/ 1458:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var _classCallCheck = (__webpack_require__(4575)["default"]);

var _createClass = (__webpack_require__(3913)["default"]);

var Mixin = /*#__PURE__*/function () {
  function Mixin(host) {
    _classCallCheck(this, Mixin);

    var originalMethods = {};

    var overriddenMethods = this._getOverriddenMethods(this, originalMethods);

    for (var _i = 0, _Object$keys = Object.keys(overriddenMethods); _i < _Object$keys.length; _i++) {
      var key = _Object$keys[_i];

      if (typeof overriddenMethods[key] === 'function') {
        originalMethods[key] = host[key];
        host[key] = overriddenMethods[key];
      }
    }
  }

  _createClass(Mixin, [{
    key: "_getOverriddenMethods",
    value: function _getOverriddenMethods() {
      throw new Error('Not implemented');
    }
  }]);

  return Mixin;
}();

Mixin.install = function (host, Ctor, opts) {
  if (!host.__mixins) {
    host.__mixins = [];
  }

  for (var i = 0; i < host.__mixins.length; i++) {
    if (host.__mixins[i].constructor === Ctor) {
      return host.__mixins[i];
    }
  }

  var mixin = new Ctor(host, opts);

  host.__mixins.push(mixin);

  return mixin;
};

module.exports = Mixin;

/***/ }),

/***/ 888:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var ReactPropTypesSecret = __webpack_require__(9047);

function emptyFunction() {}

function emptyFunctionWithReset() {}

emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }

    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
    err.name = 'Invariant Violation';
    throw err;
  }

  ;
  shim.isRequired = shim;

  function getShim() {
    return shim;
  }

  ; // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.

  var ReactPropTypes = {
    array: shim,
    bigint: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,
    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};

/***/ }),

/***/ 2007:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
if (false) { var throwOnDirectAccess, ReactIs; } else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(888)();
}

/***/ }),

/***/ 9047:
/***/ (function(module) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
module.exports = ReactPropTypesSecret;

/***/ }),

/***/ 5223:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var react_1 = __importDefault(__webpack_require__(2791));

__webpack_require__(5754);

var Chevron = function Chevron(props) {
  var direction = props.direction || 'right';
  var viewBox = direction === 'up' || direction === 'down' ? '0 0 120.5 66.8 ' : '0 0 66.8 120.5';
  var chevronPath = {
    up: 'M118.58,64.88h0a6.55,6.55,0,0,1-9.27,0L60.25,15.82,11.19,64.88a6.55,6.55,0,0,1-9.27,0h0a6.54,6.54,0,0,1,0-9.26l53.7-53.7a6.55,6.55,0,0,1,9.27,0l53.69,53.7A6.54,6.54,0,0,1,118.58,64.88Z',
    right: 'M1.92,118.58h0a6.55,6.55,0,0,1,0-9.27L51,60.25,1.92,11.19a6.55,6.55,0,0,1,0-9.27h0a6.55,6.55,0,0,1,9.27,0l53.69,53.7a6.55,6.55,0,0,1,0,9.27L11.19,118.58A6.55,6.55,0,0,1,1.92,118.58Z',
    down: 'M1.92,1.92h0a6.55,6.55,0,0,1,9.27,0L60.25,51,109.31,1.92a6.55,6.55,0,0,1,9.27,0h0a6.55,6.55,0,0,1,0,9.27L64.89,64.88a6.55,6.55,0,0,1-9.27,0L1.92,11.19A6.55,6.55,0,0,1,1.92,1.92Z',
    left: 'M64.88,1.92h0a6.55,6.55,0,0,1,0,9.27L15.82,60.25l49.06,49.06a6.55,6.55,0,0,1,0,9.27h0a6.54,6.54,0,0,1-9.26,0L1.92,64.89a6.55,6.55,0,0,1,0-9.27l53.7-53.7A6.54,6.54,0,0,1,64.88,1.92Z'
  };
  return react_1.default.createElement("span", {
    className: "chevron-wrapper ".concat(props.className || '')
  }, react_1.default.createElement("svg", {
    className: "chevron-".concat(direction, " ").concat(props.reversed ? 'reversed' : ''),
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: viewBox
  }, react_1.default.createElement("g", null, react_1.default.createElement("g", null, react_1.default.createElement("path", {
    d: chevronPath[direction]
  })))));
};

exports["default"] = Chevron;

/***/ }),

/***/ 4463:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
/** @license React v17.0.2
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/


var aa = __webpack_require__(2791),
    m = __webpack_require__(1725),
    r = __webpack_require__(5296);

function y(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) {
    b += "&args[]=" + encodeURIComponent(arguments[c]);
  }

  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}

if (!aa) throw Error(y(227));
var ba = new Set(),
    ca = {};

function da(a, b) {
  ea(a, b);
  ea(a + "Capture", b);
}

function ea(a, b) {
  ca[a] = b;

  for (a = 0; a < b.length; a++) {
    ba.add(b[a]);
  }
}

var fa = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement),
    ha = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
    ia = Object.prototype.hasOwnProperty,
    ja = {},
    ka = {};

function la(a) {
  if (ia.call(ka, a)) return !0;
  if (ia.call(ja, a)) return !1;
  if (ha.test(a)) return ka[a] = !0;
  ja[a] = !0;
  return !1;
}

function ma(a, b, c, d) {
  if (null !== c && 0 === c.type) return !1;

  switch (typeof b) {
    case "function":
    case "symbol":
      return !0;

    case "boolean":
      if (d) return !1;
      if (null !== c) return !c.acceptsBooleans;
      a = a.toLowerCase().slice(0, 5);
      return "data-" !== a && "aria-" !== a;

    default:
      return !1;
  }
}

function na(a, b, c, d) {
  if (null === b || "undefined" === typeof b || ma(a, b, c, d)) return !0;
  if (d) return !1;
  if (null !== c) switch (c.type) {
    case 3:
      return !b;

    case 4:
      return !1 === b;

    case 5:
      return isNaN(b);

    case 6:
      return isNaN(b) || 1 > b;
  }
  return !1;
}

function B(a, b, c, d, e, f, g) {
  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
  this.attributeName = d;
  this.attributeNamespace = e;
  this.mustUseProperty = c;
  this.propertyName = a;
  this.type = b;
  this.sanitizeURL = f;
  this.removeEmptyString = g;
}

var D = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function (a) {
  D[a] = new B(a, 0, !1, a, null, !1, !1);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function (a) {
  var b = a[0];
  D[b] = new B(b, 1, !1, a[1], null, !1, !1);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (a) {
  D[a] = new B(a, 2, !1, a.toLowerCase(), null, !1, !1);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function (a) {
  D[a] = new B(a, 2, !1, a, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function (a) {
  D[a] = new B(a, 3, !1, a.toLowerCase(), null, !1, !1);
});
["checked", "multiple", "muted", "selected"].forEach(function (a) {
  D[a] = new B(a, 3, !0, a, null, !1, !1);
});
["capture", "download"].forEach(function (a) {
  D[a] = new B(a, 4, !1, a, null, !1, !1);
});
["cols", "rows", "size", "span"].forEach(function (a) {
  D[a] = new B(a, 6, !1, a, null, !1, !1);
});
["rowSpan", "start"].forEach(function (a) {
  D[a] = new B(a, 5, !1, a.toLowerCase(), null, !1, !1);
});
var oa = /[\-:]([a-z])/g;

function pa(a) {
  return a[1].toUpperCase();
}

"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function (a) {
  var b = a.replace(oa, pa);
  D[b] = new B(b, 1, !1, a, null, !1, !1);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function (a) {
  var b = a.replace(oa, pa);
  D[b] = new B(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
});
["xml:base", "xml:lang", "xml:space"].forEach(function (a) {
  var b = a.replace(oa, pa);
  D[b] = new B(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
["tabIndex", "crossOrigin"].forEach(function (a) {
  D[a] = new B(a, 1, !1, a.toLowerCase(), null, !1, !1);
});
D.xlinkHref = new B("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
["src", "href", "action", "formAction"].forEach(function (a) {
  D[a] = new B(a, 1, !1, a.toLowerCase(), null, !0, !0);
});

function qa(a, b, c, d) {
  var e = D.hasOwnProperty(b) ? D[b] : null;
  var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1] ? !1 : !0;
  f || (na(b, c, e, d) && (c = null), d || null === e ? la(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));
}

var ra = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    sa = 60103,
    ta = 60106,
    ua = 60107,
    wa = 60108,
    xa = 60114,
    ya = 60109,
    za = 60110,
    Aa = 60112,
    Ba = 60113,
    Ca = 60120,
    Da = 60115,
    Ea = 60116,
    Fa = 60121,
    Ga = 60128,
    Ha = 60129,
    Ia = 60130,
    Ja = 60131;

if ("function" === typeof Symbol && Symbol.for) {
  var E = Symbol.for;
  sa = E("react.element");
  ta = E("react.portal");
  ua = E("react.fragment");
  wa = E("react.strict_mode");
  xa = E("react.profiler");
  ya = E("react.provider");
  za = E("react.context");
  Aa = E("react.forward_ref");
  Ba = E("react.suspense");
  Ca = E("react.suspense_list");
  Da = E("react.memo");
  Ea = E("react.lazy");
  Fa = E("react.block");
  E("react.scope");
  Ga = E("react.opaque.id");
  Ha = E("react.debug_trace_mode");
  Ia = E("react.offscreen");
  Ja = E("react.legacy_hidden");
}

var Ka = "function" === typeof Symbol && Symbol.iterator;

function La(a) {
  if (null === a || "object" !== typeof a) return null;
  a = Ka && a[Ka] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}

var Ma;

function Na(a) {
  if (void 0 === Ma) try {
    throw Error();
  } catch (c) {
    var b = c.stack.trim().match(/\n( *(at )?)/);
    Ma = b && b[1] || "";
  }
  return "\n" + Ma + a;
}

var Oa = !1;

function Pa(a, b) {
  if (!a || Oa) return "";
  Oa = !0;
  var c = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;

  try {
    if (b) {
      if (b = function b() {
        throw Error();
      }, Object.defineProperty(b.prototype, "props", {
        set: function set() {
          throw Error();
        }
      }), "object" === typeof Reflect && Reflect.construct) {
        try {
          Reflect.construct(b, []);
        } catch (k) {
          var d = k;
        }

        Reflect.construct(a, [], b);
      } else {
        try {
          b.call();
        } catch (k) {
          d = k;
        }

        a.call(b.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (k) {
        d = k;
      }

      a();
    }
  } catch (k) {
    if (k && d && "string" === typeof k.stack) {
      for (var e = k.stack.split("\n"), f = d.stack.split("\n"), g = e.length - 1, h = f.length - 1; 1 <= g && 0 <= h && e[g] !== f[h];) {
        h--;
      }

      for (; 1 <= g && 0 <= h; g--, h--) {
        if (e[g] !== f[h]) {
          if (1 !== g || 1 !== h) {
            do {
              if (g--, h--, 0 > h || e[g] !== f[h]) return "\n" + e[g].replace(" at new ", " at ");
            } while (1 <= g && 0 <= h);
          }

          break;
        }
      }
    }
  } finally {
    Oa = !1, Error.prepareStackTrace = c;
  }

  return (a = a ? a.displayName || a.name : "") ? Na(a) : "";
}

function Qa(a) {
  switch (a.tag) {
    case 5:
      return Na(a.type);

    case 16:
      return Na("Lazy");

    case 13:
      return Na("Suspense");

    case 19:
      return Na("SuspenseList");

    case 0:
    case 2:
    case 15:
      return a = Pa(a.type, !1), a;

    case 11:
      return a = Pa(a.type.render, !1), a;

    case 22:
      return a = Pa(a.type._render, !1), a;

    case 1:
      return a = Pa(a.type, !0), a;

    default:
      return "";
  }
}

function Ra(a) {
  if (null == a) return null;
  if ("function" === typeof a) return a.displayName || a.name || null;
  if ("string" === typeof a) return a;

  switch (a) {
    case ua:
      return "Fragment";

    case ta:
      return "Portal";

    case xa:
      return "Profiler";

    case wa:
      return "StrictMode";

    case Ba:
      return "Suspense";

    case Ca:
      return "SuspenseList";
  }

  if ("object" === typeof a) switch (a.$$typeof) {
    case za:
      return (a.displayName || "Context") + ".Consumer";

    case ya:
      return (a._context.displayName || "Context") + ".Provider";

    case Aa:
      var b = a.render;
      b = b.displayName || b.name || "";
      return a.displayName || ("" !== b ? "ForwardRef(" + b + ")" : "ForwardRef");

    case Da:
      return Ra(a.type);

    case Fa:
      return Ra(a._render);

    case Ea:
      b = a._payload;
      a = a._init;

      try {
        return Ra(a(b));
      } catch (c) {}

  }
  return null;
}

function Sa(a) {
  switch (typeof a) {
    case "boolean":
    case "number":
    case "object":
    case "string":
    case "undefined":
      return a;

    default:
      return "";
  }
}

function Ta(a) {
  var b = a.type;
  return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
}

function Ua(a) {
  var b = Ta(a) ? "checked" : "value",
      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
      d = "" + a[b];

  if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {
    var e = c.get,
        f = c.set;
    Object.defineProperty(a, b, {
      configurable: !0,
      get: function get() {
        return e.call(this);
      },
      set: function set(a) {
        d = "" + a;
        f.call(this, a);
      }
    });
    Object.defineProperty(a, b, {
      enumerable: c.enumerable
    });
    return {
      getValue: function getValue() {
        return d;
      },
      setValue: function setValue(a) {
        d = "" + a;
      },
      stopTracking: function stopTracking() {
        a._valueTracker = null;
        delete a[b];
      }
    };
  }
}

function Va(a) {
  a._valueTracker || (a._valueTracker = Ua(a));
}

function Wa(a) {
  if (!a) return !1;
  var b = a._valueTracker;
  if (!b) return !0;
  var c = b.getValue();
  var d = "";
  a && (d = Ta(a) ? a.checked ? "true" : "false" : a.value);
  a = d;
  return a !== c ? (b.setValue(a), !0) : !1;
}

function Xa(a) {
  a = a || ("undefined" !== typeof document ? document : void 0);
  if ("undefined" === typeof a) return null;

  try {
    return a.activeElement || a.body;
  } catch (b) {
    return a.body;
  }
}

function Ya(a, b) {
  var c = b.checked;
  return m({}, b, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: null != c ? c : a._wrapperState.initialChecked
  });
}

function Za(a, b) {
  var c = null == b.defaultValue ? "" : b.defaultValue,
      d = null != b.checked ? b.checked : b.defaultChecked;
  c = Sa(null != b.value ? b.value : c);
  a._wrapperState = {
    initialChecked: d,
    initialValue: c,
    controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value
  };
}

function $a(a, b) {
  b = b.checked;
  null != b && qa(a, "checked", b, !1);
}

function ab(a, b) {
  $a(a, b);
  var c = Sa(b.value),
      d = b.type;
  if (null != c) {
    if ("number" === d) {
      if (0 === c && "" === a.value || a.value != c) a.value = "" + c;
    } else a.value !== "" + c && (a.value = "" + c);
  } else if ("submit" === d || "reset" === d) {
    a.removeAttribute("value");
    return;
  }
  b.hasOwnProperty("value") ? bb(a, b.type, c) : b.hasOwnProperty("defaultValue") && bb(a, b.type, Sa(b.defaultValue));
  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
}

function cb(a, b, c) {
  if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
    var d = b.type;
    if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value)) return;
    b = "" + a._wrapperState.initialValue;
    c || b === a.value || (a.value = b);
    a.defaultValue = b;
  }

  c = a.name;
  "" !== c && (a.name = "");
  a.defaultChecked = !!a._wrapperState.initialChecked;
  "" !== c && (a.name = c);
}

function bb(a, b, c) {
  if ("number" !== b || Xa(a.ownerDocument) !== a) null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c);
}

function db(a) {
  var b = "";
  aa.Children.forEach(a, function (a) {
    null != a && (b += a);
  });
  return b;
}

function eb(a, b) {
  a = m({
    children: void 0
  }, b);
  if (b = db(b.children)) a.children = b;
  return a;
}

function fb(a, b, c, d) {
  a = a.options;

  if (b) {
    b = {};

    for (var e = 0; e < c.length; e++) {
      b["$" + c[e]] = !0;
    }

    for (c = 0; c < a.length; c++) {
      e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);
    }
  } else {
    c = "" + Sa(c);
    b = null;

    for (e = 0; e < a.length; e++) {
      if (a[e].value === c) {
        a[e].selected = !0;
        d && (a[e].defaultSelected = !0);
        return;
      }

      null !== b || a[e].disabled || (b = a[e]);
    }

    null !== b && (b.selected = !0);
  }
}

function gb(a, b) {
  if (null != b.dangerouslySetInnerHTML) throw Error(y(91));
  return m({}, b, {
    value: void 0,
    defaultValue: void 0,
    children: "" + a._wrapperState.initialValue
  });
}

function hb(a, b) {
  var c = b.value;

  if (null == c) {
    c = b.children;
    b = b.defaultValue;

    if (null != c) {
      if (null != b) throw Error(y(92));

      if (Array.isArray(c)) {
        if (!(1 >= c.length)) throw Error(y(93));
        c = c[0];
      }

      b = c;
    }

    null == b && (b = "");
    c = b;
  }

  a._wrapperState = {
    initialValue: Sa(c)
  };
}

function ib(a, b) {
  var c = Sa(b.value),
      d = Sa(b.defaultValue);
  null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));
  null != d && (a.defaultValue = "" + d);
}

function jb(a) {
  var b = a.textContent;
  b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b);
}

var kb = {
  html: "http://www.w3.org/1999/xhtml",
  mathml: "http://www.w3.org/1998/Math/MathML",
  svg: "http://www.w3.org/2000/svg"
};

function lb(a) {
  switch (a) {
    case "svg":
      return "http://www.w3.org/2000/svg";

    case "math":
      return "http://www.w3.org/1998/Math/MathML";

    default:
      return "http://www.w3.org/1999/xhtml";
  }
}

function mb(a, b) {
  return null == a || "http://www.w3.org/1999/xhtml" === a ? lb(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
}

var nb,
    ob = function (a) {
  return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {
    MSApp.execUnsafeLocalFunction(function () {
      return a(b, c, d, e);
    });
  } : a;
}(function (a, b) {
  if (a.namespaceURI !== kb.svg || "innerHTML" in a) a.innerHTML = b;else {
    nb = nb || document.createElement("div");
    nb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";

    for (b = nb.firstChild; a.firstChild;) {
      a.removeChild(a.firstChild);
    }

    for (; b.firstChild;) {
      a.appendChild(b.firstChild);
    }
  }
});

function pb(a, b) {
  if (b) {
    var c = a.firstChild;

    if (c && c === a.lastChild && 3 === c.nodeType) {
      c.nodeValue = b;
      return;
    }
  }

  a.textContent = b;
}

var qb = {
  animationIterationCount: !0,
  borderImageOutset: !0,
  borderImageSlice: !0,
  borderImageWidth: !0,
  boxFlex: !0,
  boxFlexGroup: !0,
  boxOrdinalGroup: !0,
  columnCount: !0,
  columns: !0,
  flex: !0,
  flexGrow: !0,
  flexPositive: !0,
  flexShrink: !0,
  flexNegative: !0,
  flexOrder: !0,
  gridArea: !0,
  gridRow: !0,
  gridRowEnd: !0,
  gridRowSpan: !0,
  gridRowStart: !0,
  gridColumn: !0,
  gridColumnEnd: !0,
  gridColumnSpan: !0,
  gridColumnStart: !0,
  fontWeight: !0,
  lineClamp: !0,
  lineHeight: !0,
  opacity: !0,
  order: !0,
  orphans: !0,
  tabSize: !0,
  widows: !0,
  zIndex: !0,
  zoom: !0,
  fillOpacity: !0,
  floodOpacity: !0,
  stopOpacity: !0,
  strokeDasharray: !0,
  strokeDashoffset: !0,
  strokeMiterlimit: !0,
  strokeOpacity: !0,
  strokeWidth: !0
},
    rb = ["Webkit", "ms", "Moz", "O"];
Object.keys(qb).forEach(function (a) {
  rb.forEach(function (b) {
    b = b + a.charAt(0).toUpperCase() + a.substring(1);
    qb[b] = qb[a];
  });
});

function sb(a, b, c) {
  return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || qb.hasOwnProperty(a) && qb[a] ? ("" + b).trim() : b + "px";
}

function tb(a, b) {
  a = a.style;

  for (var c in b) {
    if (b.hasOwnProperty(c)) {
      var d = 0 === c.indexOf("--"),
          e = sb(c, b[c], d);
      "float" === c && (c = "cssFloat");
      d ? a.setProperty(c, e) : a[c] = e;
    }
  }
}

var ub = m({
  menuitem: !0
}, {
  area: !0,
  base: !0,
  br: !0,
  col: !0,
  embed: !0,
  hr: !0,
  img: !0,
  input: !0,
  keygen: !0,
  link: !0,
  meta: !0,
  param: !0,
  source: !0,
  track: !0,
  wbr: !0
});

function vb(a, b) {
  if (b) {
    if (ub[a] && (null != b.children || null != b.dangerouslySetInnerHTML)) throw Error(y(137, a));

    if (null != b.dangerouslySetInnerHTML) {
      if (null != b.children) throw Error(y(60));
      if (!("object" === typeof b.dangerouslySetInnerHTML && "__html" in b.dangerouslySetInnerHTML)) throw Error(y(61));
    }

    if (null != b.style && "object" !== typeof b.style) throw Error(y(62));
  }
}

function wb(a, b) {
  if (-1 === a.indexOf("-")) return "string" === typeof b.is;

  switch (a) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;

    default:
      return !0;
  }
}

function xb(a) {
  a = a.target || a.srcElement || window;
  a.correspondingUseElement && (a = a.correspondingUseElement);
  return 3 === a.nodeType ? a.parentNode : a;
}

var yb = null,
    zb = null,
    Ab = null;

function Bb(a) {
  if (a = Cb(a)) {
    if ("function" !== typeof yb) throw Error(y(280));
    var b = a.stateNode;
    b && (b = Db(b), yb(a.stateNode, a.type, b));
  }
}

function Eb(a) {
  zb ? Ab ? Ab.push(a) : Ab = [a] : zb = a;
}

function Fb() {
  if (zb) {
    var a = zb,
        b = Ab;
    Ab = zb = null;
    Bb(a);
    if (b) for (a = 0; a < b.length; a++) {
      Bb(b[a]);
    }
  }
}

function Gb(a, b) {
  return a(b);
}

function Hb(a, b, c, d, e) {
  return a(b, c, d, e);
}

function Ib() {}

var Jb = Gb,
    Kb = !1,
    Lb = !1;

function Mb() {
  if (null !== zb || null !== Ab) Ib(), Fb();
}

function Nb(a, b, c) {
  if (Lb) return a(b, c);
  Lb = !0;

  try {
    return Jb(a, b, c);
  } finally {
    Lb = !1, Mb();
  }
}

function Ob(a, b) {
  var c = a.stateNode;
  if (null === c) return null;
  var d = Db(c);
  if (null === d) return null;
  c = d[b];

  a: switch (b) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));
      a = !d;
      break a;

    default:
      a = !1;
  }

  if (a) return null;
  if (c && "function" !== typeof c) throw Error(y(231, b, typeof c));
  return c;
}

var Pb = !1;
if (fa) try {
  var Qb = {};
  Object.defineProperty(Qb, "passive", {
    get: function get() {
      Pb = !0;
    }
  });
  window.addEventListener("test", Qb, Qb);
  window.removeEventListener("test", Qb, Qb);
} catch (a) {
  Pb = !1;
}

function Rb(a, b, c, d, e, f, g, h, k) {
  var l = Array.prototype.slice.call(arguments, 3);

  try {
    b.apply(c, l);
  } catch (n) {
    this.onError(n);
  }
}

var Sb = !1,
    Tb = null,
    Ub = !1,
    Vb = null,
    Wb = {
  onError: function onError(a) {
    Sb = !0;
    Tb = a;
  }
};

function Xb(a, b, c, d, e, f, g, h, k) {
  Sb = !1;
  Tb = null;
  Rb.apply(Wb, arguments);
}

function Yb(a, b, c, d, e, f, g, h, k) {
  Xb.apply(this, arguments);

  if (Sb) {
    if (Sb) {
      var l = Tb;
      Sb = !1;
      Tb = null;
    } else throw Error(y(198));

    Ub || (Ub = !0, Vb = l);
  }
}

function Zb(a) {
  var b = a,
      c = a;
  if (a.alternate) for (; b.return;) {
    b = b.return;
  } else {
    a = b;

    do {
      b = a, 0 !== (b.flags & 1026) && (c = b.return), a = b.return;
    } while (a);
  }
  return 3 === b.tag ? c : null;
}

function $b(a) {
  if (13 === a.tag) {
    var b = a.memoizedState;
    null === b && (a = a.alternate, null !== a && (b = a.memoizedState));
    if (null !== b) return b.dehydrated;
  }

  return null;
}

function ac(a) {
  if (Zb(a) !== a) throw Error(y(188));
}

function bc(a) {
  var b = a.alternate;

  if (!b) {
    b = Zb(a);
    if (null === b) throw Error(y(188));
    return b !== a ? null : a;
  }

  for (var c = a, d = b;;) {
    var e = c.return;
    if (null === e) break;
    var f = e.alternate;

    if (null === f) {
      d = e.return;

      if (null !== d) {
        c = d;
        continue;
      }

      break;
    }

    if (e.child === f.child) {
      for (f = e.child; f;) {
        if (f === c) return ac(e), a;
        if (f === d) return ac(e), b;
        f = f.sibling;
      }

      throw Error(y(188));
    }

    if (c.return !== d.return) c = e, d = f;else {
      for (var g = !1, h = e.child; h;) {
        if (h === c) {
          g = !0;
          c = e;
          d = f;
          break;
        }

        if (h === d) {
          g = !0;
          d = e;
          c = f;
          break;
        }

        h = h.sibling;
      }

      if (!g) {
        for (h = f.child; h;) {
          if (h === c) {
            g = !0;
            c = f;
            d = e;
            break;
          }

          if (h === d) {
            g = !0;
            d = f;
            c = e;
            break;
          }

          h = h.sibling;
        }

        if (!g) throw Error(y(189));
      }
    }
    if (c.alternate !== d) throw Error(y(190));
  }

  if (3 !== c.tag) throw Error(y(188));
  return c.stateNode.current === c ? a : b;
}

function cc(a) {
  a = bc(a);
  if (!a) return null;

  for (var b = a;;) {
    if (5 === b.tag || 6 === b.tag) return b;
    if (b.child) b.child.return = b, b = b.child;else {
      if (b === a) break;

      for (; !b.sibling;) {
        if (!b.return || b.return === a) return null;
        b = b.return;
      }

      b.sibling.return = b.return;
      b = b.sibling;
    }
  }

  return null;
}

function dc(a, b) {
  for (var c = a.alternate; null !== b;) {
    if (b === a || b === c) return !0;
    b = b.return;
  }

  return !1;
}

var ec,
    fc,
    gc,
    hc,
    ic = !1,
    jc = [],
    kc = null,
    lc = null,
    mc = null,
    nc = new Map(),
    oc = new Map(),
    pc = [],
    qc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");

function rc(a, b, c, d, e) {
  return {
    blockedOn: a,
    domEventName: b,
    eventSystemFlags: c | 16,
    nativeEvent: e,
    targetContainers: [d]
  };
}

function sc(a, b) {
  switch (a) {
    case "focusin":
    case "focusout":
      kc = null;
      break;

    case "dragenter":
    case "dragleave":
      lc = null;
      break;

    case "mouseover":
    case "mouseout":
      mc = null;
      break;

    case "pointerover":
    case "pointerout":
      nc.delete(b.pointerId);
      break;

    case "gotpointercapture":
    case "lostpointercapture":
      oc.delete(b.pointerId);
  }
}

function tc(a, b, c, d, e, f) {
  if (null === a || a.nativeEvent !== f) return a = rc(b, c, d, e, f), null !== b && (b = Cb(b), null !== b && fc(b)), a;
  a.eventSystemFlags |= d;
  b = a.targetContainers;
  null !== e && -1 === b.indexOf(e) && b.push(e);
  return a;
}

function uc(a, b, c, d, e) {
  switch (b) {
    case "focusin":
      return kc = tc(kc, a, b, c, d, e), !0;

    case "dragenter":
      return lc = tc(lc, a, b, c, d, e), !0;

    case "mouseover":
      return mc = tc(mc, a, b, c, d, e), !0;

    case "pointerover":
      var f = e.pointerId;
      nc.set(f, tc(nc.get(f) || null, a, b, c, d, e));
      return !0;

    case "gotpointercapture":
      return f = e.pointerId, oc.set(f, tc(oc.get(f) || null, a, b, c, d, e)), !0;
  }

  return !1;
}

function vc(a) {
  var b = wc(a.target);

  if (null !== b) {
    var c = Zb(b);
    if (null !== c) if (b = c.tag, 13 === b) {
      if (b = $b(c), null !== b) {
        a.blockedOn = b;
        hc(a.lanePriority, function () {
          r.unstable_runWithPriority(a.priority, function () {
            gc(c);
          });
        });
        return;
      }
    } else if (3 === b && c.stateNode.hydrate) {
      a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;
      return;
    }
  }

  a.blockedOn = null;
}

function xc(a) {
  if (null !== a.blockedOn) return !1;

  for (var b = a.targetContainers; 0 < b.length;) {
    var c = yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);
    if (null !== c) return b = Cb(c), null !== b && fc(b), a.blockedOn = c, !1;
    b.shift();
  }

  return !0;
}

function zc(a, b, c) {
  xc(a) && c.delete(b);
}

function Ac() {
  for (ic = !1; 0 < jc.length;) {
    var a = jc[0];

    if (null !== a.blockedOn) {
      a = Cb(a.blockedOn);
      null !== a && ec(a);
      break;
    }

    for (var b = a.targetContainers; 0 < b.length;) {
      var c = yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);

      if (null !== c) {
        a.blockedOn = c;
        break;
      }

      b.shift();
    }

    null === a.blockedOn && jc.shift();
  }

  null !== kc && xc(kc) && (kc = null);
  null !== lc && xc(lc) && (lc = null);
  null !== mc && xc(mc) && (mc = null);
  nc.forEach(zc);
  oc.forEach(zc);
}

function Bc(a, b) {
  a.blockedOn === b && (a.blockedOn = null, ic || (ic = !0, r.unstable_scheduleCallback(r.unstable_NormalPriority, Ac)));
}

function Cc(a) {
  function b(b) {
    return Bc(b, a);
  }

  if (0 < jc.length) {
    Bc(jc[0], a);

    for (var c = 1; c < jc.length; c++) {
      var d = jc[c];
      d.blockedOn === a && (d.blockedOn = null);
    }
  }

  null !== kc && Bc(kc, a);
  null !== lc && Bc(lc, a);
  null !== mc && Bc(mc, a);
  nc.forEach(b);
  oc.forEach(b);

  for (c = 0; c < pc.length; c++) {
    d = pc[c], d.blockedOn === a && (d.blockedOn = null);
  }

  for (; 0 < pc.length && (c = pc[0], null === c.blockedOn);) {
    vc(c), null === c.blockedOn && pc.shift();
  }
}

function Dc(a, b) {
  var c = {};
  c[a.toLowerCase()] = b.toLowerCase();
  c["Webkit" + a] = "webkit" + b;
  c["Moz" + a] = "moz" + b;
  return c;
}

var Ec = {
  animationend: Dc("Animation", "AnimationEnd"),
  animationiteration: Dc("Animation", "AnimationIteration"),
  animationstart: Dc("Animation", "AnimationStart"),
  transitionend: Dc("Transition", "TransitionEnd")
},
    Fc = {},
    Gc = {};
fa && (Gc = document.createElement("div").style, "AnimationEvent" in window || (delete Ec.animationend.animation, delete Ec.animationiteration.animation, delete Ec.animationstart.animation), "TransitionEvent" in window || delete Ec.transitionend.transition);

function Hc(a) {
  if (Fc[a]) return Fc[a];
  if (!Ec[a]) return a;
  var b = Ec[a],
      c;

  for (c in b) {
    if (b.hasOwnProperty(c) && c in Gc) return Fc[a] = b[c];
  }

  return a;
}

var Ic = Hc("animationend"),
    Jc = Hc("animationiteration"),
    Kc = Hc("animationstart"),
    Lc = Hc("transitionend"),
    Mc = new Map(),
    Nc = new Map(),
    Oc = ["abort", "abort", Ic, "animationEnd", Jc, "animationIteration", Kc, "animationStart", "canplay", "canPlay", "canplaythrough", "canPlayThrough", "durationchange", "durationChange", "emptied", "emptied", "encrypted", "encrypted", "ended", "ended", "error", "error", "gotpointercapture", "gotPointerCapture", "load", "load", "loadeddata", "loadedData", "loadedmetadata", "loadedMetadata", "loadstart", "loadStart", "lostpointercapture", "lostPointerCapture", "playing", "playing", "progress", "progress", "seeking", "seeking", "stalled", "stalled", "suspend", "suspend", "timeupdate", "timeUpdate", Lc, "transitionEnd", "waiting", "waiting"];

function Pc(a, b) {
  for (var c = 0; c < a.length; c += 2) {
    var d = a[c],
        e = a[c + 1];
    e = "on" + (e[0].toUpperCase() + e.slice(1));
    Nc.set(d, b);
    Mc.set(d, e);
    da(e, [d]);
  }
}

var Qc = r.unstable_now;
Qc();
var F = 8;

function Rc(a) {
  if (0 !== (1 & a)) return F = 15, 1;
  if (0 !== (2 & a)) return F = 14, 2;
  if (0 !== (4 & a)) return F = 13, 4;
  var b = 24 & a;
  if (0 !== b) return F = 12, b;
  if (0 !== (a & 32)) return F = 11, 32;
  b = 192 & a;
  if (0 !== b) return F = 10, b;
  if (0 !== (a & 256)) return F = 9, 256;
  b = 3584 & a;
  if (0 !== b) return F = 8, b;
  if (0 !== (a & 4096)) return F = 7, 4096;
  b = 4186112 & a;
  if (0 !== b) return F = 6, b;
  b = 62914560 & a;
  if (0 !== b) return F = 5, b;
  if (a & 67108864) return F = 4, 67108864;
  if (0 !== (a & 134217728)) return F = 3, 134217728;
  b = 805306368 & a;
  if (0 !== b) return F = 2, b;
  if (0 !== (1073741824 & a)) return F = 1, 1073741824;
  F = 8;
  return a;
}

function Sc(a) {
  switch (a) {
    case 99:
      return 15;

    case 98:
      return 10;

    case 97:
    case 96:
      return 8;

    case 95:
      return 2;

    default:
      return 0;
  }
}

function Tc(a) {
  switch (a) {
    case 15:
    case 14:
      return 99;

    case 13:
    case 12:
    case 11:
    case 10:
      return 98;

    case 9:
    case 8:
    case 7:
    case 6:
    case 4:
    case 5:
      return 97;

    case 3:
    case 2:
    case 1:
      return 95;

    case 0:
      return 90;

    default:
      throw Error(y(358, a));
  }
}

function Uc(a, b) {
  var c = a.pendingLanes;
  if (0 === c) return F = 0;
  var d = 0,
      e = 0,
      f = a.expiredLanes,
      g = a.suspendedLanes,
      h = a.pingedLanes;
  if (0 !== f) d = f, e = F = 15;else if (f = c & 134217727, 0 !== f) {
    var k = f & ~g;
    0 !== k ? (d = Rc(k), e = F) : (h &= f, 0 !== h && (d = Rc(h), e = F));
  } else f = c & ~g, 0 !== f ? (d = Rc(f), e = F) : 0 !== h && (d = Rc(h), e = F);
  if (0 === d) return 0;
  d = 31 - Vc(d);
  d = c & ((0 > d ? 0 : 1 << d) << 1) - 1;

  if (0 !== b && b !== d && 0 === (b & g)) {
    Rc(b);
    if (e <= F) return b;
    F = e;
  }

  b = a.entangledLanes;
  if (0 !== b) for (a = a.entanglements, b &= d; 0 < b;) {
    c = 31 - Vc(b), e = 1 << c, d |= a[c], b &= ~e;
  }
  return d;
}

function Wc(a) {
  a = a.pendingLanes & -1073741825;
  return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0;
}

function Xc(a, b) {
  switch (a) {
    case 15:
      return 1;

    case 14:
      return 2;

    case 12:
      return a = Yc(24 & ~b), 0 === a ? Xc(10, b) : a;

    case 10:
      return a = Yc(192 & ~b), 0 === a ? Xc(8, b) : a;

    case 8:
      return a = Yc(3584 & ~b), 0 === a && (a = Yc(4186112 & ~b), 0 === a && (a = 512)), a;

    case 2:
      return b = Yc(805306368 & ~b), 0 === b && (b = 268435456), b;
  }

  throw Error(y(358, a));
}

function Yc(a) {
  return a & -a;
}

function Zc(a) {
  for (var b = [], c = 0; 31 > c; c++) {
    b.push(a);
  }

  return b;
}

function $c(a, b, c) {
  a.pendingLanes |= b;
  var d = b - 1;
  a.suspendedLanes &= d;
  a.pingedLanes &= d;
  a = a.eventTimes;
  b = 31 - Vc(b);
  a[b] = c;
}

var Vc = Math.clz32 ? Math.clz32 : ad,
    bd = Math.log,
    cd = Math.LN2;

function ad(a) {
  return 0 === a ? 32 : 31 - (bd(a) / cd | 0) | 0;
}

var dd = r.unstable_UserBlockingPriority,
    ed = r.unstable_runWithPriority,
    fd = !0;

function gd(a, b, c, d) {
  Kb || Ib();
  var e = hd,
      f = Kb;
  Kb = !0;

  try {
    Hb(e, a, b, c, d);
  } finally {
    (Kb = f) || Mb();
  }
}

function id(a, b, c, d) {
  ed(dd, hd.bind(null, a, b, c, d));
}

function hd(a, b, c, d) {
  if (fd) {
    var e;
    if ((e = 0 === (b & 4)) && 0 < jc.length && -1 < qc.indexOf(a)) a = rc(null, a, b, c, d), jc.push(a);else {
      var f = yc(a, b, c, d);
      if (null === f) e && sc(a, d);else {
        if (e) {
          if (-1 < qc.indexOf(a)) {
            a = rc(f, a, b, c, d);
            jc.push(a);
            return;
          }

          if (uc(f, a, b, c, d)) return;
          sc(a, d);
        }

        jd(a, b, d, null, c);
      }
    }
  }
}

function yc(a, b, c, d) {
  var e = xb(d);
  e = wc(e);

  if (null !== e) {
    var f = Zb(e);
    if (null === f) e = null;else {
      var g = f.tag;

      if (13 === g) {
        e = $b(f);
        if (null !== e) return e;
        e = null;
      } else if (3 === g) {
        if (f.stateNode.hydrate) return 3 === f.tag ? f.stateNode.containerInfo : null;
        e = null;
      } else f !== e && (e = null);
    }
  }

  jd(a, b, d, e, c);
  return null;
}

var kd = null,
    ld = null,
    md = null;

function nd() {
  if (md) return md;
  var a,
      b = ld,
      c = b.length,
      d,
      e = "value" in kd ? kd.value : kd.textContent,
      f = e.length;

  for (a = 0; a < c && b[a] === e[a]; a++) {
    ;
  }

  var g = c - a;

  for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {
    ;
  }

  return md = e.slice(a, 1 < d ? 1 - d : void 0);
}

function od(a) {
  var b = a.keyCode;
  "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;
  10 === a && (a = 13);
  return 32 <= a || 13 === a ? a : 0;
}

function pd() {
  return !0;
}

function qd() {
  return !1;
}

function rd(a) {
  function b(b, d, e, f, g) {
    this._reactName = b;
    this._targetInst = e;
    this.type = d;
    this.nativeEvent = f;
    this.target = g;
    this.currentTarget = null;

    for (var c in a) {
      a.hasOwnProperty(c) && (b = a[c], this[c] = b ? b(f) : f[c]);
    }

    this.isDefaultPrevented = (null != f.defaultPrevented ? f.defaultPrevented : !1 === f.returnValue) ? pd : qd;
    this.isPropagationStopped = qd;
    return this;
  }

  m(b.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = !0;
      var a = this.nativeEvent;
      a && (a.preventDefault ? a.preventDefault() : "unknown" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = pd);
    },
    stopPropagation: function stopPropagation() {
      var a = this.nativeEvent;
      a && (a.stopPropagation ? a.stopPropagation() : "unknown" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = pd);
    },
    persist: function persist() {},
    isPersistent: pd
  });
  return b;
}

var sd = {
  eventPhase: 0,
  bubbles: 0,
  cancelable: 0,
  timeStamp: function timeStamp(a) {
    return a.timeStamp || Date.now();
  },
  defaultPrevented: 0,
  isTrusted: 0
},
    td = rd(sd),
    ud = m({}, sd, {
  view: 0,
  detail: 0
}),
    vd = rd(ud),
    wd,
    xd,
    yd,
    Ad = m({}, ud, {
  screenX: 0,
  screenY: 0,
  clientX: 0,
  clientY: 0,
  pageX: 0,
  pageY: 0,
  ctrlKey: 0,
  shiftKey: 0,
  altKey: 0,
  metaKey: 0,
  getModifierState: zd,
  button: 0,
  buttons: 0,
  relatedTarget: function relatedTarget(a) {
    return void 0 === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
  },
  movementX: function movementX(a) {
    if ("movementX" in a) return a.movementX;
    a !== yd && (yd && "mousemove" === a.type ? (wd = a.screenX - yd.screenX, xd = a.screenY - yd.screenY) : xd = wd = 0, yd = a);
    return wd;
  },
  movementY: function movementY(a) {
    return "movementY" in a ? a.movementY : xd;
  }
}),
    Bd = rd(Ad),
    Cd = m({}, Ad, {
  dataTransfer: 0
}),
    Dd = rd(Cd),
    Ed = m({}, ud, {
  relatedTarget: 0
}),
    Fd = rd(Ed),
    Gd = m({}, sd, {
  animationName: 0,
  elapsedTime: 0,
  pseudoElement: 0
}),
    Hd = rd(Gd),
    Id = m({}, sd, {
  clipboardData: function clipboardData(a) {
    return "clipboardData" in a ? a.clipboardData : window.clipboardData;
  }
}),
    Jd = rd(Id),
    Kd = m({}, sd, {
  data: 0
}),
    Ld = rd(Kd),
    Md = {
  Esc: "Escape",
  Spacebar: " ",
  Left: "ArrowLeft",
  Up: "ArrowUp",
  Right: "ArrowRight",
  Down: "ArrowDown",
  Del: "Delete",
  Win: "OS",
  Menu: "ContextMenu",
  Apps: "ContextMenu",
  Scroll: "ScrollLock",
  MozPrintableKey: "Unidentified"
},
    Nd = {
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  19: "Pause",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  45: "Insert",
  46: "Delete",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  144: "NumLock",
  145: "ScrollLock",
  224: "Meta"
},
    Od = {
  Alt: "altKey",
  Control: "ctrlKey",
  Meta: "metaKey",
  Shift: "shiftKey"
};

function Pd(a) {
  var b = this.nativeEvent;
  return b.getModifierState ? b.getModifierState(a) : (a = Od[a]) ? !!b[a] : !1;
}

function zd() {
  return Pd;
}

var Qd = m({}, ud, {
  key: function key(a) {
    if (a.key) {
      var b = Md[a.key] || a.key;
      if ("Unidentified" !== b) return b;
    }

    return "keypress" === a.type ? (a = od(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? Nd[a.keyCode] || "Unidentified" : "";
  },
  code: 0,
  location: 0,
  ctrlKey: 0,
  shiftKey: 0,
  altKey: 0,
  metaKey: 0,
  repeat: 0,
  locale: 0,
  getModifierState: zd,
  charCode: function charCode(a) {
    return "keypress" === a.type ? od(a) : 0;
  },
  keyCode: function keyCode(a) {
    return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
  },
  which: function which(a) {
    return "keypress" === a.type ? od(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
  }
}),
    Rd = rd(Qd),
    Sd = m({}, Ad, {
  pointerId: 0,
  width: 0,
  height: 0,
  pressure: 0,
  tangentialPressure: 0,
  tiltX: 0,
  tiltY: 0,
  twist: 0,
  pointerType: 0,
  isPrimary: 0
}),
    Td = rd(Sd),
    Ud = m({}, ud, {
  touches: 0,
  targetTouches: 0,
  changedTouches: 0,
  altKey: 0,
  metaKey: 0,
  ctrlKey: 0,
  shiftKey: 0,
  getModifierState: zd
}),
    Vd = rd(Ud),
    Wd = m({}, sd, {
  propertyName: 0,
  elapsedTime: 0,
  pseudoElement: 0
}),
    Xd = rd(Wd),
    Yd = m({}, Ad, {
  deltaX: function deltaX(a) {
    return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
  },
  deltaY: function deltaY(a) {
    return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
  },
  deltaZ: 0,
  deltaMode: 0
}),
    Zd = rd(Yd),
    $d = [9, 13, 27, 32],
    ae = fa && "CompositionEvent" in window,
    be = null;
fa && "documentMode" in document && (be = document.documentMode);
var ce = fa && "TextEvent" in window && !be,
    de = fa && (!ae || be && 8 < be && 11 >= be),
    ee = String.fromCharCode(32),
    fe = !1;

function ge(a, b) {
  switch (a) {
    case "keyup":
      return -1 !== $d.indexOf(b.keyCode);

    case "keydown":
      return 229 !== b.keyCode;

    case "keypress":
    case "mousedown":
    case "focusout":
      return !0;

    default:
      return !1;
  }
}

function he(a) {
  a = a.detail;
  return "object" === typeof a && "data" in a ? a.data : null;
}

var ie = !1;

function je(a, b) {
  switch (a) {
    case "compositionend":
      return he(b);

    case "keypress":
      if (32 !== b.which) return null;
      fe = !0;
      return ee;

    case "textInput":
      return a = b.data, a === ee && fe ? null : a;

    default:
      return null;
  }
}

function ke(a, b) {
  if (ie) return "compositionend" === a || !ae && ge(a, b) ? (a = nd(), md = ld = kd = null, ie = !1, a) : null;

  switch (a) {
    case "paste":
      return null;

    case "keypress":
      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
        if (b.char && 1 < b.char.length) return b.char;
        if (b.which) return String.fromCharCode(b.which);
      }

      return null;

    case "compositionend":
      return de && "ko" !== b.locale ? null : b.data;

    default:
      return null;
  }
}

var le = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0
};

function me(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return "input" === b ? !!le[a.type] : "textarea" === b ? !0 : !1;
}

function ne(a, b, c, d) {
  Eb(d);
  b = oe(b, "onChange");
  0 < b.length && (c = new td("onChange", "change", null, c, d), a.push({
    event: c,
    listeners: b
  }));
}

var pe = null,
    qe = null;

function re(a) {
  se(a, 0);
}

function te(a) {
  var b = ue(a);
  if (Wa(b)) return a;
}

function ve(a, b) {
  if ("change" === a) return b;
}

var we = !1;

if (fa) {
  var xe;

  if (fa) {
    var ye = ("oninput" in document);

    if (!ye) {
      var ze = document.createElement("div");
      ze.setAttribute("oninput", "return;");
      ye = "function" === typeof ze.oninput;
    }

    xe = ye;
  } else xe = !1;

  we = xe && (!document.documentMode || 9 < document.documentMode);
}

function Ae() {
  pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
}

function Be(a) {
  if ("value" === a.propertyName && te(qe)) {
    var b = [];
    ne(b, qe, a, xb(a));
    a = re;
    if (Kb) a(b);else {
      Kb = !0;

      try {
        Gb(a, b);
      } finally {
        Kb = !1, Mb();
      }
    }
  }
}

function Ce(a, b, c) {
  "focusin" === a ? (Ae(), pe = b, qe = c, pe.attachEvent("onpropertychange", Be)) : "focusout" === a && Ae();
}

function De(a) {
  if ("selectionchange" === a || "keyup" === a || "keydown" === a) return te(qe);
}

function Ee(a, b) {
  if ("click" === a) return te(b);
}

function Fe(a, b) {
  if ("input" === a || "change" === a) return te(b);
}

function Ge(a, b) {
  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}

var He = "function" === typeof Object.is ? Object.is : Ge,
    Ie = Object.prototype.hasOwnProperty;

function Je(a, b) {
  if (He(a, b)) return !0;
  if ("object" !== typeof a || null === a || "object" !== typeof b || null === b) return !1;
  var c = Object.keys(a),
      d = Object.keys(b);
  if (c.length !== d.length) return !1;

  for (d = 0; d < c.length; d++) {
    if (!Ie.call(b, c[d]) || !He(a[c[d]], b[c[d]])) return !1;
  }

  return !0;
}

function Ke(a) {
  for (; a && a.firstChild;) {
    a = a.firstChild;
  }

  return a;
}

function Le(a, b) {
  var c = Ke(a);
  a = 0;

  for (var d; c;) {
    if (3 === c.nodeType) {
      d = a + c.textContent.length;
      if (a <= b && d >= b) return {
        node: c,
        offset: b - a
      };
      a = d;
    }

    a: {
      for (; c;) {
        if (c.nextSibling) {
          c = c.nextSibling;
          break a;
        }

        c = c.parentNode;
      }

      c = void 0;
    }

    c = Ke(c);
  }
}

function Me(a, b) {
  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Me(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;
}

function Ne() {
  for (var a = window, b = Xa(); b instanceof a.HTMLIFrameElement;) {
    try {
      var c = "string" === typeof b.contentWindow.location.href;
    } catch (d) {
      c = !1;
    }

    if (c) a = b.contentWindow;else break;
    b = Xa(a.document);
  }

  return b;
}

function Oe(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);
}

var Pe = fa && "documentMode" in document && 11 >= document.documentMode,
    Qe = null,
    Re = null,
    Se = null,
    Te = !1;

function Ue(a, b, c) {
  var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument;
  Te || null == Qe || Qe !== Xa(d) || (d = Qe, "selectionStart" in d && Oe(d) ? d = {
    start: d.selectionStart,
    end: d.selectionEnd
  } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = {
    anchorNode: d.anchorNode,
    anchorOffset: d.anchorOffset,
    focusNode: d.focusNode,
    focusOffset: d.focusOffset
  }), Se && Je(Se, d) || (Se = d, d = oe(Re, "onSelect"), 0 < d.length && (b = new td("onSelect", "select", null, b, c), a.push({
    event: b,
    listeners: d
  }), b.target = Qe)));
}

Pc("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "), 0);
Pc("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "), 1);
Pc(Oc, 2);

for (var Ve = "change selectionchange textInput compositionstart compositionend compositionupdate".split(" "), We = 0; We < Ve.length; We++) {
  Nc.set(Ve[We], 0);
}

ea("onMouseEnter", ["mouseout", "mouseover"]);
ea("onMouseLeave", ["mouseout", "mouseover"]);
ea("onPointerEnter", ["pointerout", "pointerover"]);
ea("onPointerLeave", ["pointerout", "pointerover"]);
da("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
da("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
da("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
da("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
da("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
da("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var Xe = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),
    Ye = new Set("cancel close invalid load scroll toggle".split(" ").concat(Xe));

function Ze(a, b, c) {
  var d = a.type || "unknown-event";
  a.currentTarget = c;
  Yb(d, b, void 0, a);
  a.currentTarget = null;
}

function se(a, b) {
  b = 0 !== (b & 4);

  for (var c = 0; c < a.length; c++) {
    var d = a[c],
        e = d.event;
    d = d.listeners;

    a: {
      var f = void 0;
      if (b) for (var g = d.length - 1; 0 <= g; g--) {
        var h = d[g],
            k = h.instance,
            l = h.currentTarget;
        h = h.listener;
        if (k !== f && e.isPropagationStopped()) break a;
        Ze(e, h, l);
        f = k;
      } else for (g = 0; g < d.length; g++) {
        h = d[g];
        k = h.instance;
        l = h.currentTarget;
        h = h.listener;
        if (k !== f && e.isPropagationStopped()) break a;
        Ze(e, h, l);
        f = k;
      }
    }
  }

  if (Ub) throw a = Vb, Ub = !1, Vb = null, a;
}

function G(a, b) {
  var c = $e(b),
      d = a + "__bubble";
  c.has(d) || (af(b, a, 2, !1), c.add(d));
}

var bf = "_reactListening" + Math.random().toString(36).slice(2);

function cf(a) {
  a[bf] || (a[bf] = !0, ba.forEach(function (b) {
    Ye.has(b) || df(b, !1, a, null);
    df(b, !0, a, null);
  }));
}

function df(a, b, c, d) {
  var e = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 0,
      f = c;
  "selectionchange" === a && 9 !== c.nodeType && (f = c.ownerDocument);

  if (null !== d && !b && Ye.has(a)) {
    if ("scroll" !== a) return;
    e |= 2;
    f = d;
  }

  var g = $e(f),
      h = a + "__" + (b ? "capture" : "bubble");
  g.has(h) || (b && (e |= 4), af(f, a, e, b), g.add(h));
}

function af(a, b, c, d) {
  var e = Nc.get(b);

  switch (void 0 === e ? 2 : e) {
    case 0:
      e = gd;
      break;

    case 1:
      e = id;
      break;

    default:
      e = hd;
  }

  c = e.bind(null, b, c, a);
  e = void 0;
  !Pb || "touchstart" !== b && "touchmove" !== b && "wheel" !== b || (e = !0);
  d ? void 0 !== e ? a.addEventListener(b, c, {
    capture: !0,
    passive: e
  }) : a.addEventListener(b, c, !0) : void 0 !== e ? a.addEventListener(b, c, {
    passive: e
  }) : a.addEventListener(b, c, !1);
}

function jd(a, b, c, d, e) {
  var f = d;
  if (0 === (b & 1) && 0 === (b & 2) && null !== d) a: for (;;) {
    if (null === d) return;
    var g = d.tag;

    if (3 === g || 4 === g) {
      var h = d.stateNode.containerInfo;
      if (h === e || 8 === h.nodeType && h.parentNode === e) break;
      if (4 === g) for (g = d.return; null !== g;) {
        var k = g.tag;
        if (3 === k || 4 === k) if (k = g.stateNode.containerInfo, k === e || 8 === k.nodeType && k.parentNode === e) return;
        g = g.return;
      }

      for (; null !== h;) {
        g = wc(h);
        if (null === g) return;
        k = g.tag;

        if (5 === k || 6 === k) {
          d = f = g;
          continue a;
        }

        h = h.parentNode;
      }
    }

    d = d.return;
  }
  Nb(function () {
    var d = f,
        e = xb(c),
        g = [];

    a: {
      var h = Mc.get(a);

      if (void 0 !== h) {
        var k = td,
            x = a;

        switch (a) {
          case "keypress":
            if (0 === od(c)) break a;

          case "keydown":
          case "keyup":
            k = Rd;
            break;

          case "focusin":
            x = "focus";
            k = Fd;
            break;

          case "focusout":
            x = "blur";
            k = Fd;
            break;

          case "beforeblur":
          case "afterblur":
            k = Fd;
            break;

          case "click":
            if (2 === c.button) break a;

          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k = Bd;
            break;

          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k = Dd;
            break;

          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k = Vd;
            break;

          case Ic:
          case Jc:
          case Kc:
            k = Hd;
            break;

          case Lc:
            k = Xd;
            break;

          case "scroll":
            k = vd;
            break;

          case "wheel":
            k = Zd;
            break;

          case "copy":
          case "cut":
          case "paste":
            k = Jd;
            break;

          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k = Td;
        }

        var w = 0 !== (b & 4),
            z = !w && "scroll" === a,
            u = w ? null !== h ? h + "Capture" : null : h;
        w = [];

        for (var t = d, q; null !== t;) {
          q = t;
          var v = q.stateNode;
          5 === q.tag && null !== v && (q = v, null !== u && (v = Ob(t, u), null != v && w.push(ef(t, v, q))));
          if (z) break;
          t = t.return;
        }

        0 < w.length && (h = new k(h, x, null, c, e), g.push({
          event: h,
          listeners: w
        }));
      }
    }

    if (0 === (b & 7)) {
      a: {
        h = "mouseover" === a || "pointerover" === a;
        k = "mouseout" === a || "pointerout" === a;
        if (h && 0 === (b & 16) && (x = c.relatedTarget || c.fromElement) && (wc(x) || x[ff])) break a;

        if (k || h) {
          h = e.window === e ? e : (h = e.ownerDocument) ? h.defaultView || h.parentWindow : window;

          if (k) {
            if (x = c.relatedTarget || c.toElement, k = d, x = x ? wc(x) : null, null !== x && (z = Zb(x), x !== z || 5 !== x.tag && 6 !== x.tag)) x = null;
          } else k = null, x = d;

          if (k !== x) {
            w = Bd;
            v = "onMouseLeave";
            u = "onMouseEnter";
            t = "mouse";
            if ("pointerout" === a || "pointerover" === a) w = Td, v = "onPointerLeave", u = "onPointerEnter", t = "pointer";
            z = null == k ? h : ue(k);
            q = null == x ? h : ue(x);
            h = new w(v, t + "leave", k, c, e);
            h.target = z;
            h.relatedTarget = q;
            v = null;
            wc(e) === d && (w = new w(u, t + "enter", x, c, e), w.target = q, w.relatedTarget = z, v = w);
            z = v;
            if (k && x) b: {
              w = k;
              u = x;
              t = 0;

              for (q = w; q; q = gf(q)) {
                t++;
              }

              q = 0;

              for (v = u; v; v = gf(v)) {
                q++;
              }

              for (; 0 < t - q;) {
                w = gf(w), t--;
              }

              for (; 0 < q - t;) {
                u = gf(u), q--;
              }

              for (; t--;) {
                if (w === u || null !== u && w === u.alternate) break b;
                w = gf(w);
                u = gf(u);
              }

              w = null;
            } else w = null;
            null !== k && hf(g, h, k, w, !1);
            null !== x && null !== z && hf(g, z, x, w, !0);
          }
        }
      }

      a: {
        h = d ? ue(d) : window;
        k = h.nodeName && h.nodeName.toLowerCase();
        if ("select" === k || "input" === k && "file" === h.type) var J = ve;else if (me(h)) {
          if (we) J = Fe;else {
            J = De;
            var K = Ce;
          }
        } else (k = h.nodeName) && "input" === k.toLowerCase() && ("checkbox" === h.type || "radio" === h.type) && (J = Ee);

        if (J && (J = J(a, d))) {
          ne(g, J, c, e);
          break a;
        }

        K && K(a, h, d);
        "focusout" === a && (K = h._wrapperState) && K.controlled && "number" === h.type && bb(h, "number", h.value);
      }

      K = d ? ue(d) : window;

      switch (a) {
        case "focusin":
          if (me(K) || "true" === K.contentEditable) Qe = K, Re = d, Se = null;
          break;

        case "focusout":
          Se = Re = Qe = null;
          break;

        case "mousedown":
          Te = !0;
          break;

        case "contextmenu":
        case "mouseup":
        case "dragend":
          Te = !1;
          Ue(g, c, e);
          break;

        case "selectionchange":
          if (Pe) break;

        case "keydown":
        case "keyup":
          Ue(g, c, e);
      }

      var Q;
      if (ae) b: {
        switch (a) {
          case "compositionstart":
            var L = "onCompositionStart";
            break b;

          case "compositionend":
            L = "onCompositionEnd";
            break b;

          case "compositionupdate":
            L = "onCompositionUpdate";
            break b;
        }

        L = void 0;
      } else ie ? ge(a, c) && (L = "onCompositionEnd") : "keydown" === a && 229 === c.keyCode && (L = "onCompositionStart");
      L && (de && "ko" !== c.locale && (ie || "onCompositionStart" !== L ? "onCompositionEnd" === L && ie && (Q = nd()) : (kd = e, ld = "value" in kd ? kd.value : kd.textContent, ie = !0)), K = oe(d, L), 0 < K.length && (L = new Ld(L, a, null, c, e), g.push({
        event: L,
        listeners: K
      }), Q ? L.data = Q : (Q = he(c), null !== Q && (L.data = Q))));
      if (Q = ce ? je(a, c) : ke(a, c)) d = oe(d, "onBeforeInput"), 0 < d.length && (e = new Ld("onBeforeInput", "beforeinput", null, c, e), g.push({
        event: e,
        listeners: d
      }), e.data = Q);
    }

    se(g, b);
  });
}

function ef(a, b, c) {
  return {
    instance: a,
    listener: b,
    currentTarget: c
  };
}

function oe(a, b) {
  for (var c = b + "Capture", d = []; null !== a;) {
    var e = a,
        f = e.stateNode;
    5 === e.tag && null !== f && (e = f, f = Ob(a, c), null != f && d.unshift(ef(a, f, e)), f = Ob(a, b), null != f && d.push(ef(a, f, e)));
    a = a.return;
  }

  return d;
}

function gf(a) {
  if (null === a) return null;

  do {
    a = a.return;
  } while (a && 5 !== a.tag);

  return a ? a : null;
}

function hf(a, b, c, d, e) {
  for (var f = b._reactName, g = []; null !== c && c !== d;) {
    var h = c,
        k = h.alternate,
        l = h.stateNode;
    if (null !== k && k === d) break;
    5 === h.tag && null !== l && (h = l, e ? (k = Ob(c, f), null != k && g.unshift(ef(c, k, h))) : e || (k = Ob(c, f), null != k && g.push(ef(c, k, h))));
    c = c.return;
  }

  0 !== g.length && a.push({
    event: b,
    listeners: g
  });
}

function jf() {}

var kf = null,
    lf = null;

function mf(a, b) {
  switch (a) {
    case "button":
    case "input":
    case "select":
    case "textarea":
      return !!b.autoFocus;
  }

  return !1;
}

function nf(a, b) {
  return "textarea" === a || "option" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
}

var of = "function" === typeof setTimeout ? setTimeout : void 0,
    pf = "function" === typeof clearTimeout ? clearTimeout : void 0;

function qf(a) {
  1 === a.nodeType ? a.textContent = "" : 9 === a.nodeType && (a = a.body, null != a && (a.textContent = ""));
}

function rf(a) {
  for (; null != a; a = a.nextSibling) {
    var b = a.nodeType;
    if (1 === b || 3 === b) break;
  }

  return a;
}

function sf(a) {
  a = a.previousSibling;

  for (var b = 0; a;) {
    if (8 === a.nodeType) {
      var c = a.data;

      if ("$" === c || "$!" === c || "$?" === c) {
        if (0 === b) return a;
        b--;
      } else "/$" === c && b++;
    }

    a = a.previousSibling;
  }

  return null;
}

var tf = 0;

function uf(a) {
  return {
    $$typeof: Ga,
    toString: a,
    valueOf: a
  };
}

var vf = Math.random().toString(36).slice(2),
    wf = "__reactFiber$" + vf,
    xf = "__reactProps$" + vf,
    ff = "__reactContainer$" + vf,
    yf = "__reactEvents$" + vf;

function wc(a) {
  var b = a[wf];
  if (b) return b;

  for (var c = a.parentNode; c;) {
    if (b = c[ff] || c[wf]) {
      c = b.alternate;
      if (null !== b.child || null !== c && null !== c.child) for (a = sf(a); null !== a;) {
        if (c = a[wf]) return c;
        a = sf(a);
      }
      return b;
    }

    a = c;
    c = a.parentNode;
  }

  return null;
}

function Cb(a) {
  a = a[wf] || a[ff];
  return !a || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;
}

function ue(a) {
  if (5 === a.tag || 6 === a.tag) return a.stateNode;
  throw Error(y(33));
}

function Db(a) {
  return a[xf] || null;
}

function $e(a) {
  var b = a[yf];
  void 0 === b && (b = a[yf] = new Set());
  return b;
}

var zf = [],
    Af = -1;

function Bf(a) {
  return {
    current: a
  };
}

function H(a) {
  0 > Af || (a.current = zf[Af], zf[Af] = null, Af--);
}

function I(a, b) {
  Af++;
  zf[Af] = a.current;
  a.current = b;
}

var Cf = {},
    M = Bf(Cf),
    N = Bf(!1),
    Df = Cf;

function Ef(a, b) {
  var c = a.type.contextTypes;
  if (!c) return Cf;
  var d = a.stateNode;
  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;
  var e = {},
      f;

  for (f in c) {
    e[f] = b[f];
  }

  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);
  return e;
}

function Ff(a) {
  a = a.childContextTypes;
  return null !== a && void 0 !== a;
}

function Gf() {
  H(N);
  H(M);
}

function Hf(a, b, c) {
  if (M.current !== Cf) throw Error(y(168));
  I(M, b);
  I(N, c);
}

function If(a, b, c) {
  var d = a.stateNode;
  a = b.childContextTypes;
  if ("function" !== typeof d.getChildContext) return c;
  d = d.getChildContext();

  for (var e in d) {
    if (!(e in a)) throw Error(y(108, Ra(b) || "Unknown", e));
  }

  return m({}, c, d);
}

function Jf(a) {
  a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Cf;
  Df = M.current;
  I(M, a);
  I(N, N.current);
  return !0;
}

function Kf(a, b, c) {
  var d = a.stateNode;
  if (!d) throw Error(y(169));
  c ? (a = If(a, b, Df), d.__reactInternalMemoizedMergedChildContext = a, H(N), H(M), I(M, a)) : H(N);
  I(N, c);
}

var Lf = null,
    Mf = null,
    Nf = r.unstable_runWithPriority,
    Of = r.unstable_scheduleCallback,
    Pf = r.unstable_cancelCallback,
    Qf = r.unstable_shouldYield,
    Rf = r.unstable_requestPaint,
    Sf = r.unstable_now,
    Tf = r.unstable_getCurrentPriorityLevel,
    Uf = r.unstable_ImmediatePriority,
    Vf = r.unstable_UserBlockingPriority,
    Wf = r.unstable_NormalPriority,
    Xf = r.unstable_LowPriority,
    Yf = r.unstable_IdlePriority,
    Zf = {},
    $f = void 0 !== Rf ? Rf : function () {},
    ag = null,
    bg = null,
    cg = !1,
    dg = Sf(),
    O = 1E4 > dg ? Sf : function () {
  return Sf() - dg;
};

function eg() {
  switch (Tf()) {
    case Uf:
      return 99;

    case Vf:
      return 98;

    case Wf:
      return 97;

    case Xf:
      return 96;

    case Yf:
      return 95;

    default:
      throw Error(y(332));
  }
}

function fg(a) {
  switch (a) {
    case 99:
      return Uf;

    case 98:
      return Vf;

    case 97:
      return Wf;

    case 96:
      return Xf;

    case 95:
      return Yf;

    default:
      throw Error(y(332));
  }
}

function gg(a, b) {
  a = fg(a);
  return Nf(a, b);
}

function hg(a, b, c) {
  a = fg(a);
  return Of(a, b, c);
}

function ig() {
  if (null !== bg) {
    var a = bg;
    bg = null;
    Pf(a);
  }

  jg();
}

function jg() {
  if (!cg && null !== ag) {
    cg = !0;
    var a = 0;

    try {
      var b = ag;
      gg(99, function () {
        for (; a < b.length; a++) {
          var c = b[a];

          do {
            c = c(!0);
          } while (null !== c);
        }
      });
      ag = null;
    } catch (c) {
      throw null !== ag && (ag = ag.slice(a + 1)), Of(Uf, ig), c;
    } finally {
      cg = !1;
    }
  }
}

var kg = ra.ReactCurrentBatchConfig;

function lg(a, b) {
  if (a && a.defaultProps) {
    b = m({}, b);
    a = a.defaultProps;

    for (var c in a) {
      void 0 === b[c] && (b[c] = a[c]);
    }

    return b;
  }

  return b;
}

var mg = Bf(null),
    ng = null,
    og = null,
    pg = null;

function qg() {
  pg = og = ng = null;
}

function rg(a) {
  var b = mg.current;
  H(mg);
  a.type._context._currentValue = b;
}

function sg(a, b) {
  for (; null !== a;) {
    var c = a.alternate;
    if ((a.childLanes & b) === b) {
      if (null === c || (c.childLanes & b) === b) break;else c.childLanes |= b;
    } else a.childLanes |= b, null !== c && (c.childLanes |= b);
    a = a.return;
  }
}

function tg(a, b) {
  ng = a;
  pg = og = null;
  a = a.dependencies;
  null !== a && null !== a.firstContext && (0 !== (a.lanes & b) && (ug = !0), a.firstContext = null);
}

function vg(a, b) {
  if (pg !== a && !1 !== b && 0 !== b) {
    if ("number" !== typeof b || 1073741823 === b) pg = a, b = 1073741823;
    b = {
      context: a,
      observedBits: b,
      next: null
    };

    if (null === og) {
      if (null === ng) throw Error(y(308));
      og = b;
      ng.dependencies = {
        lanes: 0,
        firstContext: b,
        responders: null
      };
    } else og = og.next = b;
  }

  return a._currentValue;
}

var wg = !1;

function xg(a) {
  a.updateQueue = {
    baseState: a.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: {
      pending: null
    },
    effects: null
  };
}

function yg(a, b) {
  a = a.updateQueue;
  b.updateQueue === a && (b.updateQueue = {
    baseState: a.baseState,
    firstBaseUpdate: a.firstBaseUpdate,
    lastBaseUpdate: a.lastBaseUpdate,
    shared: a.shared,
    effects: a.effects
  });
}

function zg(a, b) {
  return {
    eventTime: a,
    lane: b,
    tag: 0,
    payload: null,
    callback: null,
    next: null
  };
}

function Ag(a, b) {
  a = a.updateQueue;

  if (null !== a) {
    a = a.shared;
    var c = a.pending;
    null === c ? b.next = b : (b.next = c.next, c.next = b);
    a.pending = b;
  }
}

function Bg(a, b) {
  var c = a.updateQueue,
      d = a.alternate;

  if (null !== d && (d = d.updateQueue, c === d)) {
    var e = null,
        f = null;
    c = c.firstBaseUpdate;

    if (null !== c) {
      do {
        var g = {
          eventTime: c.eventTime,
          lane: c.lane,
          tag: c.tag,
          payload: c.payload,
          callback: c.callback,
          next: null
        };
        null === f ? e = f = g : f = f.next = g;
        c = c.next;
      } while (null !== c);

      null === f ? e = f = b : f = f.next = b;
    } else e = f = b;

    c = {
      baseState: d.baseState,
      firstBaseUpdate: e,
      lastBaseUpdate: f,
      shared: d.shared,
      effects: d.effects
    };
    a.updateQueue = c;
    return;
  }

  a = c.lastBaseUpdate;
  null === a ? c.firstBaseUpdate = b : a.next = b;
  c.lastBaseUpdate = b;
}

function Cg(a, b, c, d) {
  var e = a.updateQueue;
  wg = !1;
  var f = e.firstBaseUpdate,
      g = e.lastBaseUpdate,
      h = e.shared.pending;

  if (null !== h) {
    e.shared.pending = null;
    var k = h,
        l = k.next;
    k.next = null;
    null === g ? f = l : g.next = l;
    g = k;
    var n = a.alternate;

    if (null !== n) {
      n = n.updateQueue;
      var A = n.lastBaseUpdate;
      A !== g && (null === A ? n.firstBaseUpdate = l : A.next = l, n.lastBaseUpdate = k);
    }
  }

  if (null !== f) {
    A = e.baseState;
    g = 0;
    n = l = k = null;

    do {
      h = f.lane;
      var p = f.eventTime;

      if ((d & h) === h) {
        null !== n && (n = n.next = {
          eventTime: p,
          lane: 0,
          tag: f.tag,
          payload: f.payload,
          callback: f.callback,
          next: null
        });

        a: {
          var C = a,
              x = f;
          h = b;
          p = c;

          switch (x.tag) {
            case 1:
              C = x.payload;

              if ("function" === typeof C) {
                A = C.call(p, A, h);
                break a;
              }

              A = C;
              break a;

            case 3:
              C.flags = C.flags & -4097 | 64;

            case 0:
              C = x.payload;
              h = "function" === typeof C ? C.call(p, A, h) : C;
              if (null === h || void 0 === h) break a;
              A = m({}, A, h);
              break a;

            case 2:
              wg = !0;
          }
        }

        null !== f.callback && (a.flags |= 32, h = e.effects, null === h ? e.effects = [f] : h.push(f));
      } else p = {
        eventTime: p,
        lane: h,
        tag: f.tag,
        payload: f.payload,
        callback: f.callback,
        next: null
      }, null === n ? (l = n = p, k = A) : n = n.next = p, g |= h;

      f = f.next;
      if (null === f) if (h = e.shared.pending, null === h) break;else f = h.next, h.next = null, e.lastBaseUpdate = h, e.shared.pending = null;
    } while (1);

    null === n && (k = A);
    e.baseState = k;
    e.firstBaseUpdate = l;
    e.lastBaseUpdate = n;
    Dg |= g;
    a.lanes = g;
    a.memoizedState = A;
  }
}

function Eg(a, b, c) {
  a = b.effects;
  b.effects = null;
  if (null !== a) for (b = 0; b < a.length; b++) {
    var d = a[b],
        e = d.callback;

    if (null !== e) {
      d.callback = null;
      d = c;
      if ("function" !== typeof e) throw Error(y(191, e));
      e.call(d);
    }
  }
}

var Fg = new aa.Component().refs;

function Gg(a, b, c, d) {
  b = a.memoizedState;
  c = c(d, b);
  c = null === c || void 0 === c ? b : m({}, b, c);
  a.memoizedState = c;
  0 === a.lanes && (a.updateQueue.baseState = c);
}

var Kg = {
  isMounted: function isMounted(a) {
    return (a = a._reactInternals) ? Zb(a) === a : !1;
  },
  enqueueSetState: function enqueueSetState(a, b, c) {
    a = a._reactInternals;
    var d = Hg(),
        e = Ig(a),
        f = zg(d, e);
    f.payload = b;
    void 0 !== c && null !== c && (f.callback = c);
    Ag(a, f);
    Jg(a, e, d);
  },
  enqueueReplaceState: function enqueueReplaceState(a, b, c) {
    a = a._reactInternals;
    var d = Hg(),
        e = Ig(a),
        f = zg(d, e);
    f.tag = 1;
    f.payload = b;
    void 0 !== c && null !== c && (f.callback = c);
    Ag(a, f);
    Jg(a, e, d);
  },
  enqueueForceUpdate: function enqueueForceUpdate(a, b) {
    a = a._reactInternals;
    var c = Hg(),
        d = Ig(a),
        e = zg(c, d);
    e.tag = 2;
    void 0 !== b && null !== b && (e.callback = b);
    Ag(a, e);
    Jg(a, d, c);
  }
};

function Lg(a, b, c, d, e, f, g) {
  a = a.stateNode;
  return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !Je(c, d) || !Je(e, f) : !0;
}

function Mg(a, b, c) {
  var d = !1,
      e = Cf;
  var f = b.contextType;
  "object" === typeof f && null !== f ? f = vg(f) : (e = Ff(b) ? Df : M.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Ef(a, e) : Cf);
  b = new b(c, f);
  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
  b.updater = Kg;
  a.stateNode = b;
  b._reactInternals = a;
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);
  return b;
}

function Ng(a, b, c, d) {
  a = b.state;
  "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
  "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
  b.state !== a && Kg.enqueueReplaceState(b, b.state, null);
}

function Og(a, b, c, d) {
  var e = a.stateNode;
  e.props = c;
  e.state = a.memoizedState;
  e.refs = Fg;
  xg(a);
  var f = b.contextType;
  "object" === typeof f && null !== f ? e.context = vg(f) : (f = Ff(b) ? Df : M.current, e.context = Ef(a, f));
  Cg(a, c, e, d);
  e.state = a.memoizedState;
  f = b.getDerivedStateFromProps;
  "function" === typeof f && (Gg(a, b, f, c), e.state = a.memoizedState);
  "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && Kg.enqueueReplaceState(e, e.state, null), Cg(a, c, e, d), e.state = a.memoizedState);
  "function" === typeof e.componentDidMount && (a.flags |= 4);
}

var Pg = Array.isArray;

function Qg(a, b, c) {
  a = c.ref;

  if (null !== a && "function" !== typeof a && "object" !== typeof a) {
    if (c._owner) {
      c = c._owner;

      if (c) {
        if (1 !== c.tag) throw Error(y(309));
        var d = c.stateNode;
      }

      if (!d) throw Error(y(147, a));
      var e = "" + a;
      if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === e) return b.ref;

      b = function b(a) {
        var b = d.refs;
        b === Fg && (b = d.refs = {});
        null === a ? delete b[e] : b[e] = a;
      };

      b._stringRef = e;
      return b;
    }

    if ("string" !== typeof a) throw Error(y(284));
    if (!c._owner) throw Error(y(290, a));
  }

  return a;
}

function Rg(a, b) {
  if ("textarea" !== a.type) throw Error(y(31, "[object Object]" === Object.prototype.toString.call(b) ? "object with keys {" + Object.keys(b).join(", ") + "}" : b));
}

function Sg(a) {
  function b(b, c) {
    if (a) {
      var d = b.lastEffect;
      null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;
      c.nextEffect = null;
      c.flags = 8;
    }
  }

  function c(c, d) {
    if (!a) return null;

    for (; null !== d;) {
      b(c, d), d = d.sibling;
    }

    return null;
  }

  function d(a, b) {
    for (a = new Map(); null !== b;) {
      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;
    }

    return a;
  }

  function e(a, b) {
    a = Tg(a, b);
    a.index = 0;
    a.sibling = null;
    return a;
  }

  function f(b, c, d) {
    b.index = d;
    if (!a) return c;
    d = b.alternate;
    if (null !== d) return d = d.index, d < c ? (b.flags = 2, c) : d;
    b.flags = 2;
    return c;
  }

  function g(b) {
    a && null === b.alternate && (b.flags = 2);
    return b;
  }

  function h(a, b, c, d) {
    if (null === b || 6 !== b.tag) return b = Ug(c, a.mode, d), b.return = a, b;
    b = e(b, c);
    b.return = a;
    return b;
  }

  function k(a, b, c, d) {
    if (null !== b && b.elementType === c.type) return d = e(b, c.props), d.ref = Qg(a, b, c), d.return = a, d;
    d = Vg(c.type, c.key, c.props, null, a.mode, d);
    d.ref = Qg(a, b, c);
    d.return = a;
    return d;
  }

  function l(a, b, c, d) {
    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = Wg(c, a.mode, d), b.return = a, b;
    b = e(b, c.children || []);
    b.return = a;
    return b;
  }

  function n(a, b, c, d, f) {
    if (null === b || 7 !== b.tag) return b = Xg(c, a.mode, d, f), b.return = a, b;
    b = e(b, c);
    b.return = a;
    return b;
  }

  function A(a, b, c) {
    if ("string" === typeof b || "number" === typeof b) return b = Ug("" + b, a.mode, c), b.return = a, b;

    if ("object" === typeof b && null !== b) {
      switch (b.$$typeof) {
        case sa:
          return c = Vg(b.type, b.key, b.props, null, a.mode, c), c.ref = Qg(a, null, b), c.return = a, c;

        case ta:
          return b = Wg(b, a.mode, c), b.return = a, b;
      }

      if (Pg(b) || La(b)) return b = Xg(b, a.mode, c, null), b.return = a, b;
      Rg(a, b);
    }

    return null;
  }

  function p(a, b, c, d) {
    var e = null !== b ? b.key : null;
    if ("string" === typeof c || "number" === typeof c) return null !== e ? null : h(a, b, "" + c, d);

    if ("object" === typeof c && null !== c) {
      switch (c.$$typeof) {
        case sa:
          return c.key === e ? c.type === ua ? n(a, b, c.props.children, d, e) : k(a, b, c, d) : null;

        case ta:
          return c.key === e ? l(a, b, c, d) : null;
      }

      if (Pg(c) || La(c)) return null !== e ? null : n(a, b, c, d, null);
      Rg(a, c);
    }

    return null;
  }

  function C(a, b, c, d, e) {
    if ("string" === typeof d || "number" === typeof d) return a = a.get(c) || null, h(b, a, "" + d, e);

    if ("object" === typeof d && null !== d) {
      switch (d.$$typeof) {
        case sa:
          return a = a.get(null === d.key ? c : d.key) || null, d.type === ua ? n(b, a, d.props.children, e, d.key) : k(b, a, d, e);

        case ta:
          return a = a.get(null === d.key ? c : d.key) || null, l(b, a, d, e);
      }

      if (Pg(d) || La(d)) return a = a.get(c) || null, n(b, a, d, e, null);
      Rg(b, d);
    }

    return null;
  }

  function x(e, g, h, k) {
    for (var l = null, t = null, u = g, z = g = 0, q = null; null !== u && z < h.length; z++) {
      u.index > z ? (q = u, u = null) : q = u.sibling;
      var n = p(e, u, h[z], k);

      if (null === n) {
        null === u && (u = q);
        break;
      }

      a && u && null === n.alternate && b(e, u);
      g = f(n, g, z);
      null === t ? l = n : t.sibling = n;
      t = n;
      u = q;
    }

    if (z === h.length) return c(e, u), l;

    if (null === u) {
      for (; z < h.length; z++) {
        u = A(e, h[z], k), null !== u && (g = f(u, g, z), null === t ? l = u : t.sibling = u, t = u);
      }

      return l;
    }

    for (u = d(e, u); z < h.length; z++) {
      q = C(u, e, z, h[z], k), null !== q && (a && null !== q.alternate && u.delete(null === q.key ? z : q.key), g = f(q, g, z), null === t ? l = q : t.sibling = q, t = q);
    }

    a && u.forEach(function (a) {
      return b(e, a);
    });
    return l;
  }

  function w(e, g, h, k) {
    var l = La(h);
    if ("function" !== typeof l) throw Error(y(150));
    h = l.call(h);
    if (null == h) throw Error(y(151));

    for (var t = l = null, u = g, z = g = 0, q = null, n = h.next(); null !== u && !n.done; z++, n = h.next()) {
      u.index > z ? (q = u, u = null) : q = u.sibling;
      var w = p(e, u, n.value, k);

      if (null === w) {
        null === u && (u = q);
        break;
      }

      a && u && null === w.alternate && b(e, u);
      g = f(w, g, z);
      null === t ? l = w : t.sibling = w;
      t = w;
      u = q;
    }

    if (n.done) return c(e, u), l;

    if (null === u) {
      for (; !n.done; z++, n = h.next()) {
        n = A(e, n.value, k), null !== n && (g = f(n, g, z), null === t ? l = n : t.sibling = n, t = n);
      }

      return l;
    }

    for (u = d(e, u); !n.done; z++, n = h.next()) {
      n = C(u, e, z, n.value, k), null !== n && (a && null !== n.alternate && u.delete(null === n.key ? z : n.key), g = f(n, g, z), null === t ? l = n : t.sibling = n, t = n);
    }

    a && u.forEach(function (a) {
      return b(e, a);
    });
    return l;
  }

  return function (a, d, f, h) {
    var k = "object" === typeof f && null !== f && f.type === ua && null === f.key;
    k && (f = f.props.children);
    var l = "object" === typeof f && null !== f;
    if (l) switch (f.$$typeof) {
      case sa:
        a: {
          l = f.key;

          for (k = d; null !== k;) {
            if (k.key === l) {
              switch (k.tag) {
                case 7:
                  if (f.type === ua) {
                    c(a, k.sibling);
                    d = e(k, f.props.children);
                    d.return = a;
                    a = d;
                    break a;
                  }

                  break;

                default:
                  if (k.elementType === f.type) {
                    c(a, k.sibling);
                    d = e(k, f.props);
                    d.ref = Qg(a, k, f);
                    d.return = a;
                    a = d;
                    break a;
                  }

              }

              c(a, k);
              break;
            } else b(a, k);

            k = k.sibling;
          }

          f.type === ua ? (d = Xg(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = Vg(f.type, f.key, f.props, null, a.mode, h), h.ref = Qg(a, d, f), h.return = a, a = h);
        }

        return g(a);

      case ta:
        a: {
          for (k = f.key; null !== d;) {
            if (d.key === k) {
              if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {
                c(a, d.sibling);
                d = e(d, f.children || []);
                d.return = a;
                a = d;
                break a;
              } else {
                c(a, d);
                break;
              }
            } else b(a, d);
            d = d.sibling;
          }

          d = Wg(f, a.mode, h);
          d.return = a;
          a = d;
        }

        return g(a);
    }
    if ("string" === typeof f || "number" === typeof f) return f = "" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f), d.return = a, a = d) : (c(a, d), d = Ug(f, a.mode, h), d.return = a, a = d), g(a);
    if (Pg(f)) return x(a, d, f, h);
    if (La(f)) return w(a, d, f, h);
    l && Rg(a, f);
    if ("undefined" === typeof f && !k) switch (a.tag) {
      case 1:
      case 22:
      case 0:
      case 11:
      case 15:
        throw Error(y(152, Ra(a.type) || "Component"));
    }
    return c(a, d);
  };
}

var Yg = Sg(!0),
    Zg = Sg(!1),
    $g = {},
    ah = Bf($g),
    bh = Bf($g),
    ch = Bf($g);

function dh(a) {
  if (a === $g) throw Error(y(174));
  return a;
}

function eh(a, b) {
  I(ch, b);
  I(bh, a);
  I(ah, $g);
  a = b.nodeType;

  switch (a) {
    case 9:
    case 11:
      b = (b = b.documentElement) ? b.namespaceURI : mb(null, "");
      break;

    default:
      a = 8 === a ? b.parentNode : b, b = a.namespaceURI || null, a = a.tagName, b = mb(b, a);
  }

  H(ah);
  I(ah, b);
}

function fh() {
  H(ah);
  H(bh);
  H(ch);
}

function gh(a) {
  dh(ch.current);
  var b = dh(ah.current);
  var c = mb(b, a.type);
  b !== c && (I(bh, a), I(ah, c));
}

function hh(a) {
  bh.current === a && (H(ah), H(bh));
}

var P = Bf(0);

function ih(a) {
  for (var b = a; null !== b;) {
    if (13 === b.tag) {
      var c = b.memoizedState;
      if (null !== c && (c = c.dehydrated, null === c || "$?" === c.data || "$!" === c.data)) return b;
    } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
      if (0 !== (b.flags & 64)) return b;
    } else if (null !== b.child) {
      b.child.return = b;
      b = b.child;
      continue;
    }

    if (b === a) break;

    for (; null === b.sibling;) {
      if (null === b.return || b.return === a) return null;
      b = b.return;
    }

    b.sibling.return = b.return;
    b = b.sibling;
  }

  return null;
}

var jh = null,
    kh = null,
    lh = !1;

function mh(a, b) {
  var c = nh(5, null, null, 0);
  c.elementType = "DELETED";
  c.type = "DELETED";
  c.stateNode = b;
  c.return = a;
  c.flags = 8;
  null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;
}

function oh(a, b) {
  switch (a.tag) {
    case 5:
      var c = a.type;
      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;
      return null !== b ? (a.stateNode = b, !0) : !1;

    case 6:
      return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;

    case 13:
      return !1;

    default:
      return !1;
  }
}

function ph(a) {
  if (lh) {
    var b = kh;

    if (b) {
      var c = b;

      if (!oh(a, b)) {
        b = rf(c.nextSibling);

        if (!b || !oh(a, b)) {
          a.flags = a.flags & -1025 | 2;
          lh = !1;
          jh = a;
          return;
        }

        mh(jh, c);
      }

      jh = a;
      kh = rf(b.firstChild);
    } else a.flags = a.flags & -1025 | 2, lh = !1, jh = a;
  }
}

function qh(a) {
  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag;) {
    a = a.return;
  }

  jh = a;
}

function rh(a) {
  if (a !== jh) return !1;
  if (!lh) return qh(a), lh = !0, !1;
  var b = a.type;
  if (5 !== a.tag || "head" !== b && "body" !== b && !nf(b, a.memoizedProps)) for (b = kh; b;) {
    mh(a, b), b = rf(b.nextSibling);
  }
  qh(a);

  if (13 === a.tag) {
    a = a.memoizedState;
    a = null !== a ? a.dehydrated : null;
    if (!a) throw Error(y(317));

    a: {
      a = a.nextSibling;

      for (b = 0; a;) {
        if (8 === a.nodeType) {
          var c = a.data;

          if ("/$" === c) {
            if (0 === b) {
              kh = rf(a.nextSibling);
              break a;
            }

            b--;
          } else "$" !== c && "$!" !== c && "$?" !== c || b++;
        }

        a = a.nextSibling;
      }

      kh = null;
    }
  } else kh = jh ? rf(a.stateNode.nextSibling) : null;

  return !0;
}

function sh() {
  kh = jh = null;
  lh = !1;
}

var th = [];

function uh() {
  for (var a = 0; a < th.length; a++) {
    th[a]._workInProgressVersionPrimary = null;
  }

  th.length = 0;
}

var vh = ra.ReactCurrentDispatcher,
    wh = ra.ReactCurrentBatchConfig,
    xh = 0,
    R = null,
    S = null,
    T = null,
    yh = !1,
    zh = !1;

function Ah() {
  throw Error(y(321));
}

function Bh(a, b) {
  if (null === b) return !1;

  for (var c = 0; c < b.length && c < a.length; c++) {
    if (!He(a[c], b[c])) return !1;
  }

  return !0;
}

function Ch(a, b, c, d, e, f) {
  xh = f;
  R = b;
  b.memoizedState = null;
  b.updateQueue = null;
  b.lanes = 0;
  vh.current = null === a || null === a.memoizedState ? Dh : Eh;
  a = c(d, e);

  if (zh) {
    f = 0;

    do {
      zh = !1;
      if (!(25 > f)) throw Error(y(301));
      f += 1;
      T = S = null;
      b.updateQueue = null;
      vh.current = Fh;
      a = c(d, e);
    } while (zh);
  }

  vh.current = Gh;
  b = null !== S && null !== S.next;
  xh = 0;
  T = S = R = null;
  yh = !1;
  if (b) throw Error(y(300));
  return a;
}

function Hh() {
  var a = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null
  };
  null === T ? R.memoizedState = T = a : T = T.next = a;
  return T;
}

function Ih() {
  if (null === S) {
    var a = R.alternate;
    a = null !== a ? a.memoizedState : null;
  } else a = S.next;

  var b = null === T ? R.memoizedState : T.next;
  if (null !== b) T = b, S = a;else {
    if (null === a) throw Error(y(310));
    S = a;
    a = {
      memoizedState: S.memoizedState,
      baseState: S.baseState,
      baseQueue: S.baseQueue,
      queue: S.queue,
      next: null
    };
    null === T ? R.memoizedState = T = a : T = T.next = a;
  }
  return T;
}

function Jh(a, b) {
  return "function" === typeof b ? b(a) : b;
}

function Kh(a) {
  var b = Ih(),
      c = b.queue;
  if (null === c) throw Error(y(311));
  c.lastRenderedReducer = a;
  var d = S,
      e = d.baseQueue,
      f = c.pending;

  if (null !== f) {
    if (null !== e) {
      var g = e.next;
      e.next = f.next;
      f.next = g;
    }

    d.baseQueue = e = f;
    c.pending = null;
  }

  if (null !== e) {
    e = e.next;
    d = d.baseState;
    var h = g = f = null,
        k = e;

    do {
      var l = k.lane;
      if ((xh & l) === l) null !== h && (h = h.next = {
        lane: 0,
        action: k.action,
        eagerReducer: k.eagerReducer,
        eagerState: k.eagerState,
        next: null
      }), d = k.eagerReducer === a ? k.eagerState : a(d, k.action);else {
        var n = {
          lane: l,
          action: k.action,
          eagerReducer: k.eagerReducer,
          eagerState: k.eagerState,
          next: null
        };
        null === h ? (g = h = n, f = d) : h = h.next = n;
        R.lanes |= l;
        Dg |= l;
      }
      k = k.next;
    } while (null !== k && k !== e);

    null === h ? f = d : h.next = g;
    He(d, b.memoizedState) || (ug = !0);
    b.memoizedState = d;
    b.baseState = f;
    b.baseQueue = h;
    c.lastRenderedState = d;
  }

  return [b.memoizedState, c.dispatch];
}

function Lh(a) {
  var b = Ih(),
      c = b.queue;
  if (null === c) throw Error(y(311));
  c.lastRenderedReducer = a;
  var d = c.dispatch,
      e = c.pending,
      f = b.memoizedState;

  if (null !== e) {
    c.pending = null;
    var g = e = e.next;

    do {
      f = a(f, g.action), g = g.next;
    } while (g !== e);

    He(f, b.memoizedState) || (ug = !0);
    b.memoizedState = f;
    null === b.baseQueue && (b.baseState = f);
    c.lastRenderedState = f;
  }

  return [f, d];
}

function Mh(a, b, c) {
  var d = b._getVersion;
  d = d(b._source);
  var e = b._workInProgressVersionPrimary;
  if (null !== e) a = e === d;else if (a = a.mutableReadLanes, a = (xh & a) === a) b._workInProgressVersionPrimary = d, th.push(b);
  if (a) return c(b._source);
  th.push(b);
  throw Error(y(350));
}

function Nh(a, b, c, d) {
  var e = U;
  if (null === e) throw Error(y(349));
  var f = b._getVersion,
      g = f(b._source),
      h = vh.current,
      k = h.useState(function () {
    return Mh(e, b, c);
  }),
      l = k[1],
      n = k[0];
  k = T;
  var A = a.memoizedState,
      p = A.refs,
      C = p.getSnapshot,
      x = A.source;
  A = A.subscribe;
  var w = R;
  a.memoizedState = {
    refs: p,
    source: b,
    subscribe: d
  };
  h.useEffect(function () {
    p.getSnapshot = c;
    p.setSnapshot = l;
    var a = f(b._source);

    if (!He(g, a)) {
      a = c(b._source);
      He(n, a) || (l(a), a = Ig(w), e.mutableReadLanes |= a & e.pendingLanes);
      a = e.mutableReadLanes;
      e.entangledLanes |= a;

      for (var d = e.entanglements, h = a; 0 < h;) {
        var k = 31 - Vc(h),
            v = 1 << k;
        d[k] |= a;
        h &= ~v;
      }
    }
  }, [c, b, d]);
  h.useEffect(function () {
    return d(b._source, function () {
      var a = p.getSnapshot,
          c = p.setSnapshot;

      try {
        c(a(b._source));
        var d = Ig(w);
        e.mutableReadLanes |= d & e.pendingLanes;
      } catch (q) {
        c(function () {
          throw q;
        });
      }
    });
  }, [b, d]);
  He(C, c) && He(x, b) && He(A, d) || (a = {
    pending: null,
    dispatch: null,
    lastRenderedReducer: Jh,
    lastRenderedState: n
  }, a.dispatch = l = Oh.bind(null, R, a), k.queue = a, k.baseQueue = null, n = Mh(e, b, c), k.memoizedState = k.baseState = n);
  return n;
}

function Ph(a, b, c) {
  var d = Ih();
  return Nh(d, a, b, c);
}

function Qh(a) {
  var b = Hh();
  "function" === typeof a && (a = a());
  b.memoizedState = b.baseState = a;
  a = b.queue = {
    pending: null,
    dispatch: null,
    lastRenderedReducer: Jh,
    lastRenderedState: a
  };
  a = a.dispatch = Oh.bind(null, R, a);
  return [b.memoizedState, a];
}

function Rh(a, b, c, d) {
  a = {
    tag: a,
    create: b,
    destroy: c,
    deps: d,
    next: null
  };
  b = R.updateQueue;
  null === b ? (b = {
    lastEffect: null
  }, R.updateQueue = b, b.lastEffect = a.next = a) : (c = b.lastEffect, null === c ? b.lastEffect = a.next = a : (d = c.next, c.next = a, a.next = d, b.lastEffect = a));
  return a;
}

function Sh(a) {
  var b = Hh();
  a = {
    current: a
  };
  return b.memoizedState = a;
}

function Th() {
  return Ih().memoizedState;
}

function Uh(a, b, c, d) {
  var e = Hh();
  R.flags |= a;
  e.memoizedState = Rh(1 | b, c, void 0, void 0 === d ? null : d);
}

function Vh(a, b, c, d) {
  var e = Ih();
  d = void 0 === d ? null : d;
  var f = void 0;

  if (null !== S) {
    var g = S.memoizedState;
    f = g.destroy;

    if (null !== d && Bh(d, g.deps)) {
      Rh(b, c, f, d);
      return;
    }
  }

  R.flags |= a;
  e.memoizedState = Rh(1 | b, c, f, d);
}

function Wh(a, b) {
  return Uh(516, 4, a, b);
}

function Xh(a, b) {
  return Vh(516, 4, a, b);
}

function Yh(a, b) {
  return Vh(4, 2, a, b);
}

function Zh(a, b) {
  if ("function" === typeof b) return a = a(), b(a), function () {
    b(null);
  };
  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {
    b.current = null;
  };
}

function $h(a, b, c) {
  c = null !== c && void 0 !== c ? c.concat([a]) : null;
  return Vh(4, 2, Zh.bind(null, b, a), c);
}

function ai() {}

function bi(a, b) {
  var c = Ih();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Bh(b, d[1])) return d[0];
  c.memoizedState = [a, b];
  return a;
}

function ci(a, b) {
  var c = Ih();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Bh(b, d[1])) return d[0];
  a = a();
  c.memoizedState = [a, b];
  return a;
}

function di(a, b) {
  var c = eg();
  gg(98 > c ? 98 : c, function () {
    a(!0);
  });
  gg(97 < c ? 97 : c, function () {
    var c = wh.transition;
    wh.transition = 1;

    try {
      a(!1), b();
    } finally {
      wh.transition = c;
    }
  });
}

function Oh(a, b, c) {
  var d = Hg(),
      e = Ig(a),
      f = {
    lane: e,
    action: c,
    eagerReducer: null,
    eagerState: null,
    next: null
  },
      g = b.pending;
  null === g ? f.next = f : (f.next = g.next, g.next = f);
  b.pending = f;
  g = a.alternate;
  if (a === R || null !== g && g === R) zh = yh = !0;else {
    if (0 === a.lanes && (null === g || 0 === g.lanes) && (g = b.lastRenderedReducer, null !== g)) try {
      var h = b.lastRenderedState,
          k = g(h, c);
      f.eagerReducer = g;
      f.eagerState = k;
      if (He(k, h)) return;
    } catch (l) {} finally {}
    Jg(a, e, d);
  }
}

var Gh = {
  readContext: vg,
  useCallback: Ah,
  useContext: Ah,
  useEffect: Ah,
  useImperativeHandle: Ah,
  useLayoutEffect: Ah,
  useMemo: Ah,
  useReducer: Ah,
  useRef: Ah,
  useState: Ah,
  useDebugValue: Ah,
  useDeferredValue: Ah,
  useTransition: Ah,
  useMutableSource: Ah,
  useOpaqueIdentifier: Ah,
  unstable_isNewReconciler: !1
},
    Dh = {
  readContext: vg,
  useCallback: function useCallback(a, b) {
    Hh().memoizedState = [a, void 0 === b ? null : b];
    return a;
  },
  useContext: vg,
  useEffect: Wh,
  useImperativeHandle: function useImperativeHandle(a, b, c) {
    c = null !== c && void 0 !== c ? c.concat([a]) : null;
    return Uh(4, 2, Zh.bind(null, b, a), c);
  },
  useLayoutEffect: function useLayoutEffect(a, b) {
    return Uh(4, 2, a, b);
  },
  useMemo: function useMemo(a, b) {
    var c = Hh();
    b = void 0 === b ? null : b;
    a = a();
    c.memoizedState = [a, b];
    return a;
  },
  useReducer: function useReducer(a, b, c) {
    var d = Hh();
    b = void 0 !== c ? c(b) : b;
    d.memoizedState = d.baseState = b;
    a = d.queue = {
      pending: null,
      dispatch: null,
      lastRenderedReducer: a,
      lastRenderedState: b
    };
    a = a.dispatch = Oh.bind(null, R, a);
    return [d.memoizedState, a];
  },
  useRef: Sh,
  useState: Qh,
  useDebugValue: ai,
  useDeferredValue: function useDeferredValue(a) {
    var b = Qh(a),
        c = b[0],
        d = b[1];
    Wh(function () {
      var b = wh.transition;
      wh.transition = 1;

      try {
        d(a);
      } finally {
        wh.transition = b;
      }
    }, [a]);
    return c;
  },
  useTransition: function useTransition() {
    var a = Qh(!1),
        b = a[0];
    a = di.bind(null, a[1]);
    Sh(a);
    return [a, b];
  },
  useMutableSource: function useMutableSource(a, b, c) {
    var d = Hh();
    d.memoizedState = {
      refs: {
        getSnapshot: b,
        setSnapshot: null
      },
      source: a,
      subscribe: c
    };
    return Nh(d, a, b, c);
  },
  useOpaqueIdentifier: function useOpaqueIdentifier() {
    if (lh) {
      var a = !1,
          b = uf(function () {
        a || (a = !0, c("r:" + (tf++).toString(36)));
        throw Error(y(355));
      }),
          c = Qh(b)[1];
      0 === (R.mode & 2) && (R.flags |= 516, Rh(5, function () {
        c("r:" + (tf++).toString(36));
      }, void 0, null));
      return b;
    }

    b = "r:" + (tf++).toString(36);
    Qh(b);
    return b;
  },
  unstable_isNewReconciler: !1
},
    Eh = {
  readContext: vg,
  useCallback: bi,
  useContext: vg,
  useEffect: Xh,
  useImperativeHandle: $h,
  useLayoutEffect: Yh,
  useMemo: ci,
  useReducer: Kh,
  useRef: Th,
  useState: function useState() {
    return Kh(Jh);
  },
  useDebugValue: ai,
  useDeferredValue: function useDeferredValue(a) {
    var b = Kh(Jh),
        c = b[0],
        d = b[1];
    Xh(function () {
      var b = wh.transition;
      wh.transition = 1;

      try {
        d(a);
      } finally {
        wh.transition = b;
      }
    }, [a]);
    return c;
  },
  useTransition: function useTransition() {
    var a = Kh(Jh)[0];
    return [Th().current, a];
  },
  useMutableSource: Ph,
  useOpaqueIdentifier: function useOpaqueIdentifier() {
    return Kh(Jh)[0];
  },
  unstable_isNewReconciler: !1
},
    Fh = {
  readContext: vg,
  useCallback: bi,
  useContext: vg,
  useEffect: Xh,
  useImperativeHandle: $h,
  useLayoutEffect: Yh,
  useMemo: ci,
  useReducer: Lh,
  useRef: Th,
  useState: function useState() {
    return Lh(Jh);
  },
  useDebugValue: ai,
  useDeferredValue: function useDeferredValue(a) {
    var b = Lh(Jh),
        c = b[0],
        d = b[1];
    Xh(function () {
      var b = wh.transition;
      wh.transition = 1;

      try {
        d(a);
      } finally {
        wh.transition = b;
      }
    }, [a]);
    return c;
  },
  useTransition: function useTransition() {
    var a = Lh(Jh)[0];
    return [Th().current, a];
  },
  useMutableSource: Ph,
  useOpaqueIdentifier: function useOpaqueIdentifier() {
    return Lh(Jh)[0];
  },
  unstable_isNewReconciler: !1
},
    ei = ra.ReactCurrentOwner,
    ug = !1;

function fi(a, b, c, d) {
  b.child = null === a ? Zg(b, null, c, d) : Yg(b, a.child, c, d);
}

function gi(a, b, c, d, e) {
  c = c.render;
  var f = b.ref;
  tg(b, e);
  d = Ch(a, b, c, d, f, e);
  if (null !== a && !ug) return b.updateQueue = a.updateQueue, b.flags &= -517, a.lanes &= ~e, hi(a, b, e);
  b.flags |= 1;
  fi(a, b, d, e);
  return b.child;
}

function ii(a, b, c, d, e, f) {
  if (null === a) {
    var g = c.type;
    if ("function" === typeof g && !ji(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, ki(a, b, g, d, e, f);
    a = Vg(c.type, null, d, b, b.mode, f);
    a.ref = b.ref;
    a.return = b;
    return b.child = a;
  }

  g = a.child;
  if (0 === (e & f) && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : Je, c(e, d) && a.ref === b.ref)) return hi(a, b, f);
  b.flags |= 1;
  a = Tg(g, d);
  a.ref = b.ref;
  a.return = b;
  return b.child = a;
}

function ki(a, b, c, d, e, f) {
  if (null !== a && Je(a.memoizedProps, d) && a.ref === b.ref) if (ug = !1, 0 !== (f & e)) 0 !== (a.flags & 16384) && (ug = !0);else return b.lanes = a.lanes, hi(a, b, f);
  return li(a, b, c, d, f);
}

function mi(a, b, c) {
  var d = b.pendingProps,
      e = d.children,
      f = null !== a ? a.memoizedState : null;
  if ("hidden" === d.mode || "unstable-defer-without-hiding" === d.mode) {
    if (0 === (b.mode & 4)) b.memoizedState = {
      baseLanes: 0
    }, ni(b, c);else if (0 !== (c & 1073741824)) b.memoizedState = {
      baseLanes: 0
    }, ni(b, null !== f ? f.baseLanes : c);else return a = null !== f ? f.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, b.memoizedState = {
      baseLanes: a
    }, ni(b, a), null;
  } else null !== f ? (d = f.baseLanes | c, b.memoizedState = null) : d = c, ni(b, d);
  fi(a, b, e, c);
  return b.child;
}

function oi(a, b) {
  var c = b.ref;
  if (null === a && null !== c || null !== a && a.ref !== c) b.flags |= 128;
}

function li(a, b, c, d, e) {
  var f = Ff(c) ? Df : M.current;
  f = Ef(b, f);
  tg(b, e);
  c = Ch(a, b, c, d, f, e);
  if (null !== a && !ug) return b.updateQueue = a.updateQueue, b.flags &= -517, a.lanes &= ~e, hi(a, b, e);
  b.flags |= 1;
  fi(a, b, c, e);
  return b.child;
}

function pi(a, b, c, d, e) {
  if (Ff(c)) {
    var f = !0;
    Jf(b);
  } else f = !1;

  tg(b, e);
  if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2), Mg(b, c, d), Og(b, c, d, e), d = !0;else if (null === a) {
    var g = b.stateNode,
        h = b.memoizedProps;
    g.props = h;
    var k = g.context,
        l = c.contextType;
    "object" === typeof l && null !== l ? l = vg(l) : (l = Ff(c) ? Df : M.current, l = Ef(b, l));
    var n = c.getDerivedStateFromProps,
        A = "function" === typeof n || "function" === typeof g.getSnapshotBeforeUpdate;
    A || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && Ng(b, g, d, l);
    wg = !1;
    var p = b.memoizedState;
    g.state = p;
    Cg(b, d, g, e);
    k = b.memoizedState;
    h !== d || p !== k || N.current || wg ? ("function" === typeof n && (Gg(b, c, n, d), k = b.memoizedState), (h = wg || Lg(b, c, h, d, p, k, l)) ? (A || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.flags |= 4)) : ("function" === typeof g.componentDidMount && (b.flags |= 4), b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, d = h) : ("function" === typeof g.componentDidMount && (b.flags |= 4), d = !1);
  } else {
    g = b.stateNode;
    yg(a, b);
    h = b.memoizedProps;
    l = b.type === b.elementType ? h : lg(b.type, h);
    g.props = l;
    A = b.pendingProps;
    p = g.context;
    k = c.contextType;
    "object" === typeof k && null !== k ? k = vg(k) : (k = Ff(c) ? Df : M.current, k = Ef(b, k));
    var C = c.getDerivedStateFromProps;
    (n = "function" === typeof C || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== A || p !== k) && Ng(b, g, d, k);
    wg = !1;
    p = b.memoizedState;
    g.state = p;
    Cg(b, d, g, e);
    var x = b.memoizedState;
    h !== A || p !== x || N.current || wg ? ("function" === typeof C && (Gg(b, c, C, d), x = b.memoizedState), (l = wg || Lg(b, c, l, d, p, x, k)) ? (n || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, x, k), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, x, k)), "function" === typeof g.componentDidUpdate && (b.flags |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.flags |= 256)) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && p === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && p === a.memoizedState || (b.flags |= 256), b.memoizedProps = d, b.memoizedState = x), g.props = d, g.state = x, g.context = k, d = l) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && p === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && p === a.memoizedState || (b.flags |= 256), d = !1);
  }
  return qi(a, b, c, d, f, e);
}

function qi(a, b, c, d, e, f) {
  oi(a, b);
  var g = 0 !== (b.flags & 64);
  if (!d && !g) return e && Kf(b, c, !1), hi(a, b, f);
  d = b.stateNode;
  ei.current = b;
  var h = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render();
  b.flags |= 1;
  null !== a && g ? (b.child = Yg(b, a.child, null, f), b.child = Yg(b, null, h, f)) : fi(a, b, h, f);
  b.memoizedState = d.state;
  e && Kf(b, c, !0);
  return b.child;
}

function ri(a) {
  var b = a.stateNode;
  b.pendingContext ? Hf(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Hf(a, b.context, !1);
  eh(a, b.containerInfo);
}

var si = {
  dehydrated: null,
  retryLane: 0
};

function ti(a, b, c) {
  var d = b.pendingProps,
      e = P.current,
      f = !1,
      g;
  (g = 0 !== (b.flags & 64)) || (g = null !== a && null === a.memoizedState ? !1 : 0 !== (e & 2));
  g ? (f = !0, b.flags &= -65) : null !== a && null === a.memoizedState || void 0 === d.fallback || !0 === d.unstable_avoidThisFallback || (e |= 1);
  I(P, e & 1);

  if (null === a) {
    void 0 !== d.fallback && ph(b);
    a = d.children;
    e = d.fallback;
    if (f) return a = ui(b, a, e, c), b.child.memoizedState = {
      baseLanes: c
    }, b.memoizedState = si, a;
    if ("number" === typeof d.unstable_expectedLoadTime) return a = ui(b, a, e, c), b.child.memoizedState = {
      baseLanes: c
    }, b.memoizedState = si, b.lanes = 33554432, a;
    c = vi({
      mode: "visible",
      children: a
    }, b.mode, c, null);
    c.return = b;
    return b.child = c;
  }

  if (null !== a.memoizedState) {
    if (f) return d = wi(a, b, d.children, d.fallback, c), f = b.child, e = a.child.memoizedState, f.memoizedState = null === e ? {
      baseLanes: c
    } : {
      baseLanes: e.baseLanes | c
    }, f.childLanes = a.childLanes & ~c, b.memoizedState = si, d;
    c = xi(a, b, d.children, c);
    b.memoizedState = null;
    return c;
  }

  if (f) return d = wi(a, b, d.children, d.fallback, c), f = b.child, e = a.child.memoizedState, f.memoizedState = null === e ? {
    baseLanes: c
  } : {
    baseLanes: e.baseLanes | c
  }, f.childLanes = a.childLanes & ~c, b.memoizedState = si, d;
  c = xi(a, b, d.children, c);
  b.memoizedState = null;
  return c;
}

function ui(a, b, c, d) {
  var e = a.mode,
      f = a.child;
  b = {
    mode: "hidden",
    children: b
  };
  0 === (e & 2) && null !== f ? (f.childLanes = 0, f.pendingProps = b) : f = vi(b, e, 0, null);
  c = Xg(c, e, d, null);
  f.return = a;
  c.return = a;
  f.sibling = c;
  a.child = f;
  return c;
}

function xi(a, b, c, d) {
  var e = a.child;
  a = e.sibling;
  c = Tg(e, {
    mode: "visible",
    children: c
  });
  0 === (b.mode & 2) && (c.lanes = d);
  c.return = b;
  c.sibling = null;
  null !== a && (a.nextEffect = null, a.flags = 8, b.firstEffect = b.lastEffect = a);
  return b.child = c;
}

function wi(a, b, c, d, e) {
  var f = b.mode,
      g = a.child;
  a = g.sibling;
  var h = {
    mode: "hidden",
    children: c
  };
  0 === (f & 2) && b.child !== g ? (c = b.child, c.childLanes = 0, c.pendingProps = h, g = c.lastEffect, null !== g ? (b.firstEffect = c.firstEffect, b.lastEffect = g, g.nextEffect = null) : b.firstEffect = b.lastEffect = null) : c = Tg(g, h);
  null !== a ? d = Tg(a, d) : (d = Xg(d, f, e, null), d.flags |= 2);
  d.return = b;
  c.return = b;
  c.sibling = d;
  b.child = c;
  return d;
}

function yi(a, b) {
  a.lanes |= b;
  var c = a.alternate;
  null !== c && (c.lanes |= b);
  sg(a.return, b);
}

function zi(a, b, c, d, e, f) {
  var g = a.memoizedState;
  null === g ? a.memoizedState = {
    isBackwards: b,
    rendering: null,
    renderingStartTime: 0,
    last: d,
    tail: c,
    tailMode: e,
    lastEffect: f
  } : (g.isBackwards = b, g.rendering = null, g.renderingStartTime = 0, g.last = d, g.tail = c, g.tailMode = e, g.lastEffect = f);
}

function Ai(a, b, c) {
  var d = b.pendingProps,
      e = d.revealOrder,
      f = d.tail;
  fi(a, b, d.children, c);
  d = P.current;
  if (0 !== (d & 2)) d = d & 1 | 2, b.flags |= 64;else {
    if (null !== a && 0 !== (a.flags & 64)) a: for (a = b.child; null !== a;) {
      if (13 === a.tag) null !== a.memoizedState && yi(a, c);else if (19 === a.tag) yi(a, c);else if (null !== a.child) {
        a.child.return = a;
        a = a.child;
        continue;
      }
      if (a === b) break a;

      for (; null === a.sibling;) {
        if (null === a.return || a.return === b) break a;
        a = a.return;
      }

      a.sibling.return = a.return;
      a = a.sibling;
    }
    d &= 1;
  }
  I(P, d);
  if (0 === (b.mode & 2)) b.memoizedState = null;else switch (e) {
    case "forwards":
      c = b.child;

      for (e = null; null !== c;) {
        a = c.alternate, null !== a && null === ih(a) && (e = c), c = c.sibling;
      }

      c = e;
      null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);
      zi(b, !1, e, c, f, b.lastEffect);
      break;

    case "backwards":
      c = null;
      e = b.child;

      for (b.child = null; null !== e;) {
        a = e.alternate;

        if (null !== a && null === ih(a)) {
          b.child = e;
          break;
        }

        a = e.sibling;
        e.sibling = c;
        c = e;
        e = a;
      }

      zi(b, !0, c, null, f, b.lastEffect);
      break;

    case "together":
      zi(b, !1, null, null, void 0, b.lastEffect);
      break;

    default:
      b.memoizedState = null;
  }
  return b.child;
}

function hi(a, b, c) {
  null !== a && (b.dependencies = a.dependencies);
  Dg |= b.lanes;

  if (0 !== (c & b.childLanes)) {
    if (null !== a && b.child !== a.child) throw Error(y(153));

    if (null !== b.child) {
      a = b.child;
      c = Tg(a, a.pendingProps);
      b.child = c;

      for (c.return = b; null !== a.sibling;) {
        a = a.sibling, c = c.sibling = Tg(a, a.pendingProps), c.return = b;
      }

      c.sibling = null;
    }

    return b.child;
  }

  return null;
}

var Bi, Ci, Di, Ei;

Bi = function Bi(a, b) {
  for (var c = b.child; null !== c;) {
    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {
      c.child.return = c;
      c = c.child;
      continue;
    }
    if (c === b) break;

    for (; null === c.sibling;) {
      if (null === c.return || c.return === b) return;
      c = c.return;
    }

    c.sibling.return = c.return;
    c = c.sibling;
  }
};

Ci = function Ci() {};

Di = function Di(a, b, c, d) {
  var e = a.memoizedProps;

  if (e !== d) {
    a = b.stateNode;
    dh(ah.current);
    var f = null;

    switch (c) {
      case "input":
        e = Ya(a, e);
        d = Ya(a, d);
        f = [];
        break;

      case "option":
        e = eb(a, e);
        d = eb(a, d);
        f = [];
        break;

      case "select":
        e = m({}, e, {
          value: void 0
        });
        d = m({}, d, {
          value: void 0
        });
        f = [];
        break;

      case "textarea":
        e = gb(a, e);
        d = gb(a, d);
        f = [];
        break;

      default:
        "function" !== typeof e.onClick && "function" === typeof d.onClick && (a.onclick = jf);
    }

    vb(c, d);
    var g;
    c = null;

    for (l in e) {
      if (!d.hasOwnProperty(l) && e.hasOwnProperty(l) && null != e[l]) if ("style" === l) {
        var h = e[l];

        for (g in h) {
          h.hasOwnProperty(g) && (c || (c = {}), c[g] = "");
        }
      } else "dangerouslySetInnerHTML" !== l && "children" !== l && "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && "autoFocus" !== l && (ca.hasOwnProperty(l) ? f || (f = []) : (f = f || []).push(l, null));
    }

    for (l in d) {
      var k = d[l];
      h = null != e ? e[l] : void 0;
      if (d.hasOwnProperty(l) && k !== h && (null != k || null != h)) if ("style" === l) {
        if (h) {
          for (g in h) {
            !h.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (c || (c = {}), c[g] = "");
          }

          for (g in k) {
            k.hasOwnProperty(g) && h[g] !== k[g] && (c || (c = {}), c[g] = k[g]);
          }
        } else c || (f || (f = []), f.push(l, c)), c = k;
      } else "dangerouslySetInnerHTML" === l ? (k = k ? k.__html : void 0, h = h ? h.__html : void 0, null != k && h !== k && (f = f || []).push(l, k)) : "children" === l ? "string" !== typeof k && "number" !== typeof k || (f = f || []).push(l, "" + k) : "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && (ca.hasOwnProperty(l) ? (null != k && "onScroll" === l && G("scroll", a), f || h === k || (f = [])) : "object" === typeof k && null !== k && k.$$typeof === Ga ? k.toString() : (f = f || []).push(l, k));
    }

    c && (f = f || []).push("style", c);
    var l = f;
    if (b.updateQueue = l) b.flags |= 4;
  }
};

Ei = function Ei(a, b, c, d) {
  c !== d && (b.flags |= 4);
};

function Fi(a, b) {
  if (!lh) switch (a.tailMode) {
    case "hidden":
      b = a.tail;

      for (var c = null; null !== b;) {
        null !== b.alternate && (c = b), b = b.sibling;
      }

      null === c ? a.tail = null : c.sibling = null;
      break;

    case "collapsed":
      c = a.tail;

      for (var d = null; null !== c;) {
        null !== c.alternate && (d = c), c = c.sibling;
      }

      null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;
  }
}

function Gi(a, b, c) {
  var d = b.pendingProps;

  switch (b.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return null;

    case 1:
      return Ff(b.type) && Gf(), null;

    case 3:
      fh();
      H(N);
      H(M);
      uh();
      d = b.stateNode;
      d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);
      if (null === a || null === a.child) rh(b) ? b.flags |= 4 : d.hydrate || (b.flags |= 256);
      Ci(b);
      return null;

    case 5:
      hh(b);
      var e = dh(ch.current);
      c = b.type;
      if (null !== a && null != b.stateNode) Di(a, b, c, d, e), a.ref !== b.ref && (b.flags |= 128);else {
        if (!d) {
          if (null === b.stateNode) throw Error(y(166));
          return null;
        }

        a = dh(ah.current);

        if (rh(b)) {
          d = b.stateNode;
          c = b.type;
          var f = b.memoizedProps;
          d[wf] = b;
          d[xf] = f;

          switch (c) {
            case "dialog":
              G("cancel", d);
              G("close", d);
              break;

            case "iframe":
            case "object":
            case "embed":
              G("load", d);
              break;

            case "video":
            case "audio":
              for (a = 0; a < Xe.length; a++) {
                G(Xe[a], d);
              }

              break;

            case "source":
              G("error", d);
              break;

            case "img":
            case "image":
            case "link":
              G("error", d);
              G("load", d);
              break;

            case "details":
              G("toggle", d);
              break;

            case "input":
              Za(d, f);
              G("invalid", d);
              break;

            case "select":
              d._wrapperState = {
                wasMultiple: !!f.multiple
              };
              G("invalid", d);
              break;

            case "textarea":
              hb(d, f), G("invalid", d);
          }

          vb(c, f);
          a = null;

          for (var g in f) {
            f.hasOwnProperty(g) && (e = f[g], "children" === g ? "string" === typeof e ? d.textContent !== e && (a = ["children", e]) : "number" === typeof e && d.textContent !== "" + e && (a = ["children", "" + e]) : ca.hasOwnProperty(g) && null != e && "onScroll" === g && G("scroll", d));
          }

          switch (c) {
            case "input":
              Va(d);
              cb(d, f, !0);
              break;

            case "textarea":
              Va(d);
              jb(d);
              break;

            case "select":
            case "option":
              break;

            default:
              "function" === typeof f.onClick && (d.onclick = jf);
          }

          d = a;
          b.updateQueue = d;
          null !== d && (b.flags |= 4);
        } else {
          g = 9 === e.nodeType ? e : e.ownerDocument;
          a === kb.html && (a = lb(c));
          a === kb.html ? "script" === c ? (a = g.createElement("div"), a.innerHTML = "<script>\x3c/script>", a = a.removeChild(a.firstChild)) : "string" === typeof d.is ? a = g.createElement(c, {
            is: d.is
          }) : (a = g.createElement(c), "select" === c && (g = a, d.multiple ? g.multiple = !0 : d.size && (g.size = d.size))) : a = g.createElementNS(a, c);
          a[wf] = b;
          a[xf] = d;
          Bi(a, b, !1, !1);
          b.stateNode = a;
          g = wb(c, d);

          switch (c) {
            case "dialog":
              G("cancel", a);
              G("close", a);
              e = d;
              break;

            case "iframe":
            case "object":
            case "embed":
              G("load", a);
              e = d;
              break;

            case "video":
            case "audio":
              for (e = 0; e < Xe.length; e++) {
                G(Xe[e], a);
              }

              e = d;
              break;

            case "source":
              G("error", a);
              e = d;
              break;

            case "img":
            case "image":
            case "link":
              G("error", a);
              G("load", a);
              e = d;
              break;

            case "details":
              G("toggle", a);
              e = d;
              break;

            case "input":
              Za(a, d);
              e = Ya(a, d);
              G("invalid", a);
              break;

            case "option":
              e = eb(a, d);
              break;

            case "select":
              a._wrapperState = {
                wasMultiple: !!d.multiple
              };
              e = m({}, d, {
                value: void 0
              });
              G("invalid", a);
              break;

            case "textarea":
              hb(a, d);
              e = gb(a, d);
              G("invalid", a);
              break;

            default:
              e = d;
          }

          vb(c, e);
          var h = e;

          for (f in h) {
            if (h.hasOwnProperty(f)) {
              var k = h[f];
              "style" === f ? tb(a, k) : "dangerouslySetInnerHTML" === f ? (k = k ? k.__html : void 0, null != k && ob(a, k)) : "children" === f ? "string" === typeof k ? ("textarea" !== c || "" !== k) && pb(a, k) : "number" === typeof k && pb(a, "" + k) : "suppressContentEditableWarning" !== f && "suppressHydrationWarning" !== f && "autoFocus" !== f && (ca.hasOwnProperty(f) ? null != k && "onScroll" === f && G("scroll", a) : null != k && qa(a, f, k, g));
            }
          }

          switch (c) {
            case "input":
              Va(a);
              cb(a, d, !1);
              break;

            case "textarea":
              Va(a);
              jb(a);
              break;

            case "option":
              null != d.value && a.setAttribute("value", "" + Sa(d.value));
              break;

            case "select":
              a.multiple = !!d.multiple;
              f = d.value;
              null != f ? fb(a, !!d.multiple, f, !1) : null != d.defaultValue && fb(a, !!d.multiple, d.defaultValue, !0);
              break;

            default:
              "function" === typeof e.onClick && (a.onclick = jf);
          }

          mf(c, d) && (b.flags |= 4);
        }

        null !== b.ref && (b.flags |= 128);
      }
      return null;

    case 6:
      if (a && null != b.stateNode) Ei(a, b, a.memoizedProps, d);else {
        if ("string" !== typeof d && null === b.stateNode) throw Error(y(166));
        c = dh(ch.current);
        dh(ah.current);
        rh(b) ? (d = b.stateNode, c = b.memoizedProps, d[wf] = b, d.nodeValue !== c && (b.flags |= 4)) : (d = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d), d[wf] = b, b.stateNode = d);
      }
      return null;

    case 13:
      H(P);
      d = b.memoizedState;
      if (0 !== (b.flags & 64)) return b.lanes = c, b;
      d = null !== d;
      c = !1;
      null === a ? void 0 !== b.memoizedProps.fallback && rh(b) : c = null !== a.memoizedState;
      if (d && !c && 0 !== (b.mode & 2)) if (null === a && !0 !== b.memoizedProps.unstable_avoidThisFallback || 0 !== (P.current & 1)) 0 === V && (V = 3);else {
        if (0 === V || 3 === V) V = 4;
        null === U || 0 === (Dg & 134217727) && 0 === (Hi & 134217727) || Ii(U, W);
      }
      if (d || c) b.flags |= 4;
      return null;

    case 4:
      return fh(), Ci(b), null === a && cf(b.stateNode.containerInfo), null;

    case 10:
      return rg(b), null;

    case 17:
      return Ff(b.type) && Gf(), null;

    case 19:
      H(P);
      d = b.memoizedState;
      if (null === d) return null;
      f = 0 !== (b.flags & 64);
      g = d.rendering;
      if (null === g) {
        if (f) Fi(d, !1);else {
          if (0 !== V || null !== a && 0 !== (a.flags & 64)) for (a = b.child; null !== a;) {
            g = ih(a);

            if (null !== g) {
              b.flags |= 64;
              Fi(d, !1);
              f = g.updateQueue;
              null !== f && (b.updateQueue = f, b.flags |= 4);
              null === d.lastEffect && (b.firstEffect = null);
              b.lastEffect = d.lastEffect;
              d = c;

              for (c = b.child; null !== c;) {
                f = c, a = d, f.flags &= 2, f.nextEffect = null, f.firstEffect = null, f.lastEffect = null, g = f.alternate, null === g ? (f.childLanes = 0, f.lanes = a, f.child = null, f.memoizedProps = null, f.memoizedState = null, f.updateQueue = null, f.dependencies = null, f.stateNode = null) : (f.childLanes = g.childLanes, f.lanes = g.lanes, f.child = g.child, f.memoizedProps = g.memoizedProps, f.memoizedState = g.memoizedState, f.updateQueue = g.updateQueue, f.type = g.type, a = g.dependencies, f.dependencies = null === a ? null : {
                  lanes: a.lanes,
                  firstContext: a.firstContext
                }), c = c.sibling;
              }

              I(P, P.current & 1 | 2);
              return b.child;
            }

            a = a.sibling;
          }
          null !== d.tail && O() > Ji && (b.flags |= 64, f = !0, Fi(d, !1), b.lanes = 33554432);
        }
      } else {
        if (!f) if (a = ih(g), null !== a) {
          if (b.flags |= 64, f = !0, c = a.updateQueue, null !== c && (b.updateQueue = c, b.flags |= 4), Fi(d, !0), null === d.tail && "hidden" === d.tailMode && !g.alternate && !lh) return b = b.lastEffect = d.lastEffect, null !== b && (b.nextEffect = null), null;
        } else 2 * O() - d.renderingStartTime > Ji && 1073741824 !== c && (b.flags |= 64, f = !0, Fi(d, !1), b.lanes = 33554432);
        d.isBackwards ? (g.sibling = b.child, b.child = g) : (c = d.last, null !== c ? c.sibling = g : b.child = g, d.last = g);
      }
      return null !== d.tail ? (c = d.tail, d.rendering = c, d.tail = c.sibling, d.lastEffect = b.lastEffect, d.renderingStartTime = O(), c.sibling = null, b = P.current, I(P, f ? b & 1 | 2 : b & 1), c) : null;

    case 23:
    case 24:
      return Ki(), null !== a && null !== a.memoizedState !== (null !== b.memoizedState) && "unstable-defer-without-hiding" !== d.mode && (b.flags |= 4), null;
  }

  throw Error(y(156, b.tag));
}

function Li(a) {
  switch (a.tag) {
    case 1:
      Ff(a.type) && Gf();
      var b = a.flags;
      return b & 4096 ? (a.flags = b & -4097 | 64, a) : null;

    case 3:
      fh();
      H(N);
      H(M);
      uh();
      b = a.flags;
      if (0 !== (b & 64)) throw Error(y(285));
      a.flags = b & -4097 | 64;
      return a;

    case 5:
      return hh(a), null;

    case 13:
      return H(P), b = a.flags, b & 4096 ? (a.flags = b & -4097 | 64, a) : null;

    case 19:
      return H(P), null;

    case 4:
      return fh(), null;

    case 10:
      return rg(a), null;

    case 23:
    case 24:
      return Ki(), null;

    default:
      return null;
  }
}

function Mi(a, b) {
  try {
    var c = "",
        d = b;

    do {
      c += Qa(d), d = d.return;
    } while (d);

    var e = c;
  } catch (f) {
    e = "\nError generating stack: " + f.message + "\n" + f.stack;
  }

  return {
    value: a,
    source: b,
    stack: e
  };
}

function Ni(a, b) {
  try {
    console.error(b.value);
  } catch (c) {
    setTimeout(function () {
      throw c;
    });
  }
}

var Oi = "function" === typeof WeakMap ? WeakMap : Map;

function Pi(a, b, c) {
  c = zg(-1, c);
  c.tag = 3;
  c.payload = {
    element: null
  };
  var d = b.value;

  c.callback = function () {
    Qi || (Qi = !0, Ri = d);
    Ni(a, b);
  };

  return c;
}

function Si(a, b, c) {
  c = zg(-1, c);
  c.tag = 3;
  var d = a.type.getDerivedStateFromError;

  if ("function" === typeof d) {
    var e = b.value;

    c.payload = function () {
      Ni(a, b);
      return d(e);
    };
  }

  var f = a.stateNode;
  null !== f && "function" === typeof f.componentDidCatch && (c.callback = function () {
    "function" !== typeof d && (null === Ti ? Ti = new Set([this]) : Ti.add(this), Ni(a, b));
    var c = b.stack;
    this.componentDidCatch(b.value, {
      componentStack: null !== c ? c : ""
    });
  });
  return c;
}

var Ui = "function" === typeof WeakSet ? WeakSet : Set;

function Vi(a) {
  var b = a.ref;
  if (null !== b) if ("function" === typeof b) try {
    b(null);
  } catch (c) {
    Wi(a, c);
  } else b.current = null;
}

function Xi(a, b) {
  switch (b.tag) {
    case 0:
    case 11:
    case 15:
    case 22:
      return;

    case 1:
      if (b.flags & 256 && null !== a) {
        var c = a.memoizedProps,
            d = a.memoizedState;
        a = b.stateNode;
        b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : lg(b.type, c), d);
        a.__reactInternalSnapshotBeforeUpdate = b;
      }

      return;

    case 3:
      b.flags & 256 && qf(b.stateNode.containerInfo);
      return;

    case 5:
    case 6:
    case 4:
    case 17:
      return;
  }

  throw Error(y(163));
}

function Yi(a, b, c) {
  switch (c.tag) {
    case 0:
    case 11:
    case 15:
    case 22:
      b = c.updateQueue;
      b = null !== b ? b.lastEffect : null;

      if (null !== b) {
        a = b = b.next;

        do {
          if (3 === (a.tag & 3)) {
            var d = a.create;
            a.destroy = d();
          }

          a = a.next;
        } while (a !== b);
      }

      b = c.updateQueue;
      b = null !== b ? b.lastEffect : null;

      if (null !== b) {
        a = b = b.next;

        do {
          var e = a;
          d = e.next;
          e = e.tag;
          0 !== (e & 4) && 0 !== (e & 1) && (Zi(c, a), $i(c, a));
          a = d;
        } while (a !== b);
      }

      return;

    case 1:
      a = c.stateNode;
      c.flags & 4 && (null === b ? a.componentDidMount() : (d = c.elementType === c.type ? b.memoizedProps : lg(c.type, b.memoizedProps), a.componentDidUpdate(d, b.memoizedState, a.__reactInternalSnapshotBeforeUpdate)));
      b = c.updateQueue;
      null !== b && Eg(c, b, a);
      return;

    case 3:
      b = c.updateQueue;

      if (null !== b) {
        a = null;
        if (null !== c.child) switch (c.child.tag) {
          case 5:
            a = c.child.stateNode;
            break;

          case 1:
            a = c.child.stateNode;
        }
        Eg(c, b, a);
      }

      return;

    case 5:
      a = c.stateNode;
      null === b && c.flags & 4 && mf(c.type, c.memoizedProps) && a.focus();
      return;

    case 6:
      return;

    case 4:
      return;

    case 12:
      return;

    case 13:
      null === c.memoizedState && (c = c.alternate, null !== c && (c = c.memoizedState, null !== c && (c = c.dehydrated, null !== c && Cc(c))));
      return;

    case 19:
    case 17:
    case 20:
    case 21:
    case 23:
    case 24:
      return;
  }

  throw Error(y(163));
}

function aj(a, b) {
  for (var c = a;;) {
    if (5 === c.tag) {
      var d = c.stateNode;
      if (b) d = d.style, "function" === typeof d.setProperty ? d.setProperty("display", "none", "important") : d.display = "none";else {
        d = c.stateNode;
        var e = c.memoizedProps.style;
        e = void 0 !== e && null !== e && e.hasOwnProperty("display") ? e.display : null;
        d.style.display = sb("display", e);
      }
    } else if (6 === c.tag) c.stateNode.nodeValue = b ? "" : c.memoizedProps;else if ((23 !== c.tag && 24 !== c.tag || null === c.memoizedState || c === a) && null !== c.child) {
      c.child.return = c;
      c = c.child;
      continue;
    }

    if (c === a) break;

    for (; null === c.sibling;) {
      if (null === c.return || c.return === a) return;
      c = c.return;
    }

    c.sibling.return = c.return;
    c = c.sibling;
  }
}

function bj(a, b) {
  if (Mf && "function" === typeof Mf.onCommitFiberUnmount) try {
    Mf.onCommitFiberUnmount(Lf, b);
  } catch (f) {}

  switch (b.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
    case 22:
      a = b.updateQueue;

      if (null !== a && (a = a.lastEffect, null !== a)) {
        var c = a = a.next;

        do {
          var d = c,
              e = d.destroy;
          d = d.tag;
          if (void 0 !== e) if (0 !== (d & 4)) Zi(b, c);else {
            d = b;

            try {
              e();
            } catch (f) {
              Wi(d, f);
            }
          }
          c = c.next;
        } while (c !== a);
      }

      break;

    case 1:
      Vi(b);
      a = b.stateNode;
      if ("function" === typeof a.componentWillUnmount) try {
        a.props = b.memoizedProps, a.state = b.memoizedState, a.componentWillUnmount();
      } catch (f) {
        Wi(b, f);
      }
      break;

    case 5:
      Vi(b);
      break;

    case 4:
      cj(a, b);
  }
}

function dj(a) {
  a.alternate = null;
  a.child = null;
  a.dependencies = null;
  a.firstEffect = null;
  a.lastEffect = null;
  a.memoizedProps = null;
  a.memoizedState = null;
  a.pendingProps = null;
  a.return = null;
  a.updateQueue = null;
}

function ej(a) {
  return 5 === a.tag || 3 === a.tag || 4 === a.tag;
}

function fj(a) {
  a: {
    for (var b = a.return; null !== b;) {
      if (ej(b)) break a;
      b = b.return;
    }

    throw Error(y(160));
  }

  var c = b;
  b = c.stateNode;

  switch (c.tag) {
    case 5:
      var d = !1;
      break;

    case 3:
      b = b.containerInfo;
      d = !0;
      break;

    case 4:
      b = b.containerInfo;
      d = !0;
      break;

    default:
      throw Error(y(161));
  }

  c.flags & 16 && (pb(b, ""), c.flags &= -17);

  a: b: for (c = a;;) {
    for (; null === c.sibling;) {
      if (null === c.return || ej(c.return)) {
        c = null;
        break a;
      }

      c = c.return;
    }

    c.sibling.return = c.return;

    for (c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag;) {
      if (c.flags & 2) continue b;
      if (null === c.child || 4 === c.tag) continue b;else c.child.return = c, c = c.child;
    }

    if (!(c.flags & 2)) {
      c = c.stateNode;
      break a;
    }
  }

  d ? gj(a, c, b) : hj(a, c, b);
}

function gj(a, b, c) {
  var d = a.tag,
      e = 5 === d || 6 === d;
  if (e) a = e ? a.stateNode : a.stateNode.instance, b ? 8 === c.nodeType ? c.parentNode.insertBefore(a, b) : c.insertBefore(a, b) : (8 === c.nodeType ? (b = c.parentNode, b.insertBefore(a, c)) : (b = c, b.appendChild(a)), c = c._reactRootContainer, null !== c && void 0 !== c || null !== b.onclick || (b.onclick = jf));else if (4 !== d && (a = a.child, null !== a)) for (gj(a, b, c), a = a.sibling; null !== a;) {
    gj(a, b, c), a = a.sibling;
  }
}

function hj(a, b, c) {
  var d = a.tag,
      e = 5 === d || 6 === d;
  if (e) a = e ? a.stateNode : a.stateNode.instance, b ? c.insertBefore(a, b) : c.appendChild(a);else if (4 !== d && (a = a.child, null !== a)) for (hj(a, b, c), a = a.sibling; null !== a;) {
    hj(a, b, c), a = a.sibling;
  }
}

function cj(a, b) {
  for (var c = b, d = !1, e, f;;) {
    if (!d) {
      d = c.return;

      a: for (;;) {
        if (null === d) throw Error(y(160));
        e = d.stateNode;

        switch (d.tag) {
          case 5:
            f = !1;
            break a;

          case 3:
            e = e.containerInfo;
            f = !0;
            break a;

          case 4:
            e = e.containerInfo;
            f = !0;
            break a;
        }

        d = d.return;
      }

      d = !0;
    }

    if (5 === c.tag || 6 === c.tag) {
      a: for (var g = a, h = c, k = h;;) {
        if (bj(g, k), null !== k.child && 4 !== k.tag) k.child.return = k, k = k.child;else {
          if (k === h) break a;

          for (; null === k.sibling;) {
            if (null === k.return || k.return === h) break a;
            k = k.return;
          }

          k.sibling.return = k.return;
          k = k.sibling;
        }
      }

      f ? (g = e, h = c.stateNode, 8 === g.nodeType ? g.parentNode.removeChild(h) : g.removeChild(h)) : e.removeChild(c.stateNode);
    } else if (4 === c.tag) {
      if (null !== c.child) {
        e = c.stateNode.containerInfo;
        f = !0;
        c.child.return = c;
        c = c.child;
        continue;
      }
    } else if (bj(a, c), null !== c.child) {
      c.child.return = c;
      c = c.child;
      continue;
    }

    if (c === b) break;

    for (; null === c.sibling;) {
      if (null === c.return || c.return === b) return;
      c = c.return;
      4 === c.tag && (d = !1);
    }

    c.sibling.return = c.return;
    c = c.sibling;
  }
}

function ij(a, b) {
  switch (b.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
    case 22:
      var c = b.updateQueue;
      c = null !== c ? c.lastEffect : null;

      if (null !== c) {
        var d = c = c.next;

        do {
          3 === (d.tag & 3) && (a = d.destroy, d.destroy = void 0, void 0 !== a && a()), d = d.next;
        } while (d !== c);
      }

      return;

    case 1:
      return;

    case 5:
      c = b.stateNode;

      if (null != c) {
        d = b.memoizedProps;
        var e = null !== a ? a.memoizedProps : d;
        a = b.type;
        var f = b.updateQueue;
        b.updateQueue = null;

        if (null !== f) {
          c[xf] = d;
          "input" === a && "radio" === d.type && null != d.name && $a(c, d);
          wb(a, e);
          b = wb(a, d);

          for (e = 0; e < f.length; e += 2) {
            var g = f[e],
                h = f[e + 1];
            "style" === g ? tb(c, h) : "dangerouslySetInnerHTML" === g ? ob(c, h) : "children" === g ? pb(c, h) : qa(c, g, h, b);
          }

          switch (a) {
            case "input":
              ab(c, d);
              break;

            case "textarea":
              ib(c, d);
              break;

            case "select":
              a = c._wrapperState.wasMultiple, c._wrapperState.wasMultiple = !!d.multiple, f = d.value, null != f ? fb(c, !!d.multiple, f, !1) : a !== !!d.multiple && (null != d.defaultValue ? fb(c, !!d.multiple, d.defaultValue, !0) : fb(c, !!d.multiple, d.multiple ? [] : "", !1));
          }
        }
      }

      return;

    case 6:
      if (null === b.stateNode) throw Error(y(162));
      b.stateNode.nodeValue = b.memoizedProps;
      return;

    case 3:
      c = b.stateNode;
      c.hydrate && (c.hydrate = !1, Cc(c.containerInfo));
      return;

    case 12:
      return;

    case 13:
      null !== b.memoizedState && (jj = O(), aj(b.child, !0));
      kj(b);
      return;

    case 19:
      kj(b);
      return;

    case 17:
      return;

    case 23:
    case 24:
      aj(b, null !== b.memoizedState);
      return;
  }

  throw Error(y(163));
}

function kj(a) {
  var b = a.updateQueue;

  if (null !== b) {
    a.updateQueue = null;
    var c = a.stateNode;
    null === c && (c = a.stateNode = new Ui());
    b.forEach(function (b) {
      var d = lj.bind(null, a, b);
      c.has(b) || (c.add(b), b.then(d, d));
    });
  }
}

function mj(a, b) {
  return null !== a && (a = a.memoizedState, null === a || null !== a.dehydrated) ? (b = b.memoizedState, null !== b && null === b.dehydrated) : !1;
}

var nj = Math.ceil,
    oj = ra.ReactCurrentDispatcher,
    pj = ra.ReactCurrentOwner,
    X = 0,
    U = null,
    Y = null,
    W = 0,
    qj = 0,
    rj = Bf(0),
    V = 0,
    sj = null,
    tj = 0,
    Dg = 0,
    Hi = 0,
    uj = 0,
    vj = null,
    jj = 0,
    Ji = Infinity;

function wj() {
  Ji = O() + 500;
}

var Z = null,
    Qi = !1,
    Ri = null,
    Ti = null,
    xj = !1,
    yj = null,
    zj = 90,
    Aj = [],
    Bj = [],
    Cj = null,
    Dj = 0,
    Ej = null,
    Fj = -1,
    Gj = 0,
    Hj = 0,
    Ij = null,
    Jj = !1;

function Hg() {
  return 0 !== (X & 48) ? O() : -1 !== Fj ? Fj : Fj = O();
}

function Ig(a) {
  a = a.mode;
  if (0 === (a & 2)) return 1;
  if (0 === (a & 4)) return 99 === eg() ? 1 : 2;
  0 === Gj && (Gj = tj);

  if (0 !== kg.transition) {
    0 !== Hj && (Hj = null !== vj ? vj.pendingLanes : 0);
    a = Gj;
    var b = 4186112 & ~Hj;
    b &= -b;
    0 === b && (a = 4186112 & ~a, b = a & -a, 0 === b && (b = 8192));
    return b;
  }

  a = eg();
  0 !== (X & 4) && 98 === a ? a = Xc(12, Gj) : (a = Sc(a), a = Xc(a, Gj));
  return a;
}

function Jg(a, b, c) {
  if (50 < Dj) throw Dj = 0, Ej = null, Error(y(185));
  a = Kj(a, b);
  if (null === a) return null;
  $c(a, b, c);
  a === U && (Hi |= b, 4 === V && Ii(a, W));
  var d = eg();
  1 === b ? 0 !== (X & 8) && 0 === (X & 48) ? Lj(a) : (Mj(a, c), 0 === X && (wj(), ig())) : (0 === (X & 4) || 98 !== d && 99 !== d || (null === Cj ? Cj = new Set([a]) : Cj.add(a)), Mj(a, c));
  vj = a;
}

function Kj(a, b) {
  a.lanes |= b;
  var c = a.alternate;
  null !== c && (c.lanes |= b);
  c = a;

  for (a = a.return; null !== a;) {
    a.childLanes |= b, c = a.alternate, null !== c && (c.childLanes |= b), c = a, a = a.return;
  }

  return 3 === c.tag ? c.stateNode : null;
}

function Mj(a, b) {
  for (var c = a.callbackNode, d = a.suspendedLanes, e = a.pingedLanes, f = a.expirationTimes, g = a.pendingLanes; 0 < g;) {
    var h = 31 - Vc(g),
        k = 1 << h,
        l = f[h];

    if (-1 === l) {
      if (0 === (k & d) || 0 !== (k & e)) {
        l = b;
        Rc(k);
        var n = F;
        f[h] = 10 <= n ? l + 250 : 6 <= n ? l + 5E3 : -1;
      }
    } else l <= b && (a.expiredLanes |= k);

    g &= ~k;
  }

  d = Uc(a, a === U ? W : 0);
  b = F;
  if (0 === d) null !== c && (c !== Zf && Pf(c), a.callbackNode = null, a.callbackPriority = 0);else {
    if (null !== c) {
      if (a.callbackPriority === b) return;
      c !== Zf && Pf(c);
    }

    15 === b ? (c = Lj.bind(null, a), null === ag ? (ag = [c], bg = Of(Uf, jg)) : ag.push(c), c = Zf) : 14 === b ? c = hg(99, Lj.bind(null, a)) : (c = Tc(b), c = hg(c, Nj.bind(null, a)));
    a.callbackPriority = b;
    a.callbackNode = c;
  }
}

function Nj(a) {
  Fj = -1;
  Hj = Gj = 0;
  if (0 !== (X & 48)) throw Error(y(327));
  var b = a.callbackNode;
  if (Oj() && a.callbackNode !== b) return null;
  var c = Uc(a, a === U ? W : 0);
  if (0 === c) return null;
  var d = c;
  var e = X;
  X |= 16;
  var f = Pj();
  if (U !== a || W !== d) wj(), Qj(a, d);

  do {
    try {
      Rj();
      break;
    } catch (h) {
      Sj(a, h);
    }
  } while (1);

  qg();
  oj.current = f;
  X = e;
  null !== Y ? d = 0 : (U = null, W = 0, d = V);
  if (0 !== (tj & Hi)) Qj(a, 0);else if (0 !== d) {
    2 === d && (X |= 64, a.hydrate && (a.hydrate = !1, qf(a.containerInfo)), c = Wc(a), 0 !== c && (d = Tj(a, c)));
    if (1 === d) throw b = sj, Qj(a, 0), Ii(a, c), Mj(a, O()), b;
    a.finishedWork = a.current.alternate;
    a.finishedLanes = c;

    switch (d) {
      case 0:
      case 1:
        throw Error(y(345));

      case 2:
        Uj(a);
        break;

      case 3:
        Ii(a, c);

        if ((c & 62914560) === c && (d = jj + 500 - O(), 10 < d)) {
          if (0 !== Uc(a, 0)) break;
          e = a.suspendedLanes;

          if ((e & c) !== c) {
            Hg();
            a.pingedLanes |= a.suspendedLanes & e;
            break;
          }

          a.timeoutHandle = of(Uj.bind(null, a), d);
          break;
        }

        Uj(a);
        break;

      case 4:
        Ii(a, c);
        if ((c & 4186112) === c) break;
        d = a.eventTimes;

        for (e = -1; 0 < c;) {
          var g = 31 - Vc(c);
          f = 1 << g;
          g = d[g];
          g > e && (e = g);
          c &= ~f;
        }

        c = e;
        c = O() - c;
        c = (120 > c ? 120 : 480 > c ? 480 : 1080 > c ? 1080 : 1920 > c ? 1920 : 3E3 > c ? 3E3 : 4320 > c ? 4320 : 1960 * nj(c / 1960)) - c;

        if (10 < c) {
          a.timeoutHandle = of(Uj.bind(null, a), c);
          break;
        }

        Uj(a);
        break;

      case 5:
        Uj(a);
        break;

      default:
        throw Error(y(329));
    }
  }
  Mj(a, O());
  return a.callbackNode === b ? Nj.bind(null, a) : null;
}

function Ii(a, b) {
  b &= ~uj;
  b &= ~Hi;
  a.suspendedLanes |= b;
  a.pingedLanes &= ~b;

  for (a = a.expirationTimes; 0 < b;) {
    var c = 31 - Vc(b),
        d = 1 << c;
    a[c] = -1;
    b &= ~d;
  }
}

function Lj(a) {
  if (0 !== (X & 48)) throw Error(y(327));
  Oj();

  if (a === U && 0 !== (a.expiredLanes & W)) {
    var b = W;
    var c = Tj(a, b);
    0 !== (tj & Hi) && (b = Uc(a, b), c = Tj(a, b));
  } else b = Uc(a, 0), c = Tj(a, b);

  0 !== a.tag && 2 === c && (X |= 64, a.hydrate && (a.hydrate = !1, qf(a.containerInfo)), b = Wc(a), 0 !== b && (c = Tj(a, b)));
  if (1 === c) throw c = sj, Qj(a, 0), Ii(a, b), Mj(a, O()), c;
  a.finishedWork = a.current.alternate;
  a.finishedLanes = b;
  Uj(a);
  Mj(a, O());
  return null;
}

function Vj() {
  if (null !== Cj) {
    var a = Cj;
    Cj = null;
    a.forEach(function (a) {
      a.expiredLanes |= 24 & a.pendingLanes;
      Mj(a, O());
    });
  }

  ig();
}

function Wj(a, b) {
  var c = X;
  X |= 1;

  try {
    return a(b);
  } finally {
    X = c, 0 === X && (wj(), ig());
  }
}

function Xj(a, b) {
  var c = X;
  X &= -2;
  X |= 8;

  try {
    return a(b);
  } finally {
    X = c, 0 === X && (wj(), ig());
  }
}

function ni(a, b) {
  I(rj, qj);
  qj |= b;
  tj |= b;
}

function Ki() {
  qj = rj.current;
  H(rj);
}

function Qj(a, b) {
  a.finishedWork = null;
  a.finishedLanes = 0;
  var c = a.timeoutHandle;
  -1 !== c && (a.timeoutHandle = -1, pf(c));
  if (null !== Y) for (c = Y.return; null !== c;) {
    var d = c;

    switch (d.tag) {
      case 1:
        d = d.type.childContextTypes;
        null !== d && void 0 !== d && Gf();
        break;

      case 3:
        fh();
        H(N);
        H(M);
        uh();
        break;

      case 5:
        hh(d);
        break;

      case 4:
        fh();
        break;

      case 13:
        H(P);
        break;

      case 19:
        H(P);
        break;

      case 10:
        rg(d);
        break;

      case 23:
      case 24:
        Ki();
    }

    c = c.return;
  }
  U = a;
  Y = Tg(a.current, null);
  W = qj = tj = b;
  V = 0;
  sj = null;
  uj = Hi = Dg = 0;
}

function Sj(a, b) {
  do {
    var c = Y;

    try {
      qg();
      vh.current = Gh;

      if (yh) {
        for (var d = R.memoizedState; null !== d;) {
          var e = d.queue;
          null !== e && (e.pending = null);
          d = d.next;
        }

        yh = !1;
      }

      xh = 0;
      T = S = R = null;
      zh = !1;
      pj.current = null;

      if (null === c || null === c.return) {
        V = 1;
        sj = b;
        Y = null;
        break;
      }

      a: {
        var f = a,
            g = c.return,
            h = c,
            k = b;
        b = W;
        h.flags |= 2048;
        h.firstEffect = h.lastEffect = null;

        if (null !== k && "object" === typeof k && "function" === typeof k.then) {
          var l = k;

          if (0 === (h.mode & 2)) {
            var n = h.alternate;
            n ? (h.updateQueue = n.updateQueue, h.memoizedState = n.memoizedState, h.lanes = n.lanes) : (h.updateQueue = null, h.memoizedState = null);
          }

          var A = 0 !== (P.current & 1),
              p = g;

          do {
            var C;

            if (C = 13 === p.tag) {
              var x = p.memoizedState;
              if (null !== x) C = null !== x.dehydrated ? !0 : !1;else {
                var w = p.memoizedProps;
                C = void 0 === w.fallback ? !1 : !0 !== w.unstable_avoidThisFallback ? !0 : A ? !1 : !0;
              }
            }

            if (C) {
              var z = p.updateQueue;

              if (null === z) {
                var u = new Set();
                u.add(l);
                p.updateQueue = u;
              } else z.add(l);

              if (0 === (p.mode & 2)) {
                p.flags |= 64;
                h.flags |= 16384;
                h.flags &= -2981;
                if (1 === h.tag) if (null === h.alternate) h.tag = 17;else {
                  var t = zg(-1, 1);
                  t.tag = 2;
                  Ag(h, t);
                }
                h.lanes |= 1;
                break a;
              }

              k = void 0;
              h = b;
              var q = f.pingCache;
              null === q ? (q = f.pingCache = new Oi(), k = new Set(), q.set(l, k)) : (k = q.get(l), void 0 === k && (k = new Set(), q.set(l, k)));

              if (!k.has(h)) {
                k.add(h);
                var v = Yj.bind(null, f, l, h);
                l.then(v, v);
              }

              p.flags |= 4096;
              p.lanes = b;
              break a;
            }

            p = p.return;
          } while (null !== p);

          k = Error((Ra(h.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.");
        }

        5 !== V && (V = 2);
        k = Mi(k, h);
        p = g;

        do {
          switch (p.tag) {
            case 3:
              f = k;
              p.flags |= 4096;
              b &= -b;
              p.lanes |= b;
              var J = Pi(p, f, b);
              Bg(p, J);
              break a;

            case 1:
              f = k;
              var K = p.type,
                  Q = p.stateNode;

              if (0 === (p.flags & 64) && ("function" === typeof K.getDerivedStateFromError || null !== Q && "function" === typeof Q.componentDidCatch && (null === Ti || !Ti.has(Q)))) {
                p.flags |= 4096;
                b &= -b;
                p.lanes |= b;
                var L = Si(p, f, b);
                Bg(p, L);
                break a;
              }

          }

          p = p.return;
        } while (null !== p);
      }

      Zj(c);
    } catch (va) {
      b = va;
      Y === c && null !== c && (Y = c = c.return);
      continue;
    }

    break;
  } while (1);
}

function Pj() {
  var a = oj.current;
  oj.current = Gh;
  return null === a ? Gh : a;
}

function Tj(a, b) {
  var c = X;
  X |= 16;
  var d = Pj();
  U === a && W === b || Qj(a, b);

  do {
    try {
      ak();
      break;
    } catch (e) {
      Sj(a, e);
    }
  } while (1);

  qg();
  X = c;
  oj.current = d;
  if (null !== Y) throw Error(y(261));
  U = null;
  W = 0;
  return V;
}

function ak() {
  for (; null !== Y;) {
    bk(Y);
  }
}

function Rj() {
  for (; null !== Y && !Qf();) {
    bk(Y);
  }
}

function bk(a) {
  var b = ck(a.alternate, a, qj);
  a.memoizedProps = a.pendingProps;
  null === b ? Zj(a) : Y = b;
  pj.current = null;
}

function Zj(a) {
  var b = a;

  do {
    var c = b.alternate;
    a = b.return;

    if (0 === (b.flags & 2048)) {
      c = Gi(c, b, qj);

      if (null !== c) {
        Y = c;
        return;
      }

      c = b;

      if (24 !== c.tag && 23 !== c.tag || null === c.memoizedState || 0 !== (qj & 1073741824) || 0 === (c.mode & 4)) {
        for (var d = 0, e = c.child; null !== e;) {
          d |= e.lanes | e.childLanes, e = e.sibling;
        }

        c.childLanes = d;
      }

      null !== a && 0 === (a.flags & 2048) && (null === a.firstEffect && (a.firstEffect = b.firstEffect), null !== b.lastEffect && (null !== a.lastEffect && (a.lastEffect.nextEffect = b.firstEffect), a.lastEffect = b.lastEffect), 1 < b.flags && (null !== a.lastEffect ? a.lastEffect.nextEffect = b : a.firstEffect = b, a.lastEffect = b));
    } else {
      c = Li(b);

      if (null !== c) {
        c.flags &= 2047;
        Y = c;
        return;
      }

      null !== a && (a.firstEffect = a.lastEffect = null, a.flags |= 2048);
    }

    b = b.sibling;

    if (null !== b) {
      Y = b;
      return;
    }

    Y = b = a;
  } while (null !== b);

  0 === V && (V = 5);
}

function Uj(a) {
  var b = eg();
  gg(99, dk.bind(null, a, b));
  return null;
}

function dk(a, b) {
  do {
    Oj();
  } while (null !== yj);

  if (0 !== (X & 48)) throw Error(y(327));
  var c = a.finishedWork;
  if (null === c) return null;
  a.finishedWork = null;
  a.finishedLanes = 0;
  if (c === a.current) throw Error(y(177));
  a.callbackNode = null;
  var d = c.lanes | c.childLanes,
      e = d,
      f = a.pendingLanes & ~e;
  a.pendingLanes = e;
  a.suspendedLanes = 0;
  a.pingedLanes = 0;
  a.expiredLanes &= e;
  a.mutableReadLanes &= e;
  a.entangledLanes &= e;
  e = a.entanglements;

  for (var g = a.eventTimes, h = a.expirationTimes; 0 < f;) {
    var k = 31 - Vc(f),
        l = 1 << k;
    e[k] = 0;
    g[k] = -1;
    h[k] = -1;
    f &= ~l;
  }

  null !== Cj && 0 === (d & 24) && Cj.has(a) && Cj.delete(a);
  a === U && (Y = U = null, W = 0);
  1 < c.flags ? null !== c.lastEffect ? (c.lastEffect.nextEffect = c, d = c.firstEffect) : d = c : d = c.firstEffect;

  if (null !== d) {
    e = X;
    X |= 32;
    pj.current = null;
    kf = fd;
    g = Ne();

    if (Oe(g)) {
      if ("selectionStart" in g) h = {
        start: g.selectionStart,
        end: g.selectionEnd
      };else a: if (h = (h = g.ownerDocument) && h.defaultView || window, (l = h.getSelection && h.getSelection()) && 0 !== l.rangeCount) {
        h = l.anchorNode;
        f = l.anchorOffset;
        k = l.focusNode;
        l = l.focusOffset;

        try {
          h.nodeType, k.nodeType;
        } catch (va) {
          h = null;
          break a;
        }

        var n = 0,
            A = -1,
            p = -1,
            C = 0,
            x = 0,
            w = g,
            z = null;

        b: for (;;) {
          for (var u;;) {
            w !== h || 0 !== f && 3 !== w.nodeType || (A = n + f);
            w !== k || 0 !== l && 3 !== w.nodeType || (p = n + l);
            3 === w.nodeType && (n += w.nodeValue.length);
            if (null === (u = w.firstChild)) break;
            z = w;
            w = u;
          }

          for (;;) {
            if (w === g) break b;
            z === h && ++C === f && (A = n);
            z === k && ++x === l && (p = n);
            if (null !== (u = w.nextSibling)) break;
            w = z;
            z = w.parentNode;
          }

          w = u;
        }

        h = -1 === A || -1 === p ? null : {
          start: A,
          end: p
        };
      } else h = null;
      h = h || {
        start: 0,
        end: 0
      };
    } else h = null;

    lf = {
      focusedElem: g,
      selectionRange: h
    };
    fd = !1;
    Ij = null;
    Jj = !1;
    Z = d;

    do {
      try {
        ek();
      } catch (va) {
        if (null === Z) throw Error(y(330));
        Wi(Z, va);
        Z = Z.nextEffect;
      }
    } while (null !== Z);

    Ij = null;
    Z = d;

    do {
      try {
        for (g = a; null !== Z;) {
          var t = Z.flags;
          t & 16 && pb(Z.stateNode, "");

          if (t & 128) {
            var q = Z.alternate;

            if (null !== q) {
              var v = q.ref;
              null !== v && ("function" === typeof v ? v(null) : v.current = null);
            }
          }

          switch (t & 1038) {
            case 2:
              fj(Z);
              Z.flags &= -3;
              break;

            case 6:
              fj(Z);
              Z.flags &= -3;
              ij(Z.alternate, Z);
              break;

            case 1024:
              Z.flags &= -1025;
              break;

            case 1028:
              Z.flags &= -1025;
              ij(Z.alternate, Z);
              break;

            case 4:
              ij(Z.alternate, Z);
              break;

            case 8:
              h = Z;
              cj(g, h);
              var J = h.alternate;
              dj(h);
              null !== J && dj(J);
          }

          Z = Z.nextEffect;
        }
      } catch (va) {
        if (null === Z) throw Error(y(330));
        Wi(Z, va);
        Z = Z.nextEffect;
      }
    } while (null !== Z);

    v = lf;
    q = Ne();
    t = v.focusedElem;
    g = v.selectionRange;

    if (q !== t && t && t.ownerDocument && Me(t.ownerDocument.documentElement, t)) {
      null !== g && Oe(t) && (q = g.start, v = g.end, void 0 === v && (v = q), "selectionStart" in t ? (t.selectionStart = q, t.selectionEnd = Math.min(v, t.value.length)) : (v = (q = t.ownerDocument || document) && q.defaultView || window, v.getSelection && (v = v.getSelection(), h = t.textContent.length, J = Math.min(g.start, h), g = void 0 === g.end ? J : Math.min(g.end, h), !v.extend && J > g && (h = g, g = J, J = h), h = Le(t, J), f = Le(t, g), h && f && (1 !== v.rangeCount || v.anchorNode !== h.node || v.anchorOffset !== h.offset || v.focusNode !== f.node || v.focusOffset !== f.offset) && (q = q.createRange(), q.setStart(h.node, h.offset), v.removeAllRanges(), J > g ? (v.addRange(q), v.extend(f.node, f.offset)) : (q.setEnd(f.node, f.offset), v.addRange(q))))));
      q = [];

      for (v = t; v = v.parentNode;) {
        1 === v.nodeType && q.push({
          element: v,
          left: v.scrollLeft,
          top: v.scrollTop
        });
      }

      "function" === typeof t.focus && t.focus();

      for (t = 0; t < q.length; t++) {
        v = q[t], v.element.scrollLeft = v.left, v.element.scrollTop = v.top;
      }
    }

    fd = !!kf;
    lf = kf = null;
    a.current = c;
    Z = d;

    do {
      try {
        for (t = a; null !== Z;) {
          var K = Z.flags;
          K & 36 && Yi(t, Z.alternate, Z);

          if (K & 128) {
            q = void 0;
            var Q = Z.ref;

            if (null !== Q) {
              var L = Z.stateNode;

              switch (Z.tag) {
                case 5:
                  q = L;
                  break;

                default:
                  q = L;
              }

              "function" === typeof Q ? Q(q) : Q.current = q;
            }
          }

          Z = Z.nextEffect;
        }
      } catch (va) {
        if (null === Z) throw Error(y(330));
        Wi(Z, va);
        Z = Z.nextEffect;
      }
    } while (null !== Z);

    Z = null;
    $f();
    X = e;
  } else a.current = c;

  if (xj) xj = !1, yj = a, zj = b;else for (Z = d; null !== Z;) {
    b = Z.nextEffect, Z.nextEffect = null, Z.flags & 8 && (K = Z, K.sibling = null, K.stateNode = null), Z = b;
  }
  d = a.pendingLanes;
  0 === d && (Ti = null);
  1 === d ? a === Ej ? Dj++ : (Dj = 0, Ej = a) : Dj = 0;
  c = c.stateNode;
  if (Mf && "function" === typeof Mf.onCommitFiberRoot) try {
    Mf.onCommitFiberRoot(Lf, c, void 0, 64 === (c.current.flags & 64));
  } catch (va) {}
  Mj(a, O());
  if (Qi) throw Qi = !1, a = Ri, Ri = null, a;
  if (0 !== (X & 8)) return null;
  ig();
  return null;
}

function ek() {
  for (; null !== Z;) {
    var a = Z.alternate;
    Jj || null === Ij || (0 !== (Z.flags & 8) ? dc(Z, Ij) && (Jj = !0) : 13 === Z.tag && mj(a, Z) && dc(Z, Ij) && (Jj = !0));
    var b = Z.flags;
    0 !== (b & 256) && Xi(a, Z);
    0 === (b & 512) || xj || (xj = !0, hg(97, function () {
      Oj();
      return null;
    }));
    Z = Z.nextEffect;
  }
}

function Oj() {
  if (90 !== zj) {
    var a = 97 < zj ? 97 : zj;
    zj = 90;
    return gg(a, fk);
  }

  return !1;
}

function $i(a, b) {
  Aj.push(b, a);
  xj || (xj = !0, hg(97, function () {
    Oj();
    return null;
  }));
}

function Zi(a, b) {
  Bj.push(b, a);
  xj || (xj = !0, hg(97, function () {
    Oj();
    return null;
  }));
}

function fk() {
  if (null === yj) return !1;
  var a = yj;
  yj = null;
  if (0 !== (X & 48)) throw Error(y(331));
  var b = X;
  X |= 32;
  var c = Bj;
  Bj = [];

  for (var d = 0; d < c.length; d += 2) {
    var e = c[d],
        f = c[d + 1],
        g = e.destroy;
    e.destroy = void 0;
    if ("function" === typeof g) try {
      g();
    } catch (k) {
      if (null === f) throw Error(y(330));
      Wi(f, k);
    }
  }

  c = Aj;
  Aj = [];

  for (d = 0; d < c.length; d += 2) {
    e = c[d];
    f = c[d + 1];

    try {
      var h = e.create;
      e.destroy = h();
    } catch (k) {
      if (null === f) throw Error(y(330));
      Wi(f, k);
    }
  }

  for (h = a.current.firstEffect; null !== h;) {
    a = h.nextEffect, h.nextEffect = null, h.flags & 8 && (h.sibling = null, h.stateNode = null), h = a;
  }

  X = b;
  ig();
  return !0;
}

function gk(a, b, c) {
  b = Mi(c, b);
  b = Pi(a, b, 1);
  Ag(a, b);
  b = Hg();
  a = Kj(a, 1);
  null !== a && ($c(a, 1, b), Mj(a, b));
}

function Wi(a, b) {
  if (3 === a.tag) gk(a, a, b);else for (var c = a.return; null !== c;) {
    if (3 === c.tag) {
      gk(c, a, b);
      break;
    } else if (1 === c.tag) {
      var d = c.stateNode;

      if ("function" === typeof c.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === Ti || !Ti.has(d))) {
        a = Mi(b, a);
        var e = Si(c, a, 1);
        Ag(c, e);
        e = Hg();
        c = Kj(c, 1);
        if (null !== c) $c(c, 1, e), Mj(c, e);else if ("function" === typeof d.componentDidCatch && (null === Ti || !Ti.has(d))) try {
          d.componentDidCatch(b, a);
        } catch (f) {}
        break;
      }
    }

    c = c.return;
  }
}

function Yj(a, b, c) {
  var d = a.pingCache;
  null !== d && d.delete(b);
  b = Hg();
  a.pingedLanes |= a.suspendedLanes & c;
  U === a && (W & c) === c && (4 === V || 3 === V && (W & 62914560) === W && 500 > O() - jj ? Qj(a, 0) : uj |= c);
  Mj(a, b);
}

function lj(a, b) {
  var c = a.stateNode;
  null !== c && c.delete(b);
  b = 0;
  0 === b && (b = a.mode, 0 === (b & 2) ? b = 1 : 0 === (b & 4) ? b = 99 === eg() ? 1 : 2 : (0 === Gj && (Gj = tj), b = Yc(62914560 & ~Gj), 0 === b && (b = 4194304)));
  c = Hg();
  a = Kj(a, b);
  null !== a && ($c(a, b, c), Mj(a, c));
}

var ck;

ck = function ck(a, b, c) {
  var d = b.lanes;
  if (null !== a) {
    if (a.memoizedProps !== b.pendingProps || N.current) ug = !0;else if (0 !== (c & d)) ug = 0 !== (a.flags & 16384) ? !0 : !1;else {
      ug = !1;

      switch (b.tag) {
        case 3:
          ri(b);
          sh();
          break;

        case 5:
          gh(b);
          break;

        case 1:
          Ff(b.type) && Jf(b);
          break;

        case 4:
          eh(b, b.stateNode.containerInfo);
          break;

        case 10:
          d = b.memoizedProps.value;
          var e = b.type._context;
          I(mg, e._currentValue);
          e._currentValue = d;
          break;

        case 13:
          if (null !== b.memoizedState) {
            if (0 !== (c & b.child.childLanes)) return ti(a, b, c);
            I(P, P.current & 1);
            b = hi(a, b, c);
            return null !== b ? b.sibling : null;
          }

          I(P, P.current & 1);
          break;

        case 19:
          d = 0 !== (c & b.childLanes);

          if (0 !== (a.flags & 64)) {
            if (d) return Ai(a, b, c);
            b.flags |= 64;
          }

          e = b.memoizedState;
          null !== e && (e.rendering = null, e.tail = null, e.lastEffect = null);
          I(P, P.current);
          if (d) break;else return null;

        case 23:
        case 24:
          return b.lanes = 0, mi(a, b, c);
      }

      return hi(a, b, c);
    }
  } else ug = !1;
  b.lanes = 0;

  switch (b.tag) {
    case 2:
      d = b.type;
      null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);
      a = b.pendingProps;
      e = Ef(b, M.current);
      tg(b, c);
      e = Ch(null, b, d, a, e, c);
      b.flags |= 1;

      if ("object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof) {
        b.tag = 1;
        b.memoizedState = null;
        b.updateQueue = null;

        if (Ff(d)) {
          var f = !0;
          Jf(b);
        } else f = !1;

        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;
        xg(b);
        var g = d.getDerivedStateFromProps;
        "function" === typeof g && Gg(b, d, g, a);
        e.updater = Kg;
        b.stateNode = e;
        e._reactInternals = b;
        Og(b, d, a, c);
        b = qi(null, b, d, !0, f, c);
      } else b.tag = 0, fi(null, b, e, c), b = b.child;

      return b;

    case 16:
      e = b.elementType;

      a: {
        null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);
        a = b.pendingProps;
        f = e._init;
        e = f(e._payload);
        b.type = e;
        f = b.tag = hk(e);
        a = lg(e, a);

        switch (f) {
          case 0:
            b = li(null, b, e, a, c);
            break a;

          case 1:
            b = pi(null, b, e, a, c);
            break a;

          case 11:
            b = gi(null, b, e, a, c);
            break a;

          case 14:
            b = ii(null, b, e, lg(e.type, a), d, c);
            break a;
        }

        throw Error(y(306, e, ""));
      }

      return b;

    case 0:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : lg(d, e), li(a, b, d, e, c);

    case 1:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : lg(d, e), pi(a, b, d, e, c);

    case 3:
      ri(b);
      d = b.updateQueue;
      if (null === a || null === d) throw Error(y(282));
      d = b.pendingProps;
      e = b.memoizedState;
      e = null !== e ? e.element : null;
      yg(a, b);
      Cg(b, d, null, c);
      d = b.memoizedState.element;
      if (d === e) sh(), b = hi(a, b, c);else {
        e = b.stateNode;
        if (f = e.hydrate) kh = rf(b.stateNode.containerInfo.firstChild), jh = b, f = lh = !0;

        if (f) {
          a = e.mutableSourceEagerHydrationData;
          if (null != a) for (e = 0; e < a.length; e += 2) {
            f = a[e], f._workInProgressVersionPrimary = a[e + 1], th.push(f);
          }
          c = Zg(b, null, d, c);

          for (b.child = c; c;) {
            c.flags = c.flags & -3 | 1024, c = c.sibling;
          }
        } else fi(a, b, d, c), sh();

        b = b.child;
      }
      return b;

    case 5:
      return gh(b), null === a && ph(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, nf(d, e) ? g = null : null !== f && nf(d, f) && (b.flags |= 16), oi(a, b), fi(a, b, g, c), b.child;

    case 6:
      return null === a && ph(b), null;

    case 13:
      return ti(a, b, c);

    case 4:
      return eh(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Yg(b, null, d, c) : fi(a, b, d, c), b.child;

    case 11:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : lg(d, e), gi(a, b, d, e, c);

    case 7:
      return fi(a, b, b.pendingProps, c), b.child;

    case 8:
      return fi(a, b, b.pendingProps.children, c), b.child;

    case 12:
      return fi(a, b, b.pendingProps.children, c), b.child;

    case 10:
      a: {
        d = b.type._context;
        e = b.pendingProps;
        g = b.memoizedProps;
        f = e.value;
        var h = b.type._context;
        I(mg, h._currentValue);
        h._currentValue = f;
        if (null !== g) if (h = g.value, f = He(h, f) ? 0 : ("function" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0, 0 === f) {
          if (g.children === e.children && !N.current) {
            b = hi(a, b, c);
            break a;
          }
        } else for (h = b.child, null !== h && (h.return = b); null !== h;) {
          var k = h.dependencies;

          if (null !== k) {
            g = h.child;

            for (var l = k.firstContext; null !== l;) {
              if (l.context === d && 0 !== (l.observedBits & f)) {
                1 === h.tag && (l = zg(-1, c & -c), l.tag = 2, Ag(h, l));
                h.lanes |= c;
                l = h.alternate;
                null !== l && (l.lanes |= c);
                sg(h.return, c);
                k.lanes |= c;
                break;
              }

              l = l.next;
            }
          } else g = 10 === h.tag ? h.type === b.type ? null : h.child : h.child;

          if (null !== g) g.return = h;else for (g = h; null !== g;) {
            if (g === b) {
              g = null;
              break;
            }

            h = g.sibling;

            if (null !== h) {
              h.return = g.return;
              g = h;
              break;
            }

            g = g.return;
          }
          h = g;
        }
        fi(a, b, e.children, c);
        b = b.child;
      }

      return b;

    case 9:
      return e = b.type, f = b.pendingProps, d = f.children, tg(b, c), e = vg(e, f.unstable_observedBits), d = d(e), b.flags |= 1, fi(a, b, d, c), b.child;

    case 14:
      return e = b.type, f = lg(e, b.pendingProps), f = lg(e.type, f), ii(a, b, e, f, d, c);

    case 15:
      return ki(a, b, b.type, b.pendingProps, d, c);

    case 17:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : lg(d, e), null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2), b.tag = 1, Ff(d) ? (a = !0, Jf(b)) : a = !1, tg(b, c), Mg(b, d, e), Og(b, d, e, c), qi(null, b, d, !0, a, c);

    case 19:
      return Ai(a, b, c);

    case 23:
      return mi(a, b, c);

    case 24:
      return mi(a, b, c);
  }

  throw Error(y(156, b.tag));
};

function ik(a, b, c, d) {
  this.tag = a;
  this.key = c;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d;
  this.flags = 0;
  this.lastEffect = this.firstEffect = this.nextEffect = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}

function nh(a, b, c, d) {
  return new ik(a, b, c, d);
}

function ji(a) {
  a = a.prototype;
  return !(!a || !a.isReactComponent);
}

function hk(a) {
  if ("function" === typeof a) return ji(a) ? 1 : 0;

  if (void 0 !== a && null !== a) {
    a = a.$$typeof;
    if (a === Aa) return 11;
    if (a === Da) return 14;
  }

  return 2;
}

function Tg(a, b) {
  var c = a.alternate;
  null === c ? (c = nh(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.type = a.type, c.flags = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);
  c.childLanes = a.childLanes;
  c.lanes = a.lanes;
  c.child = a.child;
  c.memoizedProps = a.memoizedProps;
  c.memoizedState = a.memoizedState;
  c.updateQueue = a.updateQueue;
  b = a.dependencies;
  c.dependencies = null === b ? null : {
    lanes: b.lanes,
    firstContext: b.firstContext
  };
  c.sibling = a.sibling;
  c.index = a.index;
  c.ref = a.ref;
  return c;
}

function Vg(a, b, c, d, e, f) {
  var g = 2;
  d = a;
  if ("function" === typeof a) ji(a) && (g = 1);else if ("string" === typeof a) g = 5;else a: switch (a) {
    case ua:
      return Xg(c.children, e, f, b);

    case Ha:
      g = 8;
      e |= 16;
      break;

    case wa:
      g = 8;
      e |= 1;
      break;

    case xa:
      return a = nh(12, c, b, e | 8), a.elementType = xa, a.type = xa, a.lanes = f, a;

    case Ba:
      return a = nh(13, c, b, e), a.type = Ba, a.elementType = Ba, a.lanes = f, a;

    case Ca:
      return a = nh(19, c, b, e), a.elementType = Ca, a.lanes = f, a;

    case Ia:
      return vi(c, e, f, b);

    case Ja:
      return a = nh(24, c, b, e), a.elementType = Ja, a.lanes = f, a;

    default:
      if ("object" === typeof a && null !== a) switch (a.$$typeof) {
        case ya:
          g = 10;
          break a;

        case za:
          g = 9;
          break a;

        case Aa:
          g = 11;
          break a;

        case Da:
          g = 14;
          break a;

        case Ea:
          g = 16;
          d = null;
          break a;

        case Fa:
          g = 22;
          break a;
      }
      throw Error(y(130, null == a ? a : typeof a, ""));
  }
  b = nh(g, c, b, e);
  b.elementType = a;
  b.type = d;
  b.lanes = f;
  return b;
}

function Xg(a, b, c, d) {
  a = nh(7, a, d, b);
  a.lanes = c;
  return a;
}

function vi(a, b, c, d) {
  a = nh(23, a, d, b);
  a.elementType = Ia;
  a.lanes = c;
  return a;
}

function Ug(a, b, c) {
  a = nh(6, a, null, b);
  a.lanes = c;
  return a;
}

function Wg(a, b, c) {
  b = nh(4, null !== a.children ? a.children : [], a.key, b);
  b.lanes = c;
  b.stateNode = {
    containerInfo: a.containerInfo,
    pendingChildren: null,
    implementation: a.implementation
  };
  return b;
}

function jk(a, b, c) {
  this.tag = b;
  this.containerInfo = a;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.pendingContext = this.context = null;
  this.hydrate = c;
  this.callbackNode = null;
  this.callbackPriority = 0;
  this.eventTimes = Zc(0);
  this.expirationTimes = Zc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = Zc(0);
  this.mutableSourceEagerHydrationData = null;
}

function kk(a, b, c) {
  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
  return {
    $$typeof: ta,
    key: null == d ? null : "" + d,
    children: a,
    containerInfo: b,
    implementation: c
  };
}

function lk(a, b, c, d) {
  var e = b.current,
      f = Hg(),
      g = Ig(e);

  a: if (c) {
    c = c._reactInternals;

    b: {
      if (Zb(c) !== c || 1 !== c.tag) throw Error(y(170));
      var h = c;

      do {
        switch (h.tag) {
          case 3:
            h = h.stateNode.context;
            break b;

          case 1:
            if (Ff(h.type)) {
              h = h.stateNode.__reactInternalMemoizedMergedChildContext;
              break b;
            }

        }

        h = h.return;
      } while (null !== h);

      throw Error(y(171));
    }

    if (1 === c.tag) {
      var k = c.type;

      if (Ff(k)) {
        c = If(c, k, h);
        break a;
      }
    }

    c = h;
  } else c = Cf;

  null === b.context ? b.context = c : b.pendingContext = c;
  b = zg(f, g);
  b.payload = {
    element: a
  };
  d = void 0 === d ? null : d;
  null !== d && (b.callback = d);
  Ag(e, b);
  Jg(e, g, f);
  return g;
}

function mk(a) {
  a = a.current;
  if (!a.child) return null;

  switch (a.child.tag) {
    case 5:
      return a.child.stateNode;

    default:
      return a.child.stateNode;
  }
}

function nk(a, b) {
  a = a.memoizedState;

  if (null !== a && null !== a.dehydrated) {
    var c = a.retryLane;
    a.retryLane = 0 !== c && c < b ? c : b;
  }
}

function ok(a, b) {
  nk(a, b);
  (a = a.alternate) && nk(a, b);
}

function pk() {
  return null;
}

function qk(a, b, c) {
  var d = null != c && null != c.hydrationOptions && c.hydrationOptions.mutableSources || null;
  c = new jk(a, b, null != c && !0 === c.hydrate);
  b = nh(3, null, null, 2 === b ? 7 : 1 === b ? 3 : 0);
  c.current = b;
  b.stateNode = c;
  xg(b);
  a[ff] = c.current;
  cf(8 === a.nodeType ? a.parentNode : a);
  if (d) for (a = 0; a < d.length; a++) {
    b = d[a];
    var e = b._getVersion;
    e = e(b._source);
    null == c.mutableSourceEagerHydrationData ? c.mutableSourceEagerHydrationData = [b, e] : c.mutableSourceEagerHydrationData.push(b, e);
  }
  this._internalRoot = c;
}

qk.prototype.render = function (a) {
  lk(a, this._internalRoot, null, null);
};

qk.prototype.unmount = function () {
  var a = this._internalRoot,
      b = a.containerInfo;
  lk(null, a, null, function () {
    b[ff] = null;
  });
};

function rk(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
}

function sk(a, b) {
  b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute("data-reactroot")));
  if (!b) for (var c; c = a.lastChild;) {
    a.removeChild(c);
  }
  return new qk(a, 0, b ? {
    hydrate: !0
  } : void 0);
}

function tk(a, b, c, d, e) {
  var f = c._reactRootContainer;

  if (f) {
    var g = f._internalRoot;

    if ("function" === typeof e) {
      var h = e;

      e = function e() {
        var a = mk(g);
        h.call(a);
      };
    }

    lk(b, g, a, e);
  } else {
    f = c._reactRootContainer = sk(c, d);
    g = f._internalRoot;

    if ("function" === typeof e) {
      var k = e;

      e = function e() {
        var a = mk(g);
        k.call(a);
      };
    }

    Xj(function () {
      lk(b, g, a, e);
    });
  }

  return mk(g);
}

ec = function ec(a) {
  if (13 === a.tag) {
    var b = Hg();
    Jg(a, 4, b);
    ok(a, 4);
  }
};

fc = function fc(a) {
  if (13 === a.tag) {
    var b = Hg();
    Jg(a, 67108864, b);
    ok(a, 67108864);
  }
};

gc = function gc(a) {
  if (13 === a.tag) {
    var b = Hg(),
        c = Ig(a);
    Jg(a, c, b);
    ok(a, c);
  }
};

hc = function hc(a, b) {
  return b();
};

yb = function yb(a, b, c) {
  switch (b) {
    case "input":
      ab(a, c);
      b = c.name;

      if ("radio" === c.type && null != b) {
        for (c = a; c.parentNode;) {
          c = c.parentNode;
        }

        c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');

        for (b = 0; b < c.length; b++) {
          var d = c[b];

          if (d !== a && d.form === a.form) {
            var e = Db(d);
            if (!e) throw Error(y(90));
            Wa(d);
            ab(d, e);
          }
        }
      }

      break;

    case "textarea":
      ib(a, c);
      break;

    case "select":
      b = c.value, null != b && fb(a, !!c.multiple, b, !1);
  }
};

Gb = Wj;

Hb = function Hb(a, b, c, d, e) {
  var f = X;
  X |= 4;

  try {
    return gg(98, a.bind(null, b, c, d, e));
  } finally {
    X = f, 0 === X && (wj(), ig());
  }
};

Ib = function Ib() {
  0 === (X & 49) && (Vj(), Oj());
};

Jb = function Jb(a, b) {
  var c = X;
  X |= 2;

  try {
    return a(b);
  } finally {
    X = c, 0 === X && (wj(), ig());
  }
};

function uk(a, b) {
  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
  if (!rk(b)) throw Error(y(200));
  return kk(a, b, null, c);
}

var vk = {
  Events: [Cb, ue, Db, Eb, Fb, Oj, {
    current: !1
  }]
},
    wk = {
  findFiberByHostInstance: wc,
  bundleType: 0,
  version: "17.0.2",
  rendererPackageName: "react-dom"
};
var xk = {
  bundleType: wk.bundleType,
  version: wk.version,
  rendererPackageName: wk.rendererPackageName,
  rendererConfig: wk.rendererConfig,
  overrideHookState: null,
  overrideHookStateDeletePath: null,
  overrideHookStateRenamePath: null,
  overrideProps: null,
  overridePropsDeletePath: null,
  overridePropsRenamePath: null,
  setSuspenseHandler: null,
  scheduleUpdate: null,
  currentDispatcherRef: ra.ReactCurrentDispatcher,
  findHostInstanceByFiber: function findHostInstanceByFiber(a) {
    a = cc(a);
    return null === a ? null : a.stateNode;
  },
  findFiberByHostInstance: wk.findFiberByHostInstance || pk,
  findHostInstancesForRefresh: null,
  scheduleRefresh: null,
  scheduleRoot: null,
  setRefreshHandler: null,
  getCurrentFiber: null
};

if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
  var yk = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!yk.isDisabled && yk.supportsFiber) try {
    Lf = yk.inject(xk), Mf = yk;
  } catch (a) {}
}

exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = vk;
exports.createPortal = uk;

exports.findDOMNode = function (a) {
  if (null == a) return null;
  if (1 === a.nodeType) return a;
  var b = a._reactInternals;

  if (void 0 === b) {
    if ("function" === typeof a.render) throw Error(y(188));
    throw Error(y(268, Object.keys(a)));
  }

  a = cc(b);
  a = null === a ? null : a.stateNode;
  return a;
};

exports.flushSync = function (a, b) {
  var c = X;
  if (0 !== (c & 48)) return a(b);
  X |= 1;

  try {
    if (a) return gg(99, a.bind(null, b));
  } finally {
    X = c, ig();
  }
};

exports.hydrate = function (a, b, c) {
  if (!rk(b)) throw Error(y(200));
  return tk(null, a, b, !0, c);
};

exports.render = function (a, b, c) {
  if (!rk(b)) throw Error(y(200));
  return tk(null, a, b, !1, c);
};

exports.unmountComponentAtNode = function (a) {
  if (!rk(a)) throw Error(y(40));
  return a._reactRootContainer ? (Xj(function () {
    tk(null, null, a, !1, function () {
      a._reactRootContainer = null;
      a[ff] = null;
    });
  }), !0) : !1;
};

exports.unstable_batchedUpdates = Wj;

exports.unstable_createPortal = function (a, b) {
  return uk(a, b, 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null);
};

exports.unstable_renderSubtreeIntoContainer = function (a, b, c, d) {
  if (!rk(c)) throw Error(y(200));
  if (null == a || void 0 === a._reactInternals) throw Error(y(38));
  return tk(a, b, c, !1, d);
};

exports.version = "17.0.2";

/***/ }),

/***/ 4164:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
    return;
  }

  if (false) {}

  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (true) {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(4463);
} else {}

/***/ }),

/***/ 1372:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;
/** @license React v17.0.2
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var b = 60103,
    c = 60106,
    d = 60107,
    e = 60108,
    f = 60114,
    g = 60109,
    h = 60110,
    k = 60112,
    l = 60113,
    m = 60120,
    n = 60115,
    p = 60116,
    q = 60121,
    r = 60122,
    u = 60117,
    v = 60129,
    w = 60131;

if ("function" === typeof Symbol && Symbol.for) {
  var x = Symbol.for;
  b = x("react.element");
  c = x("react.portal");
  d = x("react.fragment");
  e = x("react.strict_mode");
  f = x("react.profiler");
  g = x("react.provider");
  h = x("react.context");
  k = x("react.forward_ref");
  l = x("react.suspense");
  m = x("react.suspense_list");
  n = x("react.memo");
  p = x("react.lazy");
  q = x("react.block");
  r = x("react.server.block");
  u = x("react.fundamental");
  v = x("react.debug_trace_mode");
  w = x("react.legacy_hidden");
}

function y(a) {
  if ("object" === typeof a && null !== a) {
    var t = a.$$typeof;

    switch (t) {
      case b:
        switch (a = a.type, a) {
          case d:
          case f:
          case e:
          case l:
          case m:
            return a;

          default:
            switch (a = a && a.$$typeof, a) {
              case h:
              case k:
              case p:
              case n:
              case g:
                return a;

              default:
                return t;
            }

        }

      case c:
        return t;
    }
  }
}

var z = g,
    A = b,
    B = k,
    C = d,
    D = p,
    E = n,
    F = c,
    G = f,
    H = e,
    I = l;
__webpack_unused_export__ = h;
__webpack_unused_export__ = z;
__webpack_unused_export__ = A;
__webpack_unused_export__ = B;
__webpack_unused_export__ = C;
__webpack_unused_export__ = D;
__webpack_unused_export__ = E;
__webpack_unused_export__ = F;
__webpack_unused_export__ = G;
__webpack_unused_export__ = H;
__webpack_unused_export__ = I;

__webpack_unused_export__ = function () {
  return !1;
};

__webpack_unused_export__ = function () {
  return !1;
};

exports.isContextConsumer = function (a) {
  return y(a) === h;
};

__webpack_unused_export__ = function (a) {
  return y(a) === g;
};

__webpack_unused_export__ = function (a) {
  return "object" === typeof a && null !== a && a.$$typeof === b;
};

__webpack_unused_export__ = function (a) {
  return y(a) === k;
};

__webpack_unused_export__ = function (a) {
  return y(a) === d;
};

__webpack_unused_export__ = function (a) {
  return y(a) === p;
};

__webpack_unused_export__ = function (a) {
  return y(a) === n;
};

__webpack_unused_export__ = function (a) {
  return y(a) === c;
};

__webpack_unused_export__ = function (a) {
  return y(a) === f;
};

__webpack_unused_export__ = function (a) {
  return y(a) === e;
};

__webpack_unused_export__ = function (a) {
  return y(a) === l;
};

__webpack_unused_export__ = function (a) {
  return "string" === typeof a || "function" === typeof a || a === d || a === f || a === v || a === e || a === l || a === m || a === w || "object" === typeof a && null !== a && (a.$$typeof === p || a.$$typeof === n || a.$$typeof === g || a.$$typeof === h || a.$$typeof === k || a.$$typeof === u || a.$$typeof === q || a[0] === r) ? !0 : !1;
};

__webpack_unused_export__ = y;

/***/ }),

/***/ 7441:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(1372);
} else {}

/***/ }),

/***/ 4308:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(2791));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var Button = function Button(props) {
  return /*#__PURE__*/_react["default"].createElement("button", {
    type: "button",
    onClick: function onClick() {
      return props.onClick();
    },
    className: 'rrt-button ' + props.className,
    ref: props.innerRef
  }, props.children);
};

Button.displayName = 'ReduxConfirmButton';
var _default = Button;
exports["default"] = _default;

/***/ }),

/***/ 8103:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(2791));

var _classnames = _interopRequireDefault(__webpack_require__(1694));

var _icons = _interopRequireDefault(__webpack_require__(4698));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var Icon = /*#__PURE__*/function (_React$Component) {
  _inherits(Icon, _React$Component);

  var _super = _createSuper(Icon);

  function Icon() {
    _classCallCheck(this, Icon);

    return _super.apply(this, arguments);
  }

  _createClass(Icon, [{
    key: "render",
    value: function render() {
      var size = this.props.size;
      var styles = {
        width: size,
        height: size
      };
      return /*#__PURE__*/_react["default"].createElement("svg", {
        className: (0, _classnames["default"])(this.props.className, 'toastr-icon'),
        xmlns: "http://www.w3.org/2000/svg",
        preserveAspectRatio: "xMidYMid meet",
        viewBox: "0 0 ".concat(this.props.size, " ").concat(this.props.size),
        style: styles
      }, (0, _icons["default"])(this.props.name));
    }
  }]);

  return Icon;
}(_react["default"].Component);

exports["default"] = Icon;

_defineProperty(Icon, "displayName", 'ReduxToastrIcon');

_defineProperty(Icon, "defaultProps", {
  size: 32
});

/***/ }),

/***/ 177:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(2791));

var _propTypes = _interopRequireDefault(__webpack_require__(2007));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var ProgressBar = /*#__PURE__*/function (_React$Component) {
  _inherits(ProgressBar, _React$Component);

  var _super = _createSuper(ProgressBar);

  function ProgressBar(props) {
    var _this;

    _classCallCheck(this, ProgressBar);

    _this = _super.call(this, props);
    _this.state = {
      percent: 100
    };
    _this.intervalId = null;
    return _this;
  }

  _createClass(ProgressBar, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var distance = 100 / (this.props.duration / 10);
      this.intervalId = setInterval(function () {
        var percent = _this2.state.percent - distance;

        _this2.setState({
          percent: percent > 0 ? percent : 0
        });
      }, 10);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.state.percent <= 0 && this.intervalId) {
        clearTimeout(this.intervalId);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.intervalId) {
        clearTimeout(this.intervalId);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var percent = this.state.percent;
      return /*#__PURE__*/_react["default"].createElement("div", {
        className: "rrt-progress-container"
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: "rrt-progressbar",
        style: {
          width: "".concat(percent, "%")
        }
      }));
    }
  }]);

  return ProgressBar;
}(_react["default"].Component);

exports["default"] = ProgressBar;

_defineProperty(ProgressBar, "displayName", 'ProgressBar');

_defineProperty(ProgressBar, "propTypes", {
  duration: _propTypes["default"].number.isRequired
});

/***/ }),

/***/ 8887:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = exports.ReduxToastr = void 0;

var _react = _interopRequireDefault(__webpack_require__(2791));

var _propTypes = _interopRequireDefault(__webpack_require__(2007));

var _reactRedux = __webpack_require__(364);

var _classnames = _interopRequireDefault(__webpack_require__(1694));

var _ToastrBox = _interopRequireDefault(__webpack_require__(5260));

var _ToastrConfirm = _interopRequireDefault(__webpack_require__(2685));

var actions = _interopRequireWildcard(__webpack_require__(3218));

var _toastrEmitter = __webpack_require__(3558);

var _utils = __webpack_require__(3127);

var _constants = __webpack_require__(480);

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var ReduxToastr = /*#__PURE__*/function (_React$Component) {
  _inherits(ReduxToastr, _React$Component);

  var _super = _createSuper(ReduxToastr);

  function ReduxToastr(props) {
    var _this;

    _classCallCheck(this, ReduxToastr);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "toastrFired", {});

    _defineProperty(_assertThisInitialized(_this), "toastrPositions", ['top-left', 'top-right', 'top-center', 'bottom-left', 'bottom-right', 'bottom-center']);

    (0, _utils.updateConfig)(props);
    return _this;
  }

  _createClass(ReduxToastr, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props = this.props,
          add = _this$props.add,
          showConfirm = _this$props.showConfirm,
          clean = _this$props.clean,
          removeByType = _this$props.removeByType,
          remove = _this$props.remove;

      _toastrEmitter.EE.on('toastr/confirm', showConfirm);

      _toastrEmitter.EE.on('add/toastr', add);

      _toastrEmitter.EE.on('clean/toastr', clean);

      _toastrEmitter.EE.on('removeByType/toastr', removeByType);

      _toastrEmitter.EE.on('remove/toastr', remove);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      _toastrEmitter.EE.removeListener('toastr/confirm');

      _toastrEmitter.EE.removeListener('add/toastr');

      _toastrEmitter.EE.removeListener('clean/toastr');

      _toastrEmitter.EE.removeListener('removeByType/toastr');

      _toastrEmitter.EE.removeListener('remove/toastr');

      this.toastrFired = {};
    }
  }, {
    key: "_addToMemory",
    value: function _addToMemory(id) {
      this.toastrFired[id] = true;
    }
  }, {
    key: "_renderToastrForPosition",
    value: function _renderToastrForPosition(position) {
      var _this2 = this;

      var toastrs = this.props.toastr.toastrs;

      if (toastrs) {
        return toastrs.filter(function (item) {
          return item.position === position;
        }).map(function (item) {
          var mergedItem = _objectSpread(_objectSpread({}, item), {}, {
            options: _objectSpread({
              progressBar: _this2.props.progressBar,
              transitionIn: _this2.props.transitionIn,
              transitionOut: _this2.props.transitionOut,
              closeOnToastrClick: _this2.props.closeOnToastrClick
            }, item.options)
          });

          return /*#__PURE__*/_react["default"].createElement("div", {
            key: item.id
          }, /*#__PURE__*/_react["default"].createElement(_ToastrBox["default"], _extends({
            inMemory: _this2.toastrFired,
            addToMemory: function addToMemory() {
              return _this2._addToMemory(item.id);
            },
            item: mergedItem
          }, _this2.props)), item.options && item.options.attention && /*#__PURE__*/_react["default"].createElement("div", {
            onClick: function onClick() {
              if (typeof item.options.onAttentionClick === 'function') {
                item.options.onAttentionClick(item.id);
              } else {
                _this2.props.remove(item.id);
              }
            },
            className: "toastr-attention"
          }));
        });
      }
    }
  }, {
    key: "_renderToastrs",
    value: function _renderToastrs() {
      var _this3 = this;

      var toastr = this.props.toastr;
      var width = toastr.toastrs && toastr.toastrs[0] && toastr.toastrs[0].options && toastr.toastrs[0].options.width;
      var style = width ? {
        width: width
      } : {};
      return /*#__PURE__*/_react["default"].createElement("div", null, this.toastrPositions.map(function (position) {
        return /*#__PURE__*/_react["default"].createElement("div", {
          key: position,
          className: position,
          style: style
        }, _this3._renderToastrForPosition(position));
      }));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          className = _this$props2.className,
          toastr = _this$props2.toastr;
      return /*#__PURE__*/_react["default"].createElement("div", {
        className: (0, _classnames["default"])('redux-toastr', className),
        "aria-live": "assertive"
      }, toastr.confirm && /*#__PURE__*/_react["default"].createElement(_ToastrConfirm["default"], _extends({
        confirm: toastr.confirm
      }, this.props)), this._renderToastrs());
    }
  }]);

  return ReduxToastr;
}(_react["default"].Component);

exports.ReduxToastr = ReduxToastr;

_defineProperty(ReduxToastr, "displayName", 'ReduxToastr');

_defineProperty(ReduxToastr, "propTypes", {
  toastr: _propTypes["default"].object,
  position: _propTypes["default"].string,
  newestOnTop: _propTypes["default"].bool,
  timeOut: _propTypes["default"].number,
  confirmOptions: _propTypes["default"].object,
  progressBar: _propTypes["default"].bool,
  transitionIn: _propTypes["default"].oneOf(_constants.TRANSITIONS["in"]),
  transitionOut: _propTypes["default"].oneOf(_constants.TRANSITIONS.out),
  preventDuplicates: _propTypes["default"].bool,
  closeOnToastrClick: _propTypes["default"].bool
});

_defineProperty(ReduxToastr, "defaultProps", {
  position: 'top-right',
  newestOnTop: true,
  timeOut: 5000,
  progressBar: false,
  transitionIn: _constants.TRANSITIONS["in"][0],
  transitionOut: _constants.TRANSITIONS.out[0],
  preventDuplicates: false,
  closeOnToastrClick: false,
  getState: function getState(state) {
    return state.toastr;
  },
  confirmOptions: {
    okText: 'ok',
    cancelText: 'cancel'
  }
});

var _default = (0, _reactRedux.connect)(function (state, ownProps) {
  return {
    toastr: ownProps.getState ? ownProps.getState(state) : state.toastr
  };
}, actions)(ReduxToastr);

exports["default"] = _default;

/***/ }),

/***/ 5260:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _react = _interopRequireWildcard(__webpack_require__(2791));

var _propTypes = _interopRequireDefault(__webpack_require__(2007));

var _classnames = _interopRequireDefault(__webpack_require__(1694));

var _ProgressBar = _interopRequireDefault(__webpack_require__(177));

var _Icon = _interopRequireDefault(__webpack_require__(8103));

var _utils = __webpack_require__(3127);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var ToastrBox = /*#__PURE__*/function (_React$Component) {
  _inherits(ToastrBox, _React$Component);

  var _super = _createSuper(ToastrBox);

  function ToastrBox(props) {
    var _this;

    _classCallCheck(this, ToastrBox);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "handlePressEnterOrSpaceKeyToastr", function (e) {
      if (e.key === ' ' || e.key === 'Enter') {
        _this.handleClickToastr(e);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handlePressEnterOrSpaceKeyCloseButton", function (e) {
      if (e.key === ' ' || e.key === 'Enter') {
        _this.handleClickCloseButton(e);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleClickToastr", function () {
      var _this$props$item$opti = _this.props.item.options,
          onToastrClick = _this$props$item$opti.onToastrClick,
          closeOnToastrClick = _this$props$item$opti.closeOnToastrClick;
      _this.ignoreIsHiding = true;

      if (onToastrClick) {
        onToastrClick();
      }

      if (closeOnToastrClick) {
        _this._setShouldClose(true);

        _this._removeToastr();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleClickCloseButton", function (e) {
      var onCloseButtonClick = _this.props.item.options.onCloseButtonClick;
      e.stopPropagation();
      _this.ignoreIsHiding = true;

      if (onCloseButtonClick) {
        onCloseButtonClick();
      }

      _this._setShouldClose(true);

      _this._removeToastr();
    });

    _defineProperty(_assertThisInitialized(_this), "mouseEnter", function () {
      var removeOnHover = _this.props.item.options.removeOnHover;
      if (!removeOnHover && _this.intervalId) return;
      clearTimeout(_this.intervalId);

      _this._setIntervalId(null);

      _this._setIsHiding(false);

      var progressBar = _this.props.item.options.progressBar;

      var timeOut = _this._getItemTimeOut();

      if (timeOut && progressBar) {
        _this.setState({
          progressBar: null
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "mouseLeave", function () {
      var _this$props$item$opti2 = _this.props.item.options,
          removeOnHover = _this$props$item$opti2.removeOnHover,
          removeOnHoverTimeOut = _this$props$item$opti2.removeOnHoverTimeOut;

      if (!_this.isHiding && (removeOnHover || _this.shouldClose)) {
        var interval = removeOnHover === true ? removeOnHoverTimeOut || 1000 : removeOnHover;

        _this._setIntervalId(setTimeout(_this._removeToastr, interval));

        var progressBar = _this.props.item.options.progressBar;

        var timeOut = _this._getItemTimeOut();

        if (timeOut && progressBar) {
          _this.setState({
            progressBar: {
              duration: interval
            }
          });
        }
      }
    });

    var _props$item$options = props.item.options,
        transitionIn = _props$item$options.transitionIn,
        transitionOut = _props$item$options.transitionOut;
    _this.isHiding = false;
    _this.shouldClose = false;
    _this.intervalId = null;
    _this.ignoreIsHiding = false;
    _this.transitionIn = transitionIn || _this.props.transitionIn;
    _this.transitionOut = transitionOut || _this.props.transitionOut; // an identifier to facilitate aria labelling for a11y for multiple instances of the component family in the DOM

    _this.id = props.item.a11yId || Math.floor(Math.random() * 9999);
    _this.state = {
      progressBar: null
    };
    (0, _utils._bind)(['renderSubComponent', 'renderIcon', 'renderToastr', 'renderCloseButton', 'renderMessage', '_onAnimationComplete', '_removeToastr', '_setTransition', '_clearTransition', '_setIntervalId', '_setIsHiding', '_setShouldClose'], _assertThisInitialized(_this));
    return _this;
  }

  _createClass(ToastrBox, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var item = this.props.item;
      if (this.props.inMemory[item.id]) return;

      var timeOut = this._getItemTimeOut();

      if (timeOut) {
        this._setIntervalId(setTimeout(this._removeToastr, timeOut));
      }

      if (timeOut && item.options.progressBar) {
        this.setState({
          progressBar: {
            duration: this._getItemTimeOut()
          }
        });
      }

      this._setTransition();

      (0, _utils.onCSSTransitionEnd)(this.toastrBoxElement, this._onAnimationComplete);
      this.props.addToMemory(item.id);

      if (this.closeButton !== undefined && !item.options.disableCloseButtonFocus) {
        this.closeButton.focus();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.intervalId) {
        clearTimeout(this.intervalId);
      } // when toast unloads the toast close button automatically focuses on the next toast control (if any)
      // need to add a micro delay to allow the DOM to recycle


      setTimeout(function () {
        var toastrControls = document.querySelectorAll('.toastr-control:not(.disable-auto-focus)');

        if (toastrControls.length) {
          toastrControls[0].focus();
        }
      }, 50);
    }
  }, {
    key: "isToastrClickable",
    get: function get() {
      var _this$props$item$opti3 = this.props.item.options,
          onToastrClick = _this$props$item$opti3.onToastrClick,
          closeOnToastrClick = _this$props$item$opti3.closeOnToastrClick;
      var hasOnToastrClick = !!onToastrClick;
      return hasOnToastrClick || closeOnToastrClick;
    }
  }, {
    key: "renderSubComponent",
    value: function renderSubComponent() {
      var _this2 = this;

      var _this$props$item = this.props.item,
          id = _this$props$item.id,
          options = _this$props$item.options;

      var removeCurrentToastrFunc = function removeCurrentToastrFunc() {
        return _this2.props.remove(id);
      };

      if ( /*#__PURE__*/(0, _react.isValidElement)(options.component)) {
        return /*#__PURE__*/_react["default"].cloneElement(options.component, {
          remove: removeCurrentToastrFunc
        });
      }

      return /*#__PURE__*/_react["default"].createElement(options.component, {
        remove: removeCurrentToastrFunc
      });
    }
  }, {
    key: "renderIcon",
    value: function renderIcon() {
      var _this$props$item2 = this.props.item,
          type = _this$props$item2.type,
          options = _this$props$item2.options;

      if ( /*#__PURE__*/(0, _react.isValidElement)(options.icon)) {
        return /*#__PURE__*/_react["default"].cloneElement(options.icon);
      }

      var iconName = type === 'light' ? options.icon : type;
      return /*#__PURE__*/_react["default"].createElement(_Icon["default"], {
        name: iconName
      });
    }
  }, {
    key: "renderCloseButton",
    value: function renderCloseButton() {
      var _this3 = this;

      var closeButtonAttributes = {
        tabIndex: 0,
        role: 'button',
        onKeyPress: this.handlePressEnterOrSpaceKeyCloseButton
      };

      if (this.isToastrClickable) {
        closeButtonAttributes = {};
      }

      return /*#__PURE__*/_react["default"].createElement("div", _extends({
        className: (0, _classnames["default"])('close-toastr', 'toastr-control', {
          'disable-auto-focus': this.props.item.options.disableCloseButtonFocus
        }),
        "aria-label": "toast",
        onClick: this.handleClickCloseButton,
        ref: function ref(_ref) {
          return _this3.closeButton = _ref;
        }
      }, closeButtonAttributes), /*#__PURE__*/_react["default"].createElement("span", null, "\u2715"));
    }
  }, {
    key: "renderToastr",
    value: function renderToastr() {
      var _this$props$item3 = this.props.item,
          type = _this$props$item3.type,
          options = _this$props$item3.options,
          message = _this$props$item3.message,
          title = _this$props$item3.title;
      var ariaAttributes = {};

      if (title) {
        ariaAttributes['aria-labelledby'] = "dialogTitle-".concat(this.id);
      }

      if (message) {
        ariaAttributes['aria-describedby'] = "dialogDesc-".concat(this.id);
      }

      return /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement("div", {
        className: "rrt-left-container"
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: "rrt-holder"
      }, this.renderIcon())), options.status && type === 'light' && /*#__PURE__*/_react["default"].createElement("div", {
        className: (0, _classnames["default"])('toastr-status', options.status)
      }), /*#__PURE__*/_react["default"].createElement("div", _extends({
        className: "rrt-middle-container",
        role: "alertdialog"
      }, ariaAttributes), title && /*#__PURE__*/_react["default"].createElement("div", {
        id: "dialogTitle-".concat(this.id),
        className: "rrt-title"
      }, title), message && /*#__PURE__*/_react["default"].createElement("div", {
        id: "dialogDesc-".concat(this.id),
        className: "rrt-text"
      }, message), options.component && this.renderSubComponent()), /*#__PURE__*/_react["default"].createElement("div", {
        className: "rrt-right-container"
      }, options.showCloseButton && this.renderCloseButton()), this.state.progressBar ? /*#__PURE__*/_react["default"].createElement(_ProgressBar["default"], this.state.progressBar) : null);
    }
  }, {
    key: "renderMessage",
    value: function renderMessage() {
      var _this$props$item4 = this.props.item,
          title = _this$props$item4.title,
          message = _this$props$item4.message,
          options = _this$props$item4.options;
      return /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement("div", {
        className: "rrt-title"
      }, title, this.renderCloseButton()), /*#__PURE__*/_react["default"].createElement("div", {
        className: "rrt-text"
      }, message, options.component && this.renderSubComponent()));
    }
  }, {
    key: "toastr",
    value: function toastr() {
      if (this.props.item.type === 'message') {
        return this.renderMessage();
      }

      return this.renderToastr();
    }
  }, {
    key: "_getItemTimeOut",
    value: function _getItemTimeOut() {
      var item = this.props.item;
      var timeOut = item.options.timeOut;

      if (typeof timeOut === 'undefined') {
        timeOut = this.props.timeOut;
      }

      return timeOut;
    }
  }, {
    key: "_onAnimationComplete",
    value: function _onAnimationComplete() {
      var _this$props = this.props,
          remove = _this$props.remove,
          item = _this$props.item;
      var options = item.options,
          id = item.id;

      if (this.isHiding || this.ignoreIsHiding) {
        this._setIsHiding(false);

        this.ignoreIsHiding = false;
        remove(id);

        if (options.onHideComplete) {
          options.onHideComplete();
        }
      } else if (!this.isHiding && options.onShowComplete) {
        options.onShowComplete();
      }
    }
  }, {
    key: "_removeToastr",
    value: function _removeToastr() {
      if (!this.isHiding) {
        this._setIsHiding(true);

        this._setTransition(true, false);

        (0, _utils.onCSSTransitionEnd)(this.toastrBoxElement, this._onAnimationComplete);
      }
    }
  }, {
    key: "_setTransition",
    value: function _setTransition(hide) {
      var _this4 = this;

      var autoRemove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var animationType = hide ? this.transitionOut : this.transitionIn;

      var onEndListener = function onEndListener(e) {
        if (e && e.target == _this4.toastrBoxElement) {
          _this4.toastrBoxElement.classList.remove(animationType);
        }
      };

      if (this.toastrBoxElement) {
        if (autoRemove) {
          (0, _utils.onCSSTransitionEnd)(this.toastrBoxElement, onEndListener);
        }

        this.toastrBoxElement.classList.add(animationType);
      }
    }
  }, {
    key: "_clearTransition",
    value: function _clearTransition() {
      if (this.toastrBoxElement) {
        this.toastrBoxElement.classList.remove(this.transitionIn, this.transitionOut);
      }
    }
  }, {
    key: "_setIntervalId",
    value: function _setIntervalId(intervalId) {
      this.intervalId = intervalId;
    }
  }, {
    key: "_setIsHiding",
    value: function _setIsHiding(val) {
      this.isHiding = val;
    }
  }, {
    key: "_setShouldClose",
    value: function _setShouldClose(val) {
      this.shouldClose = val;
    }
  }, {
    key: "render",
    value: function render() {
      var _this5 = this;

      var _this$props$item5 = this.props.item,
          options = _this$props$item5.options,
          type = _this$props$item5.type;
      var toastrClickAttributes = {};

      if (this.isToastrClickable) {
        toastrClickAttributes.role = 'button';
        toastrClickAttributes.tabIndex = 0;
        toastrClickAttributes.onClick = this.handleClickToastr;
        toastrClickAttributes.onKeyPress = this.handlePressEnterOrSpaceKeyToastr;
      }

      return /*#__PURE__*/_react["default"].createElement("div", _extends({
        ref: function ref(_ref2) {
          return _this5.toastrBoxElement = _ref2;
        },
        className: (0, _classnames["default"])('toastr', 'animated', 'rrt-' + type, options.className),
        onMouseEnter: this.mouseEnter,
        onMouseLeave: this.mouseLeave
      }, toastrClickAttributes), this.toastr());
    }
  }]);

  return ToastrBox;
}(_react["default"].Component);

exports["default"] = ToastrBox;

_defineProperty(ToastrBox, "displayName", 'ToastrBox');

_defineProperty(ToastrBox, "propTypes", {
  item: _propTypes["default"].shape({
    options: _propTypes["default"].shape({
      transitionIn: _propTypes["default"].string,
      transitionOut: _propTypes["default"].string
    })
  })
});

/***/ }),

/***/ 2685:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(2791));

var _propTypes = _interopRequireDefault(__webpack_require__(2007));

var _utils = __webpack_require__(3127);

var _Button = _interopRequireDefault(__webpack_require__(4308));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var ENTER = 13;
var ESC = 27;

var ToastrConfirm = /*#__PURE__*/function (_React$Component) {
  _inherits(ToastrConfirm, _React$Component);

  var _super = _createSuper(ToastrConfirm);

  function ToastrConfirm(props) {
    var _this;

    _classCallCheck(this, ToastrConfirm);

    _this = _super.call(this, props);
    var _this$props = _this.props,
        confirmOptions = _this$props.confirmOptions,
        confirm = _this$props.confirm;
    var _confirm$options = confirm.options,
        okText = _confirm$options.okText,
        cancelText = _confirm$options.cancelText,
        transitionIn = _confirm$options.transitionIn,
        transitionOut = _confirm$options.transitionOut,
        disableCancel = _confirm$options.disableCancel,
        closeOnShadowClick = _confirm$options.closeOnShadowClick;
    _this.okText = okText || confirmOptions.okText;
    _this.cancelText = cancelText || confirmOptions.cancelText;
    _this.transitionIn = transitionIn || confirmOptions.transitionIn || props.transitionIn;
    _this.transitionOut = transitionOut || confirmOptions.transitionOut || props.transitionOut;
    _this.disableCancel = disableCancel || confirmOptions.disableCancel;
    _this.closeOnShadowClick = closeOnShadowClick || confirmOptions.closeOnShadowClick;
    (0, _utils._bind)('setTransition removeConfirm handleOnKeyUp handleOnKeyDown handleCloseOnShadowClick', _assertThisInitialized(_this));
    _this.isKeyDown = false; // an identifier to facilitate aria labelling for a11y for multiple instances of the component family in the DOM

    _this.id = Math.floor(Math.random() * 9999);
    return _this;
  }

  _createClass(ToastrConfirm, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.isHiding = false;
      this.hasClicked = false;
      this.confirmHolderElement.focus();

      if (this.props.confirm.show) {
        this.setTransition(true);
      } // when toast loads the toast close button automatically focuses on the toast control


      if (this.closeButton !== undefined && this.closeButton.focus !== undefined) {
        this.closeButton.focus();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      // when toast unloads the toast close button automatically focuses on the next toast control (if any)
      // need to add a micro delay to allow the DOM to recycle
      setTimeout(function () {
        if (document.getElementsByClassName('toastr-control').length > 0) {
          document.getElementsByClassName('toastr-control')[0].focus();
        }
      }, 50);
    }
  }, {
    key: "handleOnKeyDown",
    value: function handleOnKeyDown(e) {
      if ((0, _utils.keyCode)(e) == ENTER) {
        e.preventDefault();
      }

      this.isKeyDown = true;
    }
  }, {
    key: "handleCloseOnShadowClick",
    value: function handleCloseOnShadowClick(e) {
      if (this.closeOnShadowClick) {
        this.handleCancelClick();
      }
    }
  }, {
    key: "handleButtonClick",
    value: function handleButtonClick(callback) {
      var _this2 = this;

      if (this.hasClicked) return;
      this.hasClicked = true;

      var onAnimationEnd = function onAnimationEnd() {
        _this2.removeConfirm();

        if (callback) {
          callback();
        }
      };

      this.setTransition();
      (0, _utils.onCSSTransitionEnd)(this.confirmElement, onAnimationEnd);
    }
  }, {
    key: "handleConfirmClick",
    value: function handleConfirmClick() {
      var callback = this.props.confirm.options ? this.props.confirm.options.onOk : null;
      this.handleButtonClick(callback);
    }
  }, {
    key: "handleCancelClick",
    value: function handleCancelClick() {
      var callback = this.props.confirm.options ? this.props.confirm.options.onCancel : null;
      this.handleButtonClick(callback);
    }
  }, {
    key: "setTransition",
    value: function setTransition(add) {
      if (add) {
        this.isHiding = false;
        this.confirmElement.classList.add(this.transitionIn);
        if ((0, _utils.isBrowser)()) return document.querySelector('body').classList.add('toastr-confirm-active');
      }

      this.isHiding = true;
      this.confirmElement.classList.remove(this.transitionIn);
      this.confirmElement.classList.add(this.transitionOut);
    }
  }, {
    key: "removeConfirm",
    value: function removeConfirm() {
      this.isHiding = false;
      this.props.hideConfirm();
      if ((0, _utils.isBrowser)()) return document.querySelector('body').classList.remove('toastr-confirm-active');
    }
  }, {
    key: "handleOnKeyUp",
    value: function handleOnKeyUp(e) {
      var code = (0, _utils.keyCode)(e);

      if (code == ESC && !this.disableCancel) {
        this.handleCancelClick();
      } else if (code == ESC && this.disableCancel) {
        this.handleConfirmClick();
      } else if (code == ENTER && this.isKeyDown) {
        this.isKeyDown = false;
        this.handleConfirmClick();
      }
    }
  }, {
    key: "containsOkButton",
    value: function containsOkButton(buttons) {
      return buttons && buttons.filter(function (button) {
        return button.ok === true;
      }).length > 0;
    }
  }, {
    key: "containsCancelButton",
    value: function containsCancelButton(buttons) {
      return buttons && buttons.filter(function (button) {
        return button.cancel === true;
      }).length > 0;
    }
  }, {
    key: "getCustomButtonHandler",
    value: function getCustomButtonHandler(config) {
      var _this3 = this;

      if (config.ok === true) {
        return this.handleConfirmClick.bind(this);
      }

      if (config.cancel === true) {
        return this.handleCancelClick.bind(this);
      }

      return function () {
        return _this3.handleButtonClick(config.handler);
      };
    }
  }, {
    key: "getCustomButtonText",
    value: function getCustomButtonText(config) {
      if (config.ok === true) {
        return this.okText;
      }

      if (config.cancel === true) {
        return this.cancelText;
      }

      return config.text;
    }
  }, {
    key: "getCustomButtonClassName",
    value: function getCustomButtonClassName(config) {
      if (config.ok === true) {
        return 'rrt-ok-btn';
      }

      if (config.cancel === true) {
        return 'rrt-cancel-btn';
      }

      return config.className;
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var _this$props$confirm = this.props.confirm,
          options = _this$props$confirm.options,
          message = _this$props$confirm.message;
      var wrapperProps = {};
      options.id && (wrapperProps.id = options.id);
      return /*#__PURE__*/_react["default"].createElement("div", _extends({
        className: "rrt-confirm-holder",
        tabIndex: "-1",
        ref: function ref(_ref2) {
          return _this4.confirmHolderElement = _ref2;
        },
        onKeyDown: this.handleOnKeyDown,
        onKeyUp: this.handleOnKeyUp,
        role: "alert"
      }, wrapperProps), /*#__PURE__*/_react["default"].createElement("div", {
        className: "rrt-confirm animated",
        ref: function ref(_ref) {
          return _this4.confirmElement = _ref;
        },
        role: "alertdialog",
        "aria-describedby": "dialogDesc-".concat(this.id)
      }, message && /*#__PURE__*/_react["default"].createElement("div", {
        className: "rrt-message",
        id: "dialogDesc-".concat(this.id)
      }, message), options.component && /*#__PURE__*/_react["default"].createElement(options.component, null), /*#__PURE__*/_react["default"].createElement("div", {
        className: "rrt-buttons-holder"
      }, !this.containsOkButton(options.buttons) && /*#__PURE__*/_react["default"].createElement(_Button["default"], {
        tabIndex: "0",
        innerRef: function innerRef(ref) {
          return _this4.closeButton = ref;
        },
        className: "rrt-ok-btn toastr-control",
        onClick: function onClick() {
          return _this4.handleConfirmClick();
        }
      }, this.okText), !this.disableCancel && !this.containsCancelButton(options.buttons) && /*#__PURE__*/_react["default"].createElement(_Button["default"], {
        tabIndex: "0",
        innerRef: function innerRef(ref) {
          return _this4.closeButton = ref;
        },
        className: "rrt-cancel-btn toastr-control",
        onClick: this.handleCancelClick.bind(this)
      }, this.cancelText), options.buttons && options.buttons.map(function (button, index) {
        if (button.cancel === true && _this4.disableCancel) {
          return null;
        }

        var handler = _this4.getCustomButtonHandler(button);

        var text = _this4.getCustomButtonText(button);

        var className = _this4.getCustomButtonClassName(button);

        return /*#__PURE__*/_react["default"].createElement(_Button["default"], {
          tabIndex: "0",
          className: className,
          onClick: handler,
          key: index
        }, text);
      }))), /*#__PURE__*/_react["default"].createElement("div", {
        className: "shadow",
        onClick: this.handleCloseOnShadowClick.bind(this)
      }));
    }
  }]);

  return ToastrConfirm;
}(_react["default"].Component);

exports["default"] = ToastrConfirm;

_defineProperty(ToastrConfirm, "displayName", 'ToastrConfirm');

_defineProperty(ToastrConfirm, "propTypes", {
  confirm: _propTypes["default"].shape({
    options: _propTypes["default"].shape({
      transitionIn: _propTypes["default"].string,
      transitionOut: _propTypes["default"].string
    })
  })
});

/***/ }),

/***/ 3218:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.add = add;
exports.showConfirm = exports.removeByType = exports.remove = exports.hideConfirm = exports.clean = void 0;

var _constants = __webpack_require__(480);

var _utils = __webpack_require__(3127);

var _reducer = __webpack_require__(5987);

var _config = _interopRequireDefault(__webpack_require__(5331));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function add(toastr) {
  if (_config["default"].preventDuplicates && (0, _utils.preventDuplication)(_reducer.toastrsCache, toastr)) {
    return {
      type: _constants.ADD_TOASTR,
      payload: {
        ignoreToastr: true
      }
    };
  }

  return {
    type: _constants.ADD_TOASTR,
    payload: toastr
  };
}

var clean = function clean() {
  return {
    type: _constants.CLEAN_TOASTR
  };
};

exports.clean = clean;

var remove = function remove(payload) {
  return {
    type: _constants.REMOVE_TOASTR,
    payload: payload
  };
};

exports.remove = remove;

var showConfirm = function showConfirm(payload) {
  return {
    type: _constants.SHOW_CONFIRM,
    payload: payload
  };
};

exports.showConfirm = showConfirm;

var hideConfirm = function hideConfirm() {
  return {
    type: _constants.HIDE_CONFIRM
  };
};

exports.hideConfirm = hideConfirm;

var removeByType = function removeByType(payload) {
  return {
    type: _constants.REMOVE_BY_TYPE,
    payload: payload
  };
};

exports.removeByType = removeByType;

/***/ }),

/***/ 5331:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var toastr = {
  maxAnimationDelay: 6000,
  newestOnTop: true,
  position: 'top-right',
  preventDuplicates: true
};
var _default = toastr;
exports["default"] = _default;

/***/ }),

/***/ 480:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.TRANSITIONS = exports.SHOW_CONFIRM = exports.REMOVE_TOASTR = exports.REMOVE_BY_TYPE = exports.HIDE_CONFIRM = exports.CLEAN_TOASTR = exports.ADD_TOASTR = void 0;
var ADD_TOASTR = '@ReduxToastr/toastr/ADD';
exports.ADD_TOASTR = ADD_TOASTR;
var REMOVE_TOASTR = '@ReduxToastr/toastr/REMOVE';
exports.REMOVE_TOASTR = REMOVE_TOASTR;
var CLEAN_TOASTR = '@ReduxToastr/toastr/CLEAN';
exports.CLEAN_TOASTR = CLEAN_TOASTR;
var SHOW_CONFIRM = '@ReduxToastr/confirm/SHOW';
exports.SHOW_CONFIRM = SHOW_CONFIRM;
var HIDE_CONFIRM = '@ReduxToastr/confirm/HIDE';
exports.HIDE_CONFIRM = HIDE_CONFIRM;
var REMOVE_BY_TYPE = '@ReduxToastr/toastr/REMOVE_BY_TYPE'; // before add a new transition - check its presence in src/styles/animations.scss

exports.REMOVE_BY_TYPE = REMOVE_BY_TYPE;
var TRANSITIONS = {
  "in": ['bounceIn', 'bounceInDown', 'fadeIn'],
  out: ['bounceOut', 'bounceOutUp', 'fadeOut']
};
exports.TRANSITIONS = TRANSITIONS;

/***/ }),

/***/ 4698:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;

var _react = _interopRequireDefault(__webpack_require__(2791));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _default(name) {
  switch (name) {
    case 'success':
      return /*#__PURE__*/_react["default"].createElement("g", null, /*#__PURE__*/_react["default"].createElement("path", {
        d: "M27 4l-15 15-7-7-5 5 12 12 20-20z"
      }));

    case 'info':
      return /*#__PURE__*/_react["default"].createElement("g", null, /*#__PURE__*/_react["default"].createElement("path", {
        d: "M14 9.5c0-0.825 0.675-1.5 1.5-1.5h1c0.825 0 1.5 0.675 1.5 1.5v1c0 0.825-0.675 1.5-1.5 1.5h-1c-0.825 0-1.5-0.675-1.5-1.5v-1z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M20 24h-8v-2h2v-6h-2v-2h6v8h2z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13z"
      }));

    case 'warning':
      return /*#__PURE__*/_react["default"].createElement("g", null, /*#__PURE__*/_react["default"].createElement("path", {
        d: "M16 2.899l13.409 26.726h-26.819l13.409-26.726zM16 0c-0.69 0-1.379 0.465-1.903 1.395l-13.659 27.222c-1.046 1.86-0.156 3.383 1.978 3.383h27.166c2.134 0 3.025-1.522 1.978-3.383h0l-13.659-27.222c-0.523-0.93-1.213-1.395-1.903-1.395v0z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M18 26c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M16 22c-1.105 0-2-0.895-2-2v-6c0-1.105 0.895-2 2-2s2 0.895 2 2v6c0 1.105-0.895 2-2 2z"
      }));

    case 'error':
      return /*#__PURE__*/_react["default"].createElement("g", null, /*#__PURE__*/_react["default"].createElement("path", {
        d: "M12,0C5.373,0,0,5.373,0,12s5.373,12,12,12s12-5.373,12-12S18.627,0,12,0z M12,19.66 c-0.938,0-1.58-0.723-1.58-1.66c0-0.964,0.669-1.66,1.58-1.66c0.963,0,1.58,0.696,1.58,1.66C13.58,18.938,12.963,19.66,12,19.66z M12.622,13.321c-0.239,0.815-0.992,0.829-1.243,0c-0.289-0.956-1.316-4.585-1.316-6.942c0-3.11,3.891-3.125,3.891,0 C13.953,8.75,12.871,12.473,12.622,13.321z"
      }));

    default:
      return null;
  }
}

/***/ }),

/***/ 6530:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}

__webpack_unused_export__ = ({
  value: true
});
exports.Rt = exports.I6 = exports.ZP = __webpack_unused_export__ = void 0;

var _ReduxToastr = _interopRequireDefault(__webpack_require__(8887));

var ReduxToastrActions = _interopRequireWildcard(__webpack_require__(3218));

var _reducer = _interopRequireDefault(__webpack_require__(5987));

var _toastrEmitter = __webpack_require__(3558);

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var _default = _ReduxToastr["default"];
exports.ZP = _default;
var actions = ReduxToastrActions;
__webpack_unused_export__ = actions;
var reducer = _reducer["default"];
exports.I6 = reducer;
var toastr = _toastrEmitter.toastrEmitter;
exports.Rt = toastr;

/***/ }),

/***/ 5987:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.toastrsCache = exports["default"] = void 0;

var _utils = __webpack_require__(3127);

var _config = _interopRequireDefault(__webpack_require__(5331));

var _constants = __webpack_require__(480);

var _createReducer;

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
} // TOTO: find a better way of handling this issue
// We will cache data so we can check for duplicated before fire the add action.


var toastrsCache = [];
exports.toastrsCache = toastrsCache;
var initialState = {
  toastrs: [],
  confirm: null
};

var _default = (0, _utils.createReducer)(initialState, (_createReducer = {}, _defineProperty(_createReducer, _constants.ADD_TOASTR, function (state, toastr) {
  if (toastr.ignoreToastr) {
    return state;
  }

  var newToastr = _objectSpread({
    id: (0, _utils.guid)(),
    position: _config["default"].position
  }, toastr);

  if (!newToastr.a11yId && toastr && toastr.hasOwnProperty('id') && !toastr.hasOwnProperty('a11yId')) {
    newToastr.a11yId = toastr.id;
  }

  var newState = {};

  if (!_config["default"].newestOnTop) {
    newState = _objectSpread(_objectSpread({}, state), {}, {
      toastrs: [].concat(_toConsumableArray(state.toastrs), [newToastr])
    });
  } else {
    newState = _objectSpread(_objectSpread({}, state), {}, {
      toastrs: [newToastr].concat(_toConsumableArray(state.toastrs))
    });
  }

  exports.toastrsCache = toastrsCache = newState.toastrs;
  return newState;
}), _defineProperty(_createReducer, _constants.REMOVE_TOASTR, function (state, id) {
  var newState = _objectSpread(_objectSpread({}, state), {}, {
    toastrs: state.toastrs.filter(function (toastr) {
      return toastr.id !== id;
    })
  });

  exports.toastrsCache = toastrsCache = newState.toastrs;
  return newState;
}), _defineProperty(_createReducer, _constants.REMOVE_BY_TYPE, function (state, type) {
  var newState = _objectSpread(_objectSpread({}, state), {}, {
    toastrs: state.toastrs.filter(function (toastr) {
      return toastr.type !== type;
    })
  });

  exports.toastrsCache = toastrsCache = newState.toastrs;
  return newState;
}), _defineProperty(_createReducer, _constants.CLEAN_TOASTR, function (state) {
  exports.toastrsCache = toastrsCache = [];
  return _objectSpread(_objectSpread({}, state), {}, {
    toastrs: []
  });
}), _defineProperty(_createReducer, _constants.SHOW_CONFIRM, function (state, _ref) {
  var id = _ref.id,
      message = _ref.message,
      options = _ref.options;
  return _objectSpread(_objectSpread({}, state), {}, {
    confirm: {
      id: id || (0, _utils.guid)(),
      show: true,
      message: message,
      options: options || {}
    }
  });
}), _defineProperty(_createReducer, _constants.HIDE_CONFIRM, function (state) {
  return _objectSpread(_objectSpread({}, state), {}, {
    confirm: null
  });
}), _createReducer));

exports["default"] = _default;

/***/ }),

/***/ 3558:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.toastrEmitter = exports.EE = void 0;

var _utils = __webpack_require__(3127);

var _eventemitter = _interopRequireDefault(__webpack_require__(7143));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var emitter = new _eventemitter["default"]();

var addToToastr = function addToToastr(type, array) {
  return emitter.emit('add/toastr', (0, _utils.mapToToastrMessage)(type, array));
};

var actions = {};
['light', 'message', 'info', 'success', 'warning', 'error'].forEach(function (item) {
  actions[item] = function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return addToToastr(item, args);
  };
});

actions.clean = function () {
  return emitter.emit('clean/toastr');
};
/**
 * @params: can be a ID or a object that with a property type: 'success'
 * and by passing this we will remove all toastr with that type.
 */


actions.removeByType = function (type) {
  return emitter.emit('removeByType/toastr', type);
};

actions.remove = function (id) {
  return emitter.emit('remove/toastr', id);
};

actions.confirm = function () {
  emitter.emit('toastr/confirm', {
    message: arguments.length <= 0 ? undefined : arguments[0],
    options: (arguments.length <= 1 ? undefined : arguments[1]) || {}
  });
};

var EE = emitter;
exports.EE = EE;
var toastrEmitter = actions;
exports.toastrEmitter = toastrEmitter;

/***/ }),

/***/ 3127:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports._bind = _bind;
exports.createReducer = createReducer;
exports.guid = guid;
exports.isBrowser = isBrowser;
exports.keyCode = keyCode;
exports.mapToToastrMessage = mapToToastrMessage;
exports.onCSSTransitionEnd = onCSSTransitionEnd;
exports.preventDuplication = preventDuplication;
exports.toastrWarn = toastrWarn;
exports.updateConfig = updateConfig;

var _config = _interopRequireDefault(__webpack_require__(5331));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}

function whichAnimationEvent() {
  var t;
  var el = document.createElement('fakeelement');
  var transitions = {
    animation: 'animationend',
    oanimation: 'oanimationend',
    MSAnimation: 'MSAnimationEnd',
    webkitAnimation: 'webkitAnimationEnd'
  };

  for (t in transitions) {
    if (el.style[t] !== undefined) {
      return transitions[t];
    }
  }
}

function createNewEvent(eventName) {
  var event;

  if (typeof Event === 'function') {
    event = new Event(eventName);
  } else {
    event = document.createEvent('Event');
    event.initEvent(eventName, true, true);
  }

  return event;
}

function isString(obj) {
  if (typeof obj == 'string') {
    return true;
  }

  return false;
}

function toastrWarn(message) {
  if (true) {
    return null;
  }

  console.warn("[react-redux-toastr] ".concat(message));
}

function createReducer(initialState, fnMap) {
  return function () {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;

    var _ref = arguments.length > 1 ? arguments[1] : undefined,
        type = _ref.type,
        payload = _ref.payload;

    var handle = fnMap[type];
    return handle ? handle(state, payload) : state;
  };
}

function isBrowser() {
  if (typeof window !== 'undefined') {
    return true;
  }

  return false;
}

function keyCode(e) {
  return e.which ? e.which : e.keyCode;
}

function mapToToastrMessage(type, array) {
  var obj = {};
  obj.type = type;
  obj.position = _config["default"].position;
  obj.options = array.filter(function (item) {
    return _typeof(item) == 'object';
  })[0] || {};

  if (obj.options.hasOwnProperty('position')) {
    obj.position = obj.options.position;
  }

  if (!obj.options.hasOwnProperty('removeOnHover')) {
    obj.options.removeOnHover = true;

    if (type === 'message') {
      obj.options.removeOnHover = false;
    }
  }

  if (!obj.options.hasOwnProperty('showCloseButton')) {
    obj.options.showCloseButton = true;
  }

  if (type === 'message' && !obj.options.hasOwnProperty('timeOut')) {
    obj.options.timeOut = 0;
  }

  if (isString(array[0]) && isString(array[1])) {
    obj.title = array[0];
    obj.message = array[1];
  } else if (isString(array[0]) && !isString(array[1])) {
    obj.title = array[0];
  } else {
    obj.message = array[0];
  }

  return obj;
}

function guid() {
  var r = function r() {
    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
  };

  return r() + r() + r() + '-' + r() + '_' + r() + '-' + r() + '_' + r() + r() + r();
}

function onCSSTransitionEnd(node, callback) {
  if (!node) {
    return;
  } // if css animation is failed - dispatch event manually


  var animationEnd = whichAnimationEvent();
  var timeoutId = setTimeout(function () {
    var e = createNewEvent(animationEnd);
    toastrWarn('The toastr box was closed automatically, please check \'transitionOut\' prop value');
    node.dispatchEvent(e);
  }, _config["default"].maxAnimationDelay);

  var runOnce = function runOnce(e) {
    clearTimeout(timeoutId); // stopPropagation is not working in IE11 and Edge, the transitionend from the Button.js is waiting
    // on the confirm animation to end first and not the Button.js

    e.stopPropagation();
    node.removeEventListener(animationEnd, runOnce);
    callback && callback(e);
  };

  node.addEventListener(animationEnd, runOnce);
}

function preventDuplication(currentData, newObjec) {
  var hasDuplication = false;
  currentData.forEach(function (item) {
    // If the toastr options implicitly specify not to prevent duplicates then skip
    if (item.options && item.options.preventDuplicates === false) return; // Because the toastr has a unic id we will check by the title and message.

    if (item.title === newObjec.title && item.message === newObjec.message && item.type === newObjec.type) {
      hasDuplication = true;
    }
  });
  return hasDuplication;
}

function updateConfig(obj) {
  Object.keys(_config["default"]).forEach(function (key) {
    if (obj.hasOwnProperty(key)) {
      _config["default"][key] = obj[key];
    }
  });
}

function _bind(strinOrAray, scope) {
  var array = strinOrAray;

  if (!Array.isArray(strinOrAray)) {
    array = strinOrAray.split(' ');
  }

  return array.map(function (item) {
    return scope[item] = scope[item].bind(scope);
  });
}

/***/ }),

/***/ 364:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Provider": function() { return /* reexport */ components_Provider; },
  "ReactReduxContext": function() { return /* reexport */ ReactReduxContext; },
  "batch": function() { return /* reexport */ react_dom.unstable_batchedUpdates; },
  "connect": function() { return /* reexport */ connect; },
  "connectAdvanced": function() { return /* reexport */ connectAdvanced; },
  "createDispatchHook": function() { return /* reexport */ createDispatchHook; },
  "createSelectorHook": function() { return /* reexport */ createSelectorHook; },
  "createStoreHook": function() { return /* reexport */ createStoreHook; },
  "shallowEqual": function() { return /* reexport */ shallowEqual; },
  "useDispatch": function() { return /* reexport */ useDispatch; },
  "useSelector": function() { return /* reexport */ useSelector; },
  "useStore": function() { return /* reexport */ useStore_useStore; }
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(2791);
;// CONCATENATED MODULE: ./node_modules/react-redux/es/components/Context.js

var ReactReduxContext = /*#__PURE__*/react.createContext(null);

if (false) {}

/* harmony default export */ var Context = ((/* unused pure expression or super */ null && (ReactReduxContext)));
;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/batch.js
// Default to a dummy "batch" implementation that just runs the callback
function defaultNoopBatch(callback) {
  callback();
}

var batch = defaultNoopBatch; // Allow injecting another batching function later

var setBatch = function setBatch(newBatch) {
  return batch = newBatch;
}; // Supply a getter just to skip dealing with ESM bindings

var getBatch = function getBatch() {
  return batch;
};
;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/Subscription.js
 // encapsulates the subscription logic for connecting a component to the redux store, as
// well as nesting subscriptions of descendant components, so that we can ensure the
// ancestor components re-render before descendants

function createListenerCollection() {
  var batch = getBatch();
  var first = null;
  var last = null;
  return {
    clear: function clear() {
      first = null;
      last = null;
    },
    notify: function notify() {
      batch(function () {
        var listener = first;

        while (listener) {
          listener.callback();
          listener = listener.next;
        }
      });
    },
    get: function get() {
      var listeners = [];
      var listener = first;

      while (listener) {
        listeners.push(listener);
        listener = listener.next;
      }

      return listeners;
    },
    subscribe: function subscribe(callback) {
      var isSubscribed = true;
      var listener = last = {
        callback: callback,
        next: null,
        prev: last
      };

      if (listener.prev) {
        listener.prev.next = listener;
      } else {
        first = listener;
      }

      return function unsubscribe() {
        if (!isSubscribed || first === null) return;
        isSubscribed = false;

        if (listener.next) {
          listener.next.prev = listener.prev;
        } else {
          last = listener.prev;
        }

        if (listener.prev) {
          listener.prev.next = listener.next;
        } else {
          first = listener.next;
        }
      };
    }
  };
}

var nullListeners = {
  notify: function notify() {},
  get: function get() {
    return [];
  }
};
function createSubscription(store, parentSub) {
  var unsubscribe;
  var listeners = nullListeners;

  function addNestedSub(listener) {
    trySubscribe();
    return listeners.subscribe(listener);
  }

  function notifyNestedSubs() {
    listeners.notify();
  }

  function handleChangeWrapper() {
    if (subscription.onStateChange) {
      subscription.onStateChange();
    }
  }

  function isSubscribed() {
    return Boolean(unsubscribe);
  }

  function trySubscribe() {
    if (!unsubscribe) {
      unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);
      listeners = createListenerCollection();
    }
  }

  function tryUnsubscribe() {
    if (unsubscribe) {
      unsubscribe();
      unsubscribe = undefined;
      listeners.clear();
      listeners = nullListeners;
    }
  }

  var subscription = {
    addNestedSub: addNestedSub,
    notifyNestedSubs: notifyNestedSubs,
    handleChangeWrapper: handleChangeWrapper,
    isSubscribed: isSubscribed,
    trySubscribe: trySubscribe,
    tryUnsubscribe: tryUnsubscribe,
    getListeners: function getListeners() {
      return listeners;
    }
  };
  return subscription;
}
;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js
 // React currently throws a warning when using useLayoutEffect on the server.
// To get around it, we can conditionally useEffect on the server (no-op) and
// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store
// subscription callback always has the selector from the latest render commit
// available, otherwise a store update may happen between render and the effect,
// which may cause missed updates; we also must ensure the store subscription
// is created synchronously, otherwise a store update may occur before the
// subscription is created and an inconsistent state may be observed

var useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? react.useLayoutEffect : react.useEffect;
;// CONCATENATED MODULE: ./node_modules/react-redux/es/components/Provider.js






function Provider(_ref) {
  var store = _ref.store,
      context = _ref.context,
      children = _ref.children;
  var contextValue = (0,react.useMemo)(function () {
    var subscription = createSubscription(store);
    return {
      store: store,
      subscription: subscription
    };
  }, [store]);
  var previousState = (0,react.useMemo)(function () {
    return store.getState();
  }, [store]);
  useIsomorphicLayoutEffect(function () {
    var subscription = contextValue.subscription;
    subscription.onStateChange = subscription.notifyNestedSubs;
    subscription.trySubscribe();

    if (previousState !== store.getState()) {
      subscription.notifyNestedSubs();
    }

    return function () {
      subscription.tryUnsubscribe();
      subscription.onStateChange = null;
    };
  }, [contextValue, previousState]);
  var Context = context || ReactReduxContext;
  return /*#__PURE__*/react.createElement(Context.Provider, {
    value: contextValue
  }, children);
}

if (false) {}

/* harmony default export */ var components_Provider = (Provider);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(7462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(3366);
// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var hoist_non_react_statics_cjs = __webpack_require__(2110);
var hoist_non_react_statics_cjs_default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics_cjs);
// EXTERNAL MODULE: ./node_modules/react-is/index.js
var react_is = __webpack_require__(7441);
;// CONCATENATED MODULE: ./node_modules/react-redux/es/components/connectAdvanced.js


var _excluded = ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef", "forwardRef", "context"],
    _excluded2 = ["reactReduxForwardedRef"];





 // Define some constant arrays just to avoid re-creating these

var EMPTY_ARRAY = [];
var NO_SUBSCRIPTION_ARRAY = [null, null];

var stringifyComponent = function stringifyComponent(Comp) {
  try {
    return JSON.stringify(Comp);
  } catch (err) {
    return String(Comp);
  }
};

function storeStateUpdatesReducer(state, action) {
  var updateCount = state[1];
  return [action.payload, updateCount + 1];
}

function useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {
  useIsomorphicLayoutEffect(function () {
    return effectFunc.apply(void 0, effectArgs);
  }, dependencies);
}

function captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs) {
  // We want to capture the wrapper props and child props we used for later comparisons
  lastWrapperProps.current = wrapperProps;
  lastChildProps.current = actualChildProps;
  renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update

  if (childPropsFromStoreUpdate.current) {
    childPropsFromStoreUpdate.current = null;
    notifyNestedSubs();
  }
}

function subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch) {
  // If we're not subscribed to the store, nothing to do here
  if (!shouldHandleStateChanges) return; // Capture values for checking if and when this component unmounts

  var didUnsubscribe = false;
  var lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component

  var checkForUpdates = function checkForUpdates() {
    if (didUnsubscribe) {
      // Don't run stale listeners.
      // Redux doesn't guarantee unsubscriptions happen until next dispatch.
      return;
    }

    var latestStoreState = store.getState();
    var newChildProps, error;

    try {
      // Actually run the selector with the most recent store state and wrapper props
      // to determine what the child props should be
      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);
    } catch (e) {
      error = e;
      lastThrownError = e;
    }

    if (!error) {
      lastThrownError = null;
    } // If the child props haven't changed, nothing to do here - cascade the subscription update


    if (newChildProps === lastChildProps.current) {
      if (!renderIsScheduled.current) {
        notifyNestedSubs();
      }
    } else {
      // Save references to the new child props.  Note that we track the "child props from store update"
      // as a ref instead of a useState/useReducer because we need a way to determine if that value has
      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without
      // forcing another re-render, which we don't want.
      lastChildProps.current = newChildProps;
      childPropsFromStoreUpdate.current = newChildProps;
      renderIsScheduled.current = true; // If the child props _did_ change (or we caught an error), this wrapper component needs to re-render

      forceComponentUpdateDispatch({
        type: 'STORE_UPDATED',
        payload: {
          error: error
        }
      });
    }
  }; // Actually subscribe to the nearest connected ancestor (or store)


  subscription.onStateChange = checkForUpdates;
  subscription.trySubscribe(); // Pull data from the store after first render in case the store has
  // changed since we began.

  checkForUpdates();

  var unsubscribeWrapper = function unsubscribeWrapper() {
    didUnsubscribe = true;
    subscription.tryUnsubscribe();
    subscription.onStateChange = null;

    if (lastThrownError) {
      // It's possible that we caught an error due to a bad mapState function, but the
      // parent re-rendered without this component and we're about to unmount.
      // This shouldn't happen as long as we do top-down subscriptions correctly, but
      // if we ever do those wrong, this throw will surface the error in our tests.
      // In that case, throw the error from here so it doesn't get lost.
      throw lastThrownError;
    }
  };

  return unsubscribeWrapper;
}

var initStateUpdates = function initStateUpdates() {
  return [null, 0];
};

function connectAdvanced(
/*
  selectorFactory is a func that is responsible for returning the selector function used to
  compute new props from state, props, and dispatch. For example:
      export default connectAdvanced((dispatch, options) => (state, props) => ({
      thing: state.things[props.thingId],
      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
    }))(YourComponent)
    Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
    Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
  props. Do not use connectAdvanced directly without memoizing results between calls to your
  selector, otherwise the Connect component will re-render on every state or props change.
*/
selectorFactory, // options object:
_ref) {
  if (_ref === void 0) {
    _ref = {};
  }

  var _ref2 = _ref,
      _ref2$getDisplayName = _ref2.getDisplayName,
      getDisplayName = _ref2$getDisplayName === void 0 ? function (name) {
    return "ConnectAdvanced(" + name + ")";
  } : _ref2$getDisplayName,
      _ref2$methodName = _ref2.methodName,
      methodName = _ref2$methodName === void 0 ? 'connectAdvanced' : _ref2$methodName,
      _ref2$renderCountProp = _ref2.renderCountProp,
      renderCountProp = _ref2$renderCountProp === void 0 ? undefined : _ref2$renderCountProp,
      _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges,
      shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta,
      _ref2$storeKey = _ref2.storeKey,
      storeKey = _ref2$storeKey === void 0 ? 'store' : _ref2$storeKey,
      _ref2$withRef = _ref2.withRef,
      withRef = _ref2$withRef === void 0 ? false : _ref2$withRef,
      _ref2$forwardRef = _ref2.forwardRef,
      forwardRef = _ref2$forwardRef === void 0 ? false : _ref2$forwardRef,
      _ref2$context = _ref2.context,
      context = _ref2$context === void 0 ? ReactReduxContext : _ref2$context,
      connectOptions = (0,objectWithoutPropertiesLoose/* default */.Z)(_ref2, _excluded);

  if (false) { var customStoreWarningMessage; }

  var Context = context;
  return function wrapWithConnect(WrappedComponent) {
    if (false) {}

    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
    var displayName = getDisplayName(wrappedComponentName);

    var selectorFactoryOptions = (0,esm_extends/* default */.Z)({}, connectOptions, {
      getDisplayName: getDisplayName,
      methodName: methodName,
      renderCountProp: renderCountProp,
      shouldHandleStateChanges: shouldHandleStateChanges,
      storeKey: storeKey,
      displayName: displayName,
      wrappedComponentName: wrappedComponentName,
      WrappedComponent: WrappedComponent
    });

    var pure = connectOptions.pure;

    function createChildSelector(store) {
      return selectorFactory(store.dispatch, selectorFactoryOptions);
    } // If we aren't running in "pure" mode, we don't want to memoize values.
    // To avoid conditionally calling hooks, we fall back to a tiny wrapper
    // that just executes the given callback immediately.


    var usePureOnlyMemo = pure ? react.useMemo : function (callback) {
      return callback();
    };

    function ConnectFunction(props) {
      var _useMemo = (0,react.useMemo)(function () {
        // Distinguish between actual "data" props that were passed to the wrapper component,
        // and values needed to control behavior (forwarded refs, alternate context instances).
        // To maintain the wrapperProps object reference, memoize this destructuring.
        var reactReduxForwardedRef = props.reactReduxForwardedRef,
            wrapperProps = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded2);

        return [props.context, reactReduxForwardedRef, wrapperProps];
      }, [props]),
          propsContext = _useMemo[0],
          reactReduxForwardedRef = _useMemo[1],
          wrapperProps = _useMemo[2];

      var ContextToUse = (0,react.useMemo)(function () {
        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.
        // Memoize the check that determines which context instance we should use.
        return propsContext && propsContext.Consumer && (0,react_is.isContextConsumer)( /*#__PURE__*/react.createElement(propsContext.Consumer, null)) ? propsContext : Context;
      }, [propsContext, Context]); // Retrieve the store and ancestor subscription via context, if available

      var contextValue = (0,react.useContext)(ContextToUse); // The store _must_ exist as either a prop or in context.
      // We'll check to see if it _looks_ like a Redux store first.
      // This allows us to pass through a `store` prop that is just a plain value.

      var didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);
      var didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);

      if (false) {} // Based on the previous check, one of these must be true


      var store = didStoreComeFromProps ? props.store : contextValue.store;
      var childPropsSelector = (0,react.useMemo)(function () {
        // The child props selector needs the store reference as an input.
        // Re-create this selector whenever the store changes.
        return createChildSelector(store);
      }, [store]);

      var _useMemo2 = (0,react.useMemo)(function () {
        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component
        // connected to the store via props shouldn't use subscription from context, or vice versa.
        // This Subscription's source should match where store came from: props vs. context. A component
        // connected to the store via props shouldn't use subscription from context, or vice versa.

        var subscription = createSubscription(store, didStoreComeFromProps ? null : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in
        // the middle of the notification loop, where `subscription` will then be null. This can
        // probably be avoided if Subscription's listeners logic is changed to not call listeners
        // that have been unsubscribed in the  middle of the notification loop.
        // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in
        // the middle of the notification loop, where `subscription` will then be null. This can
        // probably be avoided if Subscription's listeners logic is changed to not call listeners
        // that have been unsubscribed in the  middle of the notification loop.

        var notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);
        return [subscription, notifyNestedSubs];
      }, [store, didStoreComeFromProps, contextValue]),
          subscription = _useMemo2[0],
          notifyNestedSubs = _useMemo2[1]; // Determine what {store, subscription} value should be put into nested context, if necessary,
      // and memoize that value to avoid unnecessary context updates.


      var overriddenContextValue = (0,react.useMemo)(function () {
        if (didStoreComeFromProps) {
          // This component is directly subscribed to a store from props.
          // We don't want descendants reading from this store - pass down whatever
          // the existing context value is from the nearest connected ancestor.
          return contextValue;
        } // Otherwise, put this component's subscription instance into context, so that
        // connected descendants won't update until after this component is done


        return (0,esm_extends/* default */.Z)({}, contextValue, {
          subscription: subscription
        });
      }, [didStoreComeFromProps, contextValue, subscription]); // We need to force this wrapper component to re-render whenever a Redux store update
      // causes a change to the calculated child component props (or we caught an error in mapState)

      var _useReducer = (0,react.useReducer)(storeStateUpdatesReducer, EMPTY_ARRAY, initStateUpdates),
          _useReducer$ = _useReducer[0],
          previousStateUpdateResult = _useReducer$[0],
          forceComponentUpdateDispatch = _useReducer[1]; // Propagate any mapState/mapDispatch errors upwards


      if (previousStateUpdateResult && previousStateUpdateResult.error) {
        throw previousStateUpdateResult.error;
      } // Set up refs to coordinate values between the subscription effect and the render logic


      var lastChildProps = (0,react.useRef)();
      var lastWrapperProps = (0,react.useRef)(wrapperProps);
      var childPropsFromStoreUpdate = (0,react.useRef)();
      var renderIsScheduled = (0,react.useRef)(false);
      var actualChildProps = usePureOnlyMemo(function () {
        // Tricky logic here:
        // - This render may have been triggered by a Redux store update that produced new child props
        // - However, we may have gotten new wrapper props after that
        // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.
        // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.
        // So, we'll use the child props from store update only if the wrapper props are the same as last time.
        if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {
          return childPropsFromStoreUpdate.current;
        } // TODO We're reading the store directly in render() here. Bad idea?
        // This will likely cause Bad Things (TM) to happen in Concurrent Mode.
        // Note that we do this because on renders _not_ caused by store updates, we need the latest store state
        // to determine what the child props should be.


        return childPropsSelector(store.getState(), wrapperProps);
      }, [store, previousStateUpdateResult, wrapperProps]); // We need this to execute synchronously every time we re-render. However, React warns
      // about useLayoutEffect in SSR, so we try to detect environment and fall back to
      // just useEffect instead to avoid the warning, since neither will run anyway.

      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs]); // Our re-subscribe logic only runs when the store/subscription setup changes

      useIsomorphicLayoutEffectWithArgs(subscribeUpdates, [shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch], [store, subscription, childPropsSelector]); // Now that all that's done, we can finally try to actually render the child component.
      // We memoize the elements for the rendered child component as an optimization.

      var renderedWrappedComponent = (0,react.useMemo)(function () {
        return /*#__PURE__*/react.createElement(WrappedComponent, (0,esm_extends/* default */.Z)({}, actualChildProps, {
          ref: reactReduxForwardedRef
        }));
      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]); // If React sees the exact same element reference as last time, it bails out of re-rendering
      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.

      var renderedChild = (0,react.useMemo)(function () {
        if (shouldHandleStateChanges) {
          // If this component is subscribed to store updates, we need to pass its own
          // subscription instance down to our descendants. That means rendering the same
          // Context instance, and putting a different value into the context.
          return /*#__PURE__*/react.createElement(ContextToUse.Provider, {
            value: overriddenContextValue
          }, renderedWrappedComponent);
        }

        return renderedWrappedComponent;
      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);
      return renderedChild;
    } // If we're in "pure" mode, ensure our wrapper component only re-renders when incoming props have changed.


    var Connect = pure ? react.memo(ConnectFunction) : ConnectFunction;
    Connect.WrappedComponent = WrappedComponent;
    Connect.displayName = ConnectFunction.displayName = displayName;

    if (forwardRef) {
      var forwarded = react.forwardRef(function forwardConnectRef(props, ref) {
        return /*#__PURE__*/react.createElement(Connect, (0,esm_extends/* default */.Z)({}, props, {
          reactReduxForwardedRef: ref
        }));
      });
      forwarded.displayName = displayName;
      forwarded.WrappedComponent = WrappedComponent;
      return hoist_non_react_statics_cjs_default()(forwarded, WrappedComponent);
    }

    return hoist_non_react_statics_cjs_default()(Connect, WrappedComponent);
  };
}
;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/shallowEqual.js
function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) return true;

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) return false;

  for (var i = 0; i < keysA.length; i++) {
    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}
;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/bindActionCreators.js
function bindActionCreators(actionCreators, dispatch) {
  var boundActionCreators = {};

  var _loop = function _loop(key) {
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = function () {
        return dispatch(actionCreator.apply(void 0, arguments));
      };
    }
  };

  for (var key in actionCreators) {
    _loop(key);
  }

  return boundActionCreators;
}
;// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/wrapMapToProps.js

function wrapMapToPropsConstant(getConstant) {
  return function initConstantSelector(dispatch, options) {
    var constant = getConstant(dispatch, options);

    function constantSelector() {
      return constant;
    }

    constantSelector.dependsOnOwnProps = false;
    return constantSelector;
  };
} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
// whether mapToProps needs to be invoked when props have changed.
//
// A length of one signals that mapToProps does not depend on props from the parent component.
// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
// therefore not reporting its length accurately..

function getDependsOnOwnProps(mapToProps) {
  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
// this function wraps mapToProps in a proxy function which does several things:
//
//  * Detects whether the mapToProps function being called depends on props, which
//    is used by selectorFactory to decide if it should reinvoke on props changes.
//
//  * On first call, handles mapToProps if returns another function, and treats that
//    new function as the true mapToProps for subsequent calls.
//
//  * On first call, verifies the first result is a plain object, in order to warn
//    the developer that their mapToProps function is not returning a valid result.
//

function wrapMapToPropsFunc(mapToProps, methodName) {
  return function initProxySelector(dispatch, _ref) {
    var displayName = _ref.displayName;

    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
    }; // allow detectFactoryAndVerify to get ownProps


    proxy.dependsOnOwnProps = true;

    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
      proxy.mapToProps = mapToProps;
      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
      var props = proxy(stateOrDispatch, ownProps);

      if (typeof props === 'function') {
        proxy.mapToProps = props;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
        props = proxy(stateOrDispatch, ownProps);
      }

      if (false) {}
      return props;
    };

    return proxy;
  };
}
;// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/mapDispatchToProps.js


function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
  return typeof mapDispatchToProps === 'function' ? wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps') : undefined;
}
function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
  return !mapDispatchToProps ? wrapMapToPropsConstant(function (dispatch) {
    return {
      dispatch: dispatch
    };
  }) : undefined;
}
function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? wrapMapToPropsConstant(function (dispatch) {
    return bindActionCreators(mapDispatchToProps, dispatch);
  }) : undefined;
}
/* harmony default export */ var mapDispatchToProps = ([whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject]);
;// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/mapStateToProps.js

function whenMapStateToPropsIsFunction(mapStateToProps) {
  return typeof mapStateToProps === 'function' ? wrapMapToPropsFunc(mapStateToProps, 'mapStateToProps') : undefined;
}
function whenMapStateToPropsIsMissing(mapStateToProps) {
  return !mapStateToProps ? wrapMapToPropsConstant(function () {
    return {};
  }) : undefined;
}
/* harmony default export */ var mapStateToProps = ([whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing]);
;// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/mergeProps.js


function defaultMergeProps(stateProps, dispatchProps, ownProps) {
  return (0,esm_extends/* default */.Z)({}, ownProps, stateProps, dispatchProps);
}
function wrapMergePropsFunc(mergeProps) {
  return function initMergePropsProxy(dispatch, _ref) {
    var displayName = _ref.displayName,
        pure = _ref.pure,
        areMergedPropsEqual = _ref.areMergedPropsEqual;
    var hasRunOnce = false;
    var mergedProps;
    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

      if (hasRunOnce) {
        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
      } else {
        hasRunOnce = true;
        mergedProps = nextMergedProps;
        if (false) {}
      }

      return mergedProps;
    };
  };
}
function whenMergePropsIsFunction(mergeProps) {
  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
}
function whenMergePropsIsOmitted(mergeProps) {
  return !mergeProps ? function () {
    return defaultMergeProps;
  } : undefined;
}
/* harmony default export */ var mergeProps = ([whenMergePropsIsFunction, whenMergePropsIsOmitted]);
;// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/selectorFactory.js

var selectorFactory_excluded = ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"];

function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
  return function impureFinalPropsSelector(state, ownProps) {
    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
  };
}
function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
  var areStatesEqual = _ref.areStatesEqual,
      areOwnPropsEqual = _ref.areOwnPropsEqual,
      areStatePropsEqual = _ref.areStatePropsEqual;
  var hasRunAtLeastOnce = false;
  var state;
  var ownProps;
  var stateProps;
  var dispatchProps;
  var mergedProps;

  function handleFirstCall(firstState, firstOwnProps) {
    state = firstState;
    ownProps = firstOwnProps;
    stateProps = mapStateToProps(state, ownProps);
    dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    hasRunAtLeastOnce = true;
    return mergedProps;
  }

  function handleNewPropsAndNewState() {
    stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewProps() {
    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewState() {
    var nextStateProps = mapStateToProps(state, ownProps);
    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
    stateProps = nextStateProps;
    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleSubsequentCalls(nextState, nextOwnProps) {
    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
    var stateChanged = !areStatesEqual(nextState, state);
    state = nextState;
    ownProps = nextOwnProps;
    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
    if (propsChanged) return handleNewProps();
    if (stateChanged) return handleNewState();
    return mergedProps;
  }

  return function pureFinalPropsSelector(nextState, nextOwnProps) {
    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
  };
} // TODO: Add more comments
// If pure is true, the selector returned by selectorFactory will memoize its results,
// allowing connectAdvanced's shouldComponentUpdate to return false if final
// props have not changed. If false, the selector will always return a new
// object and shouldComponentUpdate will always return true.

function finalPropsSelectorFactory(dispatch, _ref2) {
  var initMapStateToProps = _ref2.initMapStateToProps,
      initMapDispatchToProps = _ref2.initMapDispatchToProps,
      initMergeProps = _ref2.initMergeProps,
      options = (0,objectWithoutPropertiesLoose/* default */.Z)(_ref2, selectorFactory_excluded);

  var mapStateToProps = initMapStateToProps(dispatch, options);
  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
  var mergeProps = initMergeProps(dispatch, options);

  if (false) {}

  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
}
;// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/connect.js


var connect_excluded = ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"];






/*
  connect is a facade over connectAdvanced. It turns its args into a compatible
  selectorFactory, which has the signature:

    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
  
  connect passes its args to connectAdvanced as options, which will in turn pass them to
  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

  selectorFactory returns a final props selector from its mapStateToProps,
  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
  mergePropsFactories, and pure args.

  The resulting final props selector is called by the Connect component instance whenever
  it receives new props or store state.
 */

function match(arg, factories, name) {
  for (var i = factories.length - 1; i >= 0; i--) {
    var result = factories[i](arg);
    if (result) return result;
  }

  return function (dispatch, options) {
    throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");
  };
}

function strictEqual(a, b) {
  return a === b;
} // createConnect with default args builds the 'official' connect behavior. Calling it with
// different options opens up some testing and extensibility scenarios


function createConnect(_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$connectHOC = _ref.connectHOC,
      connectHOC = _ref$connectHOC === void 0 ? connectAdvanced : _ref$connectHOC,
      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? mapStateToProps : _ref$mapStateToPropsF,
      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? mapDispatchToProps : _ref$mapDispatchToPro,
      _ref$mergePropsFactor = _ref.mergePropsFactories,
      mergePropsFactories = _ref$mergePropsFactor === void 0 ? mergeProps : _ref$mergePropsFactor,
      _ref$selectorFactory = _ref.selectorFactory,
      selectorFactory = _ref$selectorFactory === void 0 ? finalPropsSelectorFactory : _ref$selectorFactory;

  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {
    if (_ref2 === void 0) {
      _ref2 = {};
    }

    var _ref3 = _ref2,
        _ref3$pure = _ref3.pure,
        pure = _ref3$pure === void 0 ? true : _ref3$pure,
        _ref3$areStatesEqual = _ref3.areStatesEqual,
        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,
        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,
        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? shallowEqual : _ref3$areOwnPropsEqua,
        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,
        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? shallowEqual : _ref3$areStatePropsEq,
        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,
        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? shallowEqual : _ref3$areMergedPropsE,
        extraOptions = (0,objectWithoutPropertiesLoose/* default */.Z)(_ref3, connect_excluded);

    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');
    return connectHOC(selectorFactory, (0,esm_extends/* default */.Z)({
      // used in error messages
      methodName: 'connect',
      // used to compute Connect's displayName from the wrapped component's displayName.
      getDisplayName: function getDisplayName(name) {
        return "Connect(" + name + ")";
      },
      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
      shouldHandleStateChanges: Boolean(mapStateToProps),
      // passed through to selectorFactory
      initMapStateToProps: initMapStateToProps,
      initMapDispatchToProps: initMapDispatchToProps,
      initMergeProps: initMergeProps,
      pure: pure,
      areStatesEqual: areStatesEqual,
      areOwnPropsEqual: areOwnPropsEqual,
      areStatePropsEqual: areStatePropsEqual,
      areMergedPropsEqual: areMergedPropsEqual
    }, extraOptions));
  };
}
/* harmony default export */ var connect = (/*#__PURE__*/createConnect());
;// CONCATENATED MODULE: ./node_modules/react-redux/es/hooks/useReduxContext.js


/**
 * A hook to access the value of the `ReactReduxContext`. This is a low-level
 * hook that you should usually not need to call directly.
 *
 * @returns {any} the value of the `ReactReduxContext`
 *
 * @example
 *
 * import React from 'react'
 * import { useReduxContext } from 'react-redux'
 *
 * export const CounterComponent = ({ value }) => {
 *   const { store } = useReduxContext()
 *   return <div>{store.getState()}</div>
 * }
 */

function useReduxContext_useReduxContext() {
  var contextValue = (0,react.useContext)(ReactReduxContext);

  if (false) {}

  return contextValue;
}
;// CONCATENATED MODULE: ./node_modules/react-redux/es/hooks/useStore.js



/**
 * Hook factory, which creates a `useStore` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useStore` hook bound to the specified context.
 */

function createStoreHook(context) {
  if (context === void 0) {
    context = ReactReduxContext;
  }

  var useReduxContext = context === ReactReduxContext ? useReduxContext_useReduxContext : function () {
    return (0,react.useContext)(context);
  };
  return function useStore() {
    var _useReduxContext = useReduxContext(),
        store = _useReduxContext.store;

    return store;
  };
}
/**
 * A hook to access the redux store.
 *
 * @returns {any} the redux store
 *
 * @example
 *
 * import React from 'react'
 * import { useStore } from 'react-redux'
 *
 * export const ExampleComponent = () => {
 *   const store = useStore()
 *   return <div>{store.getState()}</div>
 * }
 */

var useStore_useStore = /*#__PURE__*/createStoreHook();
;// CONCATENATED MODULE: ./node_modules/react-redux/es/hooks/useDispatch.js


/**
 * Hook factory, which creates a `useDispatch` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useDispatch` hook bound to the specified context.
 */

function createDispatchHook(context) {
  if (context === void 0) {
    context = ReactReduxContext;
  }

  var useStore = context === ReactReduxContext ? useStore_useStore : createStoreHook(context);
  return function useDispatch() {
    var store = useStore();
    return store.dispatch;
  };
}
/**
 * A hook to access the redux `dispatch` function.
 *
 * @returns {any|function} redux store's `dispatch` function
 *
 * @example
 *
 * import React, { useCallback } from 'react'
 * import { useDispatch } from 'react-redux'
 *
 * export const CounterComponent = ({ value }) => {
 *   const dispatch = useDispatch()
 *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])
 *   return (
 *     <div>
 *       <span>{value}</span>
 *       <button onClick={increaseCounter}>Increase counter</button>
 *     </div>
 *   )
 * }
 */

var useDispatch = /*#__PURE__*/createDispatchHook();
;// CONCATENATED MODULE: ./node_modules/react-redux/es/hooks/useSelector.js






var refEquality = function refEquality(a, b) {
  return a === b;
};

function useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub) {
  var _useReducer = (0,react.useReducer)(function (s) {
    return s + 1;
  }, 0),
      forceRender = _useReducer[1];

  var subscription = (0,react.useMemo)(function () {
    return createSubscription(store, contextSub);
  }, [store, contextSub]);
  var latestSubscriptionCallbackError = (0,react.useRef)();
  var latestSelector = (0,react.useRef)();
  var latestStoreState = (0,react.useRef)();
  var latestSelectedState = (0,react.useRef)();
  var storeState = store.getState();
  var selectedState;

  try {
    if (selector !== latestSelector.current || storeState !== latestStoreState.current || latestSubscriptionCallbackError.current) {
      var newSelectedState = selector(storeState); // ensure latest selected state is reused so that a custom equality function can result in identical references

      if (latestSelectedState.current === undefined || !equalityFn(newSelectedState, latestSelectedState.current)) {
        selectedState = newSelectedState;
      } else {
        selectedState = latestSelectedState.current;
      }
    } else {
      selectedState = latestSelectedState.current;
    }
  } catch (err) {
    if (latestSubscriptionCallbackError.current) {
      err.message += "\nThe error may be correlated with this previous error:\n" + latestSubscriptionCallbackError.current.stack + "\n\n";
    }

    throw err;
  }

  useIsomorphicLayoutEffect(function () {
    latestSelector.current = selector;
    latestStoreState.current = storeState;
    latestSelectedState.current = selectedState;
    latestSubscriptionCallbackError.current = undefined;
  });
  useIsomorphicLayoutEffect(function () {
    function checkForUpdates() {
      try {
        var newStoreState = store.getState(); // Avoid calling selector multiple times if the store's state has not changed

        if (newStoreState === latestStoreState.current) {
          return;
        }

        var _newSelectedState = latestSelector.current(newStoreState);

        if (equalityFn(_newSelectedState, latestSelectedState.current)) {
          return;
        }

        latestSelectedState.current = _newSelectedState;
        latestStoreState.current = newStoreState;
      } catch (err) {
        // we ignore all errors here, since when the component
        // is re-rendered, the selectors are called again, and
        // will throw again, if neither props nor store state
        // changed
        latestSubscriptionCallbackError.current = err;
      }

      forceRender();
    }

    subscription.onStateChange = checkForUpdates;
    subscription.trySubscribe();
    checkForUpdates();
    return function () {
      return subscription.tryUnsubscribe();
    };
  }, [store, subscription]);
  return selectedState;
}
/**
 * Hook factory, which creates a `useSelector` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useSelector` hook bound to the specified context.
 */


function createSelectorHook(context) {
  if (context === void 0) {
    context = ReactReduxContext;
  }

  var useReduxContext = context === ReactReduxContext ? useReduxContext_useReduxContext : function () {
    return (0,react.useContext)(context);
  };
  return function useSelector(selector, equalityFn) {
    if (equalityFn === void 0) {
      equalityFn = refEquality;
    }

    if (false) {}

    var _useReduxContext = useReduxContext(),
        store = _useReduxContext.store,
        contextSub = _useReduxContext.subscription;

    var selectedState = useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub);
    (0,react.useDebugValue)(selectedState);
    return selectedState;
  };
}
/**
 * A hook to access the redux store's state. This hook takes a selector function
 * as an argument. The selector is called with the store state.
 *
 * This hook takes an optional equality comparison function as the second parameter
 * that allows you to customize the way the selected state is compared to determine
 * whether the component needs to be re-rendered.
 *
 * @param {Function} selector the selector function
 * @param {Function=} equalityFn the function that will be used to determine equality
 *
 * @returns {any} the selected state
 *
 * @example
 *
 * import React from 'react'
 * import { useSelector } from 'react-redux'
 *
 * export const CounterComponent = () => {
 *   const counter = useSelector(state => state.counter)
 *   return <div>{counter}</div>
 * }
 */

var useSelector = /*#__PURE__*/createSelectorHook();
;// CONCATENATED MODULE: ./node_modules/react-redux/es/exports.js









// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(4164);
;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/reactBatchedUpdates.js
/* eslint-disable import/no-unresolved */

;// CONCATENATED MODULE: ./node_modules/react-redux/es/index.js


 // Enable batched updates in our subscriptions for use
// with standard React renderers (ReactDOM, React Native)

setBatch(react_dom.unstable_batchedUpdates);


/***/ }),

/***/ 5448:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.isNavigator = exports.isBrowser = exports.off = exports.on = exports.noop = void 0;

var noop = function noop() {};

exports.noop = noop;

function on(obj) {
  var args = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    args[_i - 1] = arguments[_i];
  }

  if (obj && obj.addEventListener) {
    obj.addEventListener.apply(obj, args);
  }
}

exports.on = on;

function off(obj) {
  var args = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    args[_i - 1] = arguments[_i];
  }

  if (obj && obj.removeEventListener) {
    obj.removeEventListener.apply(obj, args);
  }
}

exports.off = off;
exports.isBrowser = typeof window !== 'undefined';
exports.isNavigator = typeof navigator !== 'undefined';

/***/ }),

/***/ 8118:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var react_1 = __webpack_require__(2791);

var useEffectOnce = function useEffectOnce(effect) {
  react_1.useEffect(effect, []);
};

exports["default"] = useEffectOnce;

/***/ }),

/***/ 1042:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});

var react_1 = __webpack_require__(2791);

var util_1 = __webpack_require__(5448);

var defaultTarget = util_1.isBrowser ? window : null;

var isListenerType1 = function isListenerType1(target) {
  return !!target.addEventListener;
};

var isListenerType2 = function isListenerType2(target) {
  return !!target.on;
};

var useEvent = function useEvent(name, handler, target, options) {
  if (target === void 0) {
    target = defaultTarget;
  }

  react_1.useEffect(function () {
    if (!handler) {
      return;
    }

    if (!target) {
      return;
    }

    if (isListenerType1(target)) {
      util_1.on(target, name, handler, options);
    } else if (isListenerType2(target)) {
      target.on(name, handler, options);
    }

    return function () {
      if (isListenerType1(target)) {
        util_1.off(target, name, handler, options);
      } else if (isListenerType2(target)) {
        target.off(name, handler, options);
      }
    };
  }, [name, handler, target, JSON.stringify(options)]);
};

exports.Z = useEvent;

/***/ }),

/***/ 3178:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var tslib_1 = __webpack_require__(9388);

var react_1 = __webpack_require__(2791);

var useUnmount_1 = tslib_1.__importDefault(__webpack_require__(9802));

var useRafState = function useRafState(initialState) {
  var frame = react_1.useRef(0);

  var _a = react_1.useState(initialState),
      state = _a[0],
      setState = _a[1];

  var setRafState = react_1.useCallback(function (value) {
    cancelAnimationFrame(frame.current);
    frame.current = requestAnimationFrame(function () {
      setState(value);
    });
  }, []);
  useUnmount_1.default(function () {
    cancelAnimationFrame(frame.current);
  });
  return [state, setRafState];
};

exports["default"] = useRafState;

/***/ }),

/***/ 9802:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var tslib_1 = __webpack_require__(9388);

var react_1 = __webpack_require__(2791);

var useEffectOnce_1 = tslib_1.__importDefault(__webpack_require__(8118));

var useUnmount = function useUnmount(fn) {
  var fnRef = react_1.useRef(fn); // update the ref each render so if it change the newest callback will be invoked

  fnRef.current = fn;
  useEffectOnce_1.default(function () {
    return function () {
      return fnRef.current();
    };
  });
};

exports["default"] = useUnmount;

/***/ }),

/***/ 3339:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});

var tslib_1 = __webpack_require__(9388);

var react_1 = __webpack_require__(2791);

var useRafState_1 = tslib_1.__importDefault(__webpack_require__(3178));

var util_1 = __webpack_require__(5448);

var useWindowSize = function useWindowSize(initialWidth, initialHeight) {
  if (initialWidth === void 0) {
    initialWidth = Infinity;
  }

  if (initialHeight === void 0) {
    initialHeight = Infinity;
  }

  var _a = useRafState_1.default({
    width: util_1.isBrowser ? window.innerWidth : initialWidth,
    height: util_1.isBrowser ? window.innerHeight : initialHeight
  }),
      state = _a[0],
      setState = _a[1];

  react_1.useEffect(function () {
    if (util_1.isBrowser) {
      var handler_1 = function handler_1() {
        setState({
          width: window.innerWidth,
          height: window.innerHeight
        });
      };

      util_1.on(window, 'resize', handler_1);
      return function () {
        util_1.off(window, 'resize', handler_1);
      };
    }
  }, []);
  return state;
};

exports.Z = useWindowSize;

/***/ }),

/***/ 6374:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;
/** @license React v17.0.2
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


__webpack_require__(1725);

var f = __webpack_require__(2791),
    g = 60103;

__webpack_unused_export__ = 60107;

if ("function" === typeof Symbol && Symbol.for) {
  var h = Symbol.for;
  g = h("react.element");
  __webpack_unused_export__ = h("react.fragment");
}

var m = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
    n = Object.prototype.hasOwnProperty,
    p = {
  key: !0,
  ref: !0,
  __self: !0,
  __source: !0
};

function q(c, a, k) {
  var b,
      d = {},
      e = null,
      l = null;
  void 0 !== k && (e = "" + k);
  void 0 !== a.key && (e = "" + a.key);
  void 0 !== a.ref && (l = a.ref);

  for (b in a) {
    n.call(a, b) && !p.hasOwnProperty(b) && (d[b] = a[b]);
  }

  if (c && c.defaultProps) for (b in a = c.defaultProps, a) {
    void 0 === d[b] && (d[b] = a[b]);
  }
  return {
    $$typeof: g,
    type: c,
    key: e,
    ref: l,
    props: d,
    _owner: m.current
  };
}

exports.jsx = q;
exports.jsxs = q;

/***/ }),

/***/ 9117:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var l = __webpack_require__(1725),
    n = 60103,
    p = 60106;

exports.Fragment = 60107;
exports.StrictMode = 60108;
exports.Profiler = 60114;
var q = 60109,
    r = 60110,
    t = 60112;
exports.Suspense = 60113;
var u = 60115,
    v = 60116;

if ("function" === typeof Symbol && Symbol.for) {
  var w = Symbol.for;
  n = w("react.element");
  p = w("react.portal");
  exports.Fragment = w("react.fragment");
  exports.StrictMode = w("react.strict_mode");
  exports.Profiler = w("react.profiler");
  q = w("react.provider");
  r = w("react.context");
  t = w("react.forward_ref");
  exports.Suspense = w("react.suspense");
  u = w("react.memo");
  v = w("react.lazy");
}

var x = "function" === typeof Symbol && Symbol.iterator;

function y(a) {
  if (null === a || "object" !== typeof a) return null;
  a = x && a[x] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}

function z(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) {
    b += "&args[]=" + encodeURIComponent(arguments[c]);
  }

  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}

var A = {
  isMounted: function isMounted() {
    return !1;
  },
  enqueueForceUpdate: function enqueueForceUpdate() {},
  enqueueReplaceState: function enqueueReplaceState() {},
  enqueueSetState: function enqueueSetState() {}
},
    B = {};

function C(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = B;
  this.updater = c || A;
}

C.prototype.isReactComponent = {};

C.prototype.setState = function (a, b) {
  if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error(z(85));
  this.updater.enqueueSetState(this, a, b, "setState");
};

C.prototype.forceUpdate = function (a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};

function D() {}

D.prototype = C.prototype;

function E(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = B;
  this.updater = c || A;
}

var F = E.prototype = new D();
F.constructor = E;
l(F, C.prototype);
F.isPureReactComponent = !0;
var G = {
  current: null
},
    H = Object.prototype.hasOwnProperty,
    I = {
  key: !0,
  ref: !0,
  __self: !0,
  __source: !0
};

function J(a, b, c) {
  var e,
      d = {},
      k = null,
      h = null;
  if (null != b) for (e in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k = "" + b.key), b) {
    H.call(b, e) && !I.hasOwnProperty(e) && (d[e] = b[e]);
  }
  var g = arguments.length - 2;
  if (1 === g) d.children = c;else if (1 < g) {
    for (var f = Array(g), m = 0; m < g; m++) {
      f[m] = arguments[m + 2];
    }

    d.children = f;
  }
  if (a && a.defaultProps) for (e in g = a.defaultProps, g) {
    void 0 === d[e] && (d[e] = g[e]);
  }
  return {
    $$typeof: n,
    type: a,
    key: k,
    ref: h,
    props: d,
    _owner: G.current
  };
}

function K(a, b) {
  return {
    $$typeof: n,
    type: a.type,
    key: b,
    ref: a.ref,
    props: a.props,
    _owner: a._owner
  };
}

function L(a) {
  return "object" === typeof a && null !== a && a.$$typeof === n;
}

function escape(a) {
  var b = {
    "=": "=0",
    ":": "=2"
  };
  return "$" + a.replace(/[=:]/g, function (a) {
    return b[a];
  });
}

var M = /\/+/g;

function N(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape("" + a.key) : b.toString(36);
}

function O(a, b, c, e, d) {
  var k = typeof a;
  if ("undefined" === k || "boolean" === k) a = null;
  var h = !1;
  if (null === a) h = !0;else switch (k) {
    case "string":
    case "number":
      h = !0;
      break;

    case "object":
      switch (a.$$typeof) {
        case n:
        case p:
          h = !0;
      }

  }
  if (h) return h = a, d = d(h), a = "" === e ? "." + N(h, 0) : e, Array.isArray(d) ? (c = "", null != a && (c = a.replace(M, "$&/") + "/"), O(d, b, c, "", function (a) {
    return a;
  })) : null != d && (L(d) && (d = K(d, c + (!d.key || h && h.key === d.key ? "" : ("" + d.key).replace(M, "$&/") + "/") + a)), b.push(d)), 1;
  h = 0;
  e = "" === e ? "." : e + ":";
  if (Array.isArray(a)) for (var g = 0; g < a.length; g++) {
    k = a[g];
    var f = e + N(k, g);
    h += O(k, b, c, f, d);
  } else if (f = y(a), "function" === typeof f) for (a = f.call(a), g = 0; !(k = a.next()).done;) {
    k = k.value, f = e + N(k, g++), h += O(k, b, c, f, d);
  } else if ("object" === k) throw b = "" + a, Error(z(31, "[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b));
  return h;
}

function P(a, b, c) {
  if (null == a) return a;
  var e = [],
      d = 0;
  O(a, e, "", "", function (a) {
    return b.call(c, a, d++);
  });
  return e;
}

function Q(a) {
  if (-1 === a._status) {
    var b = a._result;
    b = b();
    a._status = 0;
    a._result = b;
    b.then(function (b) {
      0 === a._status && (b = b.default, a._status = 1, a._result = b);
    }, function (b) {
      0 === a._status && (a._status = 2, a._result = b);
    });
  }

  if (1 === a._status) return a._result;
  throw a._result;
}

var R = {
  current: null
};

function S() {
  var a = R.current;
  if (null === a) throw Error(z(321));
  return a;
}

var T = {
  ReactCurrentDispatcher: R,
  ReactCurrentBatchConfig: {
    transition: 0
  },
  ReactCurrentOwner: G,
  IsSomeRendererActing: {
    current: !1
  },
  assign: l
};
exports.Children = {
  map: P,
  forEach: function forEach(a, b, c) {
    P(a, function () {
      b.apply(this, arguments);
    }, c);
  },
  count: function count(a) {
    var b = 0;
    P(a, function () {
      b++;
    });
    return b;
  },
  toArray: function toArray(a) {
    return P(a, function (a) {
      return a;
    }) || [];
  },
  only: function only(a) {
    if (!L(a)) throw Error(z(143));
    return a;
  }
};
exports.Component = C;
exports.PureComponent = E;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = T;

exports.cloneElement = function (a, b, c) {
  if (null === a || void 0 === a) throw Error(z(267, a));
  var e = l({}, a.props),
      d = a.key,
      k = a.ref,
      h = a._owner;

  if (null != b) {
    void 0 !== b.ref && (k = b.ref, h = G.current);
    void 0 !== b.key && (d = "" + b.key);
    if (a.type && a.type.defaultProps) var g = a.type.defaultProps;

    for (f in b) {
      H.call(b, f) && !I.hasOwnProperty(f) && (e[f] = void 0 === b[f] && void 0 !== g ? g[f] : b[f]);
    }
  }

  var f = arguments.length - 2;
  if (1 === f) e.children = c;else if (1 < f) {
    g = Array(f);

    for (var m = 0; m < f; m++) {
      g[m] = arguments[m + 2];
    }

    e.children = g;
  }
  return {
    $$typeof: n,
    type: a.type,
    key: d,
    ref: k,
    props: e,
    _owner: h
  };
};

exports.createContext = function (a, b) {
  void 0 === b && (b = null);
  a = {
    $$typeof: r,
    _calculateChangedBits: b,
    _currentValue: a,
    _currentValue2: a,
    _threadCount: 0,
    Provider: null,
    Consumer: null
  };
  a.Provider = {
    $$typeof: q,
    _context: a
  };
  return a.Consumer = a;
};

exports.createElement = J;

exports.createFactory = function (a) {
  var b = J.bind(null, a);
  b.type = a;
  return b;
};

exports.createRef = function () {
  return {
    current: null
  };
};

exports.forwardRef = function (a) {
  return {
    $$typeof: t,
    render: a
  };
};

exports.isValidElement = L;

exports.lazy = function (a) {
  return {
    $$typeof: v,
    _payload: {
      _status: -1,
      _result: a
    },
    _init: Q
  };
};

exports.memo = function (a, b) {
  return {
    $$typeof: u,
    type: a,
    compare: void 0 === b ? null : b
  };
};

exports.useCallback = function (a, b) {
  return S().useCallback(a, b);
};

exports.useContext = function (a, b) {
  return S().useContext(a, b);
};

exports.useDebugValue = function () {};

exports.useEffect = function (a, b) {
  return S().useEffect(a, b);
};

exports.useImperativeHandle = function (a, b, c) {
  return S().useImperativeHandle(a, b, c);
};

exports.useLayoutEffect = function (a, b) {
  return S().useLayoutEffect(a, b);
};

exports.useMemo = function (a, b) {
  return S().useMemo(a, b);
};

exports.useReducer = function (a, b, c) {
  return S().useReducer(a, b, c);
};

exports.useRef = function (a) {
  return S().useRef(a);
};

exports.useState = function (a) {
  return S().useState(a);
};

exports.version = "17.0.2";

/***/ }),

/***/ 2791:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(9117);
} else {}

/***/ }),

/***/ 184:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(6374);
} else {}

/***/ }),

/***/ 9727:
/***/ (function(module) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var runtime = function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.

  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }

  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function define(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.

    generator._invoke = makeInvokeMethod(innerFn, self, context);
    return generator;
  }

  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.

  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed"; // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.

  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.

  function Generator() {}

  function GeneratorFunction() {}

  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.


  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });
  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = GeneratorFunctionPrototype;
  define(Gp, "constructor", GeneratorFunctionPrototype);
  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"); // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.

  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      define(prototype, method, function (arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
    // do is to check its .name property.
    (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  exports.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }

    genFun.prototype = Object.create(Gp);
    return genFun;
  }; // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.


  exports.awrap = function (arg) {
    return {
      __await: arg
    };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);

      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;

        if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function (unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function (error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise = // If enqueue has been called before, then we want to wait until
      // all previous Promises have been resolved before calling invoke,
      // so that results are always delivered in the correct order. If
      // enqueue has not been called before, then it is important to
      // call invoke immediately, without waiting on a callback to fire,
      // so that the async generator function has the opportunity to do
      // any necessary setup in a predictable way. This predictability
      // is why the Promise constructor synchronously invokes its
      // executor callback, and why async functions synchronously
      // execute code before the first await. Since we implement simple
      // async functions in terms of async generators, it is especially
      // important to get this right, even though it requires care.
      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
      // invocations of the iterator.
      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    } // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).


    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  });
  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.

  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
    : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;
    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        } // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume


        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;

        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);

          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;
        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);
        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;
        var record = tryCatch(innerFn, self, context);

        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };
        } else if (record.type === "throw") {
          state = GenStateCompleted; // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.

          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  } // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.


  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];

    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError("The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (!info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).

      context.next = delegate.nextLoc; // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.

      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }
    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    } // The delegate iterator is finished, so forget it and continue with
    // the outer generator.


    context.delegate = null;
    return ContinueSentinel;
  } // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.


  defineIteratorMethods(Gp);
  define(Gp, toStringTagSymbol, "Generator"); // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.

  define(Gp, iteratorSymbol, function () {
    return this;
  });
  define(Gp, "toString", function () {
    return "[object Generator]";
  });

  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{
      tryLoc: "root"
    }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function (object) {
    var keys = [];

    for (var key in object) {
      keys.push(key);
    }

    keys.reverse(); // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.

    return function next() {
      while (keys.length) {
        var key = keys.pop();

        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      } // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.


      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];

      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;
          return next;
        };

        return next.next = next;
      }
    } // Return an iterator with no values.


    return {
      next: doneResult
    };
  }

  exports.values = values;

  function doneResult() {
    return {
      value: undefined,
      done: true
    };
  }

  Context.prototype = {
    constructor: Context,
    reset: function reset(skipTempReset) {
      this.prev = 0;
      this.next = 0; // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.

      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;
      this.method = "next";
      this.arg = undefined;
      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },
    stop: function stop() {
      this.done = true;
      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;

      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;

      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },
    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },
    complete: function complete(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;

          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }

          return thrown;
        }
      } // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.


      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  }; // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.

  return exports;
}( // If this script is executing as a CommonJS module, use module.exports
// as the regeneratorRuntime namespace. Otherwise create a new empty
// object. Either way, the resulting object will be used to initialize
// the regeneratorRuntime variable at the top of this file.
 true ? module.exports : 0);

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, in modern engines
  // we can explicitly access globalThis. In older engines we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}

/***/ }),

/***/ 6813:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
/** @license React v0.20.2
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _f, g, h, k;

if ("object" === typeof performance && "function" === typeof performance.now) {
  var l = performance;

  exports.unstable_now = function () {
    return l.now();
  };
} else {
  var p = Date,
      q = p.now();

  exports.unstable_now = function () {
    return p.now() - q;
  };
}

if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
  var t = null,
      u = null,
      w = function w() {
    if (null !== t) try {
      var a = exports.unstable_now();
      t(!0, a);
      t = null;
    } catch (b) {
      throw setTimeout(w, 0), b;
    }
  };

  _f = function f(a) {
    null !== t ? setTimeout(_f, 0, a) : (t = a, setTimeout(w, 0));
  };

  g = function g(a, b) {
    u = setTimeout(a, b);
  };

  h = function h() {
    clearTimeout(u);
  };

  exports.unstable_shouldYield = function () {
    return !1;
  };

  k = exports.unstable_forceFrameRate = function () {};
} else {
  var x = window.setTimeout,
      y = window.clearTimeout;

  if ("undefined" !== typeof console) {
    var z = window.cancelAnimationFrame;
    "function" !== typeof window.requestAnimationFrame && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    "function" !== typeof z && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
  }

  var A = !1,
      B = null,
      C = -1,
      D = 5,
      E = 0;

  exports.unstable_shouldYield = function () {
    return exports.unstable_now() >= E;
  };

  k = function k() {};

  exports.unstable_forceFrameRate = function (a) {
    0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : D = 0 < a ? Math.floor(1E3 / a) : 5;
  };

  var F = new MessageChannel(),
      G = F.port2;

  F.port1.onmessage = function () {
    if (null !== B) {
      var a = exports.unstable_now();
      E = a + D;

      try {
        B(!0, a) ? G.postMessage(null) : (A = !1, B = null);
      } catch (b) {
        throw G.postMessage(null), b;
      }
    } else A = !1;
  };

  _f = function _f(a) {
    B = a;
    A || (A = !0, G.postMessage(null));
  };

  g = function g(a, b) {
    C = x(function () {
      a(exports.unstable_now());
    }, b);
  };

  h = function h() {
    y(C);
    C = -1;
  };
}

function H(a, b) {
  var c = a.length;
  a.push(b);

  a: for (;;) {
    var d = c - 1 >>> 1,
        e = a[d];
    if (void 0 !== e && 0 < I(e, b)) a[d] = b, a[c] = e, c = d;else break a;
  }
}

function J(a) {
  a = a[0];
  return void 0 === a ? null : a;
}

function K(a) {
  var b = a[0];

  if (void 0 !== b) {
    var c = a.pop();

    if (c !== b) {
      a[0] = c;

      a: for (var d = 0, e = a.length; d < e;) {
        var m = 2 * (d + 1) - 1,
            n = a[m],
            v = m + 1,
            r = a[v];
        if (void 0 !== n && 0 > I(n, c)) void 0 !== r && 0 > I(r, n) ? (a[d] = r, a[v] = c, d = v) : (a[d] = n, a[m] = c, d = m);else if (void 0 !== r && 0 > I(r, c)) a[d] = r, a[v] = c, d = v;else break a;
      }
    }

    return b;
  }

  return null;
}

function I(a, b) {
  var c = a.sortIndex - b.sortIndex;
  return 0 !== c ? c : a.id - b.id;
}

var L = [],
    M = [],
    N = 1,
    O = null,
    P = 3,
    Q = !1,
    R = !1,
    S = !1;

function T(a) {
  for (var b = J(M); null !== b;) {
    if (null === b.callback) K(M);else if (b.startTime <= a) K(M), b.sortIndex = b.expirationTime, H(L, b);else break;
    b = J(M);
  }
}

function U(a) {
  S = !1;
  T(a);
  if (!R) if (null !== J(L)) R = !0, _f(V);else {
    var b = J(M);
    null !== b && g(U, b.startTime - a);
  }
}

function V(a, b) {
  R = !1;
  S && (S = !1, h());
  Q = !0;
  var c = P;

  try {
    T(b);

    for (O = J(L); null !== O && (!(O.expirationTime > b) || a && !exports.unstable_shouldYield());) {
      var d = O.callback;

      if ("function" === typeof d) {
        O.callback = null;
        P = O.priorityLevel;
        var e = d(O.expirationTime <= b);
        b = exports.unstable_now();
        "function" === typeof e ? O.callback = e : O === J(L) && K(L);
        T(b);
      } else K(L);

      O = J(L);
    }

    if (null !== O) var m = !0;else {
      var n = J(M);
      null !== n && g(U, n.startTime - b);
      m = !1;
    }
    return m;
  } finally {
    O = null, P = c, Q = !1;
  }
}

var W = k;
exports.unstable_IdlePriority = 5;
exports.unstable_ImmediatePriority = 1;
exports.unstable_LowPriority = 4;
exports.unstable_NormalPriority = 3;
exports.unstable_Profiling = null;
exports.unstable_UserBlockingPriority = 2;

exports.unstable_cancelCallback = function (a) {
  a.callback = null;
};

exports.unstable_continueExecution = function () {
  R || Q || (R = !0, _f(V));
};

exports.unstable_getCurrentPriorityLevel = function () {
  return P;
};

exports.unstable_getFirstCallbackNode = function () {
  return J(L);
};

exports.unstable_next = function (a) {
  switch (P) {
    case 1:
    case 2:
    case 3:
      var b = 3;
      break;

    default:
      b = P;
  }

  var c = P;
  P = b;

  try {
    return a();
  } finally {
    P = c;
  }
};

exports.unstable_pauseExecution = function () {};

exports.unstable_requestPaint = W;

exports.unstable_runWithPriority = function (a, b) {
  switch (a) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      break;

    default:
      a = 3;
  }

  var c = P;
  P = a;

  try {
    return b();
  } finally {
    P = c;
  }
};

exports.unstable_scheduleCallback = function (a, b, c) {
  var d = exports.unstable_now();
  "object" === typeof c && null !== c ? (c = c.delay, c = "number" === typeof c && 0 < c ? d + c : d) : c = d;

  switch (a) {
    case 1:
      var e = -1;
      break;

    case 2:
      e = 250;
      break;

    case 5:
      e = 1073741823;
      break;

    case 4:
      e = 1E4;
      break;

    default:
      e = 5E3;
  }

  e = c + e;
  a = {
    id: N++,
    callback: b,
    priorityLevel: a,
    startTime: c,
    expirationTime: e,
    sortIndex: -1
  };
  c > d ? (a.sortIndex = c, H(M, a), null === J(L) && a === J(M) && (S ? h() : S = !0, g(U, c - d))) : (a.sortIndex = e, H(L, a), R || Q || (R = !0, _f(V)));
  return a;
};

exports.unstable_wrapCallback = function (a) {
  var b = P;
  return function () {
    var c = P;
    P = b;

    try {
      return a.apply(this, arguments);
    } finally {
      P = c;
    }
  };
};

/***/ }),

/***/ 5296:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(6813);
} else {}

/***/ }),

/***/ 6426:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var parse = __webpack_require__(1065);
/**
 * Parses inline style to object.
 *
 * @example
 * // returns { 'line-height': '42' }
 * StyleToObject('line-height: 42;');
 *
 * @param  {String}      style      - The inline style.
 * @param  {Function}    [iterator] - The iterator function.
 * @return {null|Object}
 */


function StyleToObject(style, iterator) {
  var output = null;

  if (!style || typeof style !== 'string') {
    return output;
  }

  var declaration;
  var declarations = parse(style);
  var hasIterator = typeof iterator === 'function';
  var property;
  var value;

  for (var i = 0, len = declarations.length; i < len; i++) {
    declaration = declarations[i];
    property = declaration.property;
    value = declaration.value;

    if (hasIterator) {
      iterator(property, value, declaration);
    } else if (value) {
      output || (output = {});
      output[property] = value;
    }
  }

  return output;
}

module.exports = StyleToObject;

/***/ }),

/***/ 2458:
/***/ (function(module) {

module.exports = function () {
  var selection = document.getSelection();

  if (!selection.rangeCount) {
    return function () {};
  }

  var active = document.activeElement;
  var ranges = [];

  for (var i = 0; i < selection.rangeCount; i++) {
    ranges.push(selection.getRangeAt(i));
  }

  switch (active.tagName.toUpperCase()) {
    // .toUpperCase handles XHTML
    case 'INPUT':
    case 'TEXTAREA':
      active.blur();
      break;

    default:
      active = null;
      break;
  }

  selection.removeAllRanges();
  return function () {
    selection.type === 'Caret' && selection.removeAllRanges();

    if (!selection.rangeCount) {
      ranges.forEach(function (range) {
        selection.addRange(range);
      });
    }

    active && active.focus();
  };
};

/***/ }),

/***/ 9388:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__assign": function() { return /* binding */ _assign; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArray": function() { return /* binding */ __spreadArray; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__values": function() { return /* binding */ __values; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

/* global Reflect, Promise */
var _extendStatics = function extendStatics(d, b) {
  _extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    }
  };

  return _extendStatics(d, b);
};

function __extends(d, b) {
  if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

  _extendStatics(d, b);

  function __() {
    this.constructor = d;
  }

  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var _assign = function __assign() {
  _assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return _assign.apply(this, arguments);
};


function __rest(s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
}
var __createBinding = Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
};
function __exportStar(m, o) {
  for (var p in m) {
    if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
  }
}
function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
}
/** @deprecated */

function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read(arguments[i]));
  }

  return ar;
}
/** @deprecated */

function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
    s += arguments[i].length;
  }

  for (var r = Array(s), k = 0, i = 0; i < il; i++) {
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
      r[k] = a[j];
    }
  }

  return r;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
}
function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []),
      i,
      q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i;

  function verb(n) {
    if (g[n]) i[n] = function (v) {
      return new Promise(function (a, b) {
        q.push([n, v, a, b]) > 1 || resume(n, v);
      });
    };
  }

  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }

  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }

  function fulfill(value) {
    resume("next", value);
  }

  function reject(value) {
    resume("throw", value);
  }

  function settle(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function () {
    return this;
  }, i;

  function verb(n, f) {
    i[n] = o[n] ? function (v) {
      return (p = !p) ? {
        value: __await(o[n](v)),
        done: n === "return"
      } : f ? f(v) : v;
    } : f;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator],
      i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i);

  function verb(n) {
    i[n] = o[n] && function (v) {
      return new Promise(function (resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }

  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function (v) {
      resolve({
        value: v,
        done: d
      });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", {
      value: raw
    });
  } else {
    cooked.raw = raw;
  }

  return cooked;
}
;

var __setModuleDefault = Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
};

function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : {
    default: mod
  };
}
function __classPrivateFieldGet(receiver, state, kind, f) {
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
  if (kind === "m") throw new TypeError("Private method is not writable");
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}

/***/ }),

/***/ 5754:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin
/* harmony default export */ __webpack_exports__["default"] = ({});

/***/ }),

/***/ 2480:
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ 7462:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _extends; }
/* harmony export */ });
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),

/***/ 3366:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _objectWithoutPropertiesLoose; }
/* harmony export */ });
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	!function() {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = function(chunkId) {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	!function() {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = function(chunkId) {
/******/ 			// return url for filenames based on template
/******/ 			return "static/js/" + chunkId + "." + "ca23929a" + ".chunk.js";
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	!function() {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.miniCssF = function(chunkId) {
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	!function() {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "pretext-nav:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = function(url, done, key, chunkId) {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = function(prev, event) {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach(function(fn) { return fn(event); });
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	!function() {
/******/ 		__webpack_require__.p = "./";
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	!function() {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			179: 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = function(chunkId, promises) {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = function(event) {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = function(parentChunkLoadingFunction, data) {
/******/ 			var chunkIds = data[0];
/******/ 			var moreModules = data[1];
/******/ 			var runtime = data[2];
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = Object((function() {
/******/ 		        if (typeof globalThis === 'object') return globalThis;
/******/ 		        Object.defineProperty(Object.prototype, '__magic__', {
/******/ 		            get: function() {
/******/ 		                return this;
/******/ 		            },
/******/ 		            configurable: true
/******/ 		        });
/******/ 		        __magic__.globalThis = __magic__; // lolwat
/******/ 		        delete Object.prototype.__magic__;
/******/ 		        return globalThis
/******/ 		    }()))["webpackChunkpretext_nav"] = Object((function() {
/******/ 		        if (typeof globalThis === 'object') return globalThis;
/******/ 		        Object.defineProperty(Object.prototype, '__magic__', {
/******/ 		            get: function() {
/******/ 		                return this;
/******/ 		            },
/******/ 		            configurable: true
/******/ 		        });
/******/ 		        __magic__.globalThis = __magic__; // lolwat
/******/ 		        delete Object.prototype.__magic__;
/******/ 		        return globalThis
/******/ 		    }()))["webpackChunkpretext_nav"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
!function() {
"use strict";

// NAMESPACE OBJECT: ./node_modules/property-information/lib/util/types.js
var types_namespaceObject = {};
__webpack_require__.r(types_namespaceObject);
__webpack_require__.d(types_namespaceObject, {
  "boolean": function() { return types_boolean; },
  "booleanish": function() { return booleanish; },
  "commaOrSpaceSeparated": function() { return commaOrSpaceSeparated; },
  "commaSeparated": function() { return commaSeparated; },
  "number": function() { return number; },
  "overloadedBoolean": function() { return overloadedBoolean; },
  "spaceSeparated": function() { return spaceSeparated; }
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(2791);
// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(4164);
;// CONCATENATED MODULE: ./src/index.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var src = ({});
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function asyncToGenerator_asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js




function slicedToArray_slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(7757);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(1694);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
// EXTERNAL MODULE: ./node_modules/react-redux-toastr/lib/index.js
var lib = __webpack_require__(6530);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js




function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js

function _createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];

  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;

      var F = function F() {};

      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e) {
          throw _e;
        },
        f: F
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var normalCompletion = true,
      didErr = false,
      err;
  return {
    s: function s() {
      it = it.call(o);
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e2) {
      didErr = true;
      err = _e2;
    },
    f: function f() {
      try {
        if (!normalCompletion && it["return"] != null) it["return"]();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}
;// CONCATENATED MODULE: ./src/utils/extract-toc.ts
var parser=new DOMParser();/**
 * Extract the table of contents from `doc-manifest.xml`
 */function extractTocFromXml(raw){var xml=parser.parseFromString(raw,"text/xml");var tocRoot=xml.querySelector("toc");if(!tocRoot){console.warn("Found no table of contents root. There was likely an error somewhere.");return[];}return Array.from(tocRoot.querySelectorAll(":scope > division")).map(function(node){return processTocXml(node,1);});}/**
 * Process a single `<division>` node from `doc-manifest.xml`.
 */function processTocXml(root,level){var _root$querySelector;var title=((_root$querySelector=root.querySelector("title"))===null||_root$querySelector===void 0?void 0:_root$querySelector.innerHTML)||"";var id=root.getAttribute("id");var number=root.getAttribute("number");var url=root.getAttribute("url");var type=root.getAttribute("type")||"";var children=Array.from(root.querySelectorAll(":scope > division")).map(function(elm){return processTocXml(elm,level+1);});return{title:title,codeNumber:number,href:url,id:id,children:children,type:type,level:level};}/**
 * Extract the currently active TOC item from the html of the page.
 */function extractActiveTocItem(){var root=document.querySelector("#toc");var activeElement=root===null||root===void 0?void 0:root.querySelector("li.active");var link=activeElement===null||activeElement===void 0?void 0:activeElement.querySelector("a[data-scroll]");if(!link){return null;}return link.getAttribute("data-scroll");}/**
 * Flatten a TOC in order (parent, followed by children).
 */function flattenToc(toc){if(!Array.isArray(toc)){toc=[toc];}var ret=[];var _iterator=_createForOfIteratorHelper(toc),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var entry=_step.value;ret.push(entry);if(entry.children){ret.push.apply(ret,_toConsumableArray(flattenToc(entry.children)));}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return ret;}/**
 * Get all the parents of a TOC entry.
 *
 * @export
 * @param {(TocEntryType | TocEntryType[])} toc
 * @param {TocEntryType} entry
 * @returns {TocEntryType[]}
 */function getParentsInToc(toc,entry){var parentMap=new Map();if(!Array.isArray(toc)){toc=[toc];}function walk(parent){if(!parent.children){return;}var _iterator2=_createForOfIteratorHelper(parent.children),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var child=_step2.value;parentMap.set(child,parent);walk(child);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}toc.forEach(walk);var ret=[];var curr=entry;var parent;while(parent=parentMap.get(curr)){ret.push(parent);curr=parent;}return ret;}/**
 * Retrieve the TOC entry using the ID of the entry.
 */function findTocItemById(toc,id){var ret=null;if(!Array.isArray(toc)){toc=[toc];}function walk(item){if(ret){return;}if(item.id===id){ret=item;return;}var _iterator3=_createForOfIteratorHelper(item.children||[]),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var child=_step3.value;walk(child);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}toc.forEach(walk);return ret;}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
;// CONCATENATED MODULE: ./node_modules/immer/dist/immer.esm.js
function n(n) {
  for (var r = arguments.length, t = Array(r > 1 ? r - 1 : 0), e = 1; e < r; e++) {
    t[e - 1] = arguments[e];
  }

  if (false) { var i, o; }

  throw Error("[Immer] minified error nr: " + n + (t.length ? " " + t.map(function (n) {
    return "'" + n + "'";
  }).join(",") : "") + ". Find the full error at: https://bit.ly/3cXEKWf");
}

function r(n) {
  return !!n && !!n[Q];
}

function t(n) {
  return !!n && (function (n) {
    if (!n || "object" != typeof n) return !1;
    var r = Object.getPrototypeOf(n);
    if (null === r) return !0;
    var t = Object.hasOwnProperty.call(r, "constructor") && r.constructor;
    return t === Object || "function" == typeof t && Function.toString.call(t) === Z;
  }(n) || Array.isArray(n) || !!n[L] || !!n.constructor[L] || s(n) || v(n));
}

function e(t) {
  return r(t) || n(23, t), t[Q].t;
}

function i(n, r, t) {
  void 0 === t && (t = !1), 0 === o(n) ? (t ? Object.keys : nn)(n).forEach(function (e) {
    t && "symbol" == typeof e || r(e, n[e], n);
  }) : n.forEach(function (t, e) {
    return r(e, t, n);
  });
}

function o(n) {
  var r = n[Q];
  return r ? r.i > 3 ? r.i - 4 : r.i : Array.isArray(n) ? 1 : s(n) ? 2 : v(n) ? 3 : 0;
}

function u(n, r) {
  return 2 === o(n) ? n.has(r) : Object.prototype.hasOwnProperty.call(n, r);
}

function a(n, r) {
  return 2 === o(n) ? n.get(r) : n[r];
}

function f(n, r, t) {
  var e = o(n);
  2 === e ? n.set(r, t) : 3 === e ? (n.delete(r), n.add(t)) : n[r] = t;
}

function c(n, r) {
  return n === r ? 0 !== n || 1 / n == 1 / r : n != n && r != r;
}

function s(n) {
  return X && n instanceof Map;
}

function v(n) {
  return q && n instanceof Set;
}

function p(n) {
  return n.o || n.t;
}

function l(n) {
  if (Array.isArray(n)) return Array.prototype.slice.call(n);
  var r = rn(n);
  delete r[Q];

  for (var t = nn(r), e = 0; e < t.length; e++) {
    var i = t[e],
        o = r[i];
    !1 === o.writable && (o.writable = !0, o.configurable = !0), (o.get || o.set) && (r[i] = {
      configurable: !0,
      writable: !0,
      enumerable: o.enumerable,
      value: n[i]
    });
  }

  return Object.create(Object.getPrototypeOf(n), r);
}

function d(n, e) {
  return void 0 === e && (e = !1), y(n) || r(n) || !t(n) ? n : (o(n) > 1 && (n.set = n.add = n.clear = n.delete = h), Object.freeze(n), e && i(n, function (n, r) {
    return d(r, !0);
  }, !0), n);
}

function h() {
  n(2);
}

function y(n) {
  return null == n || "object" != typeof n || Object.isFrozen(n);
}

function b(r) {
  var t = tn[r];
  return t || n(18, r), t;
}

function m(n, r) {
  tn[n] || (tn[n] = r);
}

function _() {
  return  true || 0, U;
}

function j(n, r) {
  r && (b("Patches"), n.u = [], n.s = [], n.v = r);
}

function O(n) {
  g(n), n.p.forEach(S), n.p = null;
}

function g(n) {
  n === U && (U = n.l);
}

function w(n) {
  return U = {
    p: [],
    l: U,
    h: n,
    m: !0,
    _: 0
  };
}

function S(n) {
  var r = n[Q];
  0 === r.i || 1 === r.i ? r.j() : r.O = !0;
}

function P(r, e) {
  e._ = e.p.length;
  var i = e.p[0],
      o = void 0 !== r && r !== i;
  return e.h.g || b("ES5").S(e, r, o), o ? (i[Q].P && (O(e), n(4)), t(r) && (r = M(e, r), e.l || x(e, r)), e.u && b("Patches").M(i[Q].t, r, e.u, e.s)) : r = M(e, i, []), O(e), e.u && e.v(e.u, e.s), r !== H ? r : void 0;
}

function M(n, r, t) {
  if (y(r)) return r;
  var e = r[Q];
  if (!e) return i(r, function (i, o) {
    return A(n, e, r, i, o, t);
  }, !0), r;
  if (e.A !== n) return r;
  if (!e.P) return x(n, e.t, !0), e.t;

  if (!e.I) {
    e.I = !0, e.A._--;
    var o = 4 === e.i || 5 === e.i ? e.o = l(e.k) : e.o;
    i(3 === e.i ? new Set(o) : o, function (r, i) {
      return A(n, e, o, r, i, t);
    }), x(n, o, !1), t && n.u && b("Patches").R(e, t, n.u, n.s);
  }

  return e.o;
}

function A(e, i, o, a, c, s) {
  if ( false && 0, r(c)) {
    var v = M(e, c, s && i && 3 !== i.i && !u(i.D, a) ? s.concat(a) : void 0);
    if (f(o, a, v), !r(v)) return;
    e.m = !1;
  }

  if (t(c) && !y(c)) {
    if (!e.h.F && e._ < 1) return;
    M(e, c), i && i.A.l || x(e, c);
  }
}

function x(n, r, t) {
  void 0 === t && (t = !1), n.h.F && n.m && d(r, t);
}

function z(n, r) {
  var t = n[Q];
  return (t ? p(t) : n)[r];
}

function I(n, r) {
  if (r in n) for (var t = Object.getPrototypeOf(n); t;) {
    var e = Object.getOwnPropertyDescriptor(t, r);
    if (e) return e;
    t = Object.getPrototypeOf(t);
  }
}

function k(n) {
  n.P || (n.P = !0, n.l && k(n.l));
}

function E(n) {
  n.o || (n.o = l(n.t));
}

function R(n, r, t) {
  var e = s(r) ? b("MapSet").N(r, t) : v(r) ? b("MapSet").T(r, t) : n.g ? function (n, r) {
    var t = Array.isArray(n),
        e = {
      i: t ? 1 : 0,
      A: r ? r.A : _(),
      P: !1,
      I: !1,
      D: {},
      l: r,
      t: n,
      k: null,
      o: null,
      j: null,
      C: !1
    },
        i = e,
        o = en;
    t && (i = [e], o = on);
    var u = Proxy.revocable(i, o),
        a = u.revoke,
        f = u.proxy;
    return e.k = f, e.j = a, f;
  }(r, t) : b("ES5").J(r, t);
  return (t ? t.A : _()).p.push(e), e;
}

function D(e) {
  return r(e) || n(22, e), function n(r) {
    if (!t(r)) return r;
    var e,
        u = r[Q],
        c = o(r);

    if (u) {
      if (!u.P && (u.i < 4 || !b("ES5").K(u))) return u.t;
      u.I = !0, e = F(r, c), u.I = !1;
    } else e = F(r, c);

    return i(e, function (r, t) {
      u && a(u.t, r) === t || f(e, r, n(t));
    }), 3 === c ? new Set(e) : e;
  }(e);
}

function F(n, r) {
  switch (r) {
    case 2:
      return new Map(n);

    case 3:
      return Array.from(n);
  }

  return l(n);
}

function N() {
  function t(n, r) {
    var t = s[n];
    return t ? t.enumerable = r : s[n] = t = {
      configurable: !0,
      enumerable: r,
      get: function get() {
        var r = this[Q];
        return  false && 0, en.get(r, n);
      },
      set: function set(r) {
        var t = this[Q];
         false && 0, en.set(t, n, r);
      }
    }, t;
  }

  function e(n) {
    for (var r = n.length - 1; r >= 0; r--) {
      var t = n[r][Q];
      if (!t.P) switch (t.i) {
        case 5:
          a(t) && k(t);
          break;

        case 4:
          o(t) && k(t);
      }
    }
  }

  function o(n) {
    for (var r = n.t, t = n.k, e = nn(t), i = e.length - 1; i >= 0; i--) {
      var o = e[i];

      if (o !== Q) {
        var a = r[o];
        if (void 0 === a && !u(r, o)) return !0;
        var f = t[o],
            s = f && f[Q];
        if (s ? s.t !== a : !c(f, a)) return !0;
      }
    }

    var v = !!r[Q];
    return e.length !== nn(r).length + (v ? 0 : 1);
  }

  function a(n) {
    var r = n.k;
    if (r.length !== n.t.length) return !0;
    var t = Object.getOwnPropertyDescriptor(r, r.length - 1);
    if (t && !t.get) return !0;

    for (var e = 0; e < r.length; e++) {
      if (!r.hasOwnProperty(e)) return !0;
    }

    return !1;
  }

  function f(r) {
    r.O && n(3, JSON.stringify(p(r)));
  }

  var s = {};
  m("ES5", {
    J: function J(n, r) {
      var e = Array.isArray(n),
          i = function (n, r) {
        if (n) {
          for (var e = Array(r.length), i = 0; i < r.length; i++) {
            Object.defineProperty(e, "" + i, t(i, !0));
          }

          return e;
        }

        var o = rn(r);
        delete o[Q];

        for (var u = nn(o), a = 0; a < u.length; a++) {
          var f = u[a];
          o[f] = t(f, n || !!o[f].enumerable);
        }

        return Object.create(Object.getPrototypeOf(r), o);
      }(e, n),
          o = {
        i: e ? 5 : 4,
        A: r ? r.A : _(),
        P: !1,
        I: !1,
        D: {},
        l: r,
        t: n,
        k: i,
        o: null,
        O: !1,
        C: !1
      };

      return Object.defineProperty(i, Q, {
        value: o,
        writable: !0
      }), i;
    },
    S: function S(n, t, o) {
      o ? r(t) && t[Q].A === n && e(n.p) : (n.u && function n(r) {
        if (r && "object" == typeof r) {
          var t = r[Q];

          if (t) {
            var e = t.t,
                o = t.k,
                f = t.D,
                c = t.i;
            if (4 === c) i(o, function (r) {
              r !== Q && (void 0 !== e[r] || u(e, r) ? f[r] || n(o[r]) : (f[r] = !0, k(t)));
            }), i(e, function (n) {
              void 0 !== o[n] || u(o, n) || (f[n] = !1, k(t));
            });else if (5 === c) {
              if (a(t) && (k(t), f.length = !0), o.length < e.length) for (var s = o.length; s < e.length; s++) {
                f[s] = !1;
              } else for (var v = e.length; v < o.length; v++) {
                f[v] = !0;
              }

              for (var p = Math.min(o.length, e.length), l = 0; l < p; l++) {
                o.hasOwnProperty(l) || (f[l] = !0), void 0 === f[l] && n(o[l]);
              }
            }
          }
        }
      }(n.p[0]), e(n.p));
    },
    K: function K(n) {
      return 4 === n.i ? o(n) : a(n);
    }
  });
}

function T() {
  function e(n) {
    if (!t(n)) return n;
    if (Array.isArray(n)) return n.map(e);
    if (s(n)) return new Map(Array.from(n.entries()).map(function (n) {
      return [n[0], e(n[1])];
    }));
    if (v(n)) return new Set(Array.from(n).map(e));
    var r = Object.create(Object.getPrototypeOf(n));

    for (var i in n) {
      r[i] = e(n[i]);
    }

    return u(n, L) && (r[L] = n[L]), r;
  }

  function f(n) {
    return r(n) ? e(n) : n;
  }

  var c = "add";
  m("Patches", {
    $: function $(r, t) {
      return t.forEach(function (t) {
        for (var i = t.path, u = t.op, f = r, s = 0; s < i.length - 1; s++) {
          var v = o(f),
              p = "" + i[s];
          0 !== v && 1 !== v || "__proto__" !== p && "constructor" !== p || n(24), "function" == typeof f && "prototype" === p && n(24), "object" != typeof (f = a(f, p)) && n(15, i.join("/"));
        }

        var l = o(f),
            d = e(t.value),
            h = i[i.length - 1];

        switch (u) {
          case "replace":
            switch (l) {
              case 2:
                return f.set(h, d);

              case 3:
                n(16);

              default:
                return f[h] = d;
            }

          case c:
            switch (l) {
              case 1:
                return "-" === h ? f.push(d) : f.splice(h, 0, d);

              case 2:
                return f.set(h, d);

              case 3:
                return f.add(d);

              default:
                return f[h] = d;
            }

          case "remove":
            switch (l) {
              case 1:
                return f.splice(h, 1);

              case 2:
                return f.delete(h);

              case 3:
                return f.delete(t.value);

              default:
                return delete f[h];
            }

          default:
            n(17, u);
        }
      }), r;
    },
    R: function R(n, r, t, e) {
      switch (n.i) {
        case 0:
        case 4:
        case 2:
          return function (n, r, t, e) {
            var o = n.t,
                s = n.o;
            i(n.D, function (n, i) {
              var v = a(o, n),
                  p = a(s, n),
                  l = i ? u(o, n) ? "replace" : c : "remove";

              if (v !== p || "replace" !== l) {
                var d = r.concat(n);
                t.push("remove" === l ? {
                  op: l,
                  path: d
                } : {
                  op: l,
                  path: d,
                  value: p
                }), e.push(l === c ? {
                  op: "remove",
                  path: d
                } : "remove" === l ? {
                  op: c,
                  path: d,
                  value: f(v)
                } : {
                  op: "replace",
                  path: d,
                  value: f(v)
                });
              }
            });
          }(n, r, t, e);

        case 5:
        case 1:
          return function (n, r, t, e) {
            var i = n.t,
                o = n.D,
                u = n.o;

            if (u.length < i.length) {
              var a = [u, i];
              i = a[0], u = a[1];
              var s = [e, t];
              t = s[0], e = s[1];
            }

            for (var v = 0; v < i.length; v++) {
              if (o[v] && u[v] !== i[v]) {
                var p = r.concat([v]);
                t.push({
                  op: "replace",
                  path: p,
                  value: f(u[v])
                }), e.push({
                  op: "replace",
                  path: p,
                  value: f(i[v])
                });
              }
            }

            for (var l = i.length; l < u.length; l++) {
              var d = r.concat([l]);
              t.push({
                op: c,
                path: d,
                value: f(u[l])
              });
            }

            i.length < u.length && e.push({
              op: "replace",
              path: r.concat(["length"]),
              value: i.length
            });
          }(n, r, t, e);

        case 3:
          return function (n, r, t, e) {
            var i = n.t,
                o = n.o,
                u = 0;
            i.forEach(function (n) {
              if (!o.has(n)) {
                var i = r.concat([u]);
                t.push({
                  op: "remove",
                  path: i,
                  value: n
                }), e.unshift({
                  op: c,
                  path: i,
                  value: n
                });
              }

              u++;
            }), u = 0, o.forEach(function (n) {
              if (!i.has(n)) {
                var o = r.concat([u]);
                t.push({
                  op: c,
                  path: o,
                  value: n
                }), e.unshift({
                  op: "remove",
                  path: o,
                  value: n
                });
              }

              u++;
            });
          }(n, r, t, e);
      }
    },
    M: function M(n, r, t, e) {
      t.push({
        op: "replace",
        path: [],
        value: r === H ? void 0 : r
      }), e.push({
        op: "replace",
        path: [],
        value: n
      });
    }
  });
}

function C() {
  function r(n, r) {
    function t() {
      this.constructor = n;
    }

    _a(n, r), n.prototype = (t.prototype = r.prototype, new t());
  }

  function e(n) {
    n.o || (n.D = new Map(), n.o = new Map(n.t));
  }

  function o(n) {
    n.o || (n.o = new Set(), n.t.forEach(function (r) {
      if (t(r)) {
        var e = R(n.A.h, r, n);
        n.p.set(r, e), n.o.add(e);
      } else n.o.add(r);
    }));
  }

  function u(r) {
    r.O && n(3, JSON.stringify(p(r)));
  }

  var _a = function a(n, r) {
    return (_a = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (n, r) {
      n.__proto__ = r;
    } || function (n, r) {
      for (var t in r) {
        r.hasOwnProperty(t) && (n[t] = r[t]);
      }
    })(n, r);
  },
      f = function () {
    function n(n, r) {
      return this[Q] = {
        i: 2,
        l: r,
        A: r ? r.A : _(),
        P: !1,
        I: !1,
        o: void 0,
        D: void 0,
        t: n,
        k: this,
        C: !1,
        O: !1
      }, this;
    }

    r(n, Map);
    var o = n.prototype;
    return Object.defineProperty(o, "size", {
      get: function get() {
        return p(this[Q]).size;
      }
    }), o.has = function (n) {
      return p(this[Q]).has(n);
    }, o.set = function (n, r) {
      var t = this[Q];
      return u(t), p(t).has(n) && p(t).get(n) === r || (e(t), k(t), t.D.set(n, !0), t.o.set(n, r), t.D.set(n, !0)), this;
    }, o.delete = function (n) {
      if (!this.has(n)) return !1;
      var r = this[Q];
      return u(r), e(r), k(r), r.t.has(n) ? r.D.set(n, !1) : r.D.delete(n), r.o.delete(n), !0;
    }, o.clear = function () {
      var n = this[Q];
      u(n), p(n).size && (e(n), k(n), n.D = new Map(), i(n.t, function (r) {
        n.D.set(r, !1);
      }), n.o.clear());
    }, o.forEach = function (n, r) {
      var t = this;
      p(this[Q]).forEach(function (e, i) {
        n.call(r, t.get(i), i, t);
      });
    }, o.get = function (n) {
      var r = this[Q];
      u(r);
      var i = p(r).get(n);
      if (r.I || !t(i)) return i;
      if (i !== r.t.get(n)) return i;
      var o = R(r.A.h, i, r);
      return e(r), r.o.set(n, o), o;
    }, o.keys = function () {
      return p(this[Q]).keys();
    }, o.values = function () {
      var n,
          r = this,
          t = this.keys();
      return (n = {})[V] = function () {
        return r.values();
      }, n.next = function () {
        var n = t.next();
        return n.done ? n : {
          done: !1,
          value: r.get(n.value)
        };
      }, n;
    }, o.entries = function () {
      var n,
          r = this,
          t = this.keys();
      return (n = {})[V] = function () {
        return r.entries();
      }, n.next = function () {
        var n = t.next();
        if (n.done) return n;
        var e = r.get(n.value);
        return {
          done: !1,
          value: [n.value, e]
        };
      }, n;
    }, o[V] = function () {
      return this.entries();
    }, n;
  }(),
      c = function () {
    function n(n, r) {
      return this[Q] = {
        i: 3,
        l: r,
        A: r ? r.A : _(),
        P: !1,
        I: !1,
        o: void 0,
        t: n,
        k: this,
        p: new Map(),
        O: !1,
        C: !1
      }, this;
    }

    r(n, Set);
    var t = n.prototype;
    return Object.defineProperty(t, "size", {
      get: function get() {
        return p(this[Q]).size;
      }
    }), t.has = function (n) {
      var r = this[Q];
      return u(r), r.o ? !!r.o.has(n) || !(!r.p.has(n) || !r.o.has(r.p.get(n))) : r.t.has(n);
    }, t.add = function (n) {
      var r = this[Q];
      return u(r), this.has(n) || (o(r), k(r), r.o.add(n)), this;
    }, t.delete = function (n) {
      if (!this.has(n)) return !1;
      var r = this[Q];
      return u(r), o(r), k(r), r.o.delete(n) || !!r.p.has(n) && r.o.delete(r.p.get(n));
    }, t.clear = function () {
      var n = this[Q];
      u(n), p(n).size && (o(n), k(n), n.o.clear());
    }, t.values = function () {
      var n = this[Q];
      return u(n), o(n), n.o.values();
    }, t.entries = function () {
      var n = this[Q];
      return u(n), o(n), n.o.entries();
    }, t.keys = function () {
      return this.values();
    }, t[V] = function () {
      return this.values();
    }, t.forEach = function (n, r) {
      for (var t = this.values(), e = t.next(); !e.done;) {
        n.call(r, e.value, e.value, this), e = t.next();
      }
    }, n;
  }();

  m("MapSet", {
    N: function N(n, r) {
      return new f(n, r);
    },
    T: function T(n, r) {
      return new c(n, r);
    }
  });
}

function J() {
  N(), C(), T();
}

function K(n) {
  return n;
}

function $(n) {
  return n;
}

var G,
    U,
    W = "undefined" != typeof Symbol && "symbol" == typeof Symbol("x"),
    X = "undefined" != typeof Map,
    q = "undefined" != typeof Set,
    B = "undefined" != typeof Proxy && void 0 !== Proxy.revocable && "undefined" != typeof Reflect,
    H = W ? Symbol.for("immer-nothing") : ((G = {})["immer-nothing"] = !0, G),
    L = W ? Symbol.for("immer-draftable") : "__$immer_draftable",
    Q = W ? Symbol.for("immer-state") : "__$immer_state",
    V = "undefined" != typeof Symbol && Symbol.iterator || "@@iterator",
    Y = {
  0: "Illegal state",
  1: "Immer drafts cannot have computed properties",
  2: "This object has been frozen and should not be mutated",
  3: function _(n) {
    return "Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? " + n;
  },
  4: "An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.",
  5: "Immer forbids circular references",
  6: "The first or second argument to `produce` must be a function",
  7: "The third argument to `produce` must be a function or undefined",
  8: "First argument to `createDraft` must be a plain object, an array, or an immerable object",
  9: "First argument to `finishDraft` must be a draft returned by `createDraft`",
  10: "The given draft is already finalized",
  11: "Object.defineProperty() cannot be used on an Immer draft",
  12: "Object.setPrototypeOf() cannot be used on an Immer draft",
  13: "Immer only supports deleting array indices",
  14: "Immer only supports setting array indices and the 'length' property",
  15: function _(n) {
    return "Cannot apply patch, path doesn't resolve: " + n;
  },
  16: 'Sets cannot have "replace" patches.',
  17: function _(n) {
    return "Unsupported patch operation: " + n;
  },
  18: function _(n) {
    return "The plugin for '" + n + "' has not been loaded into Immer. To enable the plugin, import and call `enable" + n + "()` when initializing your application.";
  },
  20: "Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available",
  21: function _(n) {
    return "produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '" + n + "'";
  },
  22: function _(n) {
    return "'current' expects a draft, got: " + n;
  },
  23: function _(n) {
    return "'original' expects a draft, got: " + n;
  },
  24: "Patching reserved attributes like __proto__, prototype and constructor is not allowed"
},
    Z = "" + Object.prototype.constructor,
    nn = "undefined" != typeof Reflect && Reflect.ownKeys ? Reflect.ownKeys : void 0 !== Object.getOwnPropertySymbols ? function (n) {
  return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n));
} : Object.getOwnPropertyNames,
    rn = Object.getOwnPropertyDescriptors || function (n) {
  var r = {};
  return nn(n).forEach(function (t) {
    r[t] = Object.getOwnPropertyDescriptor(n, t);
  }), r;
},
    tn = {},
    en = {
  get: function get(n, r) {
    if (r === Q) return n;
    var e = p(n);
    if (!u(e, r)) return function (n, r, t) {
      var e,
          i = I(r, t);
      return i ? "value" in i ? i.value : null === (e = i.get) || void 0 === e ? void 0 : e.call(n.k) : void 0;
    }(n, e, r);
    var i = e[r];
    return n.I || !t(i) ? i : i === z(n.t, r) ? (E(n), n.o[r] = R(n.A.h, i, n)) : i;
  },
  has: function has(n, r) {
    return r in p(n);
  },
  ownKeys: function ownKeys(n) {
    return Reflect.ownKeys(p(n));
  },
  set: function set(n, r, t) {
    var e = I(p(n), r);
    if (null == e ? void 0 : e.set) return e.set.call(n.k, t), !0;

    if (!n.P) {
      var i = z(p(n), r),
          o = null == i ? void 0 : i[Q];
      if (o && o.t === t) return n.o[r] = t, n.D[r] = !1, !0;
      if (c(t, i) && (void 0 !== t || u(n.t, r))) return !0;
      E(n), k(n);
    }

    return n.o[r] === t && "number" != typeof t && (void 0 !== t || r in n.o) || (n.o[r] = t, n.D[r] = !0, !0);
  },
  deleteProperty: function deleteProperty(n, r) {
    return void 0 !== z(n.t, r) || r in n.t ? (n.D[r] = !1, E(n), k(n)) : delete n.D[r], n.o && delete n.o[r], !0;
  },
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(n, r) {
    var t = p(n),
        e = Reflect.getOwnPropertyDescriptor(t, r);
    return e ? {
      writable: !0,
      configurable: 1 !== n.i || "length" !== r,
      enumerable: e.enumerable,
      value: t[r]
    } : e;
  },
  defineProperty: function defineProperty() {
    n(11);
  },
  getPrototypeOf: function getPrototypeOf(n) {
    return Object.getPrototypeOf(n.t);
  },
  setPrototypeOf: function setPrototypeOf() {
    n(12);
  }
},
    on = {};

i(en, function (n, r) {
  on[n] = function () {
    return arguments[0] = arguments[0][0], r.apply(this, arguments);
  };
}), on.deleteProperty = function (r, t) {
  return  false && 0, on.set.call(this, r, t, void 0);
}, on.set = function (r, t, e) {
  return  false && 0, en.set.call(this, r[0], t, e, r[0]);
};

var un = function () {
  function e(r) {
    var e = this;
    this.g = B, this.F = !0, this.produce = function (r, i, o) {
      if ("function" == typeof r && "function" != typeof i) {
        var u = i;
        i = r;
        var a = e;
        return function (n) {
          var r = this;
          void 0 === n && (n = u);

          for (var t = arguments.length, e = Array(t > 1 ? t - 1 : 0), o = 1; o < t; o++) {
            e[o - 1] = arguments[o];
          }

          return a.produce(n, function (n) {
            var t;
            return (t = i).call.apply(t, [r, n].concat(e));
          });
        };
      }

      var f;

      if ("function" != typeof i && n(6), void 0 !== o && "function" != typeof o && n(7), t(r)) {
        var c = w(e),
            s = R(e, r, void 0),
            v = !0;

        try {
          f = i(s), v = !1;
        } finally {
          v ? O(c) : g(c);
        }

        return "undefined" != typeof Promise && f instanceof Promise ? f.then(function (n) {
          return j(c, o), P(n, c);
        }, function (n) {
          throw O(c), n;
        }) : (j(c, o), P(f, c));
      }

      if (!r || "object" != typeof r) {
        if (void 0 === (f = i(r)) && (f = r), f === H && (f = void 0), e.F && d(f, !0), o) {
          var p = [],
              l = [];
          b("Patches").M(r, f, p, l), o(p, l);
        }

        return f;
      }

      n(21, r);
    }, this.produceWithPatches = function (n, r) {
      if ("function" == typeof n) return function (r) {
        for (var t = arguments.length, i = Array(t > 1 ? t - 1 : 0), o = 1; o < t; o++) {
          i[o - 1] = arguments[o];
        }

        return e.produceWithPatches(r, function (r) {
          return n.apply(void 0, [r].concat(i));
        });
      };
      var t,
          i,
          o = e.produce(n, r, function (n, r) {
        t = n, i = r;
      });
      return "undefined" != typeof Promise && o instanceof Promise ? o.then(function (n) {
        return [n, t, i];
      }) : [o, t, i];
    }, "boolean" == typeof (null == r ? void 0 : r.useProxies) && this.setUseProxies(r.useProxies), "boolean" == typeof (null == r ? void 0 : r.autoFreeze) && this.setAutoFreeze(r.autoFreeze);
  }

  var i = e.prototype;
  return i.createDraft = function (e) {
    t(e) || n(8), r(e) && (e = D(e));
    var i = w(this),
        o = R(this, e, void 0);
    return o[Q].C = !0, g(i), o;
  }, i.finishDraft = function (r, t) {
    var e = r && r[Q];
     false && (0);
    var i = e.A;
    return j(i, t), P(void 0, i);
  }, i.setAutoFreeze = function (n) {
    this.F = n;
  }, i.setUseProxies = function (r) {
    r && !B && n(20), this.g = r;
  }, i.applyPatches = function (n, t) {
    var e;

    for (e = t.length - 1; e >= 0; e--) {
      var i = t[e];

      if (0 === i.path.length && "replace" === i.op) {
        n = i.value;
        break;
      }
    }

    e > -1 && (t = t.slice(e + 1));
    var o = b("Patches").$;
    return r(n) ? o(n, t) : this.produce(n, function (n) {
      return o(n, t);
    });
  }, e;
}(),
    an = new un(),
    fn = an.produce,
    cn = an.produceWithPatches.bind(an),
    sn = an.setAutoFreeze.bind(an),
    vn = an.setUseProxies.bind(an),
    pn = an.applyPatches.bind(an),
    ln = an.createDraft.bind(an),
    dn = an.finishDraft.bind(an);

/* harmony default export */ var immer_esm = (fn);

;// CONCATENATED MODULE: ./node_modules/reselect/es/defaultMemoize.js
// Cache implementation based on Erik Rasmussen's `lru-memoize`:
// https://github.com/erikras/lru-memoize
var NOT_FOUND = 'NOT_FOUND';

function createSingletonCache(equals) {
  var entry;
  return {
    get: function get(key) {
      if (entry && equals(entry.key, key)) {
        return entry.value;
      }

      return NOT_FOUND;
    },
    put: function put(key, value) {
      entry = {
        key: key,
        value: value
      };
    },
    getEntries: function getEntries() {
      return entry ? [entry] : [];
    },
    clear: function clear() {
      entry = undefined;
    }
  };
}

function createLruCache(maxSize, equals) {
  var entries = [];

  function get(key) {
    var cacheIndex = entries.findIndex(function (entry) {
      return equals(key, entry.key);
    }); // We found a cached entry

    if (cacheIndex > -1) {
      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top

      if (cacheIndex > 0) {
        entries.splice(cacheIndex, 1);
        entries.unshift(entry);
      }

      return entry.value;
    } // No entry found in cache, return sentinel


    return NOT_FOUND;
  }

  function put(key, value) {
    if (get(key) === NOT_FOUND) {
      // TODO Is unshift slow?
      entries.unshift({
        key: key,
        value: value
      });

      if (entries.length > maxSize) {
        entries.pop();
      }
    }
  }

  function getEntries() {
    return entries;
  }

  function clear() {
    entries = [];
  }

  return {
    get: get,
    put: put,
    getEntries: getEntries,
    clear: clear
  };
}

var defaultEqualityCheck = function defaultEqualityCheck(a, b) {
  return a === b;
};
function createCacheKeyComparator(equalityCheck) {
  return function areArgumentsShallowlyEqual(prev, next) {
    if (prev === null || next === null || prev.length !== next.length) {
      return false;
    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.


    var length = prev.length;

    for (var i = 0; i < length; i++) {
      if (!equalityCheck(prev[i], next[i])) {
        return false;
      }
    }

    return true;
  };
} // defaultMemoize now supports a configurable cache size with LRU behavior,
// and optional comparison of the result value with existing values

function defaultMemoize(func, equalityCheckOrOptions) {
  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {
    equalityCheck: equalityCheckOrOptions
  };
  var _providedOptions$equa = providedOptions.equalityCheck,
      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,
      _providedOptions$maxS = providedOptions.maxSize,
      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,
      resultEqualityCheck = providedOptions.resultEqualityCheck;
  var comparator = createCacheKeyComparator(equalityCheck);
  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons

  function memoized() {
    var value = cache.get(arguments);

    if (value === NOT_FOUND) {
      // @ts-ignore
      value = func.apply(null, arguments);

      if (resultEqualityCheck) {
        var entries = cache.getEntries();
        var matchingEntry = entries.find(function (entry) {
          return resultEqualityCheck(entry.value, value);
        });

        if (matchingEntry) {
          value = matchingEntry.value;
        }
      }

      cache.put(arguments, value);
    }

    return value;
  }

  memoized.clearCache = function () {
    return cache.clear();
  };

  return memoized;
}
;// CONCATENATED MODULE: ./node_modules/reselect/es/index.js



function getDependencies(funcs) {
  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;

  if (!dependencies.every(function (dep) {
    return typeof dep === 'function';
  })) {
    var dependencyTypes = dependencies.map(function (dep) {
      return typeof dep === 'function' ? "function " + (dep.name || 'unnamed') + "()" : typeof dep;
    }).join(', ');
    throw new Error("createSelector expects all input-selectors to be functions, but received the following types: [" + dependencyTypes + "]");
  }

  return dependencies;
}

function createSelectorCreator(memoize) {
  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    memoizeOptionsFromArgs[_key - 1] = arguments[_key];
  }

  var createSelector = function createSelector() {
    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      funcs[_key2] = arguments[_key2];
    }

    var _recomputations = 0;

    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.
    // So, start by declaring the default value here.
    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)


    var directlyPassedOptions = {
      memoizeOptions: undefined
    }; // Normally, the result func or "output selector" is the last arg

    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object

    if (typeof resultFunc === 'object') {
      directlyPassedOptions = resultFunc; // and pop the real result func off

      resultFunc = funcs.pop();
    }

    if (typeof resultFunc !== 'function') {
      throw new Error("createSelector expects an output function after the inputs, but received: [" + typeof resultFunc + "]");
    } // Determine which set of options we're using. Prefer options passed directly,
    // but fall back to options given to createSelectorCreator.


    var _directlyPassedOption = directlyPassedOptions,
        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,
        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer
    // is an array. In most libs I've looked at, it's an equality function or options object.
    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full
    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so
    // we wrap it in an array so we can apply it.

    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];
    var dependencies = getDependencies(funcs);
    var memoizedResultFunc = memoize.apply(void 0, [function () {
      _recomputations++; // apply arguments instead of spreading for performance.

      return resultFunc.apply(null, arguments);
    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.

    var selector = memoize(function () {
      var params = [];
      var length = dependencies.length;

      for (var i = 0; i < length; i++) {
        // apply arguments instead of spreading and mutate a local list of params for performance.
        // @ts-ignore
        params.push(dependencies[i].apply(null, arguments));
      } // apply arguments instead of spreading for performance.


      _lastResult = memoizedResultFunc.apply(null, params);
      return _lastResult;
    });
    Object.assign(selector, {
      resultFunc: resultFunc,
      memoizedResultFunc: memoizedResultFunc,
      dependencies: dependencies,
      lastResult: function lastResult() {
        return _lastResult;
      },
      recomputations: function recomputations() {
        return _recomputations;
      },
      resetRecomputations: function resetRecomputations() {
        return _recomputations = 0;
      }
    });
    return selector;
  }; // @ts-ignore


  return createSelector;
}
var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize); // Manual definition of state and output arguments

var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {
  if (selectorCreator === void 0) {
    selectorCreator = createSelector;
  }

  if (typeof selectors !== 'object') {
    throw new Error('createStructuredSelector expects first argument to be an object ' + ("where each property is a selector, instead received a " + typeof selectors));
  }

  var objectKeys = Object.keys(selectors);
  var resultSelector = selectorCreator( // @ts-ignore
  objectKeys.map(function (key) {
    return selectors[key];
  }), function () {
    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      values[_key3] = arguments[_key3];
    }

    return values.reduce(function (composition, value, index) {
      composition[objectKeys[index]] = value;
      return composition;
    }, {});
  });
  return resultSelector;
};
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js


function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}
;// CONCATENATED MODULE: ./node_modules/redux/es/redux.js

/**
 * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js
 *
 * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes
 * during build.
 * @param {number} code
 */

function formatProdErrorMessage(code) {
  return "Minified Redux error #" + code + "; visit https://redux.js.org/Errors?code=" + code + " for the full message or " + 'use the non-minified dev environment for full errors. ';
} // Inlined version of the `symbol-observable` polyfill


var $$observable = function () {
  return typeof Symbol === 'function' && Symbol.observable || '@@observable';
}();
/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */


var randomString = function randomString() {
  return Math.random().toString(36).substring(7).split('').join('.');
};

var ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};
/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */

function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = obj;

  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }

  return Object.getPrototypeOf(obj) === proto;
} // Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of


function miniKindOf(val) {
  if (val === void 0) return 'undefined';
  if (val === null) return 'null';
  var type = typeof val;

  switch (type) {
    case 'boolean':
    case 'string':
    case 'number':
    case 'symbol':
    case 'function':
      {
        return type;
      }
  }

  if (Array.isArray(val)) return 'array';
  if (isDate(val)) return 'date';
  if (isError(val)) return 'error';
  var constructorName = ctorName(val);

  switch (constructorName) {
    case 'Symbol':
    case 'Promise':
    case 'WeakMap':
    case 'WeakSet':
    case 'Map':
    case 'Set':
      return constructorName;
  } // other


  return type.slice(8, -1).toLowerCase().replace(/\s/g, '');
}

function ctorName(val) {
  return typeof val.constructor === 'function' ? val.constructor.name : null;
}

function isError(val) {
  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';
}

function isDate(val) {
  if (val instanceof Date) return true;
  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';
}

function kindOf(val) {
  var typeOfVal = typeof val;

  if (false) {}

  return typeOfVal;
}
/**
 * Creates a Redux store that holds the state tree.
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */


function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
    throw new Error( true ? formatProdErrorMessage(0) : 0);
  }

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error( true ? formatProdErrorMessage(1) : 0);
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error( true ? formatProdErrorMessage(2) : 0);
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;
  /**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }
  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */


  function getState() {
    if (isDispatching) {
      throw new Error( true ? formatProdErrorMessage(3) : 0);
    }

    return currentState;
  }
  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */


  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error( true ? formatProdErrorMessage(4) : 0);
    }

    if (isDispatching) {
      throw new Error( true ? formatProdErrorMessage(5) : 0);
    }

    var isSubscribed = true;
    ensureCanMutateNextListeners();
    nextListeners.push(listener);
    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      if (isDispatching) {
        throw new Error( true ? formatProdErrorMessage(6) : 0);
      }

      isSubscribed = false;
      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
      currentListeners = null;
    };
  }
  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */


  function dispatch(action) {
    if (!isPlainObject(action)) {
      throw new Error( true ? formatProdErrorMessage(7) : 0);
    }

    if (typeof action.type === 'undefined') {
      throw new Error( true ? formatProdErrorMessage(8) : 0);
    }

    if (isDispatching) {
      throw new Error( true ? formatProdErrorMessage(9) : 0);
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;

    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }
  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */


  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error( true ? formatProdErrorMessage(10) : 0);
    }

    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.
    // Any reducers that existed in both the new and old rootReducer
    // will receive the previous state. This effectively populates
    // the new state tree with any relevant data from the old one.

    dispatch({
      type: ActionTypes.REPLACE
    });
  }
  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */


  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object' || observer === null) {
          throw new Error( true ? formatProdErrorMessage(11) : 0);
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return {
          unsubscribe: unsubscribe
        };
      }
    }, _ref[$$observable] = function () {
      return this;
    }, _ref;
  } // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.


  dispatch({
    type: ActionTypes.INIT
  });
  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[$$observable] = observable, _ref2;
}
/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */


function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
  } catch (e) {} // eslint-disable-line no-empty

}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!isPlainObject(inputState)) {
    return "The " + argumentName + " has unexpected type of \"" + kindOf(inputState) + "\". Expected argument to be an object with the following " + ("keys: \"" + reducerKeys.join('", "') + "\"");
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
  });
  unexpectedKeys.forEach(function (key) {
    unexpectedKeyCache[key] = true;
  });
  if (action && action.type === ActionTypes.REPLACE) return;

  if (unexpectedKeys.length > 0) {
    return "Unexpected " + (unexpectedKeys.length > 1 ? 'keys' : 'key') + " " + ("\"" + unexpectedKeys.join('", "') + "\" found in " + argumentName + ". ") + "Expected to find one of the known reducer keys instead: " + ("\"" + reducerKeys.join('", "') + "\". Unexpected keys will be ignored.");
  }
}

function assertReducerShape(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, {
      type: ActionTypes.INIT
    });

    if (typeof initialState === 'undefined') {
      throw new Error( true ? formatProdErrorMessage(12) : 0);
    }

    if (typeof reducer(undefined, {
      type: ActionTypes.PROBE_UNKNOWN_ACTION()
    }) === 'undefined') {
      throw new Error( true ? formatProdErrorMessage(13) : 0);
    }
  });
}
/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */


function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};

  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if (false) {}

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }

  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same
  // keys multiple times.

  var unexpectedKeyCache;

  if (false) {}

  var shapeAssertionError;

  try {
    assertReducerShape(finalReducers);
  } catch (e) {
    shapeAssertionError = e;
  }

  return function combination(state, action) {
    if (state === void 0) {
      state = {};
    }

    if (shapeAssertionError) {
      throw shapeAssertionError;
    }

    if (false) { var warningMessage; }

    var hasChanged = false;
    var nextState = {};

    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
      var _key = finalReducerKeys[_i];
      var reducer = finalReducers[_key];
      var previousStateForKey = state[_key];
      var nextStateForKey = reducer(previousStateForKey, action);

      if (typeof nextStateForKey === 'undefined') {
        var actionType = action && action.type;
        throw new Error( true ? formatProdErrorMessage(14) : 0);
      }

      nextState[_key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }

    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;
    return hasChanged ? nextState : state;
  };
}

function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(this, arguments));
  };
}
/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass an action creator as the first argument,
 * and get a dispatch wrapped function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */


function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error( true ? formatProdErrorMessage(16) : 0);
  }

  var boundActionCreators = {};

  for (var key in actionCreators) {
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }

  return boundActionCreators;
}
/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */


function compose() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(void 0, arguments));
    };
  });
}
/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */


function applyMiddleware() {
  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function () {
      var store = createStore.apply(void 0, arguments);

      var _dispatch = function dispatch() {
        throw new Error( true ? formatProdErrorMessage(15) : 0);
      };

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch() {
          return _dispatch.apply(void 0, arguments);
        }
      };
      var chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = compose.apply(void 0, chain)(store.dispatch);
      return _objectSpread2(_objectSpread2({}, store), {}, {
        dispatch: _dispatch
      });
    };
  };
}
/*
 * This is a dummy function to check if the function name has been altered by minification.
 * If the function has been minified and NODE_ENV !== 'production', warn the user.
 */


function isCrushed() {}

if (false) {}


;// CONCATENATED MODULE: ./node_modules/redux-thunk/es/index.js
/** A function that accepts a potential "extra argument" value to be injected later,
 * and returns an instance of the thunk middleware that uses that value
 */
function createThunkMiddleware(extraArgument) {
  // Standard Redux middleware definition pattern:
  // See: https://redux.js.org/tutorials/fundamentals/part-4-store#writing-custom-middleware
  var middleware = function middleware(_ref) {
    var dispatch = _ref.dispatch,
        getState = _ref.getState;
    return function (next) {
      return function (action) {
        // The thunk middleware looks for any functions that were passed to `store.dispatch`.
        // If this "action" is really a function, call it and return the result.
        if (typeof action === 'function') {
          // Inject the store's `dispatch` and `getState` methods, as well as any "extra arg"
          return action(dispatch, getState, extraArgument);
        } // Otherwise, pass the action down the middleware chain as usual


        return next(action);
      };
    };
  };

  return middleware;
}

var thunk = createThunkMiddleware(); // Attach the factory function so users can create a customized version
// with whatever "extra arg" they want to inject into their thunks

thunk.withExtraArgument = createThunkMiddleware;
/* harmony default export */ var es = (thunk);
;// CONCATENATED MODULE: ./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __spreadArray = undefined && undefined.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;

var __defNormalProp = function __defNormalProp(obj, key, value) {
  return key in obj ? __defProp(obj, key, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
  }) : obj[key] = value;
};

var __spreadValues = function __spreadValues(a, b) {
  for (var prop in b || (b = {})) {
    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
  }

  if (__getOwnPropSymbols) for (var _i = 0, _c = __getOwnPropSymbols(b); _i < _c.length; _i++) {
    var prop = _c[_i];
    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
  }
  return a;
};

var __spreadProps = function __spreadProps(a, b) {
  return __defProps(a, __getOwnPropDescs(b));
};

var __async = function __async(__this, __arguments, generator) {
  return new Promise(function (resolve, reject) {
    var fulfilled = function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };

    var rejected = function rejected(value) {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };

    var step = function step(x) {
      return x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    };

    step((generator = generator.apply(__this, __arguments)).next());
  });
}; // src/index.ts





 // src/createDraftSafeSelector.ts




var createDraftSafeSelector = function createDraftSafeSelector() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  var selector = createSelector.apply(void 0, args);

  var wrappedSelector = function wrappedSelector(value) {
    var rest = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      rest[_i - 1] = arguments[_i];
    }

    return selector.apply(void 0, __spreadArray([r(value) ? D(value) : value], rest));
  };

  return wrappedSelector;
}; // src/configureStore.ts


 // src/devtoolsExtension.ts


var composeWithDevTools = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : function () {
  if (arguments.length === 0) return void 0;
  if (typeof arguments[0] === "object") return compose;
  return compose.apply(null, arguments);
};
var devToolsEnhancer = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__ : function () {
  return function (noop2) {
    return noop2;
  };
}; // src/isPlainObject.ts

function redux_toolkit_esm_isPlainObject(value) {
  if (typeof value !== "object" || value === null) return false;
  var proto = Object.getPrototypeOf(value);
  if (proto === null) return true;
  var baseProto = proto;

  while (Object.getPrototypeOf(baseProto) !== null) {
    baseProto = Object.getPrototypeOf(baseProto);
  }

  return proto === baseProto;
} // src/getDefaultMiddleware.ts


 // src/utils.ts

function getTimeMeasureUtils(maxDelay, fnName) {
  var elapsed = 0;
  return {
    measureTime: function measureTime(fn) {
      var started = Date.now();

      try {
        return fn();
      } finally {
        var finished = Date.now();
        elapsed += finished - started;
      }
    },
    warnIfExceeded: function warnIfExceeded() {
      if (elapsed > maxDelay) {
        console.warn(fnName + " took " + elapsed + "ms, which is more than the warning threshold of " + maxDelay + "ms. \nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\nIt is disabled in production builds, so you don't need to worry about that.");
      }
    }
  };
}

var MiddlewareArray =
/** @class */
function (_super) {
  __extends(MiddlewareArray, _super);

  function MiddlewareArray() {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    var _this = _super.apply(this, args) || this;

    Object.setPrototypeOf(_this, MiddlewareArray.prototype);
    return _this;
  }

  Object.defineProperty(MiddlewareArray, Symbol.species, {
    get: function get() {
      return MiddlewareArray;
    },
    enumerable: false,
    configurable: true
  });

  MiddlewareArray.prototype.concat = function () {
    var arr = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      arr[_i] = arguments[_i];
    }

    return _super.prototype.concat.apply(this, arr);
  };

  MiddlewareArray.prototype.prepend = function () {
    var arr = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      arr[_i] = arguments[_i];
    }

    if (arr.length === 1 && Array.isArray(arr[0])) {
      return new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], arr[0].concat(this))))();
    }

    return new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], arr.concat(this))))();
  };

  return MiddlewareArray;
}(Array); // src/immutableStateInvariantMiddleware.ts


var isProduction = (/* unused pure expression or super */ null && ("production" === "production"));
var prefix = "Invariant failed";

function invariant(condition, message) {
  if (condition) {
    return;
  }

  if (isProduction) {
    throw new Error(prefix);
  }

  throw new Error(prefix + ": " + (message || ""));
}

function stringify(obj, serializer, indent, decycler) {
  return JSON.stringify(obj, getSerialize(serializer, decycler), indent);
}

function getSerialize(serializer, decycler) {
  var stack = [],
      keys = [];
  if (!decycler) decycler = function decycler(_, value) {
    if (stack[0] === value) return "[Circular ~]";
    return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]";
  };
  return function (key, value) {
    if (stack.length > 0) {
      var thisPos = stack.indexOf(this);
      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);
      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);
      if (~stack.indexOf(value)) value = decycler.call(this, key, value);
    } else stack.push(value);

    return serializer == null ? value : serializer.call(this, key, value);
  };
}

function isImmutableDefault(value) {
  return typeof value !== "object" || value === null || typeof value === "undefined" || Object.isFrozen(value);
}

function trackForMutations(isImmutable, ignorePaths, obj) {
  var trackedProperties = trackProperties(isImmutable, ignorePaths, obj);
  return {
    detectMutations: function detectMutations() {
      return _detectMutations(isImmutable, ignorePaths, trackedProperties, obj);
    }
  };
}

function trackProperties(isImmutable, ignorePaths, obj, path) {
  if (ignorePaths === void 0) {
    ignorePaths = [];
  }

  if (path === void 0) {
    path = "";
  }

  var tracked = {
    value: obj
  };

  if (!isImmutable(obj)) {
    tracked.children = {};

    for (var key in obj) {
      var childPath = path ? path + "." + key : key;

      if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {
        continue;
      }

      tracked.children[key] = trackProperties(isImmutable, ignorePaths, obj[key], childPath);
    }
  }

  return tracked;
}

function _detectMutations(isImmutable, ignorePaths, trackedProperty, obj, sameParentRef, path) {
  if (ignorePaths === void 0) {
    ignorePaths = [];
  }

  if (sameParentRef === void 0) {
    sameParentRef = false;
  }

  if (path === void 0) {
    path = "";
  }

  var prevObj = trackedProperty ? trackedProperty.value : void 0;
  var sameRef = prevObj === obj;

  if (sameParentRef && !sameRef && !Number.isNaN(obj)) {
    return {
      wasMutated: true,
      path: path
    };
  }

  if (isImmutable(prevObj) || isImmutable(obj)) {
    return {
      wasMutated: false
    };
  }

  var keysToDetect = {};

  for (var key in trackedProperty.children) {
    keysToDetect[key] = true;
  }

  for (var key in obj) {
    keysToDetect[key] = true;
  }

  for (var key in keysToDetect) {
    var childPath = path ? path + "." + key : key;

    if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {
      continue;
    }

    var result = _detectMutations(isImmutable, ignorePaths, trackedProperty.children[key], obj[key], sameRef, childPath);

    if (result.wasMutated) {
      return result;
    }
  }

  return {
    wasMutated: false
  };
}

function createImmutableStateInvariantMiddleware(options) {
  if (options === void 0) {
    options = {};
  }

  if (true) {
    return function () {
      return function (next) {
        return function (action) {
          return next(action);
        };
      };
    };
  }

  var _c = options.isImmutable,
      isImmutable = _c === void 0 ? isImmutableDefault : _c,
      ignoredPaths = options.ignoredPaths,
      _d = options.warnAfter,
      warnAfter = _d === void 0 ? 32 : _d,
      ignore = options.ignore;
  ignoredPaths = ignoredPaths || ignore;
  var track = trackForMutations.bind(null, isImmutable, ignoredPaths);
  return function (_c) {
    var getState = _c.getState;
    var state = getState();
    var tracker = track(state);
    var result;
    return function (next) {
      return function (action) {
        var measureUtils = getTimeMeasureUtils(warnAfter, "ImmutableStateInvariantMiddleware");
        measureUtils.measureTime(function () {
          state = getState();
          result = tracker.detectMutations();
          tracker = track(state);
          invariant(!result.wasMutated, "A state mutation was detected between dispatches, in the path '" + (result.path || "") + "'.  This may cause incorrect behavior. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)");
        });
        var dispatchedAction = next(action);
        measureUtils.measureTime(function () {
          state = getState();
          result = tracker.detectMutations();
          tracker = track(state);
          result.wasMutated && invariant(!result.wasMutated, "A state mutation was detected inside a dispatch, in the path: " + (result.path || "") + ". Take a look at the reducer(s) handling the action " + stringify(action) + ". (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)");
        });
        measureUtils.warnIfExceeded();
        return dispatchedAction;
      };
    };
  };
} // src/serializableStateInvariantMiddleware.ts


function isPlain(val) {
  var type = typeof val;
  return type === "undefined" || val === null || type === "string" || type === "boolean" || type === "number" || Array.isArray(val) || redux_toolkit_esm_isPlainObject(val);
}

function findNonSerializableValue(value, path, isSerializable, getEntries, ignoredPaths) {
  if (path === void 0) {
    path = "";
  }

  if (isSerializable === void 0) {
    isSerializable = isPlain;
  }

  if (ignoredPaths === void 0) {
    ignoredPaths = [];
  }

  var foundNestedSerializable;

  if (!isSerializable(value)) {
    return {
      keyPath: path || "<root>",
      value: value
    };
  }

  if (typeof value !== "object" || value === null) {
    return false;
  }

  var entries = getEntries != null ? getEntries(value) : Object.entries(value);
  var hasIgnoredPaths = ignoredPaths.length > 0;

  for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
    var _c = entries_1[_i],
        key = _c[0],
        nestedValue = _c[1];
    var nestedPath = path ? path + "." + key : key;

    if (hasIgnoredPaths && ignoredPaths.indexOf(nestedPath) >= 0) {
      continue;
    }

    if (!isSerializable(nestedValue)) {
      return {
        keyPath: nestedPath,
        value: nestedValue
      };
    }

    if (typeof nestedValue === "object") {
      foundNestedSerializable = findNonSerializableValue(nestedValue, nestedPath, isSerializable, getEntries, ignoredPaths);

      if (foundNestedSerializable) {
        return foundNestedSerializable;
      }
    }
  }

  return false;
}

function createSerializableStateInvariantMiddleware(options) {
  if (options === void 0) {
    options = {};
  }

  if (true) {
    return function () {
      return function (next) {
        return function (action) {
          return next(action);
        };
      };
    };
  }

  var _c = options.isSerializable,
      isSerializable = _c === void 0 ? isPlain : _c,
      getEntries = options.getEntries,
      _d = options.ignoredActions,
      ignoredActions = _d === void 0 ? [] : _d,
      _e = options.ignoredActionPaths,
      ignoredActionPaths = _e === void 0 ? ["meta.arg", "meta.baseQueryMeta"] : _e,
      _f = options.ignoredPaths,
      ignoredPaths = _f === void 0 ? [] : _f,
      _g = options.warnAfter,
      warnAfter = _g === void 0 ? 32 : _g,
      _h = options.ignoreState,
      ignoreState = _h === void 0 ? false : _h,
      _j = options.ignoreActions,
      ignoreActions = _j === void 0 ? false : _j;
  return function (storeAPI) {
    return function (next) {
      return function (action) {
        var result = next(action);
        var measureUtils = getTimeMeasureUtils(warnAfter, "SerializableStateInvariantMiddleware");

        if (!ignoreActions && !(ignoredActions.length && ignoredActions.indexOf(action.type) !== -1)) {
          measureUtils.measureTime(function () {
            var foundActionNonSerializableValue = findNonSerializableValue(action, "", isSerializable, getEntries, ignoredActionPaths);

            if (foundActionNonSerializableValue) {
              var keyPath = foundActionNonSerializableValue.keyPath,
                  value = foundActionNonSerializableValue.value;
              console.error("A non-serializable value was detected in an action, in the path: `" + keyPath + "`. Value:", value, "\nTake a look at the logic that dispatched this action: ", action, "\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)", "\n(To allow non-serializable values see: https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data)");
            }
          });
        }

        if (!ignoreState) {
          measureUtils.measureTime(function () {
            var state = storeAPI.getState();
            var foundStateNonSerializableValue = findNonSerializableValue(state, "", isSerializable, getEntries, ignoredPaths);

            if (foundStateNonSerializableValue) {
              var keyPath = foundStateNonSerializableValue.keyPath,
                  value = foundStateNonSerializableValue.value;
              console.error("A non-serializable value was detected in the state, in the path: `" + keyPath + "`. Value:", value, "\nTake a look at the reducer(s) handling this action type: " + action.type + ".\n(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)");
            }
          });
          measureUtils.warnIfExceeded();
        }

        return result;
      };
    };
  };
} // src/getDefaultMiddleware.ts


function isBoolean(x) {
  return typeof x === "boolean";
}

function curryGetDefaultMiddleware() {
  return function curriedGetDefaultMiddleware(options) {
    return getDefaultMiddleware(options);
  };
}

function getDefaultMiddleware(options) {
  if (options === void 0) {
    options = {};
  }

  var _c = options.thunk,
      thunk = _c === void 0 ? true : _c,
      _d = options.immutableCheck,
      immutableCheck = _d === void 0 ? true : _d,
      _e = options.serializableCheck,
      serializableCheck = _e === void 0 ? true : _e;
  var middlewareArray = new MiddlewareArray();

  if (thunk) {
    if (isBoolean(thunk)) {
      middlewareArray.push(es);
    } else {
      middlewareArray.push(es.withExtraArgument(thunk.extraArgument));
    }
  }

  if (false) { var serializableOptions, immutableOptions; }

  return middlewareArray;
} // src/configureStore.ts


var IS_PRODUCTION = "production" === "production";

function configureStore(options) {
  var curriedGetDefaultMiddleware = curryGetDefaultMiddleware();

  var _c = options || {},
      _d = _c.reducer,
      reducer = _d === void 0 ? void 0 : _d,
      _e = _c.middleware,
      middleware = _e === void 0 ? curriedGetDefaultMiddleware() : _e,
      _f = _c.devTools,
      devTools = _f === void 0 ? true : _f,
      _g = _c.preloadedState,
      preloadedState = _g === void 0 ? void 0 : _g,
      _h = _c.enhancers,
      enhancers = _h === void 0 ? void 0 : _h;

  var rootReducer;

  if (typeof reducer === "function") {
    rootReducer = reducer;
  } else if (redux_toolkit_esm_isPlainObject(reducer)) {
    rootReducer = combineReducers(reducer);
  } else {
    throw new Error('"reducer" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');
  }

  var finalMiddleware = middleware;

  if (typeof finalMiddleware === "function") {
    finalMiddleware = finalMiddleware(curriedGetDefaultMiddleware);

    if (!IS_PRODUCTION && !Array.isArray(finalMiddleware)) {
      throw new Error("when using a middleware builder function, an array of middleware must be returned");
    }
  }

  if (!IS_PRODUCTION && finalMiddleware.some(function (item) {
    return typeof item !== "function";
  })) {
    throw new Error("each middleware provided to configureStore must be a function");
  }

  var middlewareEnhancer = applyMiddleware.apply(void 0, finalMiddleware);
  var finalCompose = compose;

  if (devTools) {
    finalCompose = composeWithDevTools(__spreadValues({
      trace: !IS_PRODUCTION
    }, typeof devTools === "object" && devTools));
  }

  var storeEnhancers = [middlewareEnhancer];

  if (Array.isArray(enhancers)) {
    storeEnhancers = __spreadArray([middlewareEnhancer], enhancers);
  } else if (typeof enhancers === "function") {
    storeEnhancers = enhancers(storeEnhancers);
  }

  var composedEnhancer = finalCompose.apply(void 0, storeEnhancers);
  return createStore(rootReducer, preloadedState, composedEnhancer);
} // src/createAction.ts


function createAction(type, prepareAction) {
  function actionCreator() {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    if (prepareAction) {
      var prepared = prepareAction.apply(void 0, args);

      if (!prepared) {
        throw new Error("prepareAction did not return an object");
      }

      return __spreadValues(__spreadValues({
        type: type,
        payload: prepared.payload
      }, "meta" in prepared && {
        meta: prepared.meta
      }), "error" in prepared && {
        error: prepared.error
      });
    }

    return {
      type: type,
      payload: args[0]
    };
  }

  actionCreator.toString = function () {
    return "" + type;
  };

  actionCreator.type = type;

  actionCreator.match = function (action) {
    return action.type === type;
  };

  return actionCreator;
}

function isFSA(action) {
  return redux_toolkit_esm_isPlainObject(action) && typeof action.type === "string" && Object.keys(action).every(isValidKey);
}

function isValidKey(key) {
  return ["type", "payload", "error", "meta"].indexOf(key) > -1;
}

function getType(actionCreator) {
  return "" + actionCreator;
} // src/createReducer.ts


 // src/mapBuilders.ts

function executeReducerBuilderCallback(builderCallback) {
  var actionsMap = {};
  var actionMatchers = [];
  var defaultCaseReducer;
  var builder = {
    addCase: function addCase(typeOrActionCreator, reducer) {
      if (false) {}

      var type = typeof typeOrActionCreator === "string" ? typeOrActionCreator : typeOrActionCreator.type;

      if (type in actionsMap) {
        throw new Error("addCase cannot be called with two reducers for the same action type");
      }

      actionsMap[type] = reducer;
      return builder;
    },
    addMatcher: function addMatcher(matcher, reducer) {
      if (false) {}

      actionMatchers.push({
        matcher: matcher,
        reducer: reducer
      });
      return builder;
    },
    addDefaultCase: function addDefaultCase(reducer) {
      if (false) {}

      defaultCaseReducer = reducer;
      return builder;
    }
  };
  builderCallback(builder);
  return [actionsMap, actionMatchers, defaultCaseReducer];
} // src/createReducer.ts


function isStateFunction(x) {
  return typeof x === "function";
}

function createReducer(initialState, mapOrBuilderCallback, actionMatchers, defaultCaseReducer) {
  if (actionMatchers === void 0) {
    actionMatchers = [];
  }

  var _c = typeof mapOrBuilderCallback === "function" ? executeReducerBuilderCallback(mapOrBuilderCallback) : [mapOrBuilderCallback, actionMatchers, defaultCaseReducer],
      actionsMap = _c[0],
      finalActionMatchers = _c[1],
      finalDefaultCaseReducer = _c[2];

  var getInitialState;

  if (isStateFunction(initialState)) {
    getInitialState = function getInitialState() {
      return immer_esm(initialState(), function () {});
    };
  } else {
    var frozenInitialState_1 = immer_esm(initialState, function () {});

    getInitialState = function getInitialState() {
      return frozenInitialState_1;
    };
  }

  function reducer(state, action) {
    if (state === void 0) {
      state = getInitialState();
    }

    var caseReducers = __spreadArray([actionsMap[action.type]], finalActionMatchers.filter(function (_c) {
      var matcher = _c.matcher;
      return matcher(action);
    }).map(function (_c) {
      var reducer2 = _c.reducer;
      return reducer2;
    }));

    if (caseReducers.filter(function (cr) {
      return !!cr;
    }).length === 0) {
      caseReducers = [finalDefaultCaseReducer];
    }

    return caseReducers.reduce(function (previousState, caseReducer) {
      if (caseReducer) {
        if (r(previousState)) {
          var draft = previousState;
          var result = caseReducer(draft, action);

          if (typeof result === "undefined") {
            return previousState;
          }

          return result;
        } else if (!t(previousState)) {
          var result = caseReducer(previousState, action);

          if (typeof result === "undefined") {
            if (previousState === null) {
              return previousState;
            }

            throw Error("A case reducer on a non-draftable value must not return undefined");
          }

          return result;
        } else {
          return immer_esm(previousState, function (draft) {
            return caseReducer(draft, action);
          });
        }
      }

      return previousState;
    }, state);
  }

  reducer.getInitialState = getInitialState;
  return reducer;
} // src/createSlice.ts


function getType2(slice, actionKey) {
  return slice + "/" + actionKey;
}

function createSlice(options) {
  var name = options.name;

  if (!name) {
    throw new Error("`name` is a required option for createSlice");
  }

  var initialState = typeof options.initialState == "function" ? options.initialState : immer_esm(options.initialState, function () {});
  var reducers = options.reducers || {};
  var reducerNames = Object.keys(reducers);
  var sliceCaseReducersByName = {};
  var sliceCaseReducersByType = {};
  var actionCreators = {};
  reducerNames.forEach(function (reducerName) {
    var maybeReducerWithPrepare = reducers[reducerName];
    var type = getType2(name, reducerName);
    var caseReducer;
    var prepareCallback;

    if ("reducer" in maybeReducerWithPrepare) {
      caseReducer = maybeReducerWithPrepare.reducer;
      prepareCallback = maybeReducerWithPrepare.prepare;
    } else {
      caseReducer = maybeReducerWithPrepare;
    }

    sliceCaseReducersByName[reducerName] = caseReducer;
    sliceCaseReducersByType[type] = caseReducer;
    actionCreators[reducerName] = prepareCallback ? createAction(type, prepareCallback) : createAction(type);
  });

  function buildReducer() {
    var _c = typeof options.extraReducers === "function" ? executeReducerBuilderCallback(options.extraReducers) : [options.extraReducers],
        _d = _c[0],
        extraReducers = _d === void 0 ? {} : _d,
        _e = _c[1],
        actionMatchers = _e === void 0 ? [] : _e,
        _f = _c[2],
        defaultCaseReducer = _f === void 0 ? void 0 : _f;

    var finalCaseReducers = __spreadValues(__spreadValues({}, extraReducers), sliceCaseReducersByType);

    return createReducer(initialState, finalCaseReducers, actionMatchers, defaultCaseReducer);
  }

  var _reducer;

  return {
    name: name,
    reducer: function reducer(state, action) {
      if (!_reducer) _reducer = buildReducer();
      return _reducer(state, action);
    },
    actions: actionCreators,
    caseReducers: sliceCaseReducersByName,
    getInitialState: function getInitialState() {
      if (!_reducer) _reducer = buildReducer();
      return _reducer.getInitialState();
    }
  };
} // src/entities/entity_state.ts


function getInitialEntityState() {
  return {
    ids: [],
    entities: {}
  };
}

function createInitialStateFactory() {
  function getInitialState(additionalState) {
    if (additionalState === void 0) {
      additionalState = {};
    }

    return Object.assign(getInitialEntityState(), additionalState);
  }

  return {
    getInitialState: getInitialState
  };
} // src/entities/state_selectors.ts


function createSelectorsFactory() {
  function getSelectors(selectState) {
    var selectIds = function selectIds(state) {
      return state.ids;
    };

    var selectEntities = function selectEntities(state) {
      return state.entities;
    };

    var selectAll = createDraftSafeSelector(selectIds, selectEntities, function (ids, entities) {
      return ids.map(function (id) {
        return entities[id];
      });
    });

    var selectId = function selectId(_, id) {
      return id;
    };

    var selectById = function selectById(entities, id) {
      return entities[id];
    };

    var selectTotal = createDraftSafeSelector(selectIds, function (ids) {
      return ids.length;
    });

    if (!selectState) {
      return {
        selectIds: selectIds,
        selectEntities: selectEntities,
        selectAll: selectAll,
        selectTotal: selectTotal,
        selectById: createDraftSafeSelector(selectEntities, selectId, selectById)
      };
    }

    var selectGlobalizedEntities = createDraftSafeSelector(selectState, selectEntities);
    return {
      selectIds: createDraftSafeSelector(selectState, selectIds),
      selectEntities: selectGlobalizedEntities,
      selectAll: createDraftSafeSelector(selectState, selectAll),
      selectTotal: createDraftSafeSelector(selectState, selectTotal),
      selectById: createDraftSafeSelector(selectGlobalizedEntities, selectId, selectById)
    };
  }

  return {
    getSelectors: getSelectors
  };
} // src/entities/state_adapter.ts




function createSingleArgumentStateOperator(mutator) {
  var operator = createStateOperator(function (_, state) {
    return mutator(state);
  });
  return function operation(state) {
    return operator(state, void 0);
  };
}

function createStateOperator(mutator) {
  return function operation(state, arg) {
    function isPayloadActionArgument(arg2) {
      return isFSA(arg2);
    }

    var runMutator = function runMutator(draft) {
      if (isPayloadActionArgument(arg)) {
        mutator(arg.payload, draft);
      } else {
        mutator(arg, draft);
      }
    };

    if (isDraft3(state)) {
      runMutator(state);
      return state;
    } else {
      return createNextState2(state, runMutator);
    }
  };
} // src/entities/utils.ts


function selectIdValue(entity, selectId) {
  var key = selectId(entity);

  if (false) {}

  return key;
}

function ensureEntitiesArray(entities) {
  if (!Array.isArray(entities)) {
    entities = Object.values(entities);
  }

  return entities;
}

function splitAddedUpdatedEntities(newEntities, selectId, state) {
  newEntities = ensureEntitiesArray(newEntities);
  var added = [];
  var updated = [];

  for (var _i = 0, newEntities_1 = newEntities; _i < newEntities_1.length; _i++) {
    var entity = newEntities_1[_i];
    var id = selectIdValue(entity, selectId);

    if (id in state.entities) {
      updated.push({
        id: id,
        changes: entity
      });
    } else {
      added.push(entity);
    }
  }

  return [added, updated];
} // src/entities/unsorted_state_adapter.ts


function createUnsortedStateAdapter(selectId) {
  function addOneMutably(entity, state) {
    var key = selectIdValue(entity, selectId);

    if (key in state.entities) {
      return;
    }

    state.ids.push(key);
    state.entities[key] = entity;
  }

  function addManyMutably(newEntities, state) {
    newEntities = ensureEntitiesArray(newEntities);

    for (var _i = 0, newEntities_2 = newEntities; _i < newEntities_2.length; _i++) {
      var entity = newEntities_2[_i];
      addOneMutably(entity, state);
    }
  }

  function setOneMutably(entity, state) {
    var key = selectIdValue(entity, selectId);

    if (!(key in state.entities)) {
      state.ids.push(key);
    }

    state.entities[key] = entity;
  }

  function setManyMutably(newEntities, state) {
    newEntities = ensureEntitiesArray(newEntities);

    for (var _i = 0, newEntities_3 = newEntities; _i < newEntities_3.length; _i++) {
      var entity = newEntities_3[_i];
      setOneMutably(entity, state);
    }
  }

  function setAllMutably(newEntities, state) {
    newEntities = ensureEntitiesArray(newEntities);
    state.ids = [];
    state.entities = {};
    addManyMutably(newEntities, state);
  }

  function removeOneMutably(key, state) {
    return removeManyMutably([key], state);
  }

  function removeManyMutably(keys, state) {
    var didMutate = false;
    keys.forEach(function (key) {
      if (key in state.entities) {
        delete state.entities[key];
        didMutate = true;
      }
    });

    if (didMutate) {
      state.ids = state.ids.filter(function (id) {
        return id in state.entities;
      });
    }
  }

  function removeAllMutably(state) {
    Object.assign(state, {
      ids: [],
      entities: {}
    });
  }

  function takeNewKey(keys, update, state) {
    var original2 = state.entities[update.id];
    var updated = Object.assign({}, original2, update.changes);
    var newKey = selectIdValue(updated, selectId);
    var hasNewKey = newKey !== update.id;

    if (hasNewKey) {
      keys[update.id] = newKey;
      delete state.entities[update.id];
    }

    state.entities[newKey] = updated;
    return hasNewKey;
  }

  function updateOneMutably(update, state) {
    return updateManyMutably([update], state);
  }

  function updateManyMutably(updates, state) {
    var newKeys = {};
    var updatesPerEntity = {};
    updates.forEach(function (update) {
      if (update.id in state.entities) {
        updatesPerEntity[update.id] = {
          id: update.id,
          changes: __spreadValues(__spreadValues({}, updatesPerEntity[update.id] ? updatesPerEntity[update.id].changes : null), update.changes)
        };
      }
    });
    updates = Object.values(updatesPerEntity);
    var didMutateEntities = updates.length > 0;

    if (didMutateEntities) {
      var didMutateIds = updates.filter(function (update) {
        return takeNewKey(newKeys, update, state);
      }).length > 0;

      if (didMutateIds) {
        state.ids = state.ids.map(function (id) {
          return newKeys[id] || id;
        });
      }
    }
  }

  function upsertOneMutably(entity, state) {
    return upsertManyMutably([entity], state);
  }

  function upsertManyMutably(newEntities, state) {
    var _c = splitAddedUpdatedEntities(newEntities, selectId, state),
        added = _c[0],
        updated = _c[1];

    updateManyMutably(updated, state);
    addManyMutably(added, state);
  }

  return {
    removeAll: createSingleArgumentStateOperator(removeAllMutably),
    addOne: createStateOperator(addOneMutably),
    addMany: createStateOperator(addManyMutably),
    setOne: createStateOperator(setOneMutably),
    setMany: createStateOperator(setManyMutably),
    setAll: createStateOperator(setAllMutably),
    updateOne: createStateOperator(updateOneMutably),
    updateMany: createStateOperator(updateManyMutably),
    upsertOne: createStateOperator(upsertOneMutably),
    upsertMany: createStateOperator(upsertManyMutably),
    removeOne: createStateOperator(removeOneMutably),
    removeMany: createStateOperator(removeManyMutably)
  };
} // src/entities/sorted_state_adapter.ts


function createSortedStateAdapter(selectId, sort) {
  var _c = createUnsortedStateAdapter(selectId),
      removeOne = _c.removeOne,
      removeMany = _c.removeMany,
      removeAll = _c.removeAll;

  function addOneMutably(entity, state) {
    return addManyMutably([entity], state);
  }

  function addManyMutably(newEntities, state) {
    newEntities = ensureEntitiesArray(newEntities);
    var models = newEntities.filter(function (model) {
      return !(selectIdValue(model, selectId) in state.entities);
    });

    if (models.length !== 0) {
      merge(models, state);
    }
  }

  function setOneMutably(entity, state) {
    return setManyMutably([entity], state);
  }

  function setManyMutably(newEntities, state) {
    newEntities = ensureEntitiesArray(newEntities);

    if (newEntities.length !== 0) {
      merge(newEntities, state);
    }
  }

  function setAllMutably(newEntities, state) {
    newEntities = ensureEntitiesArray(newEntities);
    state.entities = {};
    state.ids = [];
    addManyMutably(newEntities, state);
  }

  function updateOneMutably(update, state) {
    return updateManyMutably([update], state);
  }

  function takeUpdatedModel(models, update, state) {
    if (!(update.id in state.entities)) {
      return false;
    }

    var original2 = state.entities[update.id];
    var updated = Object.assign({}, original2, update.changes);
    var newKey = selectIdValue(updated, selectId);
    delete state.entities[update.id];
    models.push(updated);
    return newKey !== update.id;
  }

  function updateManyMutably(updates, state) {
    var models = [];
    updates.forEach(function (update) {
      return takeUpdatedModel(models, update, state);
    });

    if (models.length !== 0) {
      merge(models, state);
    }
  }

  function upsertOneMutably(entity, state) {
    return upsertManyMutably([entity], state);
  }

  function upsertManyMutably(newEntities, state) {
    var _c = splitAddedUpdatedEntities(newEntities, selectId, state),
        added = _c[0],
        updated = _c[1];

    updateManyMutably(updated, state);
    addManyMutably(added, state);
  }

  function areArraysEqual(a, b) {
    if (a.length !== b.length) {
      return false;
    }

    for (var i = 0; i < a.length && i < b.length; i++) {
      if (a[i] === b[i]) {
        continue;
      }

      return false;
    }

    return true;
  }

  function merge(models, state) {
    models.forEach(function (model) {
      state.entities[selectId(model)] = model;
    });
    var allEntities = Object.values(state.entities);
    allEntities.sort(sort);
    var newSortedIds = allEntities.map(selectId);
    var ids = state.ids;

    if (!areArraysEqual(ids, newSortedIds)) {
      state.ids = newSortedIds;
    }
  }

  return {
    removeOne: removeOne,
    removeMany: removeMany,
    removeAll: removeAll,
    addOne: createStateOperator(addOneMutably),
    updateOne: createStateOperator(updateOneMutably),
    upsertOne: createStateOperator(upsertOneMutably),
    setOne: createStateOperator(setOneMutably),
    setMany: createStateOperator(setManyMutably),
    setAll: createStateOperator(setAllMutably),
    addMany: createStateOperator(addManyMutably),
    updateMany: createStateOperator(updateManyMutably),
    upsertMany: createStateOperator(upsertManyMutably)
  };
} // src/entities/create_adapter.ts


function createEntityAdapter(options) {
  if (options === void 0) {
    options = {};
  }

  var _c = __spreadValues({
    sortComparer: false,
    selectId: function selectId(instance) {
      return instance.id;
    }
  }, options),
      selectId = _c.selectId,
      sortComparer = _c.sortComparer;

  var stateFactory = createInitialStateFactory();
  var selectorsFactory = createSelectorsFactory();
  var stateAdapter = sortComparer ? createSortedStateAdapter(selectId, sortComparer) : createUnsortedStateAdapter(selectId);
  return __spreadValues(__spreadValues(__spreadValues({
    selectId: selectId,
    sortComparer: sortComparer
  }, stateFactory), selectorsFactory), stateAdapter);
} // src/nanoid.ts


var urlAlphabet = "ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW";

var nanoid = function nanoid(size) {
  if (size === void 0) {
    size = 21;
  }

  var id = "";
  var i = size;

  while (i--) {
    id += urlAlphabet[Math.random() * 64 | 0];
  }

  return id;
}; // src/createAsyncThunk.ts


var commonProperties = ["name", "message", "stack", "code"];

var RejectWithValue =
/** @class */
function () {
  function RejectWithValue(payload, meta) {
    this.payload = payload;
    this.meta = meta;
  }

  return RejectWithValue;
}();

var FulfillWithMeta =
/** @class */
function () {
  function FulfillWithMeta(payload, meta) {
    this.payload = payload;
    this.meta = meta;
  }

  return FulfillWithMeta;
}();

var miniSerializeError = function miniSerializeError(value) {
  if (typeof value === "object" && value !== null) {
    var simpleError = {};

    for (var _i = 0, commonProperties_1 = commonProperties; _i < commonProperties_1.length; _i++) {
      var property = commonProperties_1[_i];

      if (typeof value[property] === "string") {
        simpleError[property] = value[property];
      }
    }

    return simpleError;
  }

  return {
    message: String(value)
  };
};

function createAsyncThunk(typePrefix, payloadCreator, options) {
  var fulfilled = createAction(typePrefix + "/fulfilled", function (payload, requestId, arg, meta) {
    return {
      payload: payload,
      meta: __spreadProps(__spreadValues({}, meta || {}), {
        arg: arg,
        requestId: requestId,
        requestStatus: "fulfilled"
      })
    };
  });
  var pending = createAction(typePrefix + "/pending", function (requestId, arg, meta) {
    return {
      payload: void 0,
      meta: __spreadProps(__spreadValues({}, meta || {}), {
        arg: arg,
        requestId: requestId,
        requestStatus: "pending"
      })
    };
  });
  var rejected = createAction(typePrefix + "/rejected", function (error, requestId, arg, payload, meta) {
    return {
      payload: payload,
      error: (options && options.serializeError || miniSerializeError)(error || "Rejected"),
      meta: __spreadProps(__spreadValues({}, meta || {}), {
        arg: arg,
        requestId: requestId,
        rejectedWithValue: !!payload,
        requestStatus: "rejected",
        aborted: (error == null ? void 0 : error.name) === "AbortError",
        condition: (error == null ? void 0 : error.name) === "ConditionError"
      })
    };
  });
  var displayedWarning = false;
  var AC = typeof AbortController !== "undefined" ? AbortController :
  /** @class */
  function () {
    function class_1() {
      this.signal = {
        aborted: false,
        addEventListener: function addEventListener() {},
        dispatchEvent: function dispatchEvent() {
          return false;
        },
        onabort: function onabort() {},
        removeEventListener: function removeEventListener() {}
      };
    }

    class_1.prototype.abort = function () {
      if (false) {}
    };

    return class_1;
  }();

  function actionCreator(arg) {
    return function (dispatch, getState, extra) {
      var requestId = (options == null ? void 0 : options.idGenerator) ? options.idGenerator(arg) : nanoid();
      var abortController = new AC();
      var abortReason;
      var abortedPromise = new Promise(function (_, reject) {
        return abortController.signal.addEventListener("abort", function () {
          return reject({
            name: "AbortError",
            message: abortReason || "Aborted"
          });
        });
      });
      var started = false;

      function abort(reason) {
        if (started) {
          abortReason = reason;
          abortController.abort();
        }
      }

      var promise = function () {
        return __async(this, null, function () {
          var _a, _b, finalAction, conditionResult, err_1, skipDispatch;

          return __generator(this, function (_c) {
            switch (_c.label) {
              case 0:
                _c.trys.push([0, 4,, 5]);

                conditionResult = (_a = options == null ? void 0 : options.condition) == null ? void 0 : _a.call(options, arg, {
                  getState: getState,
                  extra: extra
                });
                if (!isThenable(conditionResult)) return [3
                /*break*/
                , 2];
                return [4
                /*yield*/
                , conditionResult];

              case 1:
                conditionResult = _c.sent();
                _c.label = 2;

              case 2:
                if (conditionResult === false) {
                  throw {
                    name: "ConditionError",
                    message: "Aborted due to condition callback returning false."
                  };
                }

                started = true;
                dispatch(pending(requestId, arg, (_b = options == null ? void 0 : options.getPendingMeta) == null ? void 0 : _b.call(options, {
                  requestId: requestId,
                  arg: arg
                }, {
                  getState: getState,
                  extra: extra
                })));
                return [4
                /*yield*/
                , Promise.race([abortedPromise, Promise.resolve(payloadCreator(arg, {
                  dispatch: dispatch,
                  getState: getState,
                  extra: extra,
                  requestId: requestId,
                  signal: abortController.signal,
                  rejectWithValue: function rejectWithValue(value, meta) {
                    return new RejectWithValue(value, meta);
                  },
                  fulfillWithValue: function fulfillWithValue(value, meta) {
                    return new FulfillWithMeta(value, meta);
                  }
                })).then(function (result) {
                  if (result instanceof RejectWithValue) {
                    throw result;
                  }

                  if (result instanceof FulfillWithMeta) {
                    return fulfilled(result.payload, requestId, arg, result.meta);
                  }

                  return fulfilled(result, requestId, arg);
                })])];

              case 3:
                finalAction = _c.sent();
                return [3
                /*break*/
                , 5];

              case 4:
                err_1 = _c.sent();
                finalAction = err_1 instanceof RejectWithValue ? rejected(null, requestId, arg, err_1.payload, err_1.meta) : rejected(err_1, requestId, arg);
                return [3
                /*break*/
                , 5];

              case 5:
                skipDispatch = options && !options.dispatchConditionRejection && rejected.match(finalAction) && finalAction.meta.condition;

                if (!skipDispatch) {
                  dispatch(finalAction);
                }

                return [2
                /*return*/
                , finalAction];
            }
          });
        });
      }();

      return Object.assign(promise, {
        abort: abort,
        requestId: requestId,
        arg: arg,
        unwrap: function unwrap() {
          return promise.then(unwrapResult);
        }
      });
    };
  }

  return Object.assign(actionCreator, {
    pending: pending,
    rejected: rejected,
    fulfilled: fulfilled,
    typePrefix: typePrefix
  });
}

function unwrapResult(action) {
  if (action.meta && action.meta.rejectedWithValue) {
    throw action.payload;
  }

  if (action.error) {
    throw action.error;
  }

  return action.payload;
}

function isThenable(value) {
  return value !== null && typeof value === "object" && typeof value.then === "function";
} // src/tsHelpers.ts


var hasMatchFunction = function hasMatchFunction(v) {
  return v && typeof v.match === "function";
}; // src/matchers.ts


var matches = function matches(matcher, action) {
  if (hasMatchFunction(matcher)) {
    return matcher.match(action);
  } else {
    return matcher(action);
  }
};

function isAnyOf() {
  var matchers = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    matchers[_i] = arguments[_i];
  }

  return function (action) {
    return matchers.some(function (matcher) {
      return matches(matcher, action);
    });
  };
}

function isAllOf() {
  var matchers = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    matchers[_i] = arguments[_i];
  }

  return function (action) {
    return matchers.every(function (matcher) {
      return matches(matcher, action);
    });
  };
}

function hasExpectedRequestMetadata(action, validStatus) {
  if (!action || !action.meta) return false;
  var hasValidRequestId = typeof action.meta.requestId === "string";
  var hasValidRequestStatus = validStatus.indexOf(action.meta.requestStatus) > -1;
  return hasValidRequestId && hasValidRequestStatus;
}

function isAsyncThunkArray(a) {
  return typeof a[0] === "function" && "pending" in a[0] && "fulfilled" in a[0] && "rejected" in a[0];
}

function isPending() {
  var asyncThunks = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    asyncThunks[_i] = arguments[_i];
  }

  if (asyncThunks.length === 0) {
    return function (action) {
      return hasExpectedRequestMetadata(action, ["pending"]);
    };
  }

  if (!isAsyncThunkArray(asyncThunks)) {
    return isPending()(asyncThunks[0]);
  }

  return function (action) {
    var matchers = asyncThunks.map(function (asyncThunk) {
      return asyncThunk.pending;
    });
    var combinedMatcher = isAnyOf.apply(void 0, matchers);
    return combinedMatcher(action);
  };
}

function isRejected() {
  var asyncThunks = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    asyncThunks[_i] = arguments[_i];
  }

  if (asyncThunks.length === 0) {
    return function (action) {
      return hasExpectedRequestMetadata(action, ["rejected"]);
    };
  }

  if (!isAsyncThunkArray(asyncThunks)) {
    return isRejected()(asyncThunks[0]);
  }

  return function (action) {
    var matchers = asyncThunks.map(function (asyncThunk) {
      return asyncThunk.rejected;
    });
    var combinedMatcher = isAnyOf.apply(void 0, matchers);
    return combinedMatcher(action);
  };
}

function isRejectedWithValue() {
  var asyncThunks = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    asyncThunks[_i] = arguments[_i];
  }

  var hasFlag = function hasFlag(action) {
    return action && action.meta && action.meta.rejectedWithValue;
  };

  if (asyncThunks.length === 0) {
    return function (action) {
      var combinedMatcher = isAllOf(isRejected.apply(void 0, asyncThunks), hasFlag);
      return combinedMatcher(action);
    };
  }

  if (!isAsyncThunkArray(asyncThunks)) {
    return isRejectedWithValue()(asyncThunks[0]);
  }

  return function (action) {
    var combinedMatcher = isAllOf(isRejected.apply(void 0, asyncThunks), hasFlag);
    return combinedMatcher(action);
  };
}

function isFulfilled() {
  var asyncThunks = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    asyncThunks[_i] = arguments[_i];
  }

  if (asyncThunks.length === 0) {
    return function (action) {
      return hasExpectedRequestMetadata(action, ["fulfilled"]);
    };
  }

  if (!isAsyncThunkArray(asyncThunks)) {
    return isFulfilled()(asyncThunks[0]);
  }

  return function (action) {
    var matchers = asyncThunks.map(function (asyncThunk) {
      return asyncThunk.fulfilled;
    });
    var combinedMatcher = isAnyOf.apply(void 0, matchers);
    return combinedMatcher(action);
  };
}

function isAsyncThunkAction() {
  var asyncThunks = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    asyncThunks[_i] = arguments[_i];
  }

  if (asyncThunks.length === 0) {
    return function (action) {
      return hasExpectedRequestMetadata(action, ["pending", "fulfilled", "rejected"]);
    };
  }

  if (!isAsyncThunkArray(asyncThunks)) {
    return isAsyncThunkAction()(asyncThunks[0]);
  }

  return function (action) {
    var matchers = [];

    for (var _i = 0, asyncThunks_1 = asyncThunks; _i < asyncThunks_1.length; _i++) {
      var asyncThunk = asyncThunks_1[_i];
      matchers.push(asyncThunk.pending, asyncThunk.rejected, asyncThunk.fulfilled);
    }

    var combinedMatcher = isAnyOf.apply(void 0, matchers);
    return combinedMatcher(action);
  };
} // src/listenerMiddleware/utils.ts


var assertFunction = function assertFunction(func, expected) {
  if (typeof func !== "function") {
    throw new TypeError(expected + " is not a function");
  }
};

var noop = function noop() {};

var catchRejection = function catchRejection(promise, onError) {
  if (onError === void 0) {
    onError = noop;
  }

  promise.catch(onError);
  return promise;
};

var addAbortSignalListener = function addAbortSignalListener(abortSignal, callback) {
  abortSignal.addEventListener("abort", callback, {
    once: true
  });
};

var abortControllerWithReason = function abortControllerWithReason(abortController, reason) {
  var signal = abortController.signal;

  if (signal.aborted) {
    return;
  }

  if (!("reason" in signal)) {
    Object.defineProperty(signal, "reason", {
      enumerable: true,
      value: reason,
      configurable: true,
      writable: true
    });
  }

  ;
  abortController.abort(reason);
}; // src/listenerMiddleware/exceptions.ts


var task = "task";
var listener = "listener";
var completed = "completed";
var cancelled = "cancelled";
var taskCancelled = "task-" + cancelled;
var taskCompleted = "task-" + completed;
var listenerCancelled = listener + "-" + cancelled;
var listenerCompleted = listener + "-" + completed;

var TaskAbortError =
/** @class */
function () {
  function TaskAbortError(code) {
    this.code = code;
    this.name = "TaskAbortError";
    this.message = task + " " + cancelled + " (reason: " + code + ")";
  }

  return TaskAbortError;
}(); // src/listenerMiddleware/task.ts


var validateActive = function validateActive(signal) {
  if (signal.aborted) {
    throw new TaskAbortError(signal.reason);
  }
};

var promisifyAbortSignal = function promisifyAbortSignal(signal) {
  return catchRejection(new Promise(function (_, reject) {
    var notifyRejection = function notifyRejection() {
      return reject(new TaskAbortError(signal.reason));
    };

    if (signal.aborted) {
      notifyRejection();
    } else {
      addAbortSignalListener(signal, notifyRejection);
    }
  }));
};

var runTask = function runTask(task2, cleanUp) {
  return __async(void 0, null, function () {
    var value, error_1;
    return __generator(this, function (_c) {
      switch (_c.label) {
        case 0:
          _c.trys.push([0, 3, 4, 5]);

          return [4
          /*yield*/
          , Promise.resolve()];

        case 1:
          _c.sent();

          return [4
          /*yield*/
          , task2()];

        case 2:
          value = _c.sent();
          return [2
          /*return*/
          , {
            status: "ok",
            value: value
          }];

        case 3:
          error_1 = _c.sent();
          return [2
          /*return*/
          , {
            status: error_1 instanceof TaskAbortError ? "cancelled" : "rejected",
            error: error_1
          }];

        case 4:
          cleanUp == null ? void 0 : cleanUp();
          return [7
          /*endfinally*/
          ];

        case 5:
          return [2
          /*return*/
          ];
      }
    });
  });
};

var createPause = function createPause(signal) {
  return function (promise) {
    return catchRejection(Promise.race([promisifyAbortSignal(signal), promise]).then(function (output) {
      validateActive(signal);
      return output;
    }));
  };
};

var createDelay = function createDelay(signal) {
  var pause = createPause(signal);
  return function (timeoutMs) {
    return pause(new Promise(function (resolve) {
      return setTimeout(resolve, timeoutMs);
    }));
  };
}; // src/listenerMiddleware/index.ts


var redux_toolkit_esm_assign = Object.assign;
var INTERNAL_NIL_TOKEN = {};
var alm = "listenerMiddleware";

var createFork = function createFork(parentAbortSignal) {
  var linkControllers = function linkControllers(controller) {
    return addAbortSignalListener(parentAbortSignal, function () {
      return abortControllerWithReason(controller, parentAbortSignal.reason);
    });
  };

  return function (taskExecutor) {
    assertFunction(taskExecutor, "taskExecutor");
    var childAbortController = new AbortController();
    linkControllers(childAbortController);
    var result = runTask(function () {
      return __async(void 0, null, function () {
        var result2;
        return __generator(this, function (_c) {
          switch (_c.label) {
            case 0:
              validateActive(parentAbortSignal);
              validateActive(childAbortController.signal);
              return [4
              /*yield*/
              , taskExecutor({
                pause: createPause(childAbortController.signal),
                delay: createDelay(childAbortController.signal),
                signal: childAbortController.signal
              })];

            case 1:
              result2 = _c.sent();
              validateActive(childAbortController.signal);
              return [2
              /*return*/
              , result2];
          }
        });
      });
    }, function () {
      return abortControllerWithReason(childAbortController, taskCompleted);
    });
    return {
      result: createPause(parentAbortSignal)(result),
      cancel: function cancel() {
        abortControllerWithReason(childAbortController, taskCancelled);
      }
    };
  };
};

var createTakePattern = function createTakePattern(startListening, signal) {
  var take = function take(predicate, timeout) {
    return __async(void 0, null, function () {
      var unsubscribe, tuplePromise, promises, output;
      return __generator(this, function (_c) {
        switch (_c.label) {
          case 0:
            validateActive(signal);

            unsubscribe = function unsubscribe() {};

            tuplePromise = new Promise(function (resolve) {
              unsubscribe = startListening({
                predicate: predicate,
                effect: function effect(action, listenerApi) {
                  listenerApi.unsubscribe();
                  resolve([action, listenerApi.getState(), listenerApi.getOriginalState()]);
                }
              });
            });
            promises = [promisifyAbortSignal(signal), tuplePromise];

            if (timeout != null) {
              promises.push(new Promise(function (resolve) {
                return setTimeout(resolve, timeout, null);
              }));
            }

            _c.label = 1;

          case 1:
            _c.trys.push([1,, 3, 4]);

            return [4
            /*yield*/
            , Promise.race(promises)];

          case 2:
            output = _c.sent();
            validateActive(signal);
            return [2
            /*return*/
            , output];

          case 3:
            unsubscribe();
            return [7
            /*endfinally*/
            ];

          case 4:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  return function (predicate, timeout) {
    return catchRejection(take(predicate, timeout));
  };
};

var getListenerEntryPropsFrom = function getListenerEntryPropsFrom(options) {
  var type = options.type,
      actionCreator = options.actionCreator,
      matcher = options.matcher,
      predicate = options.predicate,
      effect = options.effect;

  if (type) {
    predicate = createAction(type).match;
  } else if (actionCreator) {
    type = actionCreator.type;
    predicate = actionCreator.match;
  } else if (matcher) {
    predicate = matcher;
  } else if (predicate) {} else {
    throw new Error("Creating or removing a listener requires one of the known fields for matching an action");
  }

  assertFunction(effect, "options.listener");
  return {
    predicate: predicate,
    type: type,
    effect: effect
  };
};

var createListenerEntry = function createListenerEntry(options) {
  var _c = getListenerEntryPropsFrom(options),
      type = _c.type,
      predicate = _c.predicate,
      effect = _c.effect;

  var id = nanoid();
  var entry = {
    id: id,
    effect: effect,
    type: type,
    predicate: predicate,
    pending: new Set(),
    unsubscribe: function unsubscribe() {
      throw new Error("Unsubscribe not initialized");
    }
  };
  return entry;
};

var createClearListenerMiddleware = function createClearListenerMiddleware(listenerMap) {
  return function () {
    listenerMap.forEach(cancelActiveListeners);
    listenerMap.clear();
  };
};

var safelyNotifyError = function safelyNotifyError(errorHandler, errorToNotify, errorInfo) {
  try {
    errorHandler(errorToNotify, errorInfo);
  } catch (errorHandlerError) {
    setTimeout(function () {
      throw errorHandlerError;
    }, 0);
  }
};

var addListener = createAction(alm + "/add");
var clearAllListeners = createAction(alm + "/removeAll");
var removeListener = createAction(alm + "/remove");

var defaultErrorHandler = function defaultErrorHandler() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  console.error.apply(console, __spreadArray([alm + "/error"], args));
};

var cancelActiveListeners = function cancelActiveListeners(entry) {
  entry.pending.forEach(function (controller) {
    abortControllerWithReason(controller, listenerCancelled);
  });
};

function createListenerMiddleware(middlewareOptions) {
  var _this = this;

  if (middlewareOptions === void 0) {
    middlewareOptions = {};
  }

  var listenerMap = new Map();
  var extra = middlewareOptions.extra,
      _c = middlewareOptions.onError,
      onError = _c === void 0 ? defaultErrorHandler : _c;
  assertFunction(onError, "onError");

  var insertEntry = function insertEntry(entry) {
    entry.unsubscribe = function () {
      return listenerMap.delete(entry.id);
    };

    listenerMap.set(entry.id, entry);
    return function (cancelOptions) {
      entry.unsubscribe();

      if (cancelOptions == null ? void 0 : cancelOptions.cancelActive) {
        cancelActiveListeners(entry);
      }
    };
  };

  var findListenerEntry = function findListenerEntry(comparator) {
    for (var _i = 0, _c = Array.from(listenerMap.values()); _i < _c.length; _i++) {
      var entry = _c[_i];

      if (comparator(entry)) {
        return entry;
      }
    }

    return void 0;
  };

  var startListening = function startListening(options) {
    var entry = findListenerEntry(function (existingEntry) {
      return existingEntry.effect === options.effect;
    });

    if (!entry) {
      entry = createListenerEntry(options);
    }

    return insertEntry(entry);
  };

  var stopListening = function stopListening(options) {
    var _c = getListenerEntryPropsFrom(options),
        type = _c.type,
        effect = _c.effect,
        predicate = _c.predicate;

    var entry = findListenerEntry(function (entry2) {
      var matchPredicateOrType = typeof type === "string" ? entry2.type === type : entry2.predicate === predicate;
      return matchPredicateOrType && entry2.effect === effect;
    });

    if (entry) {
      entry.unsubscribe();

      if (options.cancelActive) {
        cancelActiveListeners(entry);
      }
    }

    return !!entry;
  };

  var notifyListener = function notifyListener(entry, action, api, getOriginalState) {
    return __async(_this, null, function () {
      var internalTaskController, take, listenerError_1;
      return __generator(this, function (_c) {
        switch (_c.label) {
          case 0:
            internalTaskController = new AbortController();
            take = createTakePattern(startListening, internalTaskController.signal);
            _c.label = 1;

          case 1:
            _c.trys.push([1, 3, 4, 5]);

            entry.pending.add(internalTaskController);
            return [4
            /*yield*/
            , Promise.resolve(entry.effect(action, redux_toolkit_esm_assign({}, api, {
              getOriginalState: getOriginalState,
              condition: function condition(predicate, timeout) {
                return take(predicate, timeout).then(Boolean);
              },
              take: take,
              delay: createDelay(internalTaskController.signal),
              pause: createPause(internalTaskController.signal),
              extra: extra,
              signal: internalTaskController.signal,
              fork: createFork(internalTaskController.signal),
              unsubscribe: entry.unsubscribe,
              subscribe: function subscribe() {
                listenerMap.set(entry.id, entry);
              },
              cancelActiveListeners: function cancelActiveListeners() {
                entry.pending.forEach(function (controller, _, set) {
                  if (controller !== internalTaskController) {
                    abortControllerWithReason(controller, listenerCancelled);
                    set.delete(controller);
                  }
                });
              }
            })))];

          case 2:
            _c.sent();

            return [3
            /*break*/
            , 5];

          case 3:
            listenerError_1 = _c.sent();

            if (!(listenerError_1 instanceof TaskAbortError)) {
              safelyNotifyError(onError, listenerError_1, {
                raisedBy: "effect"
              });
            }

            return [3
            /*break*/
            , 5];

          case 4:
            abortControllerWithReason(internalTaskController, listenerCompleted);
            entry.pending.delete(internalTaskController);
            return [7
            /*endfinally*/
            ];

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  var clearListenerMiddleware = createClearListenerMiddleware(listenerMap);

  var middleware = function middleware(api) {
    return function (next) {
      return function (action) {
        if (addListener.match(action)) {
          return startListening(action.payload);
        }

        if (clearAllListeners.match(action)) {
          clearListenerMiddleware();
          return;
        }

        if (removeListener.match(action)) {
          return stopListening(action.payload);
        }

        var originalState = api.getState();

        var getOriginalState = function getOriginalState() {
          if (originalState === INTERNAL_NIL_TOKEN) {
            throw new Error(alm + ": getOriginalState can only be called synchronously");
          }

          return originalState;
        };

        var result;

        try {
          result = next(action);

          if (listenerMap.size > 0) {
            var currentState = api.getState();
            var listenerEntries = Array.from(listenerMap.values());

            for (var _i = 0, listenerEntries_1 = listenerEntries; _i < listenerEntries_1.length; _i++) {
              var entry = listenerEntries_1[_i];
              var runListener = false;

              try {
                runListener = entry.predicate(action, currentState, originalState);
              } catch (predicateError) {
                runListener = false;
                safelyNotifyError(onError, predicateError, {
                  raisedBy: "predicate"
                });
              }

              if (!runListener) {
                continue;
              }

              notifyListener(entry, action, api, getOriginalState);
            }
          }
        } finally {
          originalState = INTERNAL_NIL_TOKEN;
        }

        return result;
      };
    };
  };

  return {
    middleware: middleware,
    startListening: startListening,
    stopListening: stopListening,
    clearListeners: clearListenerMiddleware
  };
} // src/index.ts


N();

// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 20 modules
var react_redux_es = __webpack_require__(364);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(7462);
;// CONCATENATED MODULE: ./node_modules/history/index.js

/**
 * Actions represent the type of change to a location value.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#action
 */

var Action;

(function (Action) {
  /**
   * A POP indicates a change to an arbitrary index in the history stack, such
   * as a back or forward navigation. It does not describe the direction of the
   * navigation, only that the current index changed.
   *
   * Note: This is the default action for newly created history objects.
   */
  Action["Pop"] = "POP";
  /**
   * A PUSH indicates a new entry being added to the history stack, such as when
   * a link is clicked and a new page loads. When this happens, all subsequent
   * entries in the stack are lost.
   */

  Action["Push"] = "PUSH";
  /**
   * A REPLACE indicates the entry at the current index in the history stack
   * being replaced by a new one.
   */

  Action["Replace"] = "REPLACE";
})(Action || (Action = {}));

var readOnly =  false ? 0 : function (obj) {
  return obj;
};

function history_warning(cond, message) {
  if (!cond) {
    // eslint-disable-next-line no-console
    if (typeof console !== 'undefined') console.warn(message);

    try {
      // Welcome to debugging history!
      //
      // This error is thrown as a convenience so you can more easily
      // find the source for a warning that appears in the console by
      // enabling "pause on exceptions" in your JavaScript debugger.
      throw new Error(message); // eslint-disable-next-line no-empty
    } catch (e) {}
  }
}

var BeforeUnloadEventType = 'beforeunload';
var HashChangeEventType = 'hashchange';
var PopStateEventType = 'popstate';
/**
 * Browser history stores the location in regular URLs. This is the standard for
 * most web apps, but it requires some configuration on the server to ensure you
 * serve the same app at multiple URLs.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory
 */

function createBrowserHistory(options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$window = _options.window,
      window = _options$window === void 0 ? document.defaultView : _options$window;
  var globalHistory = window.history;

  function getIndexAndLocation() {
    var _window$location = window.location,
        pathname = _window$location.pathname,
        search = _window$location.search,
        hash = _window$location.hash;
    var state = globalHistory.state || {};
    return [state.idx, readOnly({
      pathname: pathname,
      search: search,
      hash: hash,
      state: state.usr || null,
      key: state.key || 'default'
    })];
  }

  var blockedPopTx = null;

  function handlePop() {
    if (blockedPopTx) {
      blockers.call(blockedPopTx);
      blockedPopTx = null;
    } else {
      var nextAction = Action.Pop;

      var _getIndexAndLocation = getIndexAndLocation(),
          nextIndex = _getIndexAndLocation[0],
          nextLocation = _getIndexAndLocation[1];

      if (blockers.length) {
        if (nextIndex != null) {
          var delta = index - nextIndex;

          if (delta) {
            // Revert the POP
            blockedPopTx = {
              action: nextAction,
              location: nextLocation,
              retry: function retry() {
                go(delta * -1);
              }
            };
            go(delta);
          }
        } else {
          // Trying to POP to a location with no index. We did not create
          // this location, so we can't effectively block the navigation.
           false ? 0 : void 0;
        }
      } else {
        applyTx(nextAction);
      }
    }
  }

  window.addEventListener(PopStateEventType, handlePop);
  var action = Action.Pop;

  var _getIndexAndLocation2 = getIndexAndLocation(),
      index = _getIndexAndLocation2[0],
      location = _getIndexAndLocation2[1];

  var listeners = createEvents();
  var blockers = createEvents();

  if (index == null) {
    index = 0;
    globalHistory.replaceState((0,esm_extends/* default */.Z)({}, globalHistory.state, {
      idx: index
    }), '');
  }

  function createHref(to) {
    return typeof to === 'string' ? to : createPath(to);
  } // state defaults to `null` because `window.history.state` does


  function getNextLocation(to, state) {
    if (state === void 0) {
      state = null;
    }

    return readOnly((0,esm_extends/* default */.Z)({
      pathname: location.pathname,
      hash: '',
      search: ''
    }, typeof to === 'string' ? history_parsePath(to) : to, {
      state: state,
      key: createKey()
    }));
  }

  function getHistoryStateAndUrl(nextLocation, index) {
    return [{
      usr: nextLocation.state,
      key: nextLocation.key,
      idx: index
    }, createHref(nextLocation)];
  }

  function allowTx(action, location, retry) {
    return !blockers.length || (blockers.call({
      action: action,
      location: location,
      retry: retry
    }), false);
  }

  function applyTx(nextAction) {
    action = nextAction;

    var _getIndexAndLocation3 = getIndexAndLocation();

    index = _getIndexAndLocation3[0];
    location = _getIndexAndLocation3[1];
    listeners.call({
      action: action,
      location: location
    });
  }

  function push(to, state) {
    var nextAction = Action.Push;
    var nextLocation = getNextLocation(to, state);

    function retry() {
      push(to, state);
    }

    if (allowTx(nextAction, nextLocation, retry)) {
      var _getHistoryStateAndUr = getHistoryStateAndUrl(nextLocation, index + 1),
          historyState = _getHistoryStateAndUr[0],
          url = _getHistoryStateAndUr[1]; // TODO: Support forced reloading
      // try...catch because iOS limits us to 100 pushState calls :/


      try {
        globalHistory.pushState(historyState, '', url);
      } catch (error) {
        // They are going to lose state here, but there is no real
        // way to warn them about it since the page will refresh...
        window.location.assign(url);
      }

      applyTx(nextAction);
    }
  }

  function replace(to, state) {
    var nextAction = Action.Replace;
    var nextLocation = getNextLocation(to, state);

    function retry() {
      replace(to, state);
    }

    if (allowTx(nextAction, nextLocation, retry)) {
      var _getHistoryStateAndUr2 = getHistoryStateAndUrl(nextLocation, index),
          historyState = _getHistoryStateAndUr2[0],
          url = _getHistoryStateAndUr2[1]; // TODO: Support forced reloading


      globalHistory.replaceState(historyState, '', url);
      applyTx(nextAction);
    }
  }

  function go(delta) {
    globalHistory.go(delta);
  }

  var history = {
    get action() {
      return action;
    },

    get location() {
      return location;
    },

    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    back: function back() {
      go(-1);
    },
    forward: function forward() {
      go(1);
    },
    listen: function listen(listener) {
      return listeners.push(listener);
    },
    block: function block(blocker) {
      var unblock = blockers.push(blocker);

      if (blockers.length === 1) {
        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);
      }

      return function () {
        unblock(); // Remove the beforeunload listener so the document may
        // still be salvageable in the pagehide event.
        // See https://html.spec.whatwg.org/#unloading-documents

        if (!blockers.length) {
          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);
        }
      };
    }
  };
  return history;
}
/**
 * Hash history stores the location in window.location.hash. This makes it ideal
 * for situations where you don't want to send the location to the server for
 * some reason, either because you do cannot configure it or the URL space is
 * reserved for something else.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory
 */


function createHashHistory(options) {
  if (options === void 0) {
    options = {};
  }

  var _options2 = options,
      _options2$window = _options2.window,
      window = _options2$window === void 0 ? document.defaultView : _options2$window;
  var globalHistory = window.history;

  function getIndexAndLocation() {
    var _parsePath = history_parsePath(window.location.hash.substr(1)),
        _parsePath$pathname = _parsePath.pathname,
        pathname = _parsePath$pathname === void 0 ? '/' : _parsePath$pathname,
        _parsePath$search = _parsePath.search,
        search = _parsePath$search === void 0 ? '' : _parsePath$search,
        _parsePath$hash = _parsePath.hash,
        hash = _parsePath$hash === void 0 ? '' : _parsePath$hash;

    var state = globalHistory.state || {};
    return [state.idx, readOnly({
      pathname: pathname,
      search: search,
      hash: hash,
      state: state.usr || null,
      key: state.key || 'default'
    })];
  }

  var blockedPopTx = null;

  function handlePop() {
    if (blockedPopTx) {
      blockers.call(blockedPopTx);
      blockedPopTx = null;
    } else {
      var nextAction = Action.Pop;

      var _getIndexAndLocation4 = getIndexAndLocation(),
          nextIndex = _getIndexAndLocation4[0],
          nextLocation = _getIndexAndLocation4[1];

      if (blockers.length) {
        if (nextIndex != null) {
          var delta = index - nextIndex;

          if (delta) {
            // Revert the POP
            blockedPopTx = {
              action: nextAction,
              location: nextLocation,
              retry: function retry() {
                go(delta * -1);
              }
            };
            go(delta);
          }
        } else {
          // Trying to POP to a location with no index. We did not create
          // this location, so we can't effectively block the navigation.
           false ? 0 : void 0;
        }
      } else {
        applyTx(nextAction);
      }
    }
  }

  window.addEventListener(PopStateEventType, handlePop); // popstate does not fire on hashchange in IE 11 and old (trident) Edge
  // https://developer.mozilla.org/de/docs/Web/API/Window/popstate_event

  window.addEventListener(HashChangeEventType, function () {
    var _getIndexAndLocation5 = getIndexAndLocation(),
        nextLocation = _getIndexAndLocation5[1]; // Ignore extraneous hashchange events.


    if (createPath(nextLocation) !== createPath(location)) {
      handlePop();
    }
  });
  var action = Action.Pop;

  var _getIndexAndLocation6 = getIndexAndLocation(),
      index = _getIndexAndLocation6[0],
      location = _getIndexAndLocation6[1];

  var listeners = createEvents();
  var blockers = createEvents();

  if (index == null) {
    index = 0;
    globalHistory.replaceState(_extends({}, globalHistory.state, {
      idx: index
    }), '');
  }

  function getBaseHref() {
    var base = document.querySelector('base');
    var href = '';

    if (base && base.getAttribute('href')) {
      var url = window.location.href;
      var hashIndex = url.indexOf('#');
      href = hashIndex === -1 ? url : url.slice(0, hashIndex);
    }

    return href;
  }

  function createHref(to) {
    return getBaseHref() + '#' + (typeof to === 'string' ? to : createPath(to));
  }

  function getNextLocation(to, state) {
    if (state === void 0) {
      state = null;
    }

    return readOnly(_extends({
      pathname: location.pathname,
      hash: '',
      search: ''
    }, typeof to === 'string' ? history_parsePath(to) : to, {
      state: state,
      key: createKey()
    }));
  }

  function getHistoryStateAndUrl(nextLocation, index) {
    return [{
      usr: nextLocation.state,
      key: nextLocation.key,
      idx: index
    }, createHref(nextLocation)];
  }

  function allowTx(action, location, retry) {
    return !blockers.length || (blockers.call({
      action: action,
      location: location,
      retry: retry
    }), false);
  }

  function applyTx(nextAction) {
    action = nextAction;

    var _getIndexAndLocation7 = getIndexAndLocation();

    index = _getIndexAndLocation7[0];
    location = _getIndexAndLocation7[1];
    listeners.call({
      action: action,
      location: location
    });
  }

  function push(to, state) {
    var nextAction = Action.Push;
    var nextLocation = getNextLocation(to, state);

    function retry() {
      push(to, state);
    }

     false ? 0 : void 0;

    if (allowTx(nextAction, nextLocation, retry)) {
      var _getHistoryStateAndUr3 = getHistoryStateAndUrl(nextLocation, index + 1),
          historyState = _getHistoryStateAndUr3[0],
          url = _getHistoryStateAndUr3[1]; // TODO: Support forced reloading
      // try...catch because iOS limits us to 100 pushState calls :/


      try {
        globalHistory.pushState(historyState, '', url);
      } catch (error) {
        // They are going to lose state here, but there is no real
        // way to warn them about it since the page will refresh...
        window.location.assign(url);
      }

      applyTx(nextAction);
    }
  }

  function replace(to, state) {
    var nextAction = Action.Replace;
    var nextLocation = getNextLocation(to, state);

    function retry() {
      replace(to, state);
    }

     false ? 0 : void 0;

    if (allowTx(nextAction, nextLocation, retry)) {
      var _getHistoryStateAndUr4 = getHistoryStateAndUrl(nextLocation, index),
          historyState = _getHistoryStateAndUr4[0],
          url = _getHistoryStateAndUr4[1]; // TODO: Support forced reloading


      globalHistory.replaceState(historyState, '', url);
      applyTx(nextAction);
    }
  }

  function go(delta) {
    globalHistory.go(delta);
  }

  var history = {
    get action() {
      return action;
    },

    get location() {
      return location;
    },

    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    back: function back() {
      go(-1);
    },
    forward: function forward() {
      go(1);
    },
    listen: function listen(listener) {
      return listeners.push(listener);
    },
    block: function block(blocker) {
      var unblock = blockers.push(blocker);

      if (blockers.length === 1) {
        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);
      }

      return function () {
        unblock(); // Remove the beforeunload listener so the document may
        // still be salvageable in the pagehide event.
        // See https://html.spec.whatwg.org/#unloading-documents

        if (!blockers.length) {
          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);
        }
      };
    }
  };
  return history;
}
/**
 * Memory history stores the current location in memory. It is designed for use
 * in stateful non-browser environments like tests and React Native.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#creatememoryhistory
 */


function history_createMemoryHistory(options) {
  if (options === void 0) {
    options = {};
  }

  var _options3 = options,
      _options3$initialEntr = _options3.initialEntries,
      initialEntries = _options3$initialEntr === void 0 ? ['/'] : _options3$initialEntr,
      initialIndex = _options3.initialIndex;
  var entries = initialEntries.map(function (entry) {
    var location = readOnly(_extends({
      pathname: '/',
      search: '',
      hash: '',
      state: null,
      key: createKey()
    }, typeof entry === 'string' ? history_parsePath(entry) : entry));
     false ? 0 : void 0;
    return location;
  });
  var index = clamp(initialIndex == null ? entries.length - 1 : initialIndex, 0, entries.length - 1);
  var action = Action.Pop;
  var location = entries[index];
  var listeners = createEvents();
  var blockers = createEvents();

  function createHref(to) {
    return typeof to === 'string' ? to : createPath(to);
  }

  function getNextLocation(to, state) {
    if (state === void 0) {
      state = null;
    }

    return readOnly(_extends({
      pathname: location.pathname,
      search: '',
      hash: ''
    }, typeof to === 'string' ? history_parsePath(to) : to, {
      state: state,
      key: createKey()
    }));
  }

  function allowTx(action, location, retry) {
    return !blockers.length || (blockers.call({
      action: action,
      location: location,
      retry: retry
    }), false);
  }

  function applyTx(nextAction, nextLocation) {
    action = nextAction;
    location = nextLocation;
    listeners.call({
      action: action,
      location: location
    });
  }

  function push(to, state) {
    var nextAction = Action.Push;
    var nextLocation = getNextLocation(to, state);

    function retry() {
      push(to, state);
    }

     false ? 0 : void 0;

    if (allowTx(nextAction, nextLocation, retry)) {
      index += 1;
      entries.splice(index, entries.length, nextLocation);
      applyTx(nextAction, nextLocation);
    }
  }

  function replace(to, state) {
    var nextAction = Action.Replace;
    var nextLocation = getNextLocation(to, state);

    function retry() {
      replace(to, state);
    }

     false ? 0 : void 0;

    if (allowTx(nextAction, nextLocation, retry)) {
      entries[index] = nextLocation;
      applyTx(nextAction, nextLocation);
    }
  }

  function go(delta) {
    var nextIndex = clamp(index + delta, 0, entries.length - 1);
    var nextAction = Action.Pop;
    var nextLocation = entries[nextIndex];

    function retry() {
      go(delta);
    }

    if (allowTx(nextAction, nextLocation, retry)) {
      index = nextIndex;
      applyTx(nextAction, nextLocation);
    }
  }

  var history = {
    get index() {
      return index;
    },

    get action() {
      return action;
    },

    get location() {
      return location;
    },

    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    back: function back() {
      go(-1);
    },
    forward: function forward() {
      go(1);
    },
    listen: function listen(listener) {
      return listeners.push(listener);
    },
    block: function block(blocker) {
      return blockers.push(blocker);
    }
  };
  return history;
} ////////////////////////////////////////////////////////////////////////////////
// UTILS
////////////////////////////////////////////////////////////////////////////////


function clamp(n, lowerBound, upperBound) {
  return Math.min(Math.max(n, lowerBound), upperBound);
}

function promptBeforeUnload(event) {
  // Cancel the event.
  event.preventDefault(); // Chrome (and legacy IE) requires returnValue to be set.

  event.returnValue = '';
}

function createEvents() {
  var handlers = [];
  return {
    get length() {
      return handlers.length;
    },

    push: function push(fn) {
      handlers.push(fn);
      return function () {
        handlers = handlers.filter(function (handler) {
          return handler !== fn;
        });
      };
    },
    call: function call(arg) {
      handlers.forEach(function (fn) {
        return fn && fn(arg);
      });
    }
  };
}

function createKey() {
  return Math.random().toString(36).substr(2, 8);
}
/**
 * Creates a string URL path from the given pathname, search, and hash components.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createpath
 */


function createPath(_ref) {
  var _ref$pathname = _ref.pathname,
      pathname = _ref$pathname === void 0 ? '/' : _ref$pathname,
      _ref$search = _ref.search,
      search = _ref$search === void 0 ? '' : _ref$search,
      _ref$hash = _ref.hash,
      hash = _ref$hash === void 0 ? '' : _ref$hash;
  if (search && search !== '?') pathname += search.charAt(0) === '?' ? search : '?' + search;
  if (hash && hash !== '#') pathname += hash.charAt(0) === '#' ? hash : '#' + hash;
  return pathname;
}
/**
 * Parses a string URL path into its separate pathname, search, and hash components.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#parsepath
 */


function history_parsePath(path) {
  var parsedPath = {};

  if (path) {
    var hashIndex = path.indexOf('#');

    if (hashIndex >= 0) {
      parsedPath.hash = path.substr(hashIndex);
      path = path.substr(0, hashIndex);
    }

    var searchIndex = path.indexOf('?');

    if (searchIndex >= 0) {
      parsedPath.search = path.substr(searchIndex);
      path = path.substr(0, searchIndex);
    }

    if (path) {
      parsedPath.pathname = path;
    }
  }

  return parsedPath;
}


;// CONCATENATED MODULE: ./src/app/hooks.ts
// We want to be able to push to the history state and still have react-router understand what's
// going on. So, we need to create our own history object.
// https://stackoverflow.com/questions/48514773/use-history-push-in-action-creator-with-react-router-v4
var hooks_history=createBrowserHistory();// Use throughout your app instead of plain `useDispatch` and `useSelector`
var useAppDispatch=function useAppDispatch(){return (0,react_redux_es.useDispatch)();};var useAppSelector=react_redux_es.useSelector;/**
 * A wrapper around `createAsyncThunk` that logs to the console
 * when an error is thrown. Errors thrown in thunks created with `createAsyncThunk` are
 * throw silently. (You are expected to catch the `rejected` status to deal with the error.)
 */var createLoggingAsyncThunk=function createLoggingAsyncThunk(typePrefix,payloadCreator){var wrappedPayloadCreator=/*#__PURE__*/function(){var _ref=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee(){var _args=arguments;return regenerator_default().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return payloadCreator.apply(void 0,_args);case 3:return _context.abrupt("return",_context.sent);case 6:_context.prev=6;_context.t0=_context["catch"](0);console.warn(_context.t0);throw _context.t0;case 10:case"end":return _context.stop();}}},_callee,null,[[0,6]]);}));return function wrappedPayloadCreator(){return _ref.apply(this,arguments);};}();return createAsyncThunk(typePrefix,wrappedPayloadCreator);};
;// CONCATENATED MODULE: ./src/utils/extract-content.ts
var extract_content_parser=new DOMParser();/**
 * Extracts the content portion of a page. Useful if a page was loaded asynchronously.
 */function extractPageContent(page){var ret=extract_content_parser.parseFromString(page,"text/html").querySelector(".ptx-content");if(ret==null){throw new Error("Cannot extract the content block from page");}return ret;}/**
 * Extracts the content portion of a knowl. This returns the `<body>` element,
 * the innerHTML of which forms the content.
 */function extractKnowlContent(page){var ret=extract_content_parser.parseFromString(page,"text/html").querySelector("body");if(ret==null){throw new Error("Cannot extract the content block from page");}return ret;}
;// CONCATENATED MODULE: ./src/utils/normalize.ts
/**
 * Normalize a URL removing any query strings or hash information. For example,
 * `foo.html` and `foo.html#bar` are both normalized to `/foo.html`.
 */function normalizeUrl(url){return new URL(url,window.location.href).pathname;}/**
 * Like `normalizeUrl`, but includes the hash
 */function normalizeUrlWithHash(url){var urlObj=new URL(url,window.location.href);return urlObj.pathname+urlObj.hash;}
// EXTERNAL MODULE: ./node_modules/copy-to-clipboard/index.js
var copy_to_clipboard = __webpack_require__(6998);
var copy_to_clipboard_default = /*#__PURE__*/__webpack_require__.n(copy_to_clipboard);
;// CONCATENATED MODULE: ./src/features/toc/tocSlice.ts
var initialState={visible:true};var tocSlice=createSlice({name:"toc",initialState:initialState,// The `reducers` field lets us define reducers and generate associated actions
reducers:{setVisible:function setVisible(state,action){state.visible=action.payload;}}});var tocActions=_objectSpread2({},tocSlice.actions);var selfSelector=function selfSelector(state){return state.toc;};var tocIsVisibleSelector=createDraftSafeSelector(selfSelector,function(state){return state.visible;});
;// CONCATENATED MODULE: ./src/features/global/globalSlice.ts
var globalSlice_initialState={domCaching:true,inMobileMode:false};var globalThunks={/**
     * Set whether viewing is in "mobile mode" (think screen) or not.
     * This has consequences like hiding/showing the TOC.
     */setMobileMode:createLoggingAsyncThunk("global/setMobileMode",/*#__PURE__*/function(){var _ref2=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee(inMobileMode,_ref){var dispatch,getState,state,tocIsVisible;return regenerator_default().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch=_ref.dispatch,getState=_ref.getState;state=getState();globalSlice.actions._setInMobileMode(inMobileMode);tocIsVisible=tocIsVisibleSelector(state);if(tocIsVisible&&inMobileMode){dispatch(tocActions.setVisible(false));}if(!tocIsVisible&&!inMobileMode){dispatch(tocActions.setVisible(true));}dispatch(globalActions._setInMobileMode(inMobileMode));case 7:case"end":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}()),copyToClipboard:createLoggingAsyncThunk("global/copyToClipboard",/*#__PURE__*/function(){var _ref4=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee2(text,_ref3){var dispatch,getState;return regenerator_default().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch=_ref3.dispatch,getState=_ref3.getState;copy_to_clipboard_default()(text);lib/* toastr.success */.Rt.success("Copied to clipboard",text);case 3:case"end":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref4.apply(this,arguments);};}())};var globalSlice=createSlice({name:"global",initialState:globalSlice_initialState,// The `reducers` field lets us define reducers and generate associated actions
reducers:{setDomCaching:function setDomCaching(state,action){state.domCaching=action.payload;},_setInMobileMode:function _setInMobileMode(state,action){state.inMobileMode=action.payload;}}});var globalActions=_objectSpread2(_objectSpread2({},globalSlice.actions),globalThunks);var globalSlice_selfSelector=function selfSelector(state){return state.global;};var domCachingSelector=createDraftSafeSelector(globalSlice_selfSelector,function(state){return state.domCaching;});var inMobileModeSelector=createDraftSafeSelector(globalSlice_selfSelector,function(state){return state.inMobileMode;});
;// CONCATENATED MODULE: ./src/features/nav/map-toc.ts
/**
 * Create a map and inverse map between page URLs and page IDs.
 */function mapToc(toc){// We keep an updated map from ids to urls so we
// don't have to do a deep search on every mouse click.
var pageToUrlMap={};var urlToPageMap={};function traverse(toc){var _iterator=_createForOfIteratorHelper(toc),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var item=_step.value;if(item.id&&item.href){pageToUrlMap[item.id]=item.href;// We keep many variants of the URL, normalized and not for easy lookup.
urlToPageMap[item.href]=item.id;urlToPageMap[normalizeUrlWithHash(item.href)]=item.id;var hashlessUrl=normalizeUrl(item.href);urlToPageMap[hashlessUrl]=urlToPageMap[hashlessUrl]||item.id;}if(item.children){traverse(item.children);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}traverse(toc);return{pageToUrlMap:pageToUrlMap,urlToPageMap:urlToPageMap};}
;// CONCATENATED MODULE: ./src/features/nav/scrollThunks.ts
var lastScrolledTo="";/**
 * Returns the space occupied at the top of the page by header elements + some padding.
 */function getHeaderHeight(){var PADDING=15;var header=document.getElementById("ptx-navbar");if(!header){return 50;}var headerBounds=header.getBoundingClientRect();// If the header is not at the top of the screen, it is probably
// glued to the bottom of the screen. If it's at the bottom, there is no
// need to scroll past it.
if(headerBounds.y>window.innerHeight/2){return PADDING;}return headerBounds.bottom+PADDING;}var previouslyQueued=[];var scrollThunks={/**
     * Scrolls the viewport as needed. E.g., if the page
     * has changed, the viewport is scrolled to the focused element.
     * If the page is the same, the viewport is smooth-scrolled to the
     * desired element. This function may also do some "smart" scrolling in
     * cases where the back button was clicked.
     */scrollViewportIfNeeded:createLoggingAsyncThunk("nav/scrollViewportIfNeededThunk",/*#__PURE__*/function(){var _ref2=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee(_,_ref){var dispatch,getState,doScroll,pageLoadingStatus,_iterator,_step,func;return regenerator_default().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:doScroll=function _doScroll(){var history=historySelector(getState());// Debounce the scroll action if needed.
if(lastScrolledTo===history.current.page+history.current.hash){return;}lastScrolledTo=history.current.page+history.current.hash;// We smooth scroll if we are switching between elements on the same page.
var smoothScroll=history.current.page===history.previous.page;// `hash` starts with "#", but we don't actually want that character included.
var hash=history.current.hash.slice(1);var elm=(hash?document.getElementById(hash):null)||document.querySelector(".ptx-content")||document.body;var y=elm.getBoundingClientRect().top+window.scrollY-getHeaderHeight();// XXX If `window` is not scrollable element, this might break...
window.scrollTo({behavior:smoothScroll?"smooth":"auto",top:y});};dispatch=_ref.dispatch,getState=_ref.getState;pageLoadingStatus=pageLoadingStatusSelector(getState());// If we have made it here, we'd better un-queue any previous scroll requests
_iterator=_createForOfIteratorHelper(previouslyQueued);try{for(_iterator.s();!(_step=_iterator.n()).done;){func=_step.value;queueUntilPageRenderedCancel(func);}}catch(err){_iterator.e(err);}finally{_iterator.f();}previouslyQueued.length=0;if(pageLoadingStatus!=="rendered"){previouslyQueued.push(doScroll);queueUntilPageRendered(doScroll);}else{doScroll();}case 7:case"end":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}())};
;// CONCATENATED MODULE: ./src/features/nav/navSlice.ts
var navSlice_initialState={currentPageId:null,currentPageHash:null,toc:[],pageIdToUrlMap:{},urlToPageIdMap:{},urlCache:{},history:{current:{page:"",hash:""},previous:{page:"",hash:""}},pageLoadingStatus:null};// We want to be able to delay until the first time the toc is set.
// This global promise allows us to wait. It is resolved when `actions.setToc` is
// called for the first time.
var tocIsSetResolve;var tocIsSet=new Promise(function(resolve){tocIsSetResolve=resolve;});var callbacksDelayedUntilPageRendered=[];/**
 * Add a function to a queue of functions that will be called when the current page has the "rendered" status.
 */function queueUntilPageRendered(func){callbacksDelayedUntilPageRendered.push(func);}/**
 * Remove a function to a queue of functions that will be called when the current page has the "rendered" status.
 */function queueUntilPageRenderedCancel(func){var index=callbacksDelayedUntilPageRendered.indexOf(func);if(index>=0){callbacksDelayedUntilPageRendered.splice(index,1);}}// The function below is called a thunk and allows us to perform async logic. It
// can be dispatched like a regular action: `dispatch(navThunks.setCurrentPage("..."))`. This
// will call the thunk with the `dispatch` function as the first argument. Async
// code can then be executed and other actions can be dispatched. Thunks are
// typically used to make async requests.
var navThunks={setCurrentPage:createLoggingAsyncThunk("nav/setCurrentPageThunk",/*#__PURE__*/function(){var _ref2=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee(currentPage,_ref){var dispatch,getState,state,pageToUrlMap;return regenerator_default().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch=_ref.dispatch,getState=_ref.getState;if(currentPage){_context.next=6;break;}dispatch(navSlice.actions._setCurrentPageId(currentPage));_context.next=5;return dispatch(navThunks.updateWindowTitleToMatchPage());case 5:return _context.abrupt("return");case 6:// Retrieve the page
state=navSlice_selfSelector(getState());pageToUrlMap=state.pageIdToUrlMap;// If we've navigated to a new location, push the change to the history.
// We used a non-normalized URL because we want to include hashes, etc.
if(window.location.href!==new URL(pageToUrlMap[currentPage],window.location.href).href){// Pushing to the history will automatically trigger the
// `setCurrentPageByUrl` thunk, which handles the page loading.
hooks_history.push(pageToUrlMap[currentPage]);}case 9:case"end":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}()),setCurrentPageByUrl:createLoggingAsyncThunk("nav/setCurrentPageByUrlThunk",/*#__PURE__*/function(){var _ref4=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee2(targetPageUrl,_ref3){var dispatch,getState,state,urlToPageIdMap,currentPageId,targetUrl,pageHistory;return regenerator_default().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch=_ref3.dispatch,getState=_ref3.getState;if(targetPageUrl){_context2.next=4;break;}dispatch(navSlice.actions._setCurrentPageId(targetPageUrl));return _context2.abrupt("return");case 4:_context2.next=6;return tocIsSet;case 6:state=navSlice_selfSelector(getState());urlToPageIdMap=state.urlToPageIdMap;currentPageId=urlToPageIdMap[normalizeUrlWithHash(targetPageUrl)];if(!currentPageId){currentPageId=urlToPageIdMap[normalizeUrl(targetPageUrl)];}if(currentPageId){_context2.next=12;break;}throw new Error("Failed to find page \"".concat(targetPageUrl,"\" in urlToPageMap"));case 12:// Retrieve the page
dispatch(navActions.setPageLoadingStatus("loading"));_context2.next=15;return dispatch(navThunks.ensurePageCached(currentPageId));case 15:targetUrl=new URL(targetPageUrl,window.location.href);// If we've navigated to a new location, push the change to the history.
if(window.location.href!==targetUrl.href){hooks_history.push(targetUrl.href);}dispatch(navSlice.actions._setPage({page:targetUrl.pathname,hash:targetUrl.hash}));_context2.next=20;return dispatch(navThunks.updateWindowTitleToMatchPage());case 20:// The page may have rendered very quickly. If it did, don't set the status (backwards) to "loaded"
if(pageLoadingStatusSelector(getState())!=="rendered"){dispatch(navActions.setPageLoadingStatus("loaded"));}pageHistory=historySelector(getState());if(pageHistory.current.page===pageHistory.previous.page){dispatch(navActions.setPageLoadingStatus("rendered"));}if(inMobileModeSelector(getState())){// In mobile mode, we always hide the TOC after navigating to a new link.
dispatch(tocActions.setVisible(false));}case 24:case"end":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref4.apply(this,arguments);};}()),ensurePageCached:createLoggingAsyncThunk("nav/ensurePageCached",/*#__PURE__*/function(){var _ref6=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee3(pageId,_ref5){var dispatch,getState,state,pageToUrlMap,urlCache,url,resp,body;return regenerator_default().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch=_ref5.dispatch,getState=_ref5.getState;state=navSlice_selfSelector(getState());pageToUrlMap=state.pageIdToUrlMap,urlCache=state.urlCache;if(pageToUrlMap[pageId]){_context3.next=5;break;}throw new Error("Could not fetch page with id \"".concat(pageId,"\"; could not find corresponding URL."));case 5:// Normalize the URL. For example, `foo.html` and `foo.html#bar` become `/foo.html`
url=normalizeUrl(pageToUrlMap[pageId]);if(!urlCache[url]){_context3.next=10;break;}console.log("Fetch of ".concat(url," is not needed; page already in cache"));_context3.next=19;break;case 10:_context3.next=12;return fetch(url);case 12:resp=_context3.sent;_context3.t0=extractPageContent;_context3.next=16;return resp.text();case 16:_context3.t1=_context3.sent;body=(0,_context3.t0)(_context3.t1).innerHTML;dispatch(navSlice.actions._cacheUrl({url:url,body:body}));case 19:case"end":return _context3.stop();}}},_callee3);}));return function(_x5,_x6){return _ref6.apply(this,arguments);};}()),updateWindowTitleToMatchPage:createLoggingAsyncThunk("nav/updateWindowTitleToMatchPage",/*#__PURE__*/function(){var _ref8=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee4(_,_ref7){var getState,tocEntry;return regenerator_default().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:getState=_ref7.getState;tocEntry=currentPageTopLevelTocInfoSelector(getState());if(tocEntry){_context4.next=4;break;}return _context4.abrupt("return");case 4:document.title=tocEntry.title||"";case 5:case"end":return _context4.stop();}}},_callee4);}));return function(_x7,_x8){return _ref8.apply(this,arguments);};}()),setPageLoadingStatus:createLoggingAsyncThunk("nav/setPageLoadingStatusThunk",function(status,_ref9){var dispatch=_ref9.dispatch;dispatch(navSlice.actions._setPageLoadingStatus(status));if(status==="rendered"){var _iterator=_createForOfIteratorHelper(callbacksDelayedUntilPageRendered),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var func=_step.value;func();}}catch(err){_iterator.e(err);}finally{_iterator.f();}callbacksDelayedUntilPageRendered.length=0;}})};/**
 * Turn a `{page, hash}` object into a string, normalized relative to the current
 * `window.location`.
 */function normalizePageAndHash(_ref10){var _ref10$page=_ref10.page,page=_ref10$page===void 0?"":_ref10$page,_ref10$hash=_ref10.hash,hash=_ref10$hash===void 0?"":_ref10$hash;if(!page&&!hash){return"";}var url=new URL(page||"",window.location.href);url.hash=hash||"";return url.pathname+url.hash;}var navSlice=createSlice({name:"nav",initialState:navSlice_initialState,// The `reducers` field lets us define reducers and generate associated actions
reducers:{/**
         * Sets the current page and pushes to the locally-stored transition history.
         * This allows for careful control of scrolling/non-scrolling etc, when moving
         * between pages.
         *
         * This method should be preferred over `_setCurrentPage` and `_setCurrentPageHash`.
         */_setPage:function _setPage(state,action){var _action$payload=action.payload,page=_action$payload.page,hash=_action$payload.hash;var normalized=normalizePageAndHash({page:page,hash:hash});// Have we changed history states?
if(normalizePageAndHash(state.history.current)!==normalized){state.history.previous=state.history.current;state.history.current={page:page||"",hash:hash||""};}var targetUrl=new URL(normalized,window.location.href);var targetPageId=state.urlToPageIdMap[normalized]||state.urlToPageIdMap[normalizeUrl(normalized)];state.currentPageId=targetPageId;// The URL object inserts a `#` in front of all hashes (if it's empty, the slice doesn't matter)
state.currentPageHash=targetUrl.hash.slice(1);},_setCurrentPageId:function _setCurrentPageId(state,action){state.currentPageId=action.payload;},_setCurrentPageHash:function _setCurrentPageHash(state,action){state.currentPageHash=action.payload;},_setPageLoadingStatus:function _setPageLoadingStatus(state,action){state.pageLoadingStatus=action.payload;},_cacheUrl:function _cacheUrl(state,action){state.urlCache[action.payload.url]=action.payload.body;},setToc:function setToc(state,action){var toc=action.payload;state.toc=toc;// We keep an updated map from ids to urls so we
// don't have to do a deep search on every mouse click.
var _mapToc=mapToc(toc),pageToUrlMap=_mapToc.pageToUrlMap,urlToPageMap=_mapToc.urlToPageMap;state.pageIdToUrlMap=pageToUrlMap;state.urlToPageIdMap=urlToPageMap;// Some thunks might be waiting on the TOC to be set
// before executing. This allows them to execute.
tocIsSetResolve();}}/*
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    extraReducers: (builder) => {
        builder
            .addCase(incrementAsync.pending, (state) => {
                state.status = "loading";
            })
            .addCase(incrementAsync.fulfilled, (state, action) => {
                state.status = "idle";
                state.value += action.payload;
            })
            .addCase(incrementAsync.rejected, (state) => {
                state.status = "failed";
            });
    },
    */});var navActions=_objectSpread2(_objectSpread2(_objectSpread2({},navSlice.actions),navThunks),scrollThunks);var navSlice_selfSelector=function selfSelector(state){return state.nav;};var currentPageIdSelector=createDraftSafeSelector(navSlice_selfSelector,function(state){return state.currentPageId;});/**
 * Return a cached version of the current page, if available. Otherwise an empty
 * string is returned. This cached version contains just the contents of the
 * `<div id="content">...</div>` node.
 */var currentPageContentSelector=createDraftSafeSelector([navSlice_selfSelector,currentPageIdSelector],function(state,currentPage){if(!currentPage){return"";}return state.urlCache[normalizeUrl(state.pageIdToUrlMap[currentPage])]||"";});var tocSelector=createDraftSafeSelector(navSlice_selfSelector,function(state){return state.toc;});var historySelector=createDraftSafeSelector(navSlice_selfSelector,function(state){return state.history;});var pageLoadingStatusSelector=createDraftSafeSelector(navSlice_selfSelector,function(state){return state.pageLoadingStatus;});/**
 * Return the top-level TocEntry corresponding to the currently active page.
 * If the currently active page is a subsection, the parent section's title is returned.
 */var currentPageTopLevelTocInfoSelector=createDraftSafeSelector([currentPageIdSelector,tocSelector],function(currentPage,toc){// Recursively search the table of contents for an entry
// with id matching the currently active page.
function recursiveFind(toc){var _iterator2=_createForOfIteratorHelper(toc),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var entry=_step2.value;if(entry.id===currentPage||entry.children&&recursiveFind(entry.children)){return entry;}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return null;}return recursiveFind(toc);});/**
 * Return the TOC entries for the next/prev/up navigation directions
 * relative to the current page.
 */var nextPrevParentSelector=createDraftSafeSelector([currentPageIdSelector,tocSelector],function(currentPage,toc){var prev=null,next=null,up=null;if(!currentPage){return{prev:prev,next:next,up:up};}var currentTocEntry=findTocItemById(toc,currentPage);if(!currentTocEntry){return{prev:prev,next:next,up:up};}var currentBaseUrl=normalizeUrl(currentTocEntry.href||"");// We only care about the items with a different URL.
var flatToc=flattenToc(toc).filter(function(entry){return normalizeUrl(entry.href||"")!==currentBaseUrl||entry===currentTocEntry;});var currentPageIndex=flatToc.findIndex(function(entry){return entry===currentTocEntry;});prev=flatToc[currentPageIndex-1]||null;next=flatToc[currentPageIndex+1]||null;// Now for the parent
var parents=getParentsInToc(toc,currentTocEntry).filter(function(item){return normalizeUrl(item.href||"")!==currentBaseUrl;});up=parents[parents.length-1]||null;return{prev:prev,next:next,up:up};});
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toArray.js




function _toArray(arr) {
  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();
}
;// CONCATENATED MODULE: ./node_modules/bail/index.js
/**
 * Throw a given error.
 *
 * @param {Error|null|undefined} [error]
 *   Maybe error.
 * @returns {asserts error is null|undefined}
 */
function bail(error) {
  if (error) {
    throw error;
  }
}
// EXTERNAL MODULE: ./node_modules/is-buffer/index.js
var is_buffer = __webpack_require__(5586);
// EXTERNAL MODULE: ./node_modules/extend/index.js
var extend = __webpack_require__(1132);
;// CONCATENATED MODULE: ./node_modules/is-plain-obj/index.js
function is_plain_obj_isPlainObject(value) {
  if (Object.prototype.toString.call(value) !== '[object Object]') {
    return false;
  }

  var prototype = Object.getPrototypeOf(value);
  return prototype === null || prototype === Object.prototype;
}
;// CONCATENATED MODULE: ./node_modules/trough/index.js


/**
 * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback
 * @typedef {(...input: Array<any>) => any} Middleware
 *
 * @typedef {(...input: Array<any>) => void} Run
 *   Call all middleware.
 * @typedef {(fn: Middleware) => Pipeline} Use
 *   Add `fn` (middleware) to the list.
 * @typedef {{run: Run, use: Use}} Pipeline
 *   Middleware.
 */

/**
 * Create new middleware.
 *
 * @returns {Pipeline}
 */
function trough() {
  /** @type {Array<Middleware>} */
  var fns = [];
  /** @type {Pipeline} */

  var pipeline = {
    run: run,
    use: use
  };
  return pipeline;
  /** @type {Run} */

  function run() {
    for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {
      values[_key] = arguments[_key];
    }

    var middlewareIndex = -1;
    /** @type {Callback} */

    var callback = values.pop();

    if (typeof callback !== 'function') {
      throw new TypeError('Expected function as last argument, not ' + callback);
    }

    next.apply(void 0, [null].concat(_toConsumableArray(values)));
    /**
     * Run the next `fn`, or we’re done.
     *
     * @param {Error|null|undefined} error
     * @param {Array<any>} output
     */

    function next(error) {
      var fn = fns[++middlewareIndex];
      var index = -1;

      if (error) {
        callback(error);
        return;
      } // Copy non-nullish input into values.


      for (var _len2 = arguments.length, output = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        output[_key2 - 1] = arguments[_key2];
      }

      while (++index < values.length) {
        if (output[index] === null || output[index] === undefined) {
          output[index] = values[index];
        }
      } // Save the newly created `output` for the next call.


      values = output; // Next or done.

      if (fn) {
        wrap(fn, next).apply(void 0, output);
      } else {
        callback.apply(void 0, [null].concat(output));
      }
    }
  }
  /** @type {Use} */


  function use(middelware) {
    if (typeof middelware !== 'function') {
      throw new TypeError('Expected `middelware` to be a function, not ' + middelware);
    }

    fns.push(middelware);
    return pipeline;
  }
}
/**
 * Wrap `middleware`.
 * Can be sync or async; return a promise, receive a callback, or return new
 * values and errors.
 *
 * @param {Middleware} middleware
 * @param {Callback} callback
 */

function wrap(middleware, callback) {
  /** @type {boolean} */
  var called;
  return wrapped;
  /**
   * Call `middleware`.
   * @this {any}
   * @param {Array<any>} parameters
   * @returns {void}
   */

  function wrapped() {
    for (var _len3 = arguments.length, parameters = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      parameters[_key3] = arguments[_key3];
    }

    var fnExpectsCallback = middleware.length > parameters.length;
    /** @type {any} */

    var result;

    if (fnExpectsCallback) {
      parameters.push(done);
    }

    try {
      result = middleware.apply(this, parameters);
    } catch (error) {
      var exception =
      /** @type {Error} */
      error; // Well, this is quite the pickle.
      // `middleware` received a callback and called it synchronously, but that
      // threw an error.
      // The only thing left to do is to throw the thing instead.

      if (fnExpectsCallback && called) {
        throw exception;
      }

      return done(exception);
    }

    if (!fnExpectsCallback) {
      if (result instanceof Promise) {
        result.then(then, done);
      } else if (result instanceof Error) {
        done(result);
      } else {
        then(result);
      }
    }
  }
  /**
   * Call `callback`, only once.
   * @type {Callback}
   */


  function done(error) {
    if (!called) {
      called = true;

      for (var _len4 = arguments.length, output = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
        output[_key4 - 1] = arguments[_key4];
      }

      callback.apply(void 0, [error].concat(output));
    }
  }
  /**
   * Call `done` with one value.
   *
   * @param {any} [value]
   */


  function then(value) {
    done(null, value);
  }
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js


function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }

  return _assertThisInitialized(self);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createSuper.js



function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js
function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/construct.js


function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js




function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
}
;// CONCATENATED MODULE: ./node_modules/unist-util-stringify-position/index.js
/**
 * @typedef {import('unist').Point} Point
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Position} Position
 * @typedef {object & {type: string, position?: Position|undefined}} NodeLike
 */

/**
 * Stringify one point, a position (start and end points), or a node’s
 * positional information.
 *
 * @param {Node|NodeLike|Position|Point|null} [value]
 * @returns {string}
 */
function stringifyPosition(value) {
  // Nothing.
  if (!value || typeof value !== 'object') {
    return '';
  } // Node.


  if ('position' in value || 'type' in value) {
    return position(value.position);
  } // Position.


  if ('start' in value || 'end' in value) {
    return position(value);
  } // Point.


  if ('line' in value || 'column' in value) {
    return point(value);
  } // ?


  return '';
}
/**
 * @param {Point|undefined} point
 * @returns {string}
 */

function point(point) {
  return index(point && point.line) + ':' + index(point && point.column);
}
/**
 * @param {Position|undefined} pos
 * @returns {string}
 */


function position(pos) {
  return point(pos && pos.start) + '-' + point(pos && pos.end);
}
/**
 * @param {number|undefined} value
 * @returns {number}
 */


function index(value) {
  return value && typeof value === 'number' ? value : 1;
}
;// CONCATENATED MODULE: ./node_modules/vfile-message/index.js






/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Position} Position
 * @typedef {import('unist').Point} Point
 * @typedef {object & {type: string, position?: Position|undefined}} NodeLike
 */

var VFileMessage = /*#__PURE__*/function (_Error) {
  _inherits(VFileMessage, _Error);

  var _super = _createSuper(VFileMessage);

  /**
   * Constructor of a message for `reason` at `place` from `origin`.
   * When an error is passed in as `reason`, copies the `stack`.
   *
   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.
   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).
   * @param {string} [origin] Place in code the message originates from (`string`, optional).
   */
  function VFileMessage(reason, place, origin) {
    var _this;

    _classCallCheck(this, VFileMessage);

    /** @type {[string|null, string|null]} */
    var parts = [null, null];
    /** @type {Position} */

    var position = {
      // @ts-expect-error: we always follows the structure of `position`.
      start: {
        line: null,
        column: null
      },
      // @ts-expect-error: "
      end: {
        line: null,
        column: null
      }
    };
    _this = _super.call(this);

    if (typeof place === 'string') {
      origin = place;
      place = undefined;
    }

    if (typeof origin === 'string') {
      var index = origin.indexOf(':');

      if (index === -1) {
        parts[1] = origin;
      } else {
        parts[0] = origin.slice(0, index);
        parts[1] = origin.slice(index + 1);
      }
    }

    if (place) {
      // Node.
      if ('type' in place || 'position' in place) {
        if (place.position) {
          position = place.position;
        }
      } // Position.
      else if ('start' in place || 'end' in place) {
        position = place;
      } // Point.
      else if ('line' in place || 'column' in place) {
        position.start = place;
      }
    } // Fields from `Error`


    _this.name = stringifyPosition(place) || '1:1';
    _this.message = typeof reason === 'object' ? reason.message : reason;
    _this.stack = typeof reason === 'object' ? reason.stack : '';
    /**
     * Reason for message.
     * @type {string}
     */

    _this.reason = _this.message;
    /**
     * If true, marks associated file as no longer processable.
     * @type {boolean?}
     */
    // eslint-disable-next-line no-unused-expressions

    _this.fatal;
    /**
     * Starting line of error.
     * @type {number?}
     */

    _this.line = position.start.line;
    /**
     * Starting column of error.
     * @type {number?}
     */

    _this.column = position.start.column;
    /**
     * Namespace of warning.
     * @type {string?}
     */

    _this.source = parts[0];
    /**
     * Category of message.
     * @type {string?}
     */

    _this.ruleId = parts[1];
    /**
     * Full range information, when available.
     * Has start and end properties, both set to an object with line and column, set to number?.
     * @type {Position?}
     */

    _this.position = position; // The following fields are “well known”.
    // Not standard.
    // Feel free to add other non-standard fields to your messages.

    /* eslint-disable no-unused-expressions */

    /**
     * You can use this to specify the source value that’s being reported, which
     * is deemed incorrect.
     * @type {string?}
     */

    _this.actual;
    /**
     * You can use this to suggest values that should be used instead of
     * `actual`, one or more values that are deemed as acceptable.
     * @type {Array<string>?}
     */

    _this.expected;
    /**
     * You may add a file property with a path of a file (used throughout the VFile ecosystem).
     * @type {string?}
     */

    _this.file;
    /**
     * You may add a url property with a link to documentation for the message.
     * @type {string?}
     */

    _this.url;
    /**
     * You may add a note property with a long form description of the message (supported by vfile-reporter).
     * @type {string?}
     */

    _this.note;
    /* eslint-enable no-unused-expressions */

    return _this;
  }

  return _createClass(VFileMessage);
}( /*#__PURE__*/_wrapNativeSuper(Error));
VFileMessage.prototype.file = '';
VFileMessage.prototype.name = '';
VFileMessage.prototype.reason = '';
VFileMessage.prototype.message = '';
VFileMessage.prototype.stack = '';
VFileMessage.prototype.fatal = null;
VFileMessage.prototype.column = null;
VFileMessage.prototype.line = null;
VFileMessage.prototype.source = null;
VFileMessage.prototype.ruleId = null;
VFileMessage.prototype.position = null;
;// CONCATENATED MODULE: ./node_modules/vfile/lib/minpath.browser.js
// A derivative work based on:
// <https://github.com/browserify/path-browserify>.
// Which is licensed:
//
// MIT License
//
// Copyright (c) 2013 James Halliday
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
// A derivative work based on:
//
// Parts of that are extracted from Node’s internal `path` module:
// <https://github.com/nodejs/node/blob/master/lib/path.js>.
// Which is licensed:
//
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
var path = {
  basename: basename,
  dirname: dirname,
  extname: extname,
  join: join,
  sep: '/'
};
/* eslint-disable max-depth, complexity */

/**
 * @param {string} path
 * @param {string} [ext]
 * @returns {string}
 */

function basename(path, ext) {
  if (ext !== undefined && typeof ext !== 'string') {
    throw new TypeError('"ext" argument must be a string');
  }

  assertPath(path);
  var start = 0;
  var end = -1;
  var index = path.length;
  /** @type {boolean|undefined} */

  var seenNonSlash;

  if (ext === undefined || ext.length === 0 || ext.length > path.length) {
    while (index--) {
      if (path.charCodeAt(index) === 47
      /* `/` */
      ) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now.
        if (seenNonSlash) {
          start = index + 1;
          break;
        }
      } else if (end < 0) {
        // We saw the first non-path separator, mark this as the end of our
        // path component.
        seenNonSlash = true;
        end = index + 1;
      }
    }

    return end < 0 ? '' : path.slice(start, end);
  }

  if (ext === path) {
    return '';
  }

  var firstNonSlashEnd = -1;
  var extIndex = ext.length - 1;

  while (index--) {
    if (path.charCodeAt(index) === 47
    /* `/` */
    ) {
      // If we reached a path separator that was not part of a set of path
      // separators at the end of the string, stop now.
      if (seenNonSlash) {
        start = index + 1;
        break;
      }
    } else {
      if (firstNonSlashEnd < 0) {
        // We saw the first non-path separator, remember this index in case
        // we need it if the extension ends up not matching.
        seenNonSlash = true;
        firstNonSlashEnd = index + 1;
      }

      if (extIndex > -1) {
        // Try to match the explicit extension.
        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {
          if (extIndex < 0) {
            // We matched the extension, so mark this as the end of our path
            // component
            end = index;
          }
        } else {
          // Extension does not match, so our result is the entire path
          // component
          extIndex = -1;
          end = firstNonSlashEnd;
        }
      }
    }
  }

  if (start === end) {
    end = firstNonSlashEnd;
  } else if (end < 0) {
    end = path.length;
  }

  return path.slice(start, end);
}
/**
 * @param {string} path
 * @returns {string}
 */


function dirname(path) {
  assertPath(path);

  if (path.length === 0) {
    return '.';
  }

  var end = -1;
  var index = path.length;
  /** @type {boolean|undefined} */

  var unmatchedSlash; // Prefix `--` is important to not run on `0`.

  while (--index) {
    if (path.charCodeAt(index) === 47
    /* `/` */
    ) {
      if (unmatchedSlash) {
        end = index;
        break;
      }
    } else if (!unmatchedSlash) {
      // We saw the first non-path separator
      unmatchedSlash = true;
    }
  }

  return end < 0 ? path.charCodeAt(0) === 47
  /* `/` */
  ? '/' : '.' : end === 1 && path.charCodeAt(0) === 47
  /* `/` */
  ? '//' : path.slice(0, end);
}
/**
 * @param {string} path
 * @returns {string}
 */


function extname(path) {
  assertPath(path);
  var index = path.length;
  var end = -1;
  var startPart = 0;
  var startDot = -1; // Track the state of characters (if any) we see before our first dot and
  // after any path separator we find.

  var preDotState = 0;
  /** @type {boolean|undefined} */

  var unmatchedSlash;

  while (index--) {
    var code = path.charCodeAt(index);

    if (code === 47
    /* `/` */
    ) {
      // If we reached a path separator that was not part of a set of path
      // separators at the end of the string, stop now.
      if (unmatchedSlash) {
        startPart = index + 1;
        break;
      }

      continue;
    }

    if (end < 0) {
      // We saw the first non-path separator, mark this as the end of our
      // extension.
      unmatchedSlash = true;
      end = index + 1;
    }

    if (code === 46
    /* `.` */
    ) {
      // If this is our first dot, mark it as the start of our extension.
      if (startDot < 0) {
        startDot = index;
      } else if (preDotState !== 1) {
        preDotState = 1;
      }
    } else if (startDot > -1) {
      // We saw a non-dot and non-path separator before our dot, so we should
      // have a good chance at having a non-empty extension.
      preDotState = -1;
    }
  }

  if (startDot < 0 || end < 0 || // We saw a non-dot character immediately before the dot.
  preDotState === 0 || // The (right-most) trimmed path component is exactly `..`.
  preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
    return '';
  }

  return path.slice(startDot, end);
}
/**
 * @param {Array<string>} segments
 * @returns {string}
 */


function join() {
  var index = -1;
  /** @type {string|undefined} */

  var joined;

  for (var _len = arguments.length, segments = new Array(_len), _key = 0; _key < _len; _key++) {
    segments[_key] = arguments[_key];
  }

  while (++index < segments.length) {
    assertPath(segments[index]);

    if (segments[index]) {
      joined = joined === undefined ? segments[index] : joined + '/' + segments[index];
    }
  }

  return joined === undefined ? '.' : normalize(joined);
}
/**
 * Note: `normalize` is not exposed as `path.normalize`, so some code is
 * manually removed from it.
 *
 * @param {string} path
 * @returns {string}
 */


function normalize(path) {
  assertPath(path);
  var absolute = path.charCodeAt(0) === 47;
  /* `/` */
  // Normalize the path according to POSIX rules.

  var value = normalizeString(path, !absolute);

  if (value.length === 0 && !absolute) {
    value = '.';
  }

  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47
  /* / */
  ) {
    value += '/';
  }

  return absolute ? '/' + value : value;
}
/**
 * Resolve `.` and `..` elements in a path with directory names.
 *
 * @param {string} path
 * @param {boolean} allowAboveRoot
 * @returns {string}
 */


function normalizeString(path, allowAboveRoot) {
  var result = '';
  var lastSegmentLength = 0;
  var lastSlash = -1;
  var dots = 0;
  var index = -1;
  /** @type {number|undefined} */

  var code;
  /** @type {number} */

  var lastSlashIndex;

  while (++index <= path.length) {
    if (index < path.length) {
      code = path.charCodeAt(index);
    } else if (code === 47
    /* `/` */
    ) {
      break;
    } else {
      code = 47;
      /* `/` */
    }

    if (code === 47
    /* `/` */
    ) {
      if (lastSlash === index - 1 || dots === 1) {// Empty.
      } else if (lastSlash !== index - 1 && dots === 2) {
        if (result.length < 2 || lastSegmentLength !== 2 || result.charCodeAt(result.length - 1) !== 46
        /* `.` */
        || result.charCodeAt(result.length - 2) !== 46
        /* `.` */
        ) {
          if (result.length > 2) {
            lastSlashIndex = result.lastIndexOf('/');

            if (lastSlashIndex !== result.length - 1) {
              if (lastSlashIndex < 0) {
                result = '';
                lastSegmentLength = 0;
              } else {
                result = result.slice(0, lastSlashIndex);
                lastSegmentLength = result.length - 1 - result.lastIndexOf('/');
              }

              lastSlash = index;
              dots = 0;
              continue;
            }
          } else if (result.length > 0) {
            result = '';
            lastSegmentLength = 0;
            lastSlash = index;
            dots = 0;
            continue;
          }
        }

        if (allowAboveRoot) {
          result = result.length > 0 ? result + '/..' : '..';
          lastSegmentLength = 2;
        }
      } else {
        if (result.length > 0) {
          result += '/' + path.slice(lastSlash + 1, index);
        } else {
          result = path.slice(lastSlash + 1, index);
        }

        lastSegmentLength = index - lastSlash - 1;
      }

      lastSlash = index;
      dots = 0;
    } else if (code === 46
    /* `.` */
    && dots > -1) {
      dots++;
    } else {
      dots = -1;
    }
  }

  return result;
}
/**
 * @param {string} path
 */


function assertPath(path) {
  if (typeof path !== 'string') {
    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));
  }
}
/* eslint-enable max-depth, complexity */
;// CONCATENATED MODULE: ./node_modules/vfile/lib/minproc.browser.js
// Somewhat based on:
// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.
// But I don’t think one tiny line of code can be copyrighted. 😅
var proc = {
  cwd: cwd
};

function cwd() {
  return '/';
}
;// CONCATENATED MODULE: ./node_modules/vfile/lib/minurl.shared.js
/**
 * @typedef URL
 * @property {string} hash
 * @property {string} host
 * @property {string} hostname
 * @property {string} href
 * @property {string} origin
 * @property {string} password
 * @property {string} pathname
 * @property {string} port
 * @property {string} protocol
 * @property {string} search
 * @property {any} searchParams
 * @property {string} username
 * @property {() => string} toString
 * @property {() => string} toJSON
 */

/**
 * @param {unknown} fileURLOrPath
 * @returns {fileURLOrPath is URL}
 */
// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>
function isUrl(fileURLOrPath) {
  return fileURLOrPath !== null && typeof fileURLOrPath === 'object' && // @ts-expect-error: indexable.
  fileURLOrPath.href && // @ts-expect-error: indexable.
  fileURLOrPath.origin;
}
;// CONCATENATED MODULE: ./node_modules/vfile/lib/minurl.browser.js
/// <reference lib="dom" />
 // See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>

/**
 * @param {string|URL} path
 */

function urlToPath(path) {
  if (typeof path === 'string') {
    path = new URL(path);
  } else if (!isUrl(path)) {
    /** @type {NodeJS.ErrnoException} */
    var error = new TypeError('The "path" argument must be of type string or an instance of URL. Received `' + path + '`');
    error.code = 'ERR_INVALID_ARG_TYPE';
    throw error;
  }

  if (path.protocol !== 'file:') {
    /** @type {NodeJS.ErrnoException} */
    var _error = new TypeError('The URL must be of scheme file');

    _error.code = 'ERR_INVALID_URL_SCHEME';
    throw _error;
  }

  return getPathFromURLPosix(path);
}
/**
 * @param {URL} url
 */

function getPathFromURLPosix(url) {
  if (url.hostname !== '') {
    /** @type {NodeJS.ErrnoException} */
    var error = new TypeError('File URL host must be "localhost" or empty on darwin');
    error.code = 'ERR_INVALID_FILE_URL_HOST';
    throw error;
  }

  var pathname = url.pathname;
  var index = -1;

  while (++index < pathname.length) {
    if (pathname.charCodeAt(index) === 37
    /* `%` */
    && pathname.charCodeAt(index + 1) === 50
    /* `2` */
    ) {
      var third = pathname.charCodeAt(index + 2);

      if (third === 70
      /* `F` */
      || third === 102
      /* `f` */
      ) {
        /** @type {NodeJS.ErrnoException} */
        var _error2 = new TypeError('File URL path must not include encoded / characters');

        _error2.code = 'ERR_INVALID_FILE_URL_PATH';
        throw _error2;
      }
    }
  }

  return decodeURIComponent(pathname);
}


;// CONCATENATED MODULE: ./node_modules/vfile/lib/index.js




/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Position} Position
 * @typedef {import('unist').Point} Point
 * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike
 * @typedef {import('./minurl.shared.js').URL} URL
 * @typedef {import('..').VFileData} VFileData
 * @typedef {import('..').VFileValue} VFileValue
 *
 * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding
 *   Encodings supported by the buffer class.
 *   This is a copy of the typing from Node, copied to prevent Node globals from
 *   being needed.
 *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>
 *
 * @typedef {VFileValue|VFileOptions|VFile|URL} VFileCompatible
 *   Things that can be passed to the constructor.
 *
 * @typedef VFileCoreOptions
 * @property {VFileValue} [value]
 * @property {string} [cwd]
 * @property {Array<string>} [history]
 * @property {string|URL} [path]
 * @property {string} [basename]
 * @property {string} [stem]
 * @property {string} [extname]
 * @property {string} [dirname]
 * @property {VFileData} [data]
 *
 * @typedef Map
 *   Raw source map, see:
 *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.
 * @property {number} version
 * @property {Array<string>} sources
 * @property {Array<string>} names
 * @property {string|undefined} [sourceRoot]
 * @property {Array<string>|undefined} [sourcesContent]
 * @property {string} mappings
 * @property {string} file
 *
 * @typedef {{[key: string]: unknown} & VFileCoreOptions} VFileOptions
 *   Configuration: a bunch of keys that will be shallow copied over to the new
 *   file.
 *
 * @typedef {Record<string, unknown>} VFileReporterSettings
 * @typedef {<T = VFileReporterSettings>(files: Array<VFile>, options: T) => string} VFileReporter
 */




 // Order of setting (least specific to most), we need this because otherwise
// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a
// stem can be set.

var order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname'];
var VFile = /*#__PURE__*/function () {
  /**
   * Create a new virtual file.
   *
   * If `options` is `string` or `Buffer`, treats it as `{value: options}`.
   * If `options` is a `VFile`, shallow copies its data over to the new file.
   * All other given fields are set on the newly created `VFile`.
   *
   * Path related properties are set in the following order (least specific to
   * most specific): `history`, `path`, `basename`, `stem`, `extname`,
   * `dirname`.
   *
   * It’s not possible to set either `dirname` or `extname` without setting
   * either `history`, `path`, `basename`, or `stem` as well.
   *
   * @param {VFileCompatible} [value]
   */
  function VFile(value) {
    _classCallCheck(this, VFile);

    /** @type {VFileOptions} */
    var options;

    if (!value) {
      options = {};
    } else if (typeof value === 'string' || is_buffer(value)) {
      // @ts-expect-error Looks like a buffer.
      options = {
        value: value
      };
    } else if (isUrl(value)) {
      options = {
        path: value
      };
    } else {
      // @ts-expect-error Looks like file or options.
      options = value;
    }
    /**
     * Place to store custom information.
     * It’s OK to store custom data directly on the file, moving it to `data`
     * gives a little more privacy.
     * @type {VFileData}
     */


    this.data = {};
    /**
     * List of messages associated with the file.
     * @type {Array<VFileMessage>}
     */

    this.messages = [];
    /**
     * List of file paths the file moved between.
     * @type {Array<string>}
     */

    this.history = [];
    /**
     * Base of `path`.
     * Defaults to `process.cwd()` (`/` in browsers).
     * @type {string}
     */

    this.cwd = proc.cwd();
    /* eslint-disable no-unused-expressions */

    /**
     * Raw value.
     * @type {VFileValue}
     */

    this.value; // The below are non-standard, they are “well-known”.
    // As in, used in several tools.

    /**
     * Whether a file was saved to disk.
     * This is used by vfile reporters.
     * @type {boolean}
     */

    this.stored;
    /**
     * Sometimes files have a non-string representation.
     * This can be stored in the `result` field.
     * One example is when turning markdown into React nodes.
     * This is used by unified to store non-string results.
     * @type {unknown}
     */

    this.result;
    /**
     * Sometimes files have a source map associated with them.
     * This can be stored in the `map` field.
     * This should be a `RawSourceMap` type from the `source-map` module.
     * @type {Map|undefined}
     */

    this.map;
    /* eslint-enable no-unused-expressions */
    // Set path related properties in the correct order.

    var index = -1;

    while (++index < order.length) {
      var _prop = order[index]; // Note: we specifically use `in` instead of `hasOwnProperty` to accept
      // `vfile`s too.

      if (_prop in options && options[_prop] !== undefined) {
        // @ts-expect-error: TS is confused by the different types for `history`.
        this[_prop] = _prop === 'history' ? _toConsumableArray(options[_prop]) : options[_prop];
      }
    }
    /** @type {string} */


    var prop; // Set non-path related properties.

    for (prop in options) {
      // @ts-expect-error: fine to set other things.
      if (!order.includes(prop)) this[prop] = options[prop];
    }
  }
  /**
   * Access full path (`~/index.min.js`).
   *
   * @returns {string}
   */


  _createClass(VFile, [{
    key: "path",
    get: function get() {
      return this.history[this.history.length - 1];
    }
    /**
     * Set full path (`~/index.min.js`).
     * Cannot be nullified.
     *
     * @param {string|URL} path
     */
    ,
    set: function set(path) {
      if (isUrl(path)) {
        path = urlToPath(path);
      }

      assertNonEmpty(path, 'path');

      if (this.path !== path) {
        this.history.push(path);
      }
    }
    /**
     * Access parent path (`~`).
     */

  }, {
    key: "dirname",
    get: function get() {
      return typeof this.path === 'string' ? path.dirname(this.path) : undefined;
    }
    /**
     * Set parent path (`~`).
     * Cannot be set if there's no `path` yet.
     */
    ,
    set: function set(dirname) {
      lib_assertPath(this.basename, 'dirname');
      this.path = path.join(dirname || '', this.basename);
    }
    /**
     * Access basename (including extname) (`index.min.js`).
     */

  }, {
    key: "basename",
    get: function get() {
      return typeof this.path === 'string' ? path.basename(this.path) : undefined;
    }
    /**
     * Set basename (`index.min.js`).
     * Cannot contain path separators.
     * Cannot be nullified either (use `file.path = file.dirname` instead).
     */
    ,
    set: function set(basename) {
      assertNonEmpty(basename, 'basename');
      assertPart(basename, 'basename');
      this.path = path.join(this.dirname || '', basename);
    }
    /**
     * Access extname (including dot) (`.js`).
     */

  }, {
    key: "extname",
    get: function get() {
      return typeof this.path === 'string' ? path.extname(this.path) : undefined;
    }
    /**
     * Set extname (including dot) (`.js`).
     * Cannot be set if there's no `path` yet and cannot contain path separators.
     */
    ,
    set: function set(extname) {
      assertPart(extname, 'extname');
      lib_assertPath(this.dirname, 'extname');

      if (extname) {
        if (extname.charCodeAt(0) !== 46
        /* `.` */
        ) {
          throw new Error('`extname` must start with `.`');
        }

        if (extname.includes('.', 1)) {
          throw new Error('`extname` cannot contain multiple dots');
        }
      }

      this.path = path.join(this.dirname, this.stem + (extname || ''));
    }
    /**
     * Access stem (w/o extname) (`index.min`).
     */

  }, {
    key: "stem",
    get: function get() {
      return typeof this.path === 'string' ? path.basename(this.path, this.extname) : undefined;
    }
    /**
     * Set stem (w/o extname) (`index.min`).
     * Cannot be nullified, and cannot contain path separators.
     */
    ,
    set: function set(stem) {
      assertNonEmpty(stem, 'stem');
      assertPart(stem, 'stem');
      this.path = path.join(this.dirname || '', stem + (this.extname || ''));
    }
    /**
     * Serialize the file.
     *
     * @param {BufferEncoding} [encoding='utf8'] If `file.value` is a buffer, `encoding` is used to serialize buffers.
     * @returns {string}
     */

  }, {
    key: "toString",
    value: function toString(encoding) {
      return (this.value || '').toString(encoding);
    }
    /**
     * Create a message and associates it w/ the file.
     *
     * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.
     * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).
     * @param {string} [origin] Place in code the message originates from (`string`, optional).
     * @returns {VFileMessage}
     */

  }, {
    key: "message",
    value: function message(reason, place, origin) {
      var message = new VFileMessage(reason, place, origin);

      if (this.path) {
        message.name = this.path + ':' + message.name;
        message.file = this.path;
      }

      message.fatal = false;
      this.messages.push(message);
      return message;
    }
    /**
     * Info: create a message, associate it with the file, and mark the fatality
     * as `null`.
     * Calls `message()` internally.
     *
     * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.
     * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).
     * @param {string} [origin] Place in code the message originates from (`string`, optional).
     * @returns {VFileMessage}
     */

  }, {
    key: "info",
    value: function info(reason, place, origin) {
      var message = this.message(reason, place, origin);
      message.fatal = null;
      return message;
    }
    /**
     * Fail: create a message, associate it with the file, mark the fatality as
     * `true`.
     * Note: fatal errors mean a file is no longer processable.
     * Calls `message()` internally.
     *
     * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.
     * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).
     * @param {string} [origin] Place in code the message originates from (`string`, optional).
     * @returns {never}
     */

  }, {
    key: "fail",
    value: function fail(reason, place, origin) {
      var message = this.message(reason, place, origin);
      message.fatal = true;
      throw message;
    }
  }]);

  return VFile;
}();
/**
 * Assert that `part` is not a path (as in, does not contain `path.sep`).
 *
 * @param {string|undefined} part
 * @param {string} name
 * @returns {void}
 */

function assertPart(part, name) {
  if (part && part.includes(path.sep)) {
    throw new Error('`' + name + '` cannot be a path: did not expect `' + path.sep + '`');
  }
}
/**
 * Assert that `part` is not empty.
 *
 * @param {string|undefined} part
 * @param {string} name
 * @returns {asserts part is string}
 */


function assertNonEmpty(part, name) {
  if (!part) {
    throw new Error('`' + name + '` cannot be empty');
  }
}
/**
 * Assert `path` exists.
 *
 * @param {string|undefined} path
 * @param {string} name
 * @returns {asserts path is string}
 */


function lib_assertPath(path, name) {
  if (!path) {
    throw new Error('Setting `' + name + '` requires `path` to be set too');
  }
}
;// CONCATENATED MODULE: ./node_modules/unified/lib/index.js



/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('vfile').VFileCompatible} VFileCompatible
 * @typedef {import('vfile').VFileValue} VFileValue
 * @typedef {import('..').Processor} Processor
 * @typedef {import('..').Plugin} Plugin
 * @typedef {import('..').Preset} Preset
 * @typedef {import('..').Pluggable} Pluggable
 * @typedef {import('..').PluggableList} PluggableList
 * @typedef {import('..').Transformer} Transformer
 * @typedef {import('..').Parser} Parser
 * @typedef {import('..').Compiler} Compiler
 * @typedef {import('..').RunCallback} RunCallback
 * @typedef {import('..').ProcessCallback} ProcessCallback
 *
 * @typedef Context
 * @property {Node} tree
 * @property {VFile} file
 */





 // Expose a frozen processor.

var unified = base().freeze();
var own = {}.hasOwnProperty; // Function to create the first processor.

/**
 * @returns {Processor}
 */

function base() {
  var transformers = trough();
  /** @type {Processor['attachers']} */

  var attachers = [];
  /** @type {Record<string, unknown>} */

  var namespace = {};
  /** @type {boolean|undefined} */

  var frozen;
  var freezeIndex = -1; // Data management.
  // @ts-expect-error: overloads are handled.

  processor.data = data;
  processor.Parser = undefined;
  processor.Compiler = undefined; // Lock.

  processor.freeze = freeze; // Plugins.

  processor.attachers = attachers; // @ts-expect-error: overloads are handled.

  processor.use = use; // API.

  processor.parse = parse;
  processor.stringify = stringify; // @ts-expect-error: overloads are handled.

  processor.run = run;
  processor.runSync = runSync; // @ts-expect-error: overloads are handled.

  processor.process = process;
  processor.processSync = processSync; // Expose.

  return processor; // Create a new processor based on the processor in the current scope.

  /** @type {Processor} */

  function processor() {
    var destination = base();
    var index = -1;

    while (++index < attachers.length) {
      destination.use.apply(destination, _toConsumableArray(attachers[index]));
    }

    destination.data(extend(true, {}, namespace));
    return destination;
  }
  /**
   * @param {string|Record<string, unknown>} [key]
   * @param {unknown} [value]
   * @returns {unknown}
   */


  function data(key, value) {
    if (typeof key === 'string') {
      // Set `key`.
      if (arguments.length === 2) {
        assertUnfrozen('data', frozen);
        namespace[key] = value;
        return processor;
      } // Get `key`.


      return own.call(namespace, key) && namespace[key] || null;
    } // Set space.


    if (key) {
      assertUnfrozen('data', frozen);
      namespace = key;
      return processor;
    } // Get space.


    return namespace;
  }
  /** @type {Processor['freeze']} */


  function freeze() {
    if (frozen) {
      return processor;
    }

    while (++freezeIndex < attachers.length) {
      var _attachers$freezeInde = _toArray(attachers[freezeIndex]),
          attacher = _attachers$freezeInde[0],
          options = _attachers$freezeInde.slice(1);

      if (options[0] === false) {
        continue;
      }

      if (options[0] === true) {
        options[0] = undefined;
      }
      /** @type {Transformer|void} */


      var transformer = attacher.call.apply(attacher, [processor].concat(_toConsumableArray(options)));

      if (typeof transformer === 'function') {
        transformers.use(transformer);
      }
    }

    frozen = true;
    freezeIndex = Number.POSITIVE_INFINITY;
    return processor;
  }
  /**
   * @param {Pluggable|null|undefined} [value]
   * @param {...unknown} options
   * @returns {Processor}
   */


  function use(value) {
    for (var _len = arguments.length, options = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      options[_key - 1] = arguments[_key];
    }

    /** @type {Record<string, unknown>|undefined} */
    var settings;
    assertUnfrozen('use', frozen);

    if (value === null || value === undefined) {// Empty.
    } else if (typeof value === 'function') {
      addPlugin.apply(void 0, [value].concat(options));
    } else if (typeof value === 'object') {
      if (Array.isArray(value)) {
        addList(value);
      } else {
        addPreset(value);
      }
    } else {
      throw new TypeError('Expected usable value, not `' + value + '`');
    }

    if (settings) {
      namespace.settings = Object.assign(namespace.settings || {}, settings);
    }

    return processor;
    /**
     * @param {import('..').Pluggable<unknown[]>} value
     * @returns {void}
     */

    function add(value) {
      if (typeof value === 'function') {
        addPlugin(value);
      } else if (typeof value === 'object') {
        if (Array.isArray(value)) {
          var _value = _toArray(value),
              plugin = _value[0],
              _options = _value.slice(1);

          addPlugin.apply(void 0, [plugin].concat(_toConsumableArray(_options)));
        } else {
          addPreset(value);
        }
      } else {
        throw new TypeError('Expected usable value, not `' + value + '`');
      }
    }
    /**
     * @param {Preset} result
     * @returns {void}
     */


    function addPreset(result) {
      addList(result.plugins);

      if (result.settings) {
        settings = Object.assign(settings || {}, result.settings);
      }
    }
    /**
     * @param {PluggableList|null|undefined} [plugins]
     * @returns {void}
     */


    function addList(plugins) {
      var index = -1;

      if (plugins === null || plugins === undefined) {// Empty.
      } else if (Array.isArray(plugins)) {
        while (++index < plugins.length) {
          var thing = plugins[index];
          add(thing);
        }
      } else {
        throw new TypeError('Expected a list of plugins, not `' + plugins + '`');
      }
    }
    /**
     * @param {Plugin} plugin
     * @param {...unknown} [value]
     * @returns {void}
     */


    function addPlugin(plugin, value) {
      var index = -1;
      /** @type {Processor['attachers'][number]|undefined} */

      var entry;

      while (++index < attachers.length) {
        if (attachers[index][0] === plugin) {
          entry = attachers[index];
          break;
        }
      }

      if (entry) {
        if (is_plain_obj_isPlainObject(entry[1]) && is_plain_obj_isPlainObject(value)) {
          value = extend(true, entry[1], value);
        }

        entry[1] = value;
      } else {
        // @ts-expect-error: fine.
        attachers.push(Array.prototype.slice.call(arguments));
      }
    }
  }
  /** @type {Processor['parse']} */


  function parse(doc) {
    processor.freeze();
    var file = vfile(doc);
    var Parser = processor.Parser;
    assertParser('parse', Parser);

    if (newable(Parser, 'parse')) {
      // @ts-expect-error: `newable` checks this.
      return new Parser(String(file), file).parse();
    } // @ts-expect-error: `newable` checks this.


    return Parser(String(file), file); // eslint-disable-line new-cap
  }
  /** @type {Processor['stringify']} */


  function stringify(node, doc) {
    processor.freeze();
    var file = vfile(doc);
    var Compiler = processor.Compiler;
    assertCompiler('stringify', Compiler);
    assertNode(node);

    if (newable(Compiler, 'compile')) {
      // @ts-expect-error: `newable` checks this.
      return new Compiler(node, file).compile();
    } // @ts-expect-error: `newable` checks this.


    return Compiler(node, file); // eslint-disable-line new-cap
  }
  /**
   * @param {Node} node
   * @param {VFileCompatible|RunCallback} [doc]
   * @param {RunCallback} [callback]
   * @returns {Promise<Node>|void}
   */


  function run(node, doc, callback) {
    assertNode(node);
    processor.freeze();

    if (!callback && typeof doc === 'function') {
      callback = doc;
      doc = undefined;
    }

    if (!callback) {
      return new Promise(executor);
    }

    executor(null, callback);
    /**
     * @param {null|((node: Node) => void)} resolve
     * @param {(error: Error) => void} reject
     * @returns {void}
     */

    function executor(resolve, reject) {
      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.
      transformers.run(node, vfile(doc), done);
      /**
       * @param {Error|null} error
       * @param {Node} tree
       * @param {VFile} file
       * @returns {void}
       */

      function done(error, tree, file) {
        tree = tree || node;

        if (error) {
          reject(error);
        } else if (resolve) {
          resolve(tree);
        } else {
          // @ts-expect-error: `callback` is defined if `resolve` is not.
          callback(null, tree, file);
        }
      }
    }
  }
  /** @type {Processor['runSync']} */


  function runSync(node, file) {
    /** @type {Node|undefined} */
    var result;
    /** @type {boolean|undefined} */

    var complete;
    processor.run(node, file, done);
    assertDone('runSync', 'run', complete); // @ts-expect-error: we either bailed on an error or have a tree.

    return result;
    /**
     * @param {Error|null} [error]
     * @param {Node} [tree]
     * @returns {void}
     */

    function done(error, tree) {
      bail(error);
      result = tree;
      complete = true;
    }
  }
  /**
   * @param {VFileCompatible} doc
   * @param {ProcessCallback} [callback]
   * @returns {Promise<VFile>|undefined}
   */


  function process(doc, callback) {
    processor.freeze();
    assertParser('process', processor.Parser);
    assertCompiler('process', processor.Compiler);

    if (!callback) {
      return new Promise(executor);
    }

    executor(null, callback);
    /**
     * @param {null|((file: VFile) => void)} resolve
     * @param {(error?: Error|null|undefined) => void} reject
     * @returns {void}
     */

    function executor(resolve, reject) {
      var file = vfile(doc);
      processor.run(processor.parse(file), file, function (error, tree, file) {
        if (error || !tree || !file) {
          done(error);
        } else {
          /** @type {unknown} */
          var result = processor.stringify(tree, file);

          if (result === undefined || result === null) {// Empty.
          } else if (looksLikeAVFileValue(result)) {
            file.value = result;
          } else {
            file.result = result;
          }

          done(error, file);
        }
      });
      /**
       * @param {Error|null|undefined} [error]
       * @param {VFile|undefined} [file]
       * @returns {void}
       */

      function done(error, file) {
        if (error || !file) {
          reject(error);
        } else if (resolve) {
          resolve(file);
        } else {
          // @ts-expect-error: `callback` is defined if `resolve` is not.
          callback(null, file);
        }
      }
    }
  }
  /** @type {Processor['processSync']} */


  function processSync(doc) {
    /** @type {boolean|undefined} */
    var complete;
    processor.freeze();
    assertParser('processSync', processor.Parser);
    assertCompiler('processSync', processor.Compiler);
    var file = vfile(doc);
    processor.process(file, done);
    assertDone('processSync', 'process', complete);
    return file;
    /**
     * @param {Error|null|undefined} [error]
     * @returns {void}
     */

    function done(error) {
      complete = true;
      bail(error);
    }
  }
}
/**
 * Check if `value` is a constructor.
 *
 * @param {unknown} value
 * @param {string} name
 * @returns {boolean}
 */


function newable(value, name) {
  return typeof value === 'function' && // Prototypes do exist.
  // type-coverage:ignore-next-line
  value.prototype && ( // A function with keys in its prototype is probably a constructor.
  // Classes’ prototype methods are not enumerable, so we check if some value
  // exists in the prototype.
  // type-coverage:ignore-next-line
  keys(value.prototype) || name in value.prototype);
}
/**
 * Check if `value` is an object with keys.
 *
 * @param {Record<string, unknown>} value
 * @returns {boolean}
 */


function keys(value) {
  /** @type {string} */
  var key;

  for (key in value) {
    if (own.call(value, key)) {
      return true;
    }
  }

  return false;
}
/**
 * Assert a parser is available.
 *
 * @param {string} name
 * @param {unknown} value
 * @returns {asserts value is Parser}
 */


function assertParser(name, value) {
  if (typeof value !== 'function') {
    throw new TypeError('Cannot `' + name + '` without `Parser`');
  }
}
/**
 * Assert a compiler is available.
 *
 * @param {string} name
 * @param {unknown} value
 * @returns {asserts value is Compiler}
 */


function assertCompiler(name, value) {
  if (typeof value !== 'function') {
    throw new TypeError('Cannot `' + name + '` without `Compiler`');
  }
}
/**
 * Assert the processor is not frozen.
 *
 * @param {string} name
 * @param {unknown} frozen
 * @returns {asserts frozen is false}
 */


function assertUnfrozen(name, frozen) {
  if (frozen) {
    throw new Error('Cannot call `' + name + '` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.');
  }
}
/**
 * Assert `node` is a unist node.
 *
 * @param {unknown} node
 * @returns {asserts node is Node}
 */


function assertNode(node) {
  // `isPlainObj` unfortunately uses `any` instead of `unknown`.
  // type-coverage:ignore-next-line
  if (!is_plain_obj_isPlainObject(node) || typeof node.type !== 'string') {
    throw new TypeError('Expected node, got `' + node + '`'); // Fine.
  }
}
/**
 * Assert that `complete` is `true`.
 *
 * @param {string} name
 * @param {string} asyncName
 * @param {unknown} complete
 * @returns {asserts complete is true}
 */


function assertDone(name, asyncName, complete) {
  if (!complete) {
    throw new Error('`' + name + '` finished async. Use `' + asyncName + '` instead');
  }
}
/**
 * @param {VFileCompatible} [value]
 * @returns {VFile}
 */


function vfile(value) {
  return looksLikeAVFile(value) ? value : new VFile(value);
}
/**
 * @param {VFileCompatible} [value]
 * @returns {value is VFile}
 */


function looksLikeAVFile(value) {
  return Boolean(value && typeof value === 'object' && 'message' in value && 'messages' in value);
}
/**
 * @param {unknown} [value]
 * @returns {value is VFileValue}
 */


function looksLikeAVFileValue(value) {
  return typeof value === 'string' || is_buffer(value);
}
// EXTERNAL MODULE: ./node_modules/parse5/lib/parser/index.js
var lib_parser = __webpack_require__(8992);
;// CONCATENATED MODULE: ./node_modules/property-information/lib/util/schema.js



/**
 * @typedef {import('./info.js').Info} Info
 * @typedef {Record<string, Info>} Properties
 * @typedef {Record<string, string>} Normal
 */
var Schema = /*#__PURE__*/_createClass(
/**
 * @constructor
 * @param {Properties} property
 * @param {Normal} normal
 * @param {string} [space]
 */
function Schema(property, normal, space) {
  _classCallCheck(this, Schema);

  this.property = property;
  this.normal = normal;

  if (space) {
    this.space = space;
  }
});
/** @type {Properties} */

Schema.prototype.property = {};
/** @type {Normal} */

Schema.prototype.normal = {};
/** @type {string|null} */

Schema.prototype.space = null;
;// CONCATENATED MODULE: ./node_modules/property-information/lib/util/merge.js
/**
 * @typedef {import('./schema.js').Properties} Properties
 * @typedef {import('./schema.js').Normal} Normal
 */

/**
 * @param {Schema[]} definitions
 * @param {string} [space]
 * @returns {Schema}
 */

function merge(definitions, space) {
  /** @type {Properties} */
  var property = {};
  /** @type {Normal} */

  var normal = {};
  var index = -1;

  while (++index < definitions.length) {
    Object.assign(property, definitions[index].property);
    Object.assign(normal, definitions[index].normal);
  }

  return new Schema(property, normal, space);
}
;// CONCATENATED MODULE: ./node_modules/property-information/lib/normalize.js
/**
 * @param {string} value
 * @returns {string}
 */
function normalize_normalize(value) {
  return value.toLowerCase();
}
;// CONCATENATED MODULE: ./node_modules/property-information/lib/util/info.js


var Info = /*#__PURE__*/_createClass(
/**
 * @constructor
 * @param {string} property
 * @param {string} attribute
 */
function Info(property, attribute) {
  _classCallCheck(this, Info);

  /** @type {string} */
  this.property = property;
  /** @type {string} */

  this.attribute = attribute;
});
/** @type {string|null} */

Info.prototype.space = null;
Info.prototype.boolean = false;
Info.prototype.booleanish = false;
Info.prototype.overloadedBoolean = false;
Info.prototype.number = false;
Info.prototype.commaSeparated = false;
Info.prototype.spaceSeparated = false;
Info.prototype.commaOrSpaceSeparated = false;
Info.prototype.mustUseProperty = false;
Info.prototype.defined = false;
;// CONCATENATED MODULE: ./node_modules/property-information/lib/util/types.js
var powers = 0;
var types_boolean = increment();
var booleanish = increment();
var overloadedBoolean = increment();
var number = increment();
var spaceSeparated = increment();
var commaSeparated = increment();
var commaOrSpaceSeparated = increment();

function increment() {
  return Math.pow(2, ++powers);
}
;// CONCATENATED MODULE: ./node_modules/property-information/lib/util/defined-info.js







/** @type {Array<keyof types>} */
// @ts-expect-error: hush.

var checks = Object.keys(types_namespaceObject);
var DefinedInfo = /*#__PURE__*/function (_Info) {
  _inherits(DefinedInfo, _Info);

  var _super = _createSuper(DefinedInfo);

  /**
   * @constructor
   * @param {string} property
   * @param {string} attribute
   * @param {number|null} [mask]
   * @param {string} [space]
   */
  function DefinedInfo(property, attribute, mask, space) {
    var _this;

    _classCallCheck(this, DefinedInfo);

    var index = -1;
    _this = _super.call(this, property, attribute);
    mark(_assertThisInitialized(_this), 'space', space);

    if (typeof mask === 'number') {
      while (++index < checks.length) {
        var check = checks[index];
        mark(_assertThisInitialized(_this), checks[index], (mask & types_namespaceObject[check]) === types_namespaceObject[check]);
      }
    }

    return _this;
  }

  return _createClass(DefinedInfo);
}(Info);
DefinedInfo.prototype.defined = true;
/**
 * @param {DefinedInfo} values
 * @param {string} key
 * @param {unknown} value
 */

function mark(values, key, value) {
  if (value) {
    // @ts-expect-error: assume `value` matches the expected value of `key`.
    values[key] = value;
  }
}
;// CONCATENATED MODULE: ./node_modules/property-information/lib/util/create.js
/**
 * @typedef {import('./schema.js').Properties} Properties
 * @typedef {import('./schema.js').Normal} Normal
 *
 * @typedef {Record<string, string>} Attributes
 *
 * @typedef {Object} Definition
 * @property {Record<string, number|null>} properties
 * @property {(attributes: Attributes, property: string) => string} transform
 * @property {string} [space]
 * @property {Attributes} [attributes]
 * @property {Array<string>} [mustUseProperty]
 */



var create_own = {}.hasOwnProperty;
/**
 * @param {Definition} definition
 * @returns {Schema}
 */

function create(definition) {
  /** @type {Properties} */
  var property = {};
  /** @type {Normal} */

  var normal = {};
  /** @type {string} */

  var prop;

  for (prop in definition.properties) {
    if (create_own.call(definition.properties, prop)) {
      var value = definition.properties[prop];
      var info = new DefinedInfo(prop, definition.transform(definition.attributes || {}, prop), value, definition.space);

      if (definition.mustUseProperty && definition.mustUseProperty.includes(prop)) {
        info.mustUseProperty = true;
      }

      property[prop] = info;
      normal[normalize_normalize(prop)] = prop;
      normal[normalize_normalize(info.attribute)] = prop;
    }
  }

  return new Schema(property, normal, definition.space);
}
;// CONCATENATED MODULE: ./node_modules/property-information/lib/xlink.js

var xlink = create({
  space: 'xlink',
  transform: function transform(_, prop) {
    return 'xlink:' + prop.slice(5).toLowerCase();
  },
  properties: {
    xLinkActuate: null,
    xLinkArcRole: null,
    xLinkHref: null,
    xLinkRole: null,
    xLinkShow: null,
    xLinkTitle: null,
    xLinkType: null
  }
});
;// CONCATENATED MODULE: ./node_modules/property-information/lib/xml.js

var xml = create({
  space: 'xml',
  transform: function transform(_, prop) {
    return 'xml:' + prop.slice(3).toLowerCase();
  },
  properties: {
    xmlLang: null,
    xmlBase: null,
    xmlSpace: null
  }
});
;// CONCATENATED MODULE: ./node_modules/property-information/lib/util/case-sensitive-transform.js
/**
 * @param {Record<string, string>} attributes
 * @param {string} attribute
 * @returns {string}
 */
function caseSensitiveTransform(attributes, attribute) {
  return attribute in attributes ? attributes[attribute] : attribute;
}
;// CONCATENATED MODULE: ./node_modules/property-information/lib/util/case-insensitive-transform.js

/**
 * @param {Record<string, string>} attributes
 * @param {string} property
 * @returns {string}
 */

function caseInsensitiveTransform(attributes, property) {
  return caseSensitiveTransform(attributes, property.toLowerCase());
}
;// CONCATENATED MODULE: ./node_modules/property-information/lib/xmlns.js


var xmlns = create({
  space: 'xmlns',
  attributes: {
    xmlnsxlink: 'xmlns:xlink'
  },
  transform: caseInsensitiveTransform,
  properties: {
    xmlns: null,
    xmlnsXLink: null
  }
});
;// CONCATENATED MODULE: ./node_modules/property-information/lib/aria.js


var aria = create({
  transform: function transform(_, prop) {
    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase();
  },
  properties: {
    ariaActiveDescendant: null,
    ariaAtomic: booleanish,
    ariaAutoComplete: null,
    ariaBusy: booleanish,
    ariaChecked: booleanish,
    ariaColCount: number,
    ariaColIndex: number,
    ariaColSpan: number,
    ariaControls: spaceSeparated,
    ariaCurrent: null,
    ariaDescribedBy: spaceSeparated,
    ariaDetails: null,
    ariaDisabled: booleanish,
    ariaDropEffect: spaceSeparated,
    ariaErrorMessage: null,
    ariaExpanded: booleanish,
    ariaFlowTo: spaceSeparated,
    ariaGrabbed: booleanish,
    ariaHasPopup: null,
    ariaHidden: booleanish,
    ariaInvalid: null,
    ariaKeyShortcuts: null,
    ariaLabel: null,
    ariaLabelledBy: spaceSeparated,
    ariaLevel: number,
    ariaLive: null,
    ariaModal: booleanish,
    ariaMultiLine: booleanish,
    ariaMultiSelectable: booleanish,
    ariaOrientation: null,
    ariaOwns: spaceSeparated,
    ariaPlaceholder: null,
    ariaPosInSet: number,
    ariaPressed: booleanish,
    ariaReadOnly: booleanish,
    ariaRelevant: null,
    ariaRequired: booleanish,
    ariaRoleDescription: spaceSeparated,
    ariaRowCount: number,
    ariaRowIndex: number,
    ariaRowSpan: number,
    ariaSelected: booleanish,
    ariaSetSize: number,
    ariaSort: null,
    ariaValueMax: number,
    ariaValueMin: number,
    ariaValueNow: number,
    ariaValueText: null,
    role: null
  }
});
;// CONCATENATED MODULE: ./node_modules/property-information/lib/html.js



var html = create({
  space: 'html',
  attributes: {
    acceptcharset: 'accept-charset',
    classname: 'class',
    htmlfor: 'for',
    httpequiv: 'http-equiv'
  },
  transform: caseInsensitiveTransform,
  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],
  properties: {
    // Standard Properties.
    abbr: null,
    accept: commaSeparated,
    acceptCharset: spaceSeparated,
    accessKey: spaceSeparated,
    action: null,
    allow: null,
    allowFullScreen: types_boolean,
    allowPaymentRequest: types_boolean,
    allowUserMedia: types_boolean,
    alt: null,
    as: null,
    async: types_boolean,
    autoCapitalize: null,
    autoComplete: spaceSeparated,
    autoFocus: types_boolean,
    autoPlay: types_boolean,
    capture: types_boolean,
    charSet: null,
    checked: types_boolean,
    cite: null,
    className: spaceSeparated,
    cols: number,
    colSpan: null,
    content: null,
    contentEditable: booleanish,
    controls: types_boolean,
    controlsList: spaceSeparated,
    coords: number | commaSeparated,
    crossOrigin: null,
    data: null,
    dateTime: null,
    decoding: null,
    default: types_boolean,
    defer: types_boolean,
    dir: null,
    dirName: null,
    disabled: types_boolean,
    download: overloadedBoolean,
    draggable: booleanish,
    encType: null,
    enterKeyHint: null,
    form: null,
    formAction: null,
    formEncType: null,
    formMethod: null,
    formNoValidate: types_boolean,
    formTarget: null,
    headers: spaceSeparated,
    height: number,
    hidden: types_boolean,
    high: number,
    href: null,
    hrefLang: null,
    htmlFor: spaceSeparated,
    httpEquiv: spaceSeparated,
    id: null,
    imageSizes: null,
    imageSrcSet: null,
    inputMode: null,
    integrity: null,
    is: null,
    isMap: types_boolean,
    itemId: null,
    itemProp: spaceSeparated,
    itemRef: spaceSeparated,
    itemScope: types_boolean,
    itemType: spaceSeparated,
    kind: null,
    label: null,
    lang: null,
    language: null,
    list: null,
    loading: null,
    loop: types_boolean,
    low: number,
    manifest: null,
    max: null,
    maxLength: number,
    media: null,
    method: null,
    min: null,
    minLength: number,
    multiple: types_boolean,
    muted: types_boolean,
    name: null,
    nonce: null,
    noModule: types_boolean,
    noValidate: types_boolean,
    onAbort: null,
    onAfterPrint: null,
    onAuxClick: null,
    onBeforePrint: null,
    onBeforeUnload: null,
    onBlur: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onContextLost: null,
    onContextMenu: null,
    onContextRestored: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFormData: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLanguageChange: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadEnd: null,
    onLoadStart: null,
    onMessage: null,
    onMessageError: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRejectionHandled: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onSecurityPolicyViolation: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onSlotChange: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnhandledRejection: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onWheel: null,
    open: types_boolean,
    optimum: number,
    pattern: null,
    ping: spaceSeparated,
    placeholder: null,
    playsInline: types_boolean,
    poster: null,
    preload: null,
    readOnly: types_boolean,
    referrerPolicy: null,
    rel: spaceSeparated,
    required: types_boolean,
    reversed: types_boolean,
    rows: number,
    rowSpan: number,
    sandbox: spaceSeparated,
    scope: null,
    scoped: types_boolean,
    seamless: types_boolean,
    selected: types_boolean,
    shape: null,
    size: number,
    sizes: null,
    slot: null,
    span: number,
    spellCheck: booleanish,
    src: null,
    srcDoc: null,
    srcLang: null,
    srcSet: null,
    start: number,
    step: null,
    style: null,
    tabIndex: number,
    target: null,
    title: null,
    translate: null,
    type: null,
    typeMustMatch: types_boolean,
    useMap: null,
    value: booleanish,
    width: number,
    wrap: null,
    // Legacy.
    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis
    align: null,
    // Several. Use CSS `text-align` instead,
    aLink: null,
    // `<body>`. Use CSS `a:active {color}` instead
    archive: spaceSeparated,
    // `<object>`. List of URIs to archives
    axis: null,
    // `<td>` and `<th>`. Use `scope` on `<th>`
    background: null,
    // `<body>`. Use CSS `background-image` instead
    bgColor: null,
    // `<body>` and table elements. Use CSS `background-color` instead
    border: number,
    // `<table>`. Use CSS `border-width` instead,
    borderColor: null,
    // `<table>`. Use CSS `border-color` instead,
    bottomMargin: number,
    // `<body>`
    cellPadding: null,
    // `<table>`
    cellSpacing: null,
    // `<table>`
    char: null,
    // Several table elements. When `align=char`, sets the character to align on
    charOff: null,
    // Several table elements. When `char`, offsets the alignment
    classId: null,
    // `<object>`
    clear: null,
    // `<br>`. Use CSS `clear` instead
    code: null,
    // `<object>`
    codeBase: null,
    // `<object>`
    codeType: null,
    // `<object>`
    color: null,
    // `<font>` and `<hr>`. Use CSS instead
    compact: types_boolean,
    // Lists. Use CSS to reduce space between items instead
    declare: types_boolean,
    // `<object>`
    event: null,
    // `<script>`
    face: null,
    // `<font>`. Use CSS instead
    frame: null,
    // `<table>`
    frameBorder: null,
    // `<iframe>`. Use CSS `border` instead
    hSpace: number,
    // `<img>` and `<object>`
    leftMargin: number,
    // `<body>`
    link: null,
    // `<body>`. Use CSS `a:link {color: *}` instead
    longDesc: null,
    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`
    lowSrc: null,
    // `<img>`. Use a `<picture>`
    marginHeight: number,
    // `<body>`
    marginWidth: number,
    // `<body>`
    noResize: types_boolean,
    // `<frame>`
    noHref: types_boolean,
    // `<area>`. Use no href instead of an explicit `nohref`
    noShade: types_boolean,
    // `<hr>`. Use background-color and height instead of borders
    noWrap: types_boolean,
    // `<td>` and `<th>`
    object: null,
    // `<applet>`
    profile: null,
    // `<head>`
    prompt: null,
    // `<isindex>`
    rev: null,
    // `<link>`
    rightMargin: number,
    // `<body>`
    rules: null,
    // `<table>`
    scheme: null,
    // `<meta>`
    scrolling: booleanish,
    // `<frame>`. Use overflow in the child context
    standby: null,
    // `<object>`
    summary: null,
    // `<table>`
    text: null,
    // `<body>`. Use CSS `color` instead
    topMargin: number,
    // `<body>`
    valueType: null,
    // `<param>`
    version: null,
    // `<html>`. Use a doctype.
    vAlign: null,
    // Several. Use CSS `vertical-align` instead
    vLink: null,
    // `<body>`. Use CSS `a:visited {color}` instead
    vSpace: number,
    // `<img>` and `<object>`
    // Non-standard Properties.
    allowTransparency: null,
    autoCorrect: null,
    autoSave: null,
    disablePictureInPicture: types_boolean,
    disableRemotePlayback: types_boolean,
    prefix: null,
    property: null,
    results: number,
    security: null,
    unselectable: null
  }
});
;// CONCATENATED MODULE: ./node_modules/property-information/lib/svg.js



var svg = create({
  space: 'svg',
  attributes: {
    accentHeight: 'accent-height',
    alignmentBaseline: 'alignment-baseline',
    arabicForm: 'arabic-form',
    baselineShift: 'baseline-shift',
    capHeight: 'cap-height',
    className: 'class',
    clipPath: 'clip-path',
    clipRule: 'clip-rule',
    colorInterpolation: 'color-interpolation',
    colorInterpolationFilters: 'color-interpolation-filters',
    colorProfile: 'color-profile',
    colorRendering: 'color-rendering',
    crossOrigin: 'crossorigin',
    dataType: 'datatype',
    dominantBaseline: 'dominant-baseline',
    enableBackground: 'enable-background',
    fillOpacity: 'fill-opacity',
    fillRule: 'fill-rule',
    floodColor: 'flood-color',
    floodOpacity: 'flood-opacity',
    fontFamily: 'font-family',
    fontSize: 'font-size',
    fontSizeAdjust: 'font-size-adjust',
    fontStretch: 'font-stretch',
    fontStyle: 'font-style',
    fontVariant: 'font-variant',
    fontWeight: 'font-weight',
    glyphName: 'glyph-name',
    glyphOrientationHorizontal: 'glyph-orientation-horizontal',
    glyphOrientationVertical: 'glyph-orientation-vertical',
    hrefLang: 'hreflang',
    horizAdvX: 'horiz-adv-x',
    horizOriginX: 'horiz-origin-x',
    horizOriginY: 'horiz-origin-y',
    imageRendering: 'image-rendering',
    letterSpacing: 'letter-spacing',
    lightingColor: 'lighting-color',
    markerEnd: 'marker-end',
    markerMid: 'marker-mid',
    markerStart: 'marker-start',
    navDown: 'nav-down',
    navDownLeft: 'nav-down-left',
    navDownRight: 'nav-down-right',
    navLeft: 'nav-left',
    navNext: 'nav-next',
    navPrev: 'nav-prev',
    navRight: 'nav-right',
    navUp: 'nav-up',
    navUpLeft: 'nav-up-left',
    navUpRight: 'nav-up-right',
    onAbort: 'onabort',
    onActivate: 'onactivate',
    onAfterPrint: 'onafterprint',
    onBeforePrint: 'onbeforeprint',
    onBegin: 'onbegin',
    onCancel: 'oncancel',
    onCanPlay: 'oncanplay',
    onCanPlayThrough: 'oncanplaythrough',
    onChange: 'onchange',
    onClick: 'onclick',
    onClose: 'onclose',
    onCopy: 'oncopy',
    onCueChange: 'oncuechange',
    onCut: 'oncut',
    onDblClick: 'ondblclick',
    onDrag: 'ondrag',
    onDragEnd: 'ondragend',
    onDragEnter: 'ondragenter',
    onDragExit: 'ondragexit',
    onDragLeave: 'ondragleave',
    onDragOver: 'ondragover',
    onDragStart: 'ondragstart',
    onDrop: 'ondrop',
    onDurationChange: 'ondurationchange',
    onEmptied: 'onemptied',
    onEnd: 'onend',
    onEnded: 'onended',
    onError: 'onerror',
    onFocus: 'onfocus',
    onFocusIn: 'onfocusin',
    onFocusOut: 'onfocusout',
    onHashChange: 'onhashchange',
    onInput: 'oninput',
    onInvalid: 'oninvalid',
    onKeyDown: 'onkeydown',
    onKeyPress: 'onkeypress',
    onKeyUp: 'onkeyup',
    onLoad: 'onload',
    onLoadedData: 'onloadeddata',
    onLoadedMetadata: 'onloadedmetadata',
    onLoadStart: 'onloadstart',
    onMessage: 'onmessage',
    onMouseDown: 'onmousedown',
    onMouseEnter: 'onmouseenter',
    onMouseLeave: 'onmouseleave',
    onMouseMove: 'onmousemove',
    onMouseOut: 'onmouseout',
    onMouseOver: 'onmouseover',
    onMouseUp: 'onmouseup',
    onMouseWheel: 'onmousewheel',
    onOffline: 'onoffline',
    onOnline: 'ononline',
    onPageHide: 'onpagehide',
    onPageShow: 'onpageshow',
    onPaste: 'onpaste',
    onPause: 'onpause',
    onPlay: 'onplay',
    onPlaying: 'onplaying',
    onPopState: 'onpopstate',
    onProgress: 'onprogress',
    onRateChange: 'onratechange',
    onRepeat: 'onrepeat',
    onReset: 'onreset',
    onResize: 'onresize',
    onScroll: 'onscroll',
    onSeeked: 'onseeked',
    onSeeking: 'onseeking',
    onSelect: 'onselect',
    onShow: 'onshow',
    onStalled: 'onstalled',
    onStorage: 'onstorage',
    onSubmit: 'onsubmit',
    onSuspend: 'onsuspend',
    onTimeUpdate: 'ontimeupdate',
    onToggle: 'ontoggle',
    onUnload: 'onunload',
    onVolumeChange: 'onvolumechange',
    onWaiting: 'onwaiting',
    onZoom: 'onzoom',
    overlinePosition: 'overline-position',
    overlineThickness: 'overline-thickness',
    paintOrder: 'paint-order',
    panose1: 'panose-1',
    pointerEvents: 'pointer-events',
    referrerPolicy: 'referrerpolicy',
    renderingIntent: 'rendering-intent',
    shapeRendering: 'shape-rendering',
    stopColor: 'stop-color',
    stopOpacity: 'stop-opacity',
    strikethroughPosition: 'strikethrough-position',
    strikethroughThickness: 'strikethrough-thickness',
    strokeDashArray: 'stroke-dasharray',
    strokeDashOffset: 'stroke-dashoffset',
    strokeLineCap: 'stroke-linecap',
    strokeLineJoin: 'stroke-linejoin',
    strokeMiterLimit: 'stroke-miterlimit',
    strokeOpacity: 'stroke-opacity',
    strokeWidth: 'stroke-width',
    tabIndex: 'tabindex',
    textAnchor: 'text-anchor',
    textDecoration: 'text-decoration',
    textRendering: 'text-rendering',
    typeOf: 'typeof',
    underlinePosition: 'underline-position',
    underlineThickness: 'underline-thickness',
    unicodeBidi: 'unicode-bidi',
    unicodeRange: 'unicode-range',
    unitsPerEm: 'units-per-em',
    vAlphabetic: 'v-alphabetic',
    vHanging: 'v-hanging',
    vIdeographic: 'v-ideographic',
    vMathematical: 'v-mathematical',
    vectorEffect: 'vector-effect',
    vertAdvY: 'vert-adv-y',
    vertOriginX: 'vert-origin-x',
    vertOriginY: 'vert-origin-y',
    wordSpacing: 'word-spacing',
    writingMode: 'writing-mode',
    xHeight: 'x-height',
    // These were camelcased in Tiny. Now lowercased in SVG 2
    playbackOrder: 'playbackorder',
    timelineBegin: 'timelinebegin'
  },
  transform: caseSensitiveTransform,
  properties: {
    about: commaOrSpaceSeparated,
    accentHeight: number,
    accumulate: null,
    additive: null,
    alignmentBaseline: null,
    alphabetic: number,
    amplitude: number,
    arabicForm: null,
    ascent: number,
    attributeName: null,
    attributeType: null,
    azimuth: number,
    bandwidth: null,
    baselineShift: null,
    baseFrequency: null,
    baseProfile: null,
    bbox: null,
    begin: null,
    bias: number,
    by: null,
    calcMode: null,
    capHeight: number,
    className: spaceSeparated,
    clip: null,
    clipPath: null,
    clipPathUnits: null,
    clipRule: null,
    color: null,
    colorInterpolation: null,
    colorInterpolationFilters: null,
    colorProfile: null,
    colorRendering: null,
    content: null,
    contentScriptType: null,
    contentStyleType: null,
    crossOrigin: null,
    cursor: null,
    cx: null,
    cy: null,
    d: null,
    dataType: null,
    defaultAction: null,
    descent: number,
    diffuseConstant: number,
    direction: null,
    display: null,
    dur: null,
    divisor: number,
    dominantBaseline: null,
    download: types_boolean,
    dx: null,
    dy: null,
    edgeMode: null,
    editable: null,
    elevation: number,
    enableBackground: null,
    end: null,
    event: null,
    exponent: number,
    externalResourcesRequired: null,
    fill: null,
    fillOpacity: number,
    fillRule: null,
    filter: null,
    filterRes: null,
    filterUnits: null,
    floodColor: null,
    floodOpacity: null,
    focusable: null,
    focusHighlight: null,
    fontFamily: null,
    fontSize: null,
    fontSizeAdjust: null,
    fontStretch: null,
    fontStyle: null,
    fontVariant: null,
    fontWeight: null,
    format: null,
    fr: null,
    from: null,
    fx: null,
    fy: null,
    g1: commaSeparated,
    g2: commaSeparated,
    glyphName: commaSeparated,
    glyphOrientationHorizontal: null,
    glyphOrientationVertical: null,
    glyphRef: null,
    gradientTransform: null,
    gradientUnits: null,
    handler: null,
    hanging: number,
    hatchContentUnits: null,
    hatchUnits: null,
    height: null,
    href: null,
    hrefLang: null,
    horizAdvX: number,
    horizOriginX: number,
    horizOriginY: number,
    id: null,
    ideographic: number,
    imageRendering: null,
    initialVisibility: null,
    in: null,
    in2: null,
    intercept: number,
    k: number,
    k1: number,
    k2: number,
    k3: number,
    k4: number,
    kernelMatrix: commaOrSpaceSeparated,
    kernelUnitLength: null,
    keyPoints: null,
    // SEMI_COLON_SEPARATED
    keySplines: null,
    // SEMI_COLON_SEPARATED
    keyTimes: null,
    // SEMI_COLON_SEPARATED
    kerning: null,
    lang: null,
    lengthAdjust: null,
    letterSpacing: null,
    lightingColor: null,
    limitingConeAngle: number,
    local: null,
    markerEnd: null,
    markerMid: null,
    markerStart: null,
    markerHeight: null,
    markerUnits: null,
    markerWidth: null,
    mask: null,
    maskContentUnits: null,
    maskUnits: null,
    mathematical: null,
    max: null,
    media: null,
    mediaCharacterEncoding: null,
    mediaContentEncodings: null,
    mediaSize: number,
    mediaTime: null,
    method: null,
    min: null,
    mode: null,
    name: null,
    navDown: null,
    navDownLeft: null,
    navDownRight: null,
    navLeft: null,
    navNext: null,
    navPrev: null,
    navRight: null,
    navUp: null,
    navUpLeft: null,
    navUpRight: null,
    numOctaves: null,
    observer: null,
    offset: null,
    onAbort: null,
    onActivate: null,
    onAfterPrint: null,
    onBeforePrint: null,
    onBegin: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnd: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFocusIn: null,
    onFocusOut: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadStart: null,
    onMessage: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onMouseWheel: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRepeat: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onShow: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onZoom: null,
    opacity: null,
    operator: null,
    order: null,
    orient: null,
    orientation: null,
    origin: null,
    overflow: null,
    overlay: null,
    overlinePosition: number,
    overlineThickness: number,
    paintOrder: null,
    panose1: null,
    path: null,
    pathLength: number,
    patternContentUnits: null,
    patternTransform: null,
    patternUnits: null,
    phase: null,
    ping: spaceSeparated,
    pitch: null,
    playbackOrder: null,
    pointerEvents: null,
    points: null,
    pointsAtX: number,
    pointsAtY: number,
    pointsAtZ: number,
    preserveAlpha: null,
    preserveAspectRatio: null,
    primitiveUnits: null,
    propagate: null,
    property: commaOrSpaceSeparated,
    r: null,
    radius: null,
    referrerPolicy: null,
    refX: null,
    refY: null,
    rel: commaOrSpaceSeparated,
    rev: commaOrSpaceSeparated,
    renderingIntent: null,
    repeatCount: null,
    repeatDur: null,
    requiredExtensions: commaOrSpaceSeparated,
    requiredFeatures: commaOrSpaceSeparated,
    requiredFonts: commaOrSpaceSeparated,
    requiredFormats: commaOrSpaceSeparated,
    resource: null,
    restart: null,
    result: null,
    rotate: null,
    rx: null,
    ry: null,
    scale: null,
    seed: null,
    shapeRendering: null,
    side: null,
    slope: null,
    snapshotTime: null,
    specularConstant: number,
    specularExponent: number,
    spreadMethod: null,
    spacing: null,
    startOffset: null,
    stdDeviation: null,
    stemh: null,
    stemv: null,
    stitchTiles: null,
    stopColor: null,
    stopOpacity: null,
    strikethroughPosition: number,
    strikethroughThickness: number,
    string: null,
    stroke: null,
    strokeDashArray: commaOrSpaceSeparated,
    strokeDashOffset: null,
    strokeLineCap: null,
    strokeLineJoin: null,
    strokeMiterLimit: number,
    strokeOpacity: number,
    strokeWidth: null,
    style: null,
    surfaceScale: number,
    syncBehavior: null,
    syncBehaviorDefault: null,
    syncMaster: null,
    syncTolerance: null,
    syncToleranceDefault: null,
    systemLanguage: commaOrSpaceSeparated,
    tabIndex: number,
    tableValues: null,
    target: null,
    targetX: number,
    targetY: number,
    textAnchor: null,
    textDecoration: null,
    textRendering: null,
    textLength: null,
    timelineBegin: null,
    title: null,
    transformBehavior: null,
    type: null,
    typeOf: commaOrSpaceSeparated,
    to: null,
    transform: null,
    u1: null,
    u2: null,
    underlinePosition: number,
    underlineThickness: number,
    unicode: null,
    unicodeBidi: null,
    unicodeRange: null,
    unitsPerEm: number,
    values: null,
    vAlphabetic: number,
    vMathematical: number,
    vectorEffect: null,
    vHanging: number,
    vIdeographic: number,
    version: null,
    vertAdvY: number,
    vertOriginX: number,
    vertOriginY: number,
    viewBox: null,
    viewTarget: null,
    visibility: null,
    width: null,
    widths: null,
    wordSpacing: null,
    writingMode: null,
    x: null,
    x1: null,
    x2: null,
    xChannelSelector: null,
    xHeight: number,
    y: null,
    y1: null,
    y2: null,
    yChannelSelector: null,
    z: null,
    zoomAndPan: null
  }
});
;// CONCATENATED MODULE: ./node_modules/property-information/index.js
/**
 * @typedef {import('./lib/util/info.js').Info} Info
 * @typedef {import('./lib/util/schema.js').Schema} Schema
 */










var property_information_html = merge([xml, xlink, xmlns, aria, html], 'html');
var property_information_svg = merge([xml, xlink, xmlns, aria, svg], 'svg');
;// CONCATENATED MODULE: ./node_modules/property-information/lib/find.js
/**
 * @typedef {import('./util/schema.js').Schema} Schema
 */



var valid = /^data[-\w.:]+$/i;
var dash = /-[a-z]/g;
var cap = /[A-Z]/g;
/**
 * @param {Schema} schema
 * @param {string} value
 * @returns {Info}
 */

function find(schema, value) {
  var normal = normalize_normalize(value);
  var prop = value;
  var Type = Info;

  if (normal in schema.normal) {
    return schema.property[schema.normal[normal]];
  }

  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {
    // Attribute or property.
    if (value.charAt(4) === '-') {
      // Turn it into a property.
      var rest = value.slice(5).replace(dash, camelcase);
      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1);
    } else {
      // Turn it into an attribute.
      var _rest = value.slice(4);

      if (!dash.test(_rest)) {
        var dashes = _rest.replace(cap, kebab);

        if (dashes.charAt(0) !== '-') {
          dashes = '-' + dashes;
        }

        value = 'data' + dashes;
      }
    }

    Type = DefinedInfo;
  }

  return new Type(prop, value);
}
/**
 * @param {string} $0
 * @returns {string}
 */

function kebab($0) {
  return '-' + $0.toLowerCase();
}
/**
 * @param {string} $0
 * @returns {string}
 */


function camelcase($0) {
  return $0.charAt(1).toUpperCase();
}
;// CONCATENATED MODULE: ./node_modules/hast-util-parse-selector/index.js
/**
 * @typedef {import('hast').Properties} Properties
 * @typedef {import('hast').Element} Element
 */
var search = /[#.]/g;
/**
 * Create a hast element from a simple CSS selector.
 *
 * @param selector A simple CSS selector.
 *   Can contain a tag-name (`foo`), classes (`.bar`), and an ID (`#baz`).
 *   Multiple classes are allowed.
 *   Uses the last ID if multiple IDs are found.
 * @param [defaultTagName='div'] Tag name to use if `selector` does not specify one.
 */

var parseSelector =
/**
 * @type {(
 *  <Selector extends string, DefaultTagName extends string = 'div'>(selector?: Selector, defaultTagName?: DefaultTagName) => Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}
 * )}
 */

/**
 * @param {string} [selector]
 * @param {string} [defaultTagName='div']
 * @returns {Element}
 */
function parseSelector(selector) {
  var defaultTagName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'div';
  var value = selector || '';
  /** @type {Properties} */

  var props = {};
  var start = 0;
  /** @type {string} */

  var subvalue;
  /** @type {string} */

  var previous;
  /** @type {RegExpMatchArray} */

  var match;

  while (start < value.length) {
    search.lastIndex = start;
    match = search.exec(value);
    subvalue = value.slice(start, match ? match.index : value.length);

    if (subvalue) {
      if (!previous) {
        defaultTagName = subvalue;
      } else if (previous === '#') {
        props.id = subvalue;
      } else if (Array.isArray(props.className)) {
        props.className.push(subvalue);
      } else {
        props.className = [subvalue];
      }

      start += subvalue.length;
    }

    if (match) {
      previous = match[0];
      start++;
    }
  }

  return {
    type: 'element',
    tagName: defaultTagName,
    properties: props,
    children: []
  };
};
;// CONCATENATED MODULE: ./node_modules/space-separated-tokens/index.js
/**
 * Parse space separated tokens to an array of strings.
 *
 * @param {string} value Space separated tokens
 * @returns {Array.<string>} Tokens
 */
function space_separated_tokens_parse(value) {
  var input = String(value || '').trim();
  return input ? input.split(/[ \t\n\r\f]+/g) : [];
}
/**
 * Serialize an array of strings as space separated tokens.
 *
 * @param {Array.<string|number>} values Tokens
 * @returns {string} Space separated tokens
 */

function space_separated_tokens_stringify(values) {
  return values.join(' ').trim();
}
;// CONCATENATED MODULE: ./node_modules/comma-separated-tokens/index.js
/**
 * @typedef {Object} StringifyOptions
 * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).
 * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).
 */

/**
 * Parse comma separated tokens to an array.
 *
 * @param {string} value
 * @returns {Array.<string>}
 */
function comma_separated_tokens_parse(value) {
  /** @type {Array.<string>} */
  var tokens = [];
  var input = String(value || '');
  var index = input.indexOf(',');
  var start = 0;
  /** @type {boolean} */

  var end;
  /** @type {string} */

  var token;

  while (!end) {
    if (index === -1) {
      index = input.length;
      end = true;
    }

    token = input.slice(start, index).trim();

    if (token || !end) {
      tokens.push(token);
    }

    start = index + 1;
    index = input.indexOf(',', start);
  }

  return tokens;
}
/**
 * Serialize an array of strings to comma separated tokens.
 *
 * @param {Array.<string|number>} values
 * @param {StringifyOptions} [options]
 * @returns {string}
 */

function comma_separated_tokens_stringify(values, options) {
  var settings = options || {}; // Ensure the last empty entry is seen.

  if (values[values.length - 1] === '') {
    values = values.concat('');
  }

  return values.join((settings.padRight ? ' ' : '') + ',' + (settings.padLeft === false ? '' : ' ')).trim();
}
;// CONCATENATED MODULE: ./node_modules/hastscript/lib/core.js
/**
 * @typedef {import('hast').Root} Root
 * @typedef {import('hast').Element} Element
 * @typedef {import('hast').Properties} Properties
 * @typedef {Root['children'][number]} Child
 * @typedef {Child|Root} Node
 * @typedef {import('property-information').Info} Info
 * @typedef {import('property-information').Schema} Schema
 *
 * @typedef {Root|Element} HResult
 * @typedef {string|number} HStyleValue
 * @typedef {Object.<string, HStyleValue>} HStyle
 * @typedef {string|number|boolean|null|undefined} HPrimitiveValue
 * @typedef {Array.<string|number>} HArrayValue
 * @typedef {HPrimitiveValue|HArrayValue} HPropertyValue
 * @typedef {{[property: string]: HPropertyValue|HStyle}} HProperties
 *
 * @typedef {string|number|null|undefined} HPrimitiveChild
 * @typedef {Array.<Node|HPrimitiveChild>} HArrayChild
 * @typedef {Node|HPrimitiveChild|HArrayChild} HChild
 */




var buttonTypes = new Set(['menu', 'submit', 'reset', 'button']);
var core_own = {}.hasOwnProperty;
/**
 * @param {Schema} schema
 * @param {string} defaultTagName
 * @param {Array.<string>} [caseSensitive]
 */

function core_core(schema, defaultTagName, caseSensitive) {
  var adjust = caseSensitive && createAdjustMap(caseSensitive);

  var h =
  /**
   * @type {{
   *   (): Root
   *   (selector: null|undefined, ...children: HChild[]): Root
   *   (selector: string, properties?: HProperties, ...children: HChild[]): Element
   *   (selector: string, ...children: HChild[]): Element
   * }}
   */

  /**
   * Hyperscript compatible DSL for creating virtual hast trees.
   *
   * @param {string|null} [selector]
   * @param {HProperties|HChild} [properties]
   * @param {HChild[]} children
   * @returns {HResult}
   */
  function h(selector, properties) {
    var index = -1;
    /** @type {HResult} */

    var node;

    for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      children[_key - 2] = arguments[_key];
    }

    if (selector === undefined || selector === null) {
      node = {
        type: 'root',
        children: []
      }; // @ts-expect-error Properties are not supported for roots.

      children.unshift(properties);
    } else {
      node = parseSelector(selector, defaultTagName); // Normalize the name.

      node.tagName = node.tagName.toLowerCase();

      if (adjust && core_own.call(adjust, node.tagName)) {
        node.tagName = adjust[node.tagName];
      } // Handle props.


      if (isProperties(properties, node.tagName)) {
        /** @type {string} */
        var key;

        for (key in properties) {
          if (core_own.call(properties, key)) {
            // @ts-expect-error `node.properties` is set.
            addProperty(schema, node.properties, key, properties[key]);
          }
        }
      } else {
        children.unshift(properties);
      }
    } // Handle children.


    while (++index < children.length) {
      addChild(node.children, children[index]);
    }

    if (node.type === 'element' && node.tagName === 'template') {
      node.content = {
        type: 'root',
        children: node.children
      };
      node.children = [];
    }

    return node;
  };

  return h;
}
/**
 * @param {HProperties|HChild} value
 * @param {string} name
 * @returns {value is HProperties}
 */

function isProperties(value, name) {
  if (value === null || value === undefined || typeof value !== 'object' || Array.isArray(value)) {
    return false;
  }

  if (name === 'input' || !value.type || typeof value.type !== 'string') {
    return true;
  }

  if ('children' in value && Array.isArray(value.children)) {
    return false;
  }

  if (name === 'button') {
    return buttonTypes.has(value.type.toLowerCase());
  }

  return !('value' in value);
}
/**
 * @param {Schema} schema
 * @param {Properties} properties
 * @param {string} key
 * @param {HStyle|HPropertyValue} value
 * @returns {void}
 */


function addProperty(schema, properties, key, value) {
  var info = find(schema, key);
  var index = -1;
  /** @type {HPropertyValue} */

  var result; // Ignore nullish and NaN values.

  if (value === undefined || value === null) return;

  if (typeof value === 'number') {
    // Ignore NaN.
    if (Number.isNaN(value)) return;
    result = value;
  } // Booleans.
  else if (typeof value === 'boolean') {
    result = value;
  } // Handle list values.
  else if (typeof value === 'string') {
    if (info.spaceSeparated) {
      result = space_separated_tokens_parse(value);
    } else if (info.commaSeparated) {
      result = comma_separated_tokens_parse(value);
    } else if (info.commaOrSpaceSeparated) {
      result = space_separated_tokens_parse(comma_separated_tokens_parse(value).join(' '));
    } else {
      result = parsePrimitive(info, info.property, value);
    }
  } else if (Array.isArray(value)) {
    result = value.concat();
  } else {
    result = info.property === 'style' ? style(value) : String(value);
  }

  if (Array.isArray(result)) {
    /** @type {Array.<string|number>} */
    var finalResult = [];

    while (++index < result.length) {
      // @ts-expect-error Assume no booleans in array.
      finalResult[index] = parsePrimitive(info, info.property, result[index]);
    }

    result = finalResult;
  } // Class names (which can be added both on the `selector` and here).


  if (info.property === 'className' && Array.isArray(properties.className)) {
    // @ts-expect-error Assume no booleans in `className`.
    result = properties.className.concat(result);
  }

  properties[info.property] = result;
}
/**
 * @param {Array.<Child>} nodes
 * @param {HChild} value
 * @returns {void}
 */


function addChild(nodes, value) {
  var index = -1;

  if (value === undefined || value === null) {// Empty.
  } else if (typeof value === 'string' || typeof value === 'number') {
    nodes.push({
      type: 'text',
      value: String(value)
    });
  } else if (Array.isArray(value)) {
    while (++index < value.length) {
      addChild(nodes, value[index]);
    }
  } else if (typeof value === 'object' && 'type' in value) {
    if (value.type === 'root') {
      addChild(nodes, value.children);
    } else {
      nodes.push(value);
    }
  } else {
    throw new Error('Expected node, nodes, or string, got `' + value + '`');
  }
}
/**
 * Parse a single primitives.
 *
 * @param {Info} info
 * @param {string} name
 * @param {HPrimitiveValue} value
 * @returns {HPrimitiveValue}
 */


function parsePrimitive(info, name, value) {
  if (typeof value === 'string') {
    if (info.number && value && !Number.isNaN(Number(value))) {
      return Number(value);
    }

    if ((info.boolean || info.overloadedBoolean) && (value === '' || normalize_normalize(value) === normalize_normalize(name))) {
      return true;
    }
  }

  return value;
}
/**
 * @param {HStyle} value
 * @returns {string}
 */


function style(value) {
  /** @type {Array.<string>} */
  var result = [];
  /** @type {string} */

  var key;

  for (key in value) {
    if (core_own.call(value, key)) {
      result.push([key, value[key]].join(': '));
    }
  }

  return result.join('; ');
}
/**
 * @param {Array.<string>} values
 * @returns {Object.<string, string>}
 */


function createAdjustMap(values) {
  /** @type {Object.<string, string>} */
  var result = {};
  var index = -1;

  while (++index < values.length) {
    result[values[index].toLowerCase()] = values[index];
  }

  return result;
}
;// CONCATENATED MODULE: ./node_modules/hastscript/lib/svg-case-sensitive-tag-names.js
var svgCaseSensitiveTagNames = ['altGlyph', 'altGlyphDef', 'altGlyphItem', 'animateColor', 'animateMotion', 'animateTransform', 'clipPath', 'feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence', 'foreignObject', 'glyphRef', 'linearGradient', 'radialGradient', 'solidColor', 'textArea', 'textPath'];
;// CONCATENATED MODULE: ./node_modules/hastscript/lib/svg.js
/**
 * @typedef {import('./core.js').HChild} Child Acceptable child value
 * @typedef {import('./core.js').HProperties} Properties Acceptable properties value.
 *
 * @typedef {import('./jsx-classic').Element} s.JSX.Element
 * @typedef {import('./jsx-classic').IntrinsicAttributes} s.JSX.IntrinsicAttributes
 * @typedef {import('./jsx-classic').IntrinsicElements} s.JSX.IntrinsicElements
 * @typedef {import('./jsx-classic').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute
 */



var svg_s = core_core(property_information_svg, 'g', svgCaseSensitiveTagNames);
;// CONCATENATED MODULE: ./node_modules/hastscript/lib/html.js
/**
 * @typedef {import('./core.js').HChild} Child Acceptable child value
 * @typedef {import('./core.js').HProperties} Properties Acceptable properties value.
 *
 * @typedef {import('./jsx-classic').Element} h.JSX.Element
 * @typedef {import('./jsx-classic').IntrinsicAttributes} h.JSX.IntrinsicAttributes
 * @typedef {import('./jsx-classic').IntrinsicElements} h.JSX.IntrinsicElements
 * @typedef {import('./jsx-classic').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute
 */


var html_h = core_core(property_information_html, 'div');
;// CONCATENATED MODULE: ./node_modules/vfile-location/index.js
/**
 * @typedef {import('unist').Point} Point
 * @typedef {import('vfile').VFile} VFile
 *
 * @typedef {Pick<Point, 'line'|'column'>} PositionalPoint
 * @typedef {Required<Point>} FullPoint
 * @typedef {NonNullable<Point['offset']>} Offset
 */

/**
 * Get transform functions for the given `document`.
 *
 * @param {string|Uint8Array|VFile} file
 */
function vfile_location_location(file) {
  var value = String(file);
  /** @type {Array.<number>} */

  var indices = [];
  var search = /\r?\n|\r/g;

  while (search.test(value)) {
    indices.push(search.lastIndex);
  }

  indices.push(value.length + 1);
  return {
    toPoint: toPoint,
    toOffset: toOffset
  };
  /**
   * Get the line and column-based `point` for `offset` in the bound indices.
   * Returns a point with `undefined` values when given invalid or out of bounds
   * input.
   *
   * @param {Offset} offset
   * @returns {FullPoint}
   */

  function toPoint(offset) {
    var index = -1;

    if (offset > -1 && offset < indices[indices.length - 1]) {
      while (++index < indices.length) {
        if (indices[index] > offset) {
          return {
            line: index + 1,
            column: offset - (indices[index - 1] || 0) + 1,
            offset: offset
          };
        }
      }
    }

    return {
      line: undefined,
      column: undefined,
      offset: undefined
    };
  }
  /**
   * Get the `offset` for a line and column-based `point` in the bound indices.
   * Returns `-1` when given invalid or out of bounds input.
   *
   * @param {PositionalPoint} point
   * @returns {Offset}
   */


  function toOffset(point) {
    var line = point && point.line;
    var column = point && point.column;
    /** @type {number} */

    var offset;

    if (typeof line === 'number' && typeof column === 'number' && !Number.isNaN(line) && !Number.isNaN(column) && line - 1 in indices) {
      offset = (indices[line - 2] || 0) + column - 1 || 0;
    }

    return offset > -1 && offset < indices[indices.length - 1] ? offset : -1;
  }
}
;// CONCATENATED MODULE: ./node_modules/web-namespaces/index.js
/**
 * Map of web namespaces.
 *
 * @type {Record<string, string>}
 */
var webNamespaces = {
  html: 'http://www.w3.org/1999/xhtml',
  mathml: 'http://www.w3.org/1998/Math/MathML',
  svg: 'http://www.w3.org/2000/svg',
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace',
  xmlns: 'http://www.w3.org/2000/xmlns/'
};
;// CONCATENATED MODULE: ./node_modules/hast-util-from-parse5/lib/index.js
/**
 * @typedef {import('vfile').VFile} VFile
 * @typedef {import('property-information').Schema} Schema
 * @typedef {import('unist').Position} Position
 * @typedef {import('unist').Point} Point
 * @typedef {import('hast').Parent} Parent
 * @typedef {import('hast').Element} Element
 * @typedef {import('hast').Root} Root
 * @typedef {import('hast').Text} Text
 * @typedef {import('hast').Comment} Comment
 * @typedef {import('hast').DocType} Doctype
 * @typedef {Parent['children'][number]} Child
 * @typedef {Element['children'][number]} ElementChild
 * @typedef {Child|Root} Node
 * @typedef {import('parse5').Document} P5Document
 * @typedef {import('parse5').DocumentType} P5Doctype
 * @typedef {import('parse5').CommentNode} P5Comment
 * @typedef {import('parse5').TextNode} P5Text
 * @typedef {import('parse5').Element} P5Element
 * @typedef {import('parse5').ElementLocation} P5ElementLocation
 * @typedef {import('parse5').Location} P5Location
 * @typedef {import('parse5').Attribute} P5Attribute
 * @typedef {import('parse5').Node} P5Node
 *
 * @typedef {'html'|'svg'} Space
 *
 * @callback Handler
 * @param {Context} ctx
 * @param {P5Node} node
 * @param {Array.<Child>} [children]
 * @returns {Node}
 *
 * @typedef Options
 * @property {Space} [space='html'] Whether the root of the tree is in the `'html'` or `'svg'` space. If an element in with the SVG namespace is found in `ast`, `fromParse5` automatically switches to the SVG space when entering the element, and switches back when leaving
 * @property {VFile} [file] `VFile`, used to add positional information to nodes. If given, the file should have the original HTML source as its contents
 * @property {boolean} [verbose=false] Whether to add extra positional information about starting tags, closing tags, and attributes to elements. Note: not used without `file`
 *
 * @typedef Context
 * @property {Schema} schema
 * @property {VFile|undefined} file
 * @property {boolean|undefined} verbose
 * @property {boolean} location
 */




var lib_own = {}.hasOwnProperty; // Handlers.

var map = {
  '#document': root,
  '#document-fragment': root,
  '#text': lib_text,
  '#comment': comment,
  '#documentType': doctype
};
/**
 * Transform Parse5’s AST to a hast tree.
 *
 * @param {P5Node} ast
 * @param {Options|VFile} [options]
 */

function fromParse5(ast) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  /** @type {Options} */
  var settings;
  /** @type {VFile|undefined} */

  var file;

  if (isFile(options)) {
    file = options;
    settings = {};
  } else {
    file = options.file;
    settings = options;
  }

  return transform({
    schema: settings.space === 'svg' ? property_information_svg : property_information_html,
    file: file,
    verbose: settings.verbose,
    location: false
  }, ast);
}
/**
 * Transform children.
 *
 * @param {Context} ctx
 * @param {P5Node} ast
 * @returns {Node}
 */

function transform(ctx, ast) {
  var schema = ctx.schema;
  /** @type {Handler} */
  // @ts-expect-error: index is fine.

  var fn = lib_own.call(map, ast.nodeName) ? map[ast.nodeName] : lib_element;
  /** @type {Array.<Child>|undefined} */

  var children; // Element.

  if ('tagName' in ast) {
    ctx.schema = ast.namespaceURI === webNamespaces.svg ? property_information_svg : property_information_html;
  }

  if ('childNodes' in ast) {
    children = nodes(ctx, ast.childNodes);
  }

  var result = fn(ctx, ast, children);

  if ('sourceCodeLocation' in ast && ast.sourceCodeLocation && ctx.file) {
    // @ts-expect-error It’s fine.
    var _position = createLocation(ctx, result, ast.sourceCodeLocation);

    if (_position) {
      ctx.location = true;
      result.position = _position;
    }
  }

  ctx.schema = schema;
  return result;
}
/**
 * Transform children.
 *
 * @param {Context} ctx
 * @param {Array.<P5Node>} children
 * @returns {Array.<Child>}
 */


function nodes(ctx, children) {
  var index = -1;
  /** @type {Array.<Child>} */

  var result = [];

  while (++index < children.length) {
    // @ts-expect-error Assume no roots in children.
    result[index] = transform(ctx, children[index]);
  }

  return result;
}
/**
 * Transform a document.
 * Stores `ast.quirksMode` in `node.data.quirksMode`.
 *
 * @type {Handler}
 * @param {P5Document} ast
 * @param {Array.<Child>} children
 * @returns {Root}
 */


function root(ctx, ast, children) {
  /** @type {Root} */
  var result = {
    type: 'root',
    children: children,
    data: {
      quirksMode: ast.mode === 'quirks' || ast.mode === 'limited-quirks'
    }
  };

  if (ctx.file && ctx.location) {
    var doc = String(ctx.file);
    var loc = vfile_location_location(doc);
    result.position = {
      start: loc.toPoint(0),
      end: loc.toPoint(doc.length)
    };
  }

  return result;
}
/**
 * Transform a doctype.
 *
 * @type {Handler}
 * @returns {Doctype}
 */


function doctype() {
  // @ts-expect-error Types are out of date.
  return {
    type: 'doctype'
  };
}
/**
 * Transform a text.
 *
 * @type {Handler}
 * @param {P5Text} ast
 * @returns {Text}
 */


function lib_text(_, ast) {
  return {
    type: 'text',
    value: ast.value
  };
}
/**
 * Transform a comment.
 *
 * @type {Handler}
 * @param {P5Comment} ast
 * @returns {Comment}
 */


function comment(_, ast) {
  return {
    type: 'comment',
    value: ast.data
  };
}
/**
 * Transform an element.
 *
 * @type {Handler}
 * @param {P5Element} ast
 * @param {Array.<ElementChild>} children
 * @returns {Element}
 */


function lib_element(ctx, ast, children) {
  var fn = ctx.schema.space === 'svg' ? svg_s : html_h;
  var index = -1;
  /** @type {Object.<string, string>} */

  var props = {};

  while (++index < ast.attrs.length) {
    var attribute = ast.attrs[index];
    props[(attribute.prefix ? attribute.prefix + ':' : '') + attribute.name] = attribute.value;
  }

  var result = fn(ast.tagName, props, children);

  if (result.tagName === 'template' && 'content' in ast) {
    var pos = ast.sourceCodeLocation;
    var startTag = pos && pos.startTag && lib_position(pos.startTag);
    var endTag = pos && pos.endTag && lib_position(pos.endTag);
    /** @type {Root} */
    // @ts-expect-error Types are wrong.

    var content = transform(ctx, ast.content);

    if (startTag && endTag && ctx.file) {
      content.position = {
        start: startTag.end,
        end: endTag.start
      };
    }

    result.content = content;
  }

  return result;
}
/**
 * Create clean positional information.
 *
 * @param {Context} ctx
 * @param {Node} node
 * @param {P5ElementLocation} location
 * @returns {Position|null}
 */


function createLocation(ctx, node, location) {
  var result = lib_position(location);

  if (node.type === 'element') {
    var tail = node.children[node.children.length - 1]; // Bug for unclosed with children.
    // See: <https://github.com/inikulin/parse5/issues/109>.

    if (result && !location.endTag && tail && tail.position && tail.position.end) {
      result.end = Object.assign({}, tail.position.end);
    }

    if (ctx.verbose) {
      /** @type {Object.<string, Position|null>} */
      var props = {};
      /** @type {string} */

      var key;

      for (key in location.attrs) {
        if (lib_own.call(location.attrs, key)) {
          props[find(ctx.schema, key).property] = lib_position(location.attrs[key]);
        }
      }

      node.data = {
        position: {
          opening: lib_position(location.startTag),
          closing: location.endTag ? lib_position(location.endTag) : null,
          properties: props
        }
      };
    }
  }

  return result;
}
/**
 * @param {P5Location} loc
 * @returns {Position|null}
 */


function lib_position(loc) {
  var start = lib_point({
    line: loc.startLine,
    column: loc.startCol,
    offset: loc.startOffset
  });
  var end = lib_point({
    line: loc.endLine,
    column: loc.endCol,
    offset: loc.endOffset
  }); // @ts-expect-error `null` is fine.

  return start || end ? {
    start: start,
    end: end
  } : null;
}
/**
 * @param {Point} point
 * @returns {Point|null}
 */


function lib_point(point) {
  return point.line && point.column ? point : null;
}
/**
 * @param {VFile|Options} value
 * @returns {value is VFile}
 */


function isFile(value) {
  return 'messages' in value;
}
;// CONCATENATED MODULE: ./node_modules/rehype-parse/lib/errors.js
var errors = {
  abandonedHeadElementChild: {
    reason: 'Unexpected metadata element after head',
    description: 'Unexpected element after head. Expected the element before `</head>`',
    url: false
  },
  abruptClosingOfEmptyComment: {
    reason: 'Unexpected abruptly closed empty comment',
    description: 'Unexpected `>` or `->`. Expected `-->` to close comments'
  },
  abruptDoctypePublicIdentifier: {
    reason: 'Unexpected abruptly closed public identifier',
    description: 'Unexpected `>`. Expected a closing `"` or `\'` after the public identifier'
  },
  abruptDoctypeSystemIdentifier: {
    reason: 'Unexpected abruptly closed system identifier',
    description: 'Unexpected `>`. Expected a closing `"` or `\'` after the identifier identifier'
  },
  absenceOfDigitsInNumericCharacterReference: {
    reason: 'Unexpected non-digit at start of numeric character reference',
    description: 'Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references'
  },
  cdataInHtmlContent: {
    reason: 'Unexpected CDATA section in HTML',
    description: 'Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead'
  },
  characterReferenceOutsideUnicodeRange: {
    reason: 'Unexpected too big numeric character reference',
    description: 'Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)'
  },
  closingOfElementWithOpenChildElements: {
    reason: 'Unexpected closing tag with open child elements',
    description: 'Unexpectedly closing tag. Expected other tags to be closed first',
    url: false
  },
  controlCharacterInInputStream: {
    reason: 'Unexpected control character',
    description: 'Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace'
  },
  controlCharacterReference: {
    reason: 'Unexpected control character reference',
    description: 'Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace'
  },
  disallowedContentInNoscriptInHead: {
    reason: 'Disallowed content inside `<noscript>` in `<head>`',
    description: 'Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`',
    url: false
  },
  duplicateAttribute: {
    reason: 'Unexpected duplicate attribute',
    description: 'Unexpectedly double attribute. Expected attributes to occur only once'
  },
  endTagWithAttributes: {
    reason: 'Unexpected attribute on closing tag',
    description: 'Unexpected attribute. Expected `>` instead'
  },
  endTagWithTrailingSolidus: {
    reason: 'Unexpected slash at end of closing tag',
    description: 'Unexpected `%c-1`. Expected `>` instead'
  },
  endTagWithoutMatchingOpenElement: {
    reason: 'Unexpected unopened end tag',
    description: 'Unexpected end tag. Expected no end tag or another end tag',
    url: false
  },
  eofBeforeTagName: {
    reason: 'Unexpected end of file',
    description: 'Unexpected end of file. Expected tag name instead'
  },
  eofInCdata: {
    reason: 'Unexpected end of file in CDATA',
    description: 'Unexpected end of file. Expected `]]>` to close the CDATA'
  },
  eofInComment: {
    reason: 'Unexpected end of file in comment',
    description: 'Unexpected end of file. Expected `-->` to close the comment'
  },
  eofInDoctype: {
    reason: 'Unexpected end of file in doctype',
    description: 'Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)'
  },
  eofInElementThatCanContainOnlyText: {
    reason: 'Unexpected end of file in element that can only contain text',
    description: 'Unexpected end of file. Expected text or a closing tag',
    url: false
  },
  eofInScriptHtmlCommentLikeText: {
    reason: 'Unexpected end of file in comment inside script',
    description: 'Unexpected end of file. Expected `-->` to close the comment'
  },
  eofInTag: {
    reason: 'Unexpected end of file in tag',
    description: 'Unexpected end of file. Expected `>` to close the tag'
  },
  incorrectlyClosedComment: {
    reason: 'Incorrectly closed comment',
    description: 'Unexpected `%c-1`. Expected `-->` to close the comment'
  },
  incorrectlyOpenedComment: {
    reason: 'Incorrectly opened comment',
    description: 'Unexpected `%c`. Expected `<!--` to open the comment'
  },
  invalidCharacterSequenceAfterDoctypeName: {
    reason: 'Invalid sequence after doctype name',
    description: 'Unexpected sequence at `%c`. Expected `public` or `system`'
  },
  invalidFirstCharacterOfTagName: {
    reason: 'Invalid first character in tag name',
    description: 'Unexpected `%c`. Expected an ASCII letter instead'
  },
  misplacedDoctype: {
    reason: 'Misplaced doctype',
    description: 'Unexpected doctype. Expected doctype before head',
    url: false
  },
  misplacedStartTagForHeadElement: {
    reason: 'Misplaced `<head>` start tag',
    description: 'Unexpected start tag `<head>`. Expected `<head>` directly after doctype',
    url: false
  },
  missingAttributeValue: {
    reason: 'Missing attribute value',
    description: 'Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead'
  },
  missingDoctype: {
    reason: 'Missing doctype before other content',
    description: 'Expected a `<!doctype html>` before anything else',
    url: false
  },
  missingDoctypeName: {
    reason: 'Missing doctype name',
    description: 'Unexpected doctype end at `%c`. Expected `html` instead'
  },
  missingDoctypePublicIdentifier: {
    reason: 'Missing public identifier in doctype',
    description: 'Unexpected `%c`. Expected identifier for `public` instead'
  },
  missingDoctypeSystemIdentifier: {
    reason: 'Missing system identifier in doctype',
    description: 'Unexpected `%c`. Expected identifier for `system` instead (suggested: `"about:legacy-compat"`)'
  },
  missingEndTagName: {
    reason: 'Missing name in end tag',
    description: 'Unexpected `%c`. Expected an ASCII letter instead'
  },
  missingQuoteBeforeDoctypePublicIdentifier: {
    reason: 'Missing quote before public identifier in doctype',
    description: 'Unexpected `%c`. Expected `"` or `\'` instead'
  },
  missingQuoteBeforeDoctypeSystemIdentifier: {
    reason: 'Missing quote before system identifier in doctype',
    description: 'Unexpected `%c`. Expected `"` or `\'` instead'
  },
  missingSemicolonAfterCharacterReference: {
    reason: 'Missing semicolon after character reference',
    description: 'Unexpected `%c`. Expected `;` instead'
  },
  missingWhitespaceAfterDoctypePublicKeyword: {
    reason: 'Missing whitespace after public identifier in doctype',
    description: 'Unexpected `%c`. Expected ASCII whitespace instead'
  },
  missingWhitespaceAfterDoctypeSystemKeyword: {
    reason: 'Missing whitespace after system identifier in doctype',
    description: 'Unexpected `%c`. Expected ASCII whitespace instead'
  },
  missingWhitespaceBeforeDoctypeName: {
    reason: 'Missing whitespace before doctype name',
    description: 'Unexpected `%c`. Expected ASCII whitespace instead'
  },
  missingWhitespaceBetweenAttributes: {
    reason: 'Missing whitespace between attributes',
    description: 'Unexpected `%c`. Expected ASCII whitespace instead'
  },
  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {
    reason: 'Missing whitespace between public and system identifiers in doctype',
    description: 'Unexpected `%c`. Expected ASCII whitespace instead'
  },
  nestedComment: {
    reason: 'Unexpected nested comment',
    description: 'Unexpected `<!--`. Expected `-->`'
  },
  nestedNoscriptInHead: {
    reason: 'Unexpected nested `<noscript>` in `<head>`',
    description: 'Unexpected `<noscript>`. Expected a closing tag or a meta element',
    url: false
  },
  nonConformingDoctype: {
    reason: 'Unexpected non-conforming doctype declaration',
    description: 'Expected `<!doctype html>` or `<!doctype html system "about:legacy-compat">`',
    url: false
  },
  nonVoidHtmlElementStartTagWithTrailingSolidus: {
    reason: 'Unexpected trailing slash on start tag of non-void element',
    description: 'Unexpected `/`. Expected `>` instead'
  },
  noncharacterCharacterReference: {
    reason: 'Unexpected noncharacter code point referenced by character reference',
    description: 'Unexpected code point. Do not use noncharacters in HTML'
  },
  noncharacterInInputStream: {
    reason: 'Unexpected noncharacter character',
    description: 'Unexpected code point `%x`. Do not use noncharacters in HTML'
  },
  nullCharacterReference: {
    reason: 'Unexpected NULL character referenced by character reference',
    description: 'Unexpected code point. Do not use NULL characters in HTML'
  },
  openElementsLeftAfterEof: {
    reason: 'Unexpected end of file',
    description: 'Unexpected end of file. Expected closing tag instead',
    url: false
  },
  surrogateCharacterReference: {
    reason: 'Unexpected surrogate character referenced by character reference',
    description: 'Unexpected code point. Do not use lone surrogate characters in HTML'
  },
  surrogateInInputStream: {
    reason: 'Unexpected surrogate character',
    description: 'Unexpected code point `%x`. Do not use lone surrogate characters in HTML'
  },
  unexpectedCharacterAfterDoctypeSystemIdentifier: {
    reason: 'Invalid character after system identifier in doctype',
    description: 'Unexpected character at `%c`. Expected `>`'
  },
  unexpectedCharacterInAttributeName: {
    reason: 'Unexpected character in attribute name',
    description: 'Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter'
  },
  unexpectedCharacterInUnquotedAttributeValue: {
    reason: 'Unexpected character in unquoted attribute value',
    description: 'Unexpected `%c`. Quote the attribute value to include it'
  },
  unexpectedEqualsSignBeforeAttributeName: {
    reason: 'Unexpected equals sign before attribute name',
    description: 'Unexpected `%c`. Add an attribute name before it'
  },
  unexpectedNullCharacter: {
    reason: 'Unexpected NULL character',
    description: 'Unexpected code point `%x`. Do not use NULL characters in HTML'
  },
  unexpectedQuestionMarkInsteadOfTagName: {
    reason: 'Unexpected question mark instead of tag name',
    description: 'Unexpected `%c`. Expected an ASCII letter instead'
  },
  unexpectedSolidusInTag: {
    reason: 'Unexpected slash in tag',
    description: 'Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value'
  },
  unknownNamedCharacterReference: {
    reason: 'Unexpected unknown named character reference',
    description: 'Unexpected character reference. Expected known named character references'
  }
};
;// CONCATENATED MODULE: ./node_modules/rehype-parse/lib/index.js
/**
 * @typedef {import('hast').Root} Root
 * @typedef {Pick<import('hast-util-from-parse5').Options, 'space' | 'verbose'>} FromParse5Options
 *
 * @typedef {keyof errors} ErrorCode
 * @typedef {0|1|2|boolean|null|undefined} ErrorSeverity
 * @typedef {Partial<Record<ErrorCode, ErrorSeverity>>} ErrorFields
 *
 * @typedef ParseFields
 * @property {boolean|undefined} [fragment=false]
 *   Specify whether to parse a fragment, instead of a complete document.
 *   In document mode, unopened `html`, `head`, and `body` elements are opened
 *   in just the right places.
 * @property {boolean|undefined} [emitParseErrors=false]
 *   > ⚠️ Parse errors are currently being added to HTML.
 *   > Not all errors emitted by parse5 (or rehype-parse) are specced yet.
 *   > Some documentation may still be missing.
 *
 *   Emit parse errors while parsing on the vfile.
 *   Setting this to `true` starts emitting HTML parse errors.
 *
 *   Specific rules can be turned off by setting them to `false` (or `0`).
 *   The default, when `emitParseErrors: true`, is `true` (or `1`), and means
 *   that rules emit as warnings.
 *   Rules can also be configured with `2`, to turn them into fatal errors.
 *
 * @typedef {FromParse5Options & ParseFields & ErrorFields} Options
 */
// @ts-expect-error: remove when typed



var lib_base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-';
var fatalities = {
  2: true,
  1: false,
  0: null
};
/** @type {import('unified').Plugin<[Options?] | Array<void>, string, Root>} */

function rehypeParse(options) {
  var processorSettings =
  /** @type {Options} */
  this.data('settings');
  var settings = Object.assign({}, processorSettings, options);
  Object.assign(this, {
    Parser: parser
  });
  /** @type {import('unified').ParserFunction<Root>} */

  function parser(doc, file) {
    var fn = settings.fragment ? 'parseFragment' : 'parse';
    var onParseError = settings.emitParseErrors ? onerror : null;
    var parse5 = new lib_parser({
      sourceCodeLocationInfo: true,
      onParseError: onParseError,
      scriptingEnabled: false
    }); // @ts-expect-error: `parse5` returns document or fragment, which are always
    // mapped to roots.

    return fromParse5(parse5[fn](doc), {
      space: settings.space,
      file: file,
      verbose: settings.verbose
    });
    /**
     * @param {{code: string, startLine: number, startCol: number, startOffset: number, endLine: number, endCol: number, endOffset: number}} error
     */

    function onerror(error) {
      var code = error.code;
      var name = lib_camelcase(code);
      var setting = settings[name];
      var config = setting === undefined || setting === null ? true : setting;
      var level = typeof config === 'number' ? config : config ? 1 : 0;
      var start = {
        line: error.startLine,
        column: error.startCol,
        offset: error.startOffset
      };
      var end = {
        line: error.endLine,
        column: error.endCol,
        offset: error.endOffset
      };

      if (level) {
        /* c8 ignore next */
        var info = errors[name] || {
          reason: '',
          description: '',
          url: ''
        };
        var message = file.message(format(info.reason), {
          start: start,
          end: end
        });
        message.source = 'parse-error';
        message.ruleId = code;
        message.fatal = fatalities[level];
        message.note = format(info.description);
        message.url = 'url' in info && info.url === false ? null : lib_base + code;
      }
      /**
       * @param {string} value
       * @returns {string}
       */


      function format(value) {
        return value.replace(/%c(?:-(\d+))?/g, function (_,
        /** @type {string} */
        $1) {
          var offset = $1 ? -Number.parseInt($1, 10) : 0;
          var char = doc.charAt(error.startOffset + offset);
          return char === '`' ? '` ` `' : char;
        }).replace(/%x/g, function () {
          return '0x' + doc.charCodeAt(error.startOffset).toString(16).toUpperCase();
        });
      }
    }
  }
}
/**
 * @param {string} value
 * @returns {ErrorCode}
 */

function lib_camelcase(value) {
  // @ts-expect-error: this returns a valid error code.
  return value.replace(/-[a-z]/g, function ($0) {
    return $0.charAt(1).toUpperCase();
  });
}
// EXTERNAL MODULE: ./node_modules/mathjax-full/js/output/chtml.js
var chtml = __webpack_require__(4597);
// EXTERNAL MODULE: ./node_modules/mathjax-full/js/mathjax.js
var mathjax = __webpack_require__(5667);
// EXTERNAL MODULE: ./node_modules/mathjax-full/js/handlers/html.js
var handlers_html = __webpack_require__(849);
// EXTERNAL MODULE: ./node_modules/mathjax-full/js/input/tex.js
var tex = __webpack_require__(7670);
// EXTERNAL MODULE: ./node_modules/mathjax-full/js/input/tex/AllPackages.js
var AllPackages = __webpack_require__(156);
;// CONCATENATED MODULE: ./node_modules/hast-util-from-dom/lib/index.js
/**
 * @typedef {import('hast').Parent} HastParent
 * @typedef {import('hast').Root} HastRoot
 * @typedef {import('hast').DocType} HastDoctype
 * @typedef {import('hast').Element} HastElement
 * @typedef {import('hast').Text} HastText
 * @typedef {import('hast').Comment} HastComment
 * @typedef {HastParent['children'][number]} HastChild
 * @typedef {HastChild|HastRoot} HastNode
 *
 * @callback AfterTransform
 *   Function called when a DOM node is transformed into a hast node
 * @param {Node} domNode
 *   The DOM node that was handled
 * @param {HastNode|undefined} hastNode
 *   The corresponding hast node
 * @returns {void}
 *
 * @typedef Options
 * @property {AfterTransform} [afterTransform]
 *
 * @typedef Context
 * @property {AfterTransform} [afterTransform]
 */


var ELEMENT_NODE = 1;
var TEXT_NODE = 3;
var COMMENT_NODE = 8;
var DOCUMENT_NODE = 9;
var DOCUMENT_TYPE_NODE = 10;
var DOCUMENT_FRAGMENT_NODE = 11;
/**
 * @param {Node} node
 * @param {Context} ctx
 * @returns {HastNode|undefined}
 */

function lib_transform(node, ctx) {
  var transformed = one(node, ctx);
  if (ctx.afterTransform) ctx.afterTransform(node, transformed);
  return transformed;
}
/**
 * @param {Node} node
 * @param {Context} ctx
 * @returns {HastNode|undefined}
 */


function one(node, ctx) {
  switch (node.nodeType) {
    case ELEMENT_NODE:
      // @ts-expect-error TypeScript is wrong.
      return hast_util_from_dom_lib_element(node, ctx);

    case DOCUMENT_NODE:
    case DOCUMENT_FRAGMENT_NODE:
      // @ts-expect-error TypeScript is wrong.
      return lib_root(node, ctx);

    case TEXT_NODE:
      // @ts-expect-error TypeScript is wrong.
      return hast_util_from_dom_lib_text(node);

    case COMMENT_NODE:
      // @ts-expect-error TypeScript is wrong.
      return lib_comment(node);

    case DOCUMENT_TYPE_NODE:
      return lib_doctype();

    default:
      return undefined;
  }
}
/**
 * Transform a document.
 *
 * @param {Document|DocumentFragment} node
 * @param {Context} ctx
 * @returns {HastRoot}
 */


function lib_root(node, ctx) {
  return {
    type: 'root',
    children: lib_all(node, ctx)
  };
}
/**
 * Transform a doctype.
 *
 * @returns {HastDoctype}
 */


function lib_doctype() {
  // @ts-expect-error hast types out of date.
  return {
    type: 'doctype'
  };
}
/**
 * Transform a text.
 *
 * @param {Text} node
 * @returns {HastText}
 */


function hast_util_from_dom_lib_text(node) {
  return {
    type: 'text',
    value: node.nodeValue || ''
  };
}
/**
 * Transform a comment.
 *
 * @param {Comment} node
 * @returns {HastComment}
 */


function lib_comment(node) {
  return {
    type: 'comment',
    value: node.nodeValue || ''
  };
}
/**
 * Transform an element.
 *
 * @param {Element} node
 * @param {Context} ctx
 * @returns {HastElement}
 */


function hast_util_from_dom_lib_element(node, ctx) {
  var space = node.namespaceURI;
  var fn = space === webNamespaces.svg ? svg_s : html_h;
  var tagName = space === webNamespaces.html ? node.tagName.toLowerCase() : node.tagName;
  /** @type {DocumentFragment|Element} */

  var content = // @ts-expect-error Types are wrong.
  space === webNamespaces.html && tagName === 'template' ? node.content : node;
  var attributes = node.getAttributeNames();
  /** @type {Object.<string, string>} */

  var props = {};
  var index = -1;

  while (++index < attributes.length) {
    props[attributes[index]] = node.getAttribute(attributes[index]) || '';
  }

  return fn(tagName, props, lib_all(content, ctx));
}
/**
 * Transform an element.
 *
 * @param {Document|DocumentFragment|Element} node
 * @param {Context} ctx
 * @returns {Array.<HastChild>}
 */


function lib_all(node, ctx) {
  var nodes = node.childNodes;
  /** @type {Array.<HastChild>} */

  var children = [];
  var index = -1;

  while (++index < nodes.length) {
    var child = lib_transform(nodes[index], ctx);

    if (child !== undefined) {
      // @ts-expect-error Assume no document inside document.
      children.push(child);
    }
  }

  return children;
}
/**
 * @param {Node} node
 * @param {Options} [options]
 * @returns {HastNode}
 */


function fromDom(node) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return lib_transform(node || {}, options) || {
    type: 'root',
    children: []
  };
}
;// CONCATENATED MODULE: ./node_modules/hast-util-is-element/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Parent} Parent
 * @typedef {import('hast').Element} Element
 *
 * @typedef {string} TagName
 * @typedef {null|undefined|TagName|TestFunctionAnything|Array.<TagName|TestFunctionAnything>} Test
 */

/**
 * @template {Element} T
 * @typedef {null|undefined|T['tagName']|TestFunctionPredicate<T>|Array.<T['tagName']|TestFunctionPredicate<T>>} PredicateTest
 */

/**
 * Check if an element passes a test
 *
 * @callback TestFunctionAnything
 * @param {Element} element
 * @param {number|null|undefined} [index]
 * @param {Parent|null|undefined} [parent]
 * @returns {boolean|void}
 */

/**
 * Check if an element passes a certain node test
 *
 * @template {Element} X
 * @callback TestFunctionPredicate
 * @param {Element} element
 * @param {number|null|undefined} [index]
 * @param {Parent|null|undefined} [parent]
 * @returns {element is X}
 */

/**
 * Check if a node is an element and passes a certain node test
 *
 * @callback AssertAnything
 * @param {unknown} [node]
 * @param {number|null|undefined} [index]
 * @param {Parent|null|undefined} [parent]
 * @returns {boolean}
 */

/**
 * Check if a node is an element and passes a certain node test
 *
 * @template {Element} Y
 * @callback AssertPredicate
 * @param {unknown} [node]
 * @param {number|null|undefined} [index]
 * @param {Parent|null|undefined} [parent]
 * @returns {node is Y}
 */
// Check if `node` is an `element` and whether it passes the given test.
var isElement =
/**
 * Check if a node is an element and passes a test.
 * When a `parent` node is known the `index` of node should also be given.
 *
 * @type {(
 *   (() => false) &
 *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &
 *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)
 * )}
 */

/**
 * Check if a node passes a test.
 * When a `parent` node is known the `index` of node should also be given.
 *
 * @param {unknown} [node] Node to check
 * @param {Test} [test] When nullish, checks if `node` is a `Node`.
 * When `string`, works like passing `function (node) {return node.type === test}`.
 * When `function` checks if function passed the node is true.
 * When `array`, checks any one of the subtests pass.
 * @param {number} [index] Position of `node` in `parent`
 * @param {Parent} [parent] Parent of `node`
 * @param {unknown} [context] Context object to invoke `test` with
 * @returns {boolean} Whether test passed and `node` is an `Element` (object with `type` set to `element` and `tagName` set to a non-empty string).
 */
// eslint-disable-next-line max-params
function isElement(node, test, index, parent, context) {
  var check = convertElement(test);

  if (index !== undefined && index !== null && (typeof index !== 'number' || index < 0 || index === Number.POSITIVE_INFINITY)) {
    throw new Error('Expected positive finite index for child node');
  }

  if (parent !== undefined && parent !== null && (!parent.type || !parent.children)) {
    throw new Error('Expected parent node');
  } // @ts-expect-error Looks like a node.


  if (!node || !node.type || typeof node.type !== 'string') {
    return false;
  }

  if ((parent === undefined || parent === null) !== (index === undefined || index === null)) {
    throw new Error('Expected both parent and index');
  }

  return check.call(context, node, index, parent);
};
var convertElement =
/**
 * @type {(
 *   (<T extends Element>(test: T['tagName']|TestFunctionPredicate<T>) => AssertPredicate<T>) &
 *   ((test?: Test) => AssertAnything)
 * )}
 */

/**
 * Generate an assertion from a check.
 * @param {Test} [test]
 * When nullish, checks if `node` is a `Node`.
 * When `string`, works like passing `function (node) {return node.type === test}`.
 * When `function` checks if function passed the node is true.
 * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.
 * When `array`, checks any one of the subtests pass.
 * @returns {AssertAnything}
 */
function convertElement(test) {
  if (test === undefined || test === null) {
    return hast_util_is_element_element;
  }

  if (typeof test === 'string') {
    return tagNameFactory(test);
  }

  if (typeof test === 'object') {
    return anyFactory(test);
  }

  if (typeof test === 'function') {
    return castFactory(test);
  }

  throw new Error('Expected function, string, or array as test');
};
/**
 * @param {Array.<TagName|TestFunctionAnything>} tests
 * @returns {AssertAnything}
 */

function anyFactory(tests) {
  /** @type {Array.<AssertAnything>} */
  var checks = [];
  var index = -1;

  while (++index < tests.length) {
    checks[index] = convertElement(tests[index]);
  }

  return castFactory(any);
  /**
   * @this {unknown}
   * @param {unknown[]} parameters
   * @returns {boolean}
   */

  function any() {
    var index = -1;

    for (var _len = arguments.length, parameters = new Array(_len), _key = 0; _key < _len; _key++) {
      parameters[_key] = arguments[_key];
    }

    while (++index < checks.length) {
      var _checks$index;

      if ((_checks$index = checks[index]).call.apply(_checks$index, [this].concat(parameters))) {
        return true;
      }
    }

    return false;
  }
}
/**
 * Utility to convert a string into a function which checks a given node’s tag
 * name for said string.
 *
 * @param {TagName} check
 * @returns {AssertAnything}
 */


function tagNameFactory(check) {
  return tagName;
  /**
   * @param {unknown} node
   * @returns {boolean}
   */

  function tagName(node) {
    return hast_util_is_element_element(node) && node.tagName === check;
  }
}
/**
 * @param {TestFunctionAnything} check
 * @returns {AssertAnything}
 */


function castFactory(check) {
  return assertion;
  /**
   * @this {unknown}
   * @param {unknown} node
   * @param {Array.<unknown>} parameters
   * @returns {boolean}
   */

  function assertion(node) {
    for (var _len2 = arguments.length, parameters = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      parameters[_key2 - 1] = arguments[_key2];
    }

    // @ts-expect-error: fine.
    return hast_util_is_element_element(node) && Boolean(check.call.apply(check, [this, node].concat(parameters)));
  }
}
/**
 * Utility to return true if this is an element.
 * @param {unknown} node
 * @returns {node is Element}
 */


function hast_util_is_element_element(node) {
  return Boolean(node && typeof node === 'object' && // @ts-expect-error Looks like a node.
  node.type === 'element' && // @ts-expect-error Looks like an element.
  typeof node.tagName === 'string');
}
;// CONCATENATED MODULE: ./node_modules/unist-util-is/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Parent} Parent
 *
 * @typedef {string} Type
 * @typedef {Object<string, unknown>} Props
 *
 * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test
 */

/**
 * Check if a node passes a test
 *
 * @callback TestFunctionAnything
 * @param {Node} node
 * @param {number|null|undefined} [index]
 * @param {Parent|null|undefined} [parent]
 * @returns {boolean|void}
 */

/**
 * Check if a node passes a certain node test
 *
 * @template {Node} X
 * @callback TestFunctionPredicate
 * @param {Node} node
 * @param {number|null|undefined} [index]
 * @param {Parent|null|undefined} [parent]
 * @returns {node is X}
 */

/**
 * @callback AssertAnything
 * @param {unknown} [node]
 * @param {number|null|undefined} [index]
 * @param {Parent|null|undefined} [parent]
 * @returns {boolean}
 */

/**
 * Check if a node passes a certain node test
 *
 * @template {Node} Y
 * @callback AssertPredicate
 * @param {unknown} [node]
 * @param {number|null|undefined} [index]
 * @param {Parent|null|undefined} [parent]
 * @returns {node is Y}
 */
var is =
/**
 * Check if a node passes a test.
 * When a `parent` node is known the `index` of node should also be given.
 *
 * @type {(
 *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &
 *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)
 * )}
 */

/**
 * Check if a node passes a test.
 * When a `parent` node is known the `index` of node should also be given.
 *
 * @param {unknown} [node] Node to check
 * @param {Test} [test]
 * When nullish, checks if `node` is a `Node`.
 * When `string`, works like passing `function (node) {return node.type === test}`.
 * When `function` checks if function passed the node is true.
 * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.
 * When `array`, checks any one of the subtests pass.
 * @param {number|null|undefined} [index] Position of `node` in `parent`
 * @param {Parent|null|undefined} [parent] Parent of `node`
 * @param {unknown} [context] Context object to invoke `test` with
 * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).
 */
// eslint-disable-next-line max-params
function is(node, test, index, parent, context) {
  var check = convert(test);

  if (index !== undefined && index !== null && (typeof index !== 'number' || index < 0 || index === Number.POSITIVE_INFINITY)) {
    throw new Error('Expected positive finite index');
  }

  if (parent !== undefined && parent !== null && (!is(parent) || !parent.children)) {
    throw new Error('Expected parent node');
  }

  if ((parent === undefined || parent === null) !== (index === undefined || index === null)) {
    throw new Error('Expected both parent and index');
  } // @ts-expect-error Looks like a node.


  return node && node.type && typeof node.type === 'string' ? Boolean(check.call(context, node, index, parent)) : false;
};
var convert =
/**
 * @type {(
 *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &
 *   ((test?: Test) => AssertAnything)
 * )}
 */

/**
 * Generate an assertion from a check.
 * @param {Test} [test]
 * When nullish, checks if `node` is a `Node`.
 * When `string`, works like passing `function (node) {return node.type === test}`.
 * When `function` checks if function passed the node is true.
 * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.
 * When `array`, checks any one of the subtests pass.
 * @returns {AssertAnything}
 */
function convert(test) {
  if (test === undefined || test === null) {
    return ok;
  }

  if (typeof test === 'string') {
    return typeFactory(test);
  }

  if (typeof test === 'object') {
    return Array.isArray(test) ? unist_util_is_anyFactory(test) : propsFactory(test);
  }

  if (typeof test === 'function') {
    return unist_util_is_castFactory(test);
  }

  throw new Error('Expected function, string, or object as test');
};
/**
 * @param {Array.<Type|Props|TestFunctionAnything>} tests
 * @returns {AssertAnything}
 */

function unist_util_is_anyFactory(tests) {
  /** @type {Array.<AssertAnything>} */
  var checks = [];
  var index = -1;

  while (++index < tests.length) {
    checks[index] = convert(tests[index]);
  }

  return unist_util_is_castFactory(any);
  /**
   * @this {unknown}
   * @param {unknown[]} parameters
   * @returns {boolean}
   */

  function any() {
    var index = -1;

    for (var _len = arguments.length, parameters = new Array(_len), _key = 0; _key < _len; _key++) {
      parameters[_key] = arguments[_key];
    }

    while (++index < checks.length) {
      var _checks$index;

      if ((_checks$index = checks[index]).call.apply(_checks$index, [this].concat(parameters))) return true;
    }

    return false;
  }
}
/**
 * Utility to assert each property in `test` is represented in `node`, and each
 * values are strictly equal.
 *
 * @param {Props} check
 * @returns {AssertAnything}
 */


function propsFactory(check) {
  return unist_util_is_castFactory(all);
  /**
   * @param {Node} node
   * @returns {boolean}
   */

  function all(node) {
    /** @type {string} */
    var key;

    for (key in check) {
      // @ts-expect-error: hush, it sure works as an index.
      if (node[key] !== check[key]) return false;
    }

    return true;
  }
}
/**
 * Utility to convert a string into a function which checks a given node’s type
 * for said string.
 *
 * @param {Type} check
 * @returns {AssertAnything}
 */


function typeFactory(check) {
  return unist_util_is_castFactory(type);
  /**
   * @param {Node} node
   */

  function type(node) {
    return node && node.type === check;
  }
}
/**
 * Utility to convert a string into a function which checks a given node’s type
 * for said string.
 * @param {TestFunctionAnything} check
 * @returns {AssertAnything}
 */


function unist_util_is_castFactory(check) {
  return assertion;
  /**
   * @this {unknown}
   * @param {Array.<unknown>} parameters
   * @returns {boolean}
   */

  function assertion() {
    for (var _len2 = arguments.length, parameters = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      parameters[_key2] = arguments[_key2];
    }

    // @ts-expect-error: spreading is fine.
    return Boolean(check.call.apply(check, [this].concat(parameters)));
  }
} // Utility to return true.


function ok() {
  return true;
}
;// CONCATENATED MODULE: ./node_modules/unist-util-find-after/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Parent} Parent
 *
 * @typedef {import('unist-util-is').Type} Type
 * @typedef {import('unist-util-is').Props} Props
 * @typedef {import('unist-util-is').TestFunctionAnything} TestFunctionAnything
 */

var findAfter =
/**
 * @type {(
 *  (<T extends Node>(node: Parent, index: Node|number, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>) => T|null) &
 *  ((node: Parent, index: Node|number, test?: null|undefined|Type|Props|TestFunctionAnything|Array<Type|Props|TestFunctionAnything>) => Node|null)
 * )}
 */

/**
 * @param {Parent} parent Parent node
 * @param {Node|number} index Child of `parent`, or it’s index
 * @param {null|undefined|Type|Props|TestFunctionAnything|Array<Type|Props|TestFunctionAnything>} [test] is-compatible test (such as a type)
 * @returns {Node|null}
 */
function findAfter(parent, index, test) {
  var is = convert(test);

  if (!parent || !parent.type || !parent.children) {
    throw new Error('Expected parent node');
  }

  if (typeof index === 'number') {
    if (index < 0 || index === Number.POSITIVE_INFINITY) {
      throw new Error('Expected positive finite number as index');
    }
  } else {
    index = parent.children.indexOf(index);

    if (index < 0) {
      throw new Error('Expected child node or index');
    }
  }

  while (++index < parent.children.length) {
    if (is(parent.children[index], index, parent)) {
      return parent.children[index];
    }
  }

  return null;
};
;// CONCATENATED MODULE: ./node_modules/hast-util-to-text/index.js
/**
 * @typedef {import('hast-util-is-element').TestFunctionAnything} TestFunctionAnything
 * @typedef {import('hast').Parent['children'][number]} HastChild
 * @typedef {import('hast').Text} HastText
 * @typedef {import('hast').Comment} HastComment
 * @typedef {import('hast').Root} HastRoot
 * @typedef {import('hast').Element} HastElement
 * @typedef {import('hast').Properties} HastProperties
 * @typedef {HastChild|HastRoot} HastNode
 * @typedef {HastRoot|HastElement} HastParent
 *
 * @typedef {'normal'|'pre'|'nowrap'|'pre-wrap'} Whitespace
 * @typedef {boolean} BreakValue
 * @typedef {1|2} BreakNumber
 * @typedef {'\n'} BreakForce
 * @typedef {BreakValue|BreakNumber|undefined} BreakBefore
 * @typedef {BreakValue|BreakNumber|BreakForce|undefined} BreakAfter
 *
 * @typedef CollectionOptions
 * @property {Whitespace} whitespace
 * @property {BreakBefore} breakBefore
 * @property {BreakAfter} breakAfter
 *
 * @typedef Options
 *   Configuration.
 * @property {Whitespace} [whitespace='normal']
 *   Initial CSS whitespace setting to use.
 */


var searchLineFeeds = /\n/g;
var searchTabOrSpaces = /[\t ]+/g;
var br = convertElement('br');
var hast_util_to_text_p = convertElement('p');
var cell = convertElement(['th', 'td']);
var row = convertElement('tr'); // Note that we don’t need to include void elements here as they don’t have text.
// See: <https://github.com/wooorm/html-void-elements>

var notRendered = convertElement([// List from: <https://html.spec.whatwg.org/#hidden-elements>
'datalist', 'head', 'noembed', 'noframes', 'noscript', // Act as if we support scripting.
'rp', 'script', 'style', 'template', 'title', // Hidden attribute.
hast_util_to_text_hidden, // From: <https://html.spec.whatwg.org/#flow-content-3>
closedDialog]); // See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>

var blockOrCaption = convertElement(['address', // Flow content
'article', // Sections and headings
'aside', // Sections and headings
'blockquote', // Flow content
'body', // Page
'caption', // `table-caption`
'center', // Flow content (legacy)
'dd', // Lists
'dialog', // Flow content
'dir', // Lists (legacy)
'dl', // Lists
'dt', // Lists
'div', // Flow content
'figure', // Flow content
'figcaption', // Flow content
'footer', // Flow content
'form,', // Flow content
'h1', // Sections and headings
'h2', // Sections and headings
'h3', // Sections and headings
'h4', // Sections and headings
'h5', // Sections and headings
'h6', // Sections and headings
'header', // Flow content
'hgroup', // Sections and headings
'hr', // Flow content
'html', // Page
'legend', // Flow content
'listing', // Flow content (legacy)
'main', // Flow content
'menu', // Lists
'nav', // Sections and headings
'ol', // Lists
'p', // Flow content
'plaintext', // Flow content (legacy)
'pre', // Flow content
'section', // Sections and headings
'ul', // Lists
'xmp' // Flow content (legacy)
]);
/**
 * Implementation of the `innerText` getter:
 * <https://html.spec.whatwg.org/#the-innertext-idl-attribute>
 * Note that we act as if `node` is being rendered, and as if we’re a
 * CSS-supporting user agent.
 *
 * @param {HastNode} node
 * @param {Options} [options={}]
 * @returns {string}
 */

function toText(node) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  /** @type {Array.<HastChild>} */
  // @ts-ignore looks like a parent.
  var children = node.children || [];
  var block = blockOrCaption(node);
  var whitespace = inferWhitespace(node, {
    whitespace: options.whitespace || 'normal',
    breakBefore: false,
    breakAfter: false
  });
  var index = -1;
  /** @type {Array.<string|BreakNumber>} */

  var results;
  /** @type {string|BreakNumber} */

  var value;
  /** @type {number|undefined} */

  var count; // Treat `text` and `comment` as having normal white-space.
  // This deviates from the spec as in the DOM the node’s `.data` has to be
  // returned.
  // If you want that behavior use `hast-util-to-string`.
  // All other nodes are later handled as if they are `element`s (so the
  // algorithm also works on a `root`).
  // Nodes without children are treated as a void element, so `doctype` is thus
  // ignored.

  if (node.type === 'text' || node.type === 'comment') {
    return collectText(node, {
      whitespace: whitespace,
      breakBefore: true,
      breakAfter: true
    });
  } // 1.  If this element is not being rendered, or if the user agent is a
  //     non-CSS user agent, then return the same value as the textContent IDL
  //     attribute on this element.
  //
  //     Note: we’re not supporting stylesheets so we’re acting as if the node
  //     is rendered.
  //
  //     If you want that behavior use `hast-util-to-string`.
  //     Important: we’ll have to account for this later though.
  // 2.  Let results be a new empty list.


  results = []; // 3.  For each child node node of this element:

  while (++index < children.length) {
    // 3.1. Let current be the list resulting in running the inner text
    //      collection steps with node.
    //      Each item in results will either be a JavaScript string or a
    //      positive integer (a required line break count).
    // 3.2. For each item item in current, append item to results.
    results = results.concat( // @ts-ignore Looks like a parent.
    innerTextCollection(children[index], node, {
      whitespace: whitespace,
      breakBefore: index ? null : block,
      breakAfter: index < children.length - 1 ? br(children[index + 1]) : block
    }));
  } // 4.  Remove any items from results that are the empty string.
  // 5.  Remove any runs of consecutive required line break count items at the
  //     start or end of results.
  // 6.  Replace each remaining run of consecutive required line break count
  //     items with a string consisting of as many U+000A LINE FEED (LF)
  //     characters as the maximum of the values in the required line break
  //     count items.


  index = -1;
  /** @type {Array.<string>} */

  var result = [];

  while (++index < results.length) {
    value = results[index];

    if (typeof value === 'number') {
      if (count !== undefined && value > count) count = value;
    } else if (value) {
      if (count) result.push('\n'.repeat(count));
      count = 0;
      result.push(value);
    }
  } // 7.  Return the concatenation of the string items in results.


  return result.join('');
}
/**
 * <https://html.spec.whatwg.org/#inner-text-collection-steps>
 *
 * @param {HastNode} node
 * @param {HastParent} parent
 * @param {CollectionOptions} options
 * @returns {Array.<string|BreakNumber>}
 */

function innerTextCollection(node, parent, options) {
  if (node.type === 'element') {
    return collectElement(node, parent, options);
  }

  if (node.type === 'text') {
    return [options.whitespace === 'normal' ? collectText(node, options) : collectPreText(node)];
  }

  return [];
}
/**
 * Collect an element.
 *
 * @param {HastElement} node
 * @param {HastParent} parent
 * @param {CollectionOptions} options
 */


function collectElement(node, parent, options) {
  // First we infer the `white-space` property.
  var whitespace = inferWhitespace(node, options);
  var children = node.children || [];
  var index = -1;
  /** @type {Array.<string|BreakNumber>} */

  var items = [];
  /** @type {BreakNumber|undefined} */

  var prefix;
  /** @type {BreakNumber|BreakForce|undefined} */

  var suffix; // We’re ignoring point 3, and exiting without any content here, because we
  // deviated from the spec in `toText` at step 3.

  if (notRendered(node)) {
    return items;
  } // Note: we first detect if there is going to be a break before or after the
  // contents, as that changes the white-space handling.
  // 2.  If node’s computed value of `visibility` is not `visible`, then return
  //     items.
  //
  //     Note: Ignored, as everything is visible by default user agent styles.
  // 3.  If node is not being rendered, then return items. [...]
  //
  //     Note: We already did this above.
  // See `collectText` for step 4.
  // 5.  If node is a `<br>` element, then append a string containing a single
  //     U+000A LINE FEED (LF) character to items.


  if (br(node)) {
    suffix = '\n';
  } // 7.  If node’s computed value of `display` is `table-row`, and node’s CSS
  //     box is not the last `table-row` box of the nearest ancestor `table`
  //     box, then append a string containing a single U+000A LINE FEED (LF)
  //     character to items.
  //
  //     See: <https://html.spec.whatwg.org/#tables-2>
  //     Note: needs further investigation as this does not account for implicit
  //     rows.
  else if (row(node) && findAfter(parent, node, row)) {
    suffix = '\n';
  } // 8.  If node is a `<p>` element, then append 2 (a required line break count)
  //     at the beginning and end of items.
  else if (hast_util_to_text_p(node)) {
    prefix = 2;
    suffix = 2;
  } // 9.  If node’s used value of `display` is block-level or `table-caption`,
  //     then append 1 (a required line break count) at the beginning and end of
  //     items.
  else if (blockOrCaption(node)) {
    prefix = 1;
    suffix = 1;
  } // 1.  Let items be the result of running the inner text collection steps with
  //     each child node of node in tree order, and then concatenating the
  //     results to a single list.


  while (++index < children.length) {
    items = items.concat(innerTextCollection(children[index], node, {
      whitespace: whitespace,
      breakBefore: index ? undefined : prefix,
      breakAfter: index < children.length - 1 ? br(children[index + 1]) : suffix
    }));
  } // 6.  If node’s computed value of `display` is `table-cell`, and node’s CSS
  //     box is not the last `table-cell` box of its enclosing `table-row` box,
  //     then append a string containing a single U+0009 CHARACTER TABULATION
  //     (tab) character to items.
  //
  //     See: <https://html.spec.whatwg.org/#tables-2>


  if (cell(node) && findAfter(parent, node, cell)) {
    items.push('\t');
  } // Add the pre- and suffix.


  if (prefix) items.unshift(prefix);
  if (suffix) items.push(suffix);
  return items;
}
/**
 * 4.  If node is a Text node, then for each CSS text box produced by node,
 *     in content order, compute the text of the box after application of the
 *     CSS `white-space` processing rules and `text-transform` rules, set
 *     items to the list of the resulting strings, and return items.
 *     The CSS `white-space` processing rules are slightly modified:
 *     collapsible spaces at the end of lines are always collapsed, but they
 *     are only removed if the line is the last line of the block, or it ends
 *     with a br element.
 *     Soft hyphens should be preserved.
 *
 *     Note: See `collectText` and `collectPreText`.
 *     Note: we don’t deal with `text-transform`, no element has that by
 *     default.
 *
 * See: <https://drafts.csswg.org/css-text/#white-space-phase-1>
 *
 * @param {HastText|HastComment} node
 * @param {CollectionOptions} options
 * @returns {string}
 */


function collectText(node, options) {
  var value = String(node.value);
  /** @type {Array.<string>} */

  var lines = [];
  /** @type {Array.<string>} */

  var result = [];
  var start = 0;
  var index = -1;
  /** @type {RegExpMatchArray|null} */

  var match;
  /** @type {number} */

  var end;
  /** @type {string|undefined} */

  var join;

  while (start < value.length) {
    searchLineFeeds.lastIndex = start;
    match = searchLineFeeds.exec(value); // @ts-expect-error: `index` is set.

    end = match ? match.index : value.length;
    lines.push( // Any sequence of collapsible spaces and tabs immediately preceding or
    // following a segment break is removed.
    trimAndCollapseSpacesAndTabs( // [...] ignoring bidi formatting characters (characters with the
    // Bidi_Control property [UAX9]: ALM, LTR, RTL, LRE-RLO, LRI-PDI) as if
    // they were not there.
    value.slice(start, end).replace(/[\u061C\u200E\u200F\u202A-\u202E\u2066-\u2069]/g, ''), options.breakBefore, options.breakAfter));
    start = end + 1;
  } // Collapsible segment breaks are transformed for rendering according to the
  // segment break transformation rules.
  // So here we jump to 4.1.2 of [CSSTEXT]:
  // Any collapsible segment break immediately following another collapsible
  // segment break is removed


  while (++index < lines.length) {
    // *   If the character immediately before or immediately after the segment
    //     break is the zero-width space character (U+200B), then the break is
    //     removed, leaving behind the zero-width space.
    if (lines[index].charCodeAt(lines[index].length - 1) === 0x200b
    /* ZWSP */
    || index < lines.length - 1 && lines[index + 1].charCodeAt(0) === 0x200b
    /* ZWSP */
    ) {
      result.push(lines[index]);
      join = '';
    } // *   Otherwise, if the East Asian Width property [UAX11] of both the
    //     character before and after the segment break is Fullwidth, Wide, or
    //     Halfwidth (not Ambiguous), and neither side is Hangul, then the
    //     segment break is removed.
    //
    //     Note: ignored.
    // *   Otherwise, if the writing system of the segment break is Chinese,
    //     Japanese, or Yi, and the character before or after the segment break
    //     is punctuation or a symbol (Unicode general category P* or S*) and
    //     has an East Asian Width property of Ambiguous, and the character on
    //     the other side of the segment break is Fullwidth, Wide, or Halfwidth,
    //     and not Hangul, then the segment break is removed.
    //
    //     Note: ignored.
    // *   Otherwise, the segment break is converted to a space (U+0020).
    else if (lines[index]) {
      if (join) result.push(join);
      result.push(lines[index]);
      join = ' ';
    }
  }

  return result.join('');
}
/**
 * @param {HastText|HastComment} node
 * @returns {string}
 */


function collectPreText(node) {
  return String(node.value);
}
/**
 * 3.  Every collapsible tab is converted to a collapsible space (U+0020).
 * 4.  Any collapsible space immediately following another collapsible
 *     space—even one outside the boundary of the inline containing that
 *     space, provided both spaces are within the same inline formatting
 *     context—is collapsed to have zero advance width. (It is invisible,
 *     but retains its soft wrap opportunity, if any.)
 *
 * @param {string} value
 * @param {BreakBefore} breakBefore
 * @param {BreakAfter} breakAfter
 * @returns {string}
 */


function trimAndCollapseSpacesAndTabs(value, breakBefore, breakAfter) {
  /** @type {Array.<string>} */
  var result = [];
  var start = 0;
  /** @type {RegExpMatchArray|null} */

  var match;
  /** @type {number} */

  var end;

  while (start < value.length) {
    searchTabOrSpaces.lastIndex = start;
    match = searchTabOrSpaces.exec(value); // @ts-expect-error: `index` is set.

    end = match ? match.index : value.length; // If we’re not directly after a segment break, but there was white space,
    // add an empty value that will be turned into a space.

    if (!start && !end && match && !breakBefore) {
      result.push('');
    }

    if (start !== end) {
      result.push(value.slice(start, end));
    }

    start = match ? end + match[0].length : end;
  } // If we reached the end, there was trailing white space, and there’s no
  // segment break after this node, add an empty value that will be turned
  // into a space.
  // @ts-expect-error: `end` is defined.


  if (start !== end && !breakAfter) {
    result.push('');
  }

  return result.join(' ');
}
/**
 * We don’t support void elements here (so `nobr wbr` -> `normal` is ignored).
 *
 * @param {HastNode} node
 * @param {CollectionOptions} options
 * @returns {Whitespace}
 */


function inferWhitespace(node, options) {
  /** @type {HastProperties} */
  var props;

  if (node.type === 'element') {
    props = node.properties || {};

    switch (node.tagName) {
      case 'listing':
      case 'plaintext':
      case 'xmp':
        return 'pre';

      case 'nobr':
        return 'nowrap';

      case 'pre':
        return props.wrap ? 'pre-wrap' : 'pre';

      case 'td':
      case 'th':
        return props.noWrap ? 'nowrap' : options.whitespace;

      case 'textarea':
        return 'pre-wrap';

      default:
    }
  }

  return options.whitespace;
}
/** @type {TestFunctionAnything} */


function hast_util_to_text_hidden(node) {
  return Boolean((node.properties || {}).hidden);
}
/** @type {TestFunctionAnything} */


function closedDialog(node) {
  return node.tagName === 'dialog' && !(node.properties || {}).open;
}
// EXTERNAL MODULE: ./node_modules/mathjax-full/js/adaptors/browserAdaptor.js
var browserAdaptor = __webpack_require__(6788);
;// CONCATENATED MODULE: ./node_modules/rehype-mathjax/lib/create-renderer.js
/**
 * @typedef {import('hast').Element} Element
 * @typedef {import('mathjax-full/js/core/OutputJax').OutputJax<HTMLElement, Text, Document>} OutputJax
 * @typedef {import('mathjax-full/js/core/MathDocument.js').MathDocument<HTMLElement, Text, Document>} MathDocument
 * @typedef {import('mathjax-full/js/input/tex.js').TeX<HTMLElement, Text, Document>} TeX_
 * @typedef {import('./create-plugin.js').Options} Options
 * @typedef {import('./create-plugin.js').Renderer} Renderer
 */







var adaptor = (0,browserAdaptor/* browserAdaptor */.x)(); // To do next major: Keep resultant HTML handler from `register(adaptor)` to
// allow registering the `AssistiveMmlHandler` as in this demo:
// <https://github.com/mathjax/MathJax-demos-node/tree/master/direct>
//
// To do next major: If registering `AssistiveMmlHandler` is supported through
// configuration, move HTML handler registration to beginning of transformer and
// unregister at the end of transformer with
// `mathjax.handlers.unregister(handler)`.
// That is to prevent memory leak in `mathjax.handlers` whenever a new instance
// of the plugin is used.

/* eslint-disable-next-line new-cap */

(0,handlers_html/* RegisterHTMLHandler */.Q)(adaptor);
/**
 * @param {Options} options
 * @param {OutputJax} output
 * @returns {Renderer}
 */

function createRenderer(options, output) {
  var input = new tex.TeX(Object.assign({
    packages: AllPackages/* AllPackages */.b
  }, options.tex));
  /** @type {MathDocument} */

  var doc = mathjax.mathjax.document('', {
    InputJax: input,
    OutputJax: output
  });
  return {
    render: function render(node, options) {
      var domNode = fromDom( // @ts-expect-error: assume mathml nodes can be handled by
      // `hast-util-from-dom`.
      doc.convert(toText(node, {
        whitespace: 'pre'
      }), options)); // @ts-expect-error: `fromDom` returns an element for a given element.

      node.children = [domNode];
    },
    styleSheet: function styleSheet() {
      var value = adaptor.textContent(output.styleSheet(doc));
      return {
        type: 'element',
        tagName: 'style',
        properties: {},
        children: [{
          type: 'text',
          value: value
        }]
      };
    }
  };
}
;// CONCATENATED MODULE: ./node_modules/rehype-mathjax/node_modules/unist-util-visit-parents/color.browser.js
/**
 * @param {string} d
 * @returns {string}
 */
function color(d) {
  return d;
}
;// CONCATENATED MODULE: ./node_modules/rehype-mathjax/node_modules/unist-util-visit-parents/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Parent} Parent
 * @typedef {import('unist-util-is').Test} Test
 * @typedef {import('./complex-types').Action} Action
 * @typedef {import('./complex-types').Index} Index
 * @typedef {import('./complex-types').ActionTuple} ActionTuple
 * @typedef {import('./complex-types').VisitorResult} VisitorResult
 * @typedef {import('./complex-types').Visitor} Visitor
 */


/**
 * Continue traversing as normal
 */

var CONTINUE = true;
/**
 * Do not traverse this node’s children
 */

var SKIP = 'skip';
/**
 * Stop traversing immediately
 */

var EXIT = false;
/**
 * Visit children of tree which pass a test
 *
 * @param tree Abstract syntax tree to walk
 * @param test Test node, optional
 * @param visitor Function to run for each node
 * @param reverse Visit the tree in reverse order, defaults to false
 */

var visitParents =
/**
 * @type {(
 *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &
 *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)
 * )}
 */

/**
 * @param {Node} tree
 * @param {Test} test
 * @param {import('./complex-types').Visitor<Node>} visitor
 * @param {boolean} [reverse]
 */
function visitParents(tree, test, visitor, reverse) {
  if (typeof test === 'function' && typeof visitor !== 'function') {
    reverse = visitor; // @ts-expect-error no visitor given, so `visitor` is test.

    visitor = test;
    test = null;
  }

  var is = convert(test);
  var step = reverse ? -1 : 1;
  factory(tree, null, [])();
  /**
   * @param {Node} node
   * @param {number?} index
   * @param {Array.<Parent>} parents
   */

  function factory(node, index, parents) {
    /** @type {Object.<string, unknown>} */
    // @ts-expect-error: hush
    var value = typeof node === 'object' && node !== null ? node : {};
    /** @type {string|undefined} */

    var name;

    if (typeof value.type === 'string') {
      name = typeof value.tagName === 'string' ? value.tagName : typeof value.name === 'string' ? value.name : undefined;
      Object.defineProperty(visit, 'name', {
        value: 'node (' + color(value.type + (name ? '<' + name + '>' : '')) + ')'
      });
    }

    return visit;

    function visit() {
      /** @type {ActionTuple} */
      var result = [];
      /** @type {ActionTuple} */

      var subresult;
      /** @type {number} */

      var offset;
      /** @type {Array.<Parent>} */

      var grandparents;

      if (!test || is(node, index, parents[parents.length - 1] || null)) {
        result = toResult(visitor(node, parents));

        if (result[0] === EXIT) {
          return result;
        }
      } // @ts-expect-error looks like a parent.


      if (node.children && result[0] !== SKIP) {
        // @ts-expect-error looks like a parent.
        offset = (reverse ? node.children.length : -1) + step; // @ts-expect-error looks like a parent.

        grandparents = parents.concat(node); // @ts-expect-error looks like a parent.

        while (offset > -1 && offset < node.children.length) {
          // @ts-expect-error looks like a parent.
          subresult = factory(node.children[offset], offset, grandparents)();

          if (subresult[0] === EXIT) {
            return subresult;
          }

          offset = typeof subresult[1] === 'number' ? subresult[1] : offset + step;
        }
      }

      return result;
    }
  }
};
/**
 * @param {VisitorResult} value
 * @returns {ActionTuple}
 */

function toResult(value) {
  if (Array.isArray(value)) {
    return value;
  }

  if (typeof value === 'number') {
    return [CONTINUE, value];
  }

  return [value];
}
;// CONCATENATED MODULE: ./node_modules/rehype-mathjax/node_modules/unist-util-visit/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Parent} Parent
 * @typedef {import('unist-util-is').Test} Test
 * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult
 * @typedef {import('./complex-types').Visitor} Visitor
 */


/**
 * Visit children of tree which pass a test
 *
 * @param tree Abstract syntax tree to walk
 * @param test Test, optional
 * @param visitor Function to run for each node
 * @param reverse Fisit the tree in reverse, defaults to false
 */

var visit =
/**
 * @type {(
 *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &
 *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)
 * )}
 */

/**
 * @param {Node} tree
 * @param {Test} test
 * @param {import('./complex-types').Visitor} visitor
 * @param {boolean} [reverse]
 */
function visit(tree, test, visitor, reverse) {
  if (typeof test === 'function' && typeof visitor !== 'function') {
    reverse = visitor;
    visitor = test;
    test = null;
  }

  visitParents(tree, test, overload, reverse);
  /**
   * @param {Node} node
   * @param {Array.<Parent>} parents
   */

  function overload(node, parents) {
    var parent = parents[parents.length - 1];
    return visitor(node, parent ? parent.children.indexOf(node) : null, parent);
  }
};
;// CONCATENATED MODULE: ./node_modules/rehype-mathjax/lib/create-plugin.js
/**
 * @typedef {import('hast').Root} Root
 * @typedef {import('hast').Element} Element
 *
 * @typedef {[string, string]} MathNotation
 *   Markers to use for math.
 *   See: <http://docs.mathjax.org/en/latest/options/input/tex.html#the-configuration-block>
 *
 * @typedef OutputSvgOptions
 *   <http://docs.mathjax.org/en/latest/options/output/svg.html#the-configuration-block>
 * @property {number} [scale]
 * @property {number} [minScale]
 * @property {boolean} [mtextInheritFont]
 * @property {boolean} [merrorInheritFont]
 * @property {boolean} [mathmlSpacing]
 * @property {Record<string, boolean>} [skipAttributes]
 * @property {number} [exFactor]
 * @property {'left'|'center'|'right'} [displayAlign]
 * @property {string} [displayIndent]
 * @property {'local'|'global'} [fontCache]
 * @property {string|null} [localID]
 * @property {boolean} [internalSpeechTitles]
 * @property {number} [titleID]
 *
 * @typedef OutputCHtmlOptions
 *   <http://docs.mathjax.org/en/latest/options/output/chtml.html#the-configuration-block>
 * @property {number} [scale]
 * @property {number} [minScale]
 * @property {boolean} [matchFontHeight]
 * @property {boolean} [mtextInheritFont]
 * @property {boolean} [merrorInheritFont]
 * @property {boolean} [mathmlSpacing]
 * @property {Record<string, boolean>} [skipAttributes]
 * @property {number} [exFactor]
 * @property {'left'|'center'|'right'} [displayAlign]
 * @property {string} [displayIndent]
 * @property {string} fontURL
 * @property {boolean} [adaptiveCSS]
 *
 * @typedef InputTexOptions
 *   <http://docs.mathjax.org/en/latest/options/input/tex.html#the-configuration-block>
 * @property {string[]} [packages]
 * @property {MathNotation[]} [inlineMath]
 * @property {MathNotation[]} [displayMath]
 * @property {boolean} [processEscapes]
 * @property {boolean} [processEnvironments]
 * @property {boolean} [processRefs]
 * @property {RegExp} [digits]
 * @property {'none'|'ams'|'all'} [tags]
 * @property {'left'|'right'} [tagSide]
 * @property {string} [tagIndent]
 * @property {boolean} [useLabelIds]
 * @property {string} [multlineWidth]
 * @property {number} [maxMacros]
 * @property {number} [maxBuffer]
 * @property {string} [baseURL]
 * @property {(jax: any, error: any) => string} [formatError]
 *
 * @typedef Options
 *   Configuration.
 * @property {InputTexOptions} [tex]
 *   Configuration for the input TeX.
 * @property {OutputCHtmlOptions} [chtml]
 *   Configuration for the output (when CHTML).
 * @property {OutputSvgOptions} [svg]
 *   Configuration for the output (when SVG).
 *
 * @typedef Renderer
 * @property {(node: Element, options: {display: boolean}) => void} render
 * @property {() => Element} [styleSheet]
 *
 * @callback CreateRenderer
 * @param {Options} options
 * @returns {Renderer}
 */

/**
 * @param {CreateRenderer} createRenderer
 */

function createPlugin(createRenderer) {
  /** @type {import('unified').Plugin<[Options?]|void[], Root>} */
  return function () {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return function (tree) {
      var renderer = createRenderer(options);
      var found = false;
      /** @type {Root|Element} */

      var context = tree;
      visit(tree, 'element', function (node) {
        var classes = node.properties && Array.isArray(node.properties.className) ? node.properties.className : [];
        var inline = classes.includes('math-inline');
        var display = classes.includes('math-display');

        if (node.tagName === 'head') {
          context = node;
        }

        if (!inline && !display) {
          return;
        }

        found = true;
        renderer.render(node, {
          display: display
        });
        return SKIP;
      });

      if (found && renderer.styleSheet) {
        context.children.push(renderer.styleSheet());
      }
    };
  };
}
;// CONCATENATED MODULE: ./node_modules/rehype-mathjax/chtml.js
/**
 * @typedef {import('./lib/create-plugin').Options} Options
 */



var rehypeMathJaxCHtml = createPlugin(function (options) {
  if (!options.chtml || !options.chtml.fontURL) {
    throw new Error('rehype-mathjax: missing `fontURL` in options, which must be set to a URL to reach MathJaX fonts');
  }

  return createRenderer(options, new chtml.CHTML(options.chtml));
});
/* harmony default export */ var rehype_mathjax_chtml = (rehypeMathJaxCHtml);
;// CONCATENATED MODULE: ./node_modules/html-void-elements/index.js
/**
 * List of HTML void tag names.
 *
 * @type {Array<string>}
 */
var htmlVoidElements = ['area', 'base', 'basefont', 'bgsound', 'br', 'col', 'command', 'embed', 'frame', 'hr', 'image', 'img', 'input', 'isindex', 'keygen', 'link', 'menuitem', 'meta', 'nextid', 'param', 'source', 'track', 'wbr'];
;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/omission/util/comment.js
/**
 * @typedef {import('../../types.js').Comment} Comment
 */

/** @type {import('unist-util-is').AssertPredicate<Comment>} */
// @ts-ignore

var comment_comment = convert('comment');
;// CONCATENATED MODULE: ./node_modules/hast-util-whitespace/index.js
/**
 * @param {unknown} thing
 * @returns {boolean}
 */
function whitespace(thing) {
  /** @type {string} */
  var value = // @ts-ignore looks like a node.
  thing && typeof thing === 'object' && thing.type === 'text' ? // @ts-ignore looks like a text.
  thing.value || '' : thing; // HTML whitespace expression.
  // See <https://html.spec.whatwg.org/#space-character>.

  return typeof value === 'string' && value.replace(/[ \t\n\f\r]/g, '') === '';
}
;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/omission/util/siblings.js
/**
 * @typedef {import('../../types.js').Parent} Parent
 * @typedef {import('../../types.js').Child} Child
 */

var siblingAfter = siblings(1);
var siblingBefore = siblings(-1);
/**
 * Factory to check siblings in a direction.
 *
 * @param {number} increment
 */

function siblings(increment) {
  return sibling;
  /**
   * Find applicable siblings in a direction.
   *
   * @param {Parent} parent
   * @param {number} index
   * @param {boolean} [includeWhitespace=false]
   * @returns {Child}
   */

  function sibling(parent, index, includeWhitespace) {
    var siblings = parent && parent.children;
    var offset = index + increment;
    var next = siblings && siblings[offset];

    if (!includeWhitespace) {
      while (next && whitespace(next)) {
        offset += increment;
        next = siblings[offset];
      }
    }

    return next;
  }
}
;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/omission/util/whitespace-start.js
/**
 * @typedef {import('../../types.js').Node} Node
 * @typedef {import('../../types.js').Text} Text
 */


/** @type {import('unist-util-is').AssertPredicate<Text>} */
// @ts-ignore

var isText = convert('text');
/**
 * Check if `node` starts with whitespace.
 *
 * @param {Node} node
 * @returns {boolean}
 */

function whitespaceStart(node) {
  return isText(node) && whitespace(node.value.charAt(0));
}
;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/omission/omission.js
/**
 * @typedef {import('../types.js').OmitHandle} OmitHandle
 */
var omission_own = {}.hasOwnProperty;
/**
 * Factory to check if a given node can have a tag omitted.
 *
 * @param {Object.<string, OmitHandle>} handlers
 * @returns {OmitHandle}
 */

function omission(handlers) {
  return omit;
  /**
   * Check if a given node can have a tag omitted.
   *
   * @type {OmitHandle}
   */

  function omit(node, index, parent) {
    return omission_own.call(handlers, node.tagName) && handlers[node.tagName](node, index, parent);
  }
}
;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/omission/closing.js
/**
 * @typedef {import('../types.js').OmitHandle} OmitHandle
 */





var closing = omission({
  html: closing_html,
  head: headOrColgroupOrCaption,
  body: body,
  p: closing_p,
  li: li,
  dt: dt,
  dd: dd,
  rt: rubyElement,
  rp: rubyElement,
  optgroup: optgroup,
  option: closing_option,
  menuitem: menuitem,
  colgroup: headOrColgroupOrCaption,
  caption: headOrColgroupOrCaption,
  thead: thead,
  tbody: tbody,
  tfoot: tfoot,
  tr: tr,
  td: cells,
  th: cells
});
/**
 * Macro for `</head>`, `</colgroup>`, and `</caption>`.
 *
 * @type {OmitHandle}
 */

function headOrColgroupOrCaption(_, index, parent) {
  var next = siblingAfter(parent, index, true);
  return !next || !comment_comment(next) && !whitespaceStart(next);
}
/**
 * Whether to omit `</html>`.
 *
 * @type {OmitHandle}
 */


function closing_html(_, index, parent) {
  var next = siblingAfter(parent, index);
  return !next || !comment_comment(next);
}
/**
 * Whether to omit `</body>`.
 *
 * @type {OmitHandle}
 */


function body(_, index, parent) {
  var next = siblingAfter(parent, index);
  return !next || !comment_comment(next);
}
/**
 * Whether to omit `</p>`.
 *
 * @type {OmitHandle}
 */


function closing_p(_, index, parent) {
  var next = siblingAfter(parent, index);
  return next ? isElement(next, ['address', 'article', 'aside', 'blockquote', 'details', 'div', 'dl', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'main', 'menu', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul']) : !parent || // Confusing parent.
  !isElement(parent, ['a', 'audio', 'del', 'ins', 'map', 'noscript', 'video']);
}
/**
 * Whether to omit `</li>`.
 *
 * @type {OmitHandle}
 */


function li(_, index, parent) {
  var next = siblingAfter(parent, index);
  return !next || isElement(next, 'li');
}
/**
 * Whether to omit `</dt>`.
 *
 * @type {OmitHandle}
 */


function dt(_, index, parent) {
  var next = siblingAfter(parent, index);
  return next && isElement(next, ['dt', 'dd']);
}
/**
 * Whether to omit `</dd>`.
 *
 * @type {OmitHandle}
 */


function dd(_, index, parent) {
  var next = siblingAfter(parent, index);
  return !next || isElement(next, ['dt', 'dd']);
}
/**
 * Whether to omit `</rt>` or `</rp>`.
 *
 * @type {OmitHandle}
 */


function rubyElement(_, index, parent) {
  var next = siblingAfter(parent, index);
  return !next || isElement(next, ['rp', 'rt']);
}
/**
 * Whether to omit `</optgroup>`.
 *
 * @type {OmitHandle}
 */


function optgroup(_, index, parent) {
  var next = siblingAfter(parent, index);
  return !next || isElement(next, 'optgroup');
}
/**
 * Whether to omit `</option>`.
 *
 * @type {OmitHandle}
 */


function closing_option(_, index, parent) {
  var next = siblingAfter(parent, index);
  return !next || isElement(next, ['option', 'optgroup']);
}
/**
 * Whether to omit `</menuitem>`.
 *
 * @type {OmitHandle}
 */


function menuitem(_, index, parent) {
  var next = siblingAfter(parent, index);
  return !next || isElement(next, ['menuitem', 'hr', 'menu']);
}
/**
 * Whether to omit `</thead>`.
 *
 * @type {OmitHandle}
 */


function thead(_, index, parent) {
  var next = siblingAfter(parent, index);
  return next && isElement(next, ['tbody', 'tfoot']);
}
/**
 * Whether to omit `</tbody>`.
 *
 * @type {OmitHandle}
 */


function tbody(_, index, parent) {
  var next = siblingAfter(parent, index);
  return !next || isElement(next, ['tbody', 'tfoot']);
}
/**
 * Whether to omit `</tfoot>`.
 *
 * @type {OmitHandle}
 */


function tfoot(_, index, parent) {
  return !siblingAfter(parent, index);
}
/**
 * Whether to omit `</tr>`.
 *
 * @type {OmitHandle}
 */


function tr(_, index, parent) {
  var next = siblingAfter(parent, index);
  return !next || isElement(next, 'tr');
}
/**
 * Whether to omit `</td>` or `</th>`.
 *
 * @type {OmitHandle}
 */


function cells(_, index, parent) {
  var next = siblingAfter(parent, index);
  return !next || isElement(next, ['td', 'th']);
}
;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/omission/opening.js
/**
 * @typedef {import('../types.js').OmitHandle} OmitHandle
 * @typedef {import('../types.js').Child} Child
 */






var opening = omission({
  html: opening_html,
  head: head,
  body: opening_body,
  colgroup: colgroup,
  tbody: opening_tbody
});
/**
 * Whether to omit `<html>`.
 *
 * @type {OmitHandle}
 */

function opening_html(node) {
  var head = siblingAfter(node, -1);
  return !head || !comment_comment(head);
}
/**
 * Whether to omit `<head>`.
 *
 * @type {OmitHandle}
 */


function head(node) {
  var children = node.children;
  /** @type {Array.<string>} */

  var seen = [];
  var index = -1;
  /** @type {Child} */

  var child;

  while (++index < children.length) {
    child = children[index];

    if (isElement(child, ['title', 'base'])) {
      if (seen.includes(child.tagName)) return false;
      seen.push(child.tagName);
    }
  }

  return children.length > 0;
}
/**
 * Whether to omit `<body>`.
 *
 * @type {OmitHandle}
 */


function opening_body(node) {
  var head = siblingAfter(node, -1, true);
  return !head || !comment_comment(head) && !whitespaceStart(head) && !isElement(head, ['meta', 'link', 'script', 'style', 'template']);
}
/**
 * Whether to omit `<colgroup>`.
 * The spec describes some logic for the opening tag, but it’s easier to
 * implement in the closing tag, to the same effect, so we handle it there
 * instead.
 *
 * @type {OmitHandle}
 */


function colgroup(node, index, parent) {
  var previous = siblingBefore(parent, index);
  var head = siblingAfter(node, -1, true); // Previous colgroup was already omitted.

  if (isElement(previous, 'colgroup') && closing(previous, parent.children.indexOf(previous), parent)) {
    return false;
  }

  return head && isElement(head, 'col');
}
/**
 * Whether to omit `<tbody>`.
 *
 * @type {OmitHandle}
 */


function opening_tbody(node, index, parent) {
  var previous = siblingBefore(parent, index);
  var head = siblingAfter(node, -1); // Previous table section was already omitted.

  if (isElement(previous, ['thead', 'tbody']) && closing(previous, parent.children.indexOf(previous), parent)) {
    return false;
  }

  return head && isElement(head, 'tr');
}
;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/omission/index.js
/**
 * @typedef {import('../types.js').Omission} Omission
 */


/** @type {Omission} */

var omission_omission = {
  opening: opening,
  closing: closing
};
;// CONCATENATED MODULE: ./node_modules/stringify-entities/lib/core.js
/**
 * @typedef {Object} CoreOptions
 * @property {string[]} [subset=[]]
 *   Whether to only escape the given subset of characters.
 * @property {boolean} [escapeOnly=false]
 *   Whether to only escape possibly dangerous characters.
 *   Those characters are `"`, `&`, `'`, `<`, `>`, and `` ` ``.
 *
 * @typedef {Object} FormatOptions
 * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format
 *   Format strategy.
 *
 * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions
 */

/**
 * Encode certain characters in `value`.
 *
 * @param {string} value
 * @param {CoreWithFormatOptions} options
 * @returns {string}
 */
function lib_core_core(value, options) {
  value = value.replace(options.subset ? charactersToExpression(options.subset) : /["&'<>`]/g, basic);

  if (options.subset || options.escapeOnly) {
    return value;
  }

  return value // Surrogate pairs.
  .replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, surrogate) // BMP control characters (C0 except for LF, CR, SP; DEL; and some more
  // non-ASCII ones).
  .replace( // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape
  /[\x01-\t\v\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g, basic);
  /**
   * @param {string} pair
   * @param {number} index
   * @param {string} all
   */

  function surrogate(pair, index, all) {
    return options.format((pair.charCodeAt(0) - 0xd800) * 0x400 + pair.charCodeAt(1) - 0xdc00 + 0x10000, all.charCodeAt(index + 2), options);
  }
  /**
   * @param {string} character
   * @param {number} index
   * @param {string} all
   */


  function basic(character, index, all) {
    return options.format(character.charCodeAt(0), all.charCodeAt(index + 1), options);
  }
}
/**
 * @param {string[]} subset
 * @returns {RegExp}
 */

function charactersToExpression(subset) {
  /** @type {string[]} */
  var groups = [];
  var index = -1;

  while (++index < subset.length) {
    groups.push(subset[index].replace(/[|\\{}()[\]^$+*?.]/g, '\\$&'));
  }

  return new RegExp('(?:' + groups.join('|') + ')', 'g');
}
;// CONCATENATED MODULE: ./node_modules/stringify-entities/lib/util/to-hexadecimal.js
/**
 * Configurable ways to encode characters as hexadecimal references.
 *
 * @param {number} code
 * @param {number} next
 * @param {boolean|undefined} omit
 * @returns {string}
 */
function toHexadecimal(code, next, omit) {
  var value = '&#x' + code.toString(16).toUpperCase();
  return omit && next && !/[\dA-Fa-f]/.test(String.fromCharCode(next)) ? value : value + ';';
}
;// CONCATENATED MODULE: ./node_modules/stringify-entities/lib/util/to-decimal.js
/**
 * Configurable ways to encode characters as decimal references.
 *
 * @param {number} code
 * @param {number} next
 * @param {boolean|undefined} omit
 * @returns {string}
 */
function toDecimal(code, next, omit) {
  var value = '&#' + String(code);
  return omit && next && !/\d/.test(String.fromCharCode(next)) ? value : value + ';';
}
;// CONCATENATED MODULE: ./node_modules/character-entities-legacy/index.js
/**
 * List of legacy HTML named character references that don’t need a trailing semicolon.
 *
 * @type {Array<string>}
 */
var characterEntitiesLegacy = ['AElig', 'AMP', 'Aacute', 'Acirc', 'Agrave', 'Aring', 'Atilde', 'Auml', 'COPY', 'Ccedil', 'ETH', 'Eacute', 'Ecirc', 'Egrave', 'Euml', 'GT', 'Iacute', 'Icirc', 'Igrave', 'Iuml', 'LT', 'Ntilde', 'Oacute', 'Ocirc', 'Ograve', 'Oslash', 'Otilde', 'Ouml', 'QUOT', 'REG', 'THORN', 'Uacute', 'Ucirc', 'Ugrave', 'Uuml', 'Yacute', 'aacute', 'acirc', 'acute', 'aelig', 'agrave', 'amp', 'aring', 'atilde', 'auml', 'brvbar', 'ccedil', 'cedil', 'cent', 'copy', 'curren', 'deg', 'divide', 'eacute', 'ecirc', 'egrave', 'eth', 'euml', 'frac12', 'frac14', 'frac34', 'gt', 'iacute', 'icirc', 'iexcl', 'igrave', 'iquest', 'iuml', 'laquo', 'lt', 'macr', 'micro', 'middot', 'nbsp', 'not', 'ntilde', 'oacute', 'ocirc', 'ograve', 'ordf', 'ordm', 'oslash', 'otilde', 'ouml', 'para', 'plusmn', 'pound', 'quot', 'raquo', 'reg', 'sect', 'shy', 'sup1', 'sup2', 'sup3', 'szlig', 'thorn', 'times', 'uacute', 'ucirc', 'ugrave', 'uml', 'uuml', 'yacute', 'yen', 'yuml'];
;// CONCATENATED MODULE: ./node_modules/character-entities-html4/index.js
/**
 * Map of named character references from HTML 4.
 *
 * @type {Record<string, string>}
 */
var characterEntitiesHtml4 = {
  nbsp: ' ',
  iexcl: '¡',
  cent: '¢',
  pound: '£',
  curren: '¤',
  yen: '¥',
  brvbar: '¦',
  sect: '§',
  uml: '¨',
  copy: '©',
  ordf: 'ª',
  laquo: '«',
  not: '¬',
  shy: '­',
  reg: '®',
  macr: '¯',
  deg: '°',
  plusmn: '±',
  sup2: '²',
  sup3: '³',
  acute: '´',
  micro: 'µ',
  para: '¶',
  middot: '·',
  cedil: '¸',
  sup1: '¹',
  ordm: 'º',
  raquo: '»',
  frac14: '¼',
  frac12: '½',
  frac34: '¾',
  iquest: '¿',
  Agrave: 'À',
  Aacute: 'Á',
  Acirc: 'Â',
  Atilde: 'Ã',
  Auml: 'Ä',
  Aring: 'Å',
  AElig: 'Æ',
  Ccedil: 'Ç',
  Egrave: 'È',
  Eacute: 'É',
  Ecirc: 'Ê',
  Euml: 'Ë',
  Igrave: 'Ì',
  Iacute: 'Í',
  Icirc: 'Î',
  Iuml: 'Ï',
  ETH: 'Ð',
  Ntilde: 'Ñ',
  Ograve: 'Ò',
  Oacute: 'Ó',
  Ocirc: 'Ô',
  Otilde: 'Õ',
  Ouml: 'Ö',
  times: '×',
  Oslash: 'Ø',
  Ugrave: 'Ù',
  Uacute: 'Ú',
  Ucirc: 'Û',
  Uuml: 'Ü',
  Yacute: 'Ý',
  THORN: 'Þ',
  szlig: 'ß',
  agrave: 'à',
  aacute: 'á',
  acirc: 'â',
  atilde: 'ã',
  auml: 'ä',
  aring: 'å',
  aelig: 'æ',
  ccedil: 'ç',
  egrave: 'è',
  eacute: 'é',
  ecirc: 'ê',
  euml: 'ë',
  igrave: 'ì',
  iacute: 'í',
  icirc: 'î',
  iuml: 'ï',
  eth: 'ð',
  ntilde: 'ñ',
  ograve: 'ò',
  oacute: 'ó',
  ocirc: 'ô',
  otilde: 'õ',
  ouml: 'ö',
  divide: '÷',
  oslash: 'ø',
  ugrave: 'ù',
  uacute: 'ú',
  ucirc: 'û',
  uuml: 'ü',
  yacute: 'ý',
  thorn: 'þ',
  yuml: 'ÿ',
  fnof: 'ƒ',
  Alpha: 'Α',
  Beta: 'Β',
  Gamma: 'Γ',
  Delta: 'Δ',
  Epsilon: 'Ε',
  Zeta: 'Ζ',
  Eta: 'Η',
  Theta: 'Θ',
  Iota: 'Ι',
  Kappa: 'Κ',
  Lambda: 'Λ',
  Mu: 'Μ',
  Nu: 'Ν',
  Xi: 'Ξ',
  Omicron: 'Ο',
  Pi: 'Π',
  Rho: 'Ρ',
  Sigma: 'Σ',
  Tau: 'Τ',
  Upsilon: 'Υ',
  Phi: 'Φ',
  Chi: 'Χ',
  Psi: 'Ψ',
  Omega: 'Ω',
  alpha: 'α',
  beta: 'β',
  gamma: 'γ',
  delta: 'δ',
  epsilon: 'ε',
  zeta: 'ζ',
  eta: 'η',
  theta: 'θ',
  iota: 'ι',
  kappa: 'κ',
  lambda: 'λ',
  mu: 'μ',
  nu: 'ν',
  xi: 'ξ',
  omicron: 'ο',
  pi: 'π',
  rho: 'ρ',
  sigmaf: 'ς',
  sigma: 'σ',
  tau: 'τ',
  upsilon: 'υ',
  phi: 'φ',
  chi: 'χ',
  psi: 'ψ',
  omega: 'ω',
  thetasym: 'ϑ',
  upsih: 'ϒ',
  piv: 'ϖ',
  bull: '•',
  hellip: '…',
  prime: '′',
  Prime: '″',
  oline: '‾',
  frasl: '⁄',
  weierp: '℘',
  image: 'ℑ',
  real: 'ℜ',
  trade: '™',
  alefsym: 'ℵ',
  larr: '←',
  uarr: '↑',
  rarr: '→',
  darr: '↓',
  harr: '↔',
  crarr: '↵',
  lArr: '⇐',
  uArr: '⇑',
  rArr: '⇒',
  dArr: '⇓',
  hArr: '⇔',
  forall: '∀',
  part: '∂',
  exist: '∃',
  empty: '∅',
  nabla: '∇',
  isin: '∈',
  notin: '∉',
  ni: '∋',
  prod: '∏',
  sum: '∑',
  minus: '−',
  lowast: '∗',
  radic: '√',
  prop: '∝',
  infin: '∞',
  ang: '∠',
  and: '∧',
  or: '∨',
  cap: '∩',
  cup: '∪',
  int: '∫',
  there4: '∴',
  sim: '∼',
  cong: '≅',
  asymp: '≈',
  ne: '≠',
  equiv: '≡',
  le: '≤',
  ge: '≥',
  sub: '⊂',
  sup: '⊃',
  nsub: '⊄',
  sube: '⊆',
  supe: '⊇',
  oplus: '⊕',
  otimes: '⊗',
  perp: '⊥',
  sdot: '⋅',
  lceil: '⌈',
  rceil: '⌉',
  lfloor: '⌊',
  rfloor: '⌋',
  lang: '〈',
  rang: '〉',
  loz: '◊',
  spades: '♠',
  clubs: '♣',
  hearts: '♥',
  diams: '♦',
  quot: '"',
  amp: '&',
  lt: '<',
  gt: '>',
  OElig: 'Œ',
  oelig: 'œ',
  Scaron: 'Š',
  scaron: 'š',
  Yuml: 'Ÿ',
  circ: 'ˆ',
  tilde: '˜',
  ensp: ' ',
  emsp: ' ',
  thinsp: ' ',
  zwnj: '‌',
  zwj: '‍',
  lrm: '‎',
  rlm: '‏',
  ndash: '–',
  mdash: '—',
  lsquo: '‘',
  rsquo: '’',
  sbquo: '‚',
  ldquo: '“',
  rdquo: '”',
  bdquo: '„',
  dagger: '†',
  Dagger: '‡',
  permil: '‰',
  lsaquo: '‹',
  rsaquo: '›',
  euro: '€'
};
;// CONCATENATED MODULE: ./node_modules/stringify-entities/lib/constant/dangerous.js
/**
 * List of legacy (that don’t need a trailing `;`) named references which could,
 * depending on what follows them, turn into a different meaning
 *
 * @type {Array.<string>}
 */
var dangerous = ['cent', 'copy', 'divide', 'gt', 'lt', 'not', 'para', 'times'];
;// CONCATENATED MODULE: ./node_modules/stringify-entities/lib/util/to-named.js



var to_named_own = {}.hasOwnProperty;
/**
 * `characterEntitiesHtml4` but inverted.
 *
 * @type {Object.<string, string>}
 */

var characters = {};
/** @type {string} */

var key;

for (key in characterEntitiesHtml4) {
  if (to_named_own.call(characterEntitiesHtml4, key)) {
    characters[characterEntitiesHtml4[key]] = key;
  }
}
/**
 * Configurable ways to encode characters as named references.
 *
 * @param {number} code
 * @param {number} next
 * @param {boolean|undefined} omit
 * @param {boolean|undefined} attribute
 * @returns {string}
 */


function toNamed(code, next, omit, attribute) {
  var character = String.fromCharCode(code);

  if (to_named_own.call(characters, character)) {
    var name = characters[character];
    var value = '&' + name;

    if (omit && characterEntitiesLegacy.includes(name) && !dangerous.includes(name) && (!attribute || next && next !== 61
    /* `=` */
    && /[^\da-z]/i.test(String.fromCharCode(next)))) {
      return value;
    }

    return value + ';';
  }

  return '';
}
;// CONCATENATED MODULE: ./node_modules/stringify-entities/lib/util/format-smart.js
/**
 * @typedef {Object} FormatSmartOptions
 * @property {boolean} [useNamedReferences=false]
 *   Prefer named character references (`&amp;`) where possible.
 * @property {boolean} [useShortestReferences=false]
 *   Prefer the shortest possible reference, if that results in less bytes.
 *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.
 * @property {boolean} [omitOptionalSemicolons=false]
 *   Whether to omit semicolons when possible.
 *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.
 *   Omitting semicolons is possible for certain named and numeric references in some cases.
 * @property {boolean} [attribute=false]
 *   Create character references which don’t fail in attributes.
 *   **Note**: `attribute` only applies when operating dangerously with
 *   `omitOptionalSemicolons: true`.
 */



/**
 * Configurable ways to encode a character yielding pretty or small results.
 *
 * @param {number} code
 * @param {number} next
 * @param {FormatSmartOptions} options
 * @returns {string}
 */

function formatSmart(code, next, options) {
  var numeric = toHexadecimal(code, next, options.omitOptionalSemicolons);
  /** @type {string|undefined} */

  var named;

  if (options.useNamedReferences || options.useShortestReferences) {
    named = toNamed(code, next, options.omitOptionalSemicolons, options.attribute);
  } // Use the shortest numeric reference when requested.
  // A simple algorithm would use decimal for all code points under 100, as
  // those are shorter than hexadecimal:
  //
  // * `&#99;` vs `&#x63;` (decimal shorter)
  // * `&#100;` vs `&#x64;` (equal)
  //
  // However, because we take `next` into consideration when `omit` is used,
  // And it would be possible that decimals are shorter on bigger values as
  // well if `next` is hexadecimal but not decimal, we instead compare both.


  if ((options.useShortestReferences || !named) && options.useShortestReferences) {
    var decimal = toDecimal(code, next, options.omitOptionalSemicolons);

    if (decimal.length < numeric.length) {
      numeric = decimal;
    }
  }

  return named && (!options.useShortestReferences || named.length < numeric.length) ? named : numeric;
}
;// CONCATENATED MODULE: ./node_modules/stringify-entities/lib/index.js
/**
 * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options
 * @typedef {import('./core.js').CoreOptions} LightOptions
 */



/**
 * Encode special characters in `value`.
 *
 * @param {string} value
 *   Value to encode.
 * @param {Options} [options]
 *   Configuration.
 * @returns {string}
 *   Encoded value.
 */

function stringifyEntities(value, options) {
  return lib_core_core(value, Object.assign({
    format: formatSmart
  }, options));
}
/**
 * Encode special characters in `value` as hexadecimals.
 *
 * @param {string} value
 *   Value to encode.
 * @param {LightOptions} [options]
 *   Configuration.
 * @returns {string}
 *   Encoded value.
 */

function stringifyEntitiesLight(value, options) {
  return core(value, Object.assign({
    format: formatBasic
  }, options));
}
;// CONCATENATED MODULE: ./node_modules/ccount/index.js
/**
 * Count how often a character (or substring) is used in a string.
 *
 * @param {string} value
 *   Value to search in.
 * @param {string} character
 *   Character (or substring) to look for.
 * @return {number}
 *   Number of times `character` occurred in `value`.
 */
function ccount(value, character) {
  var source = String(value);

  if (typeof character !== 'string') {
    throw new TypeError('Expected character');
  }

  var count = 0;
  var index = source.indexOf(character);

  while (index !== -1) {
    count++;
    index = source.indexOf(character, index + character.length);
  }

  return count;
}
;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/constants.js
// Maps of subsets.
// Each value is a matrix of tuples.
// The first value causes parse errors, the second is valid.
// Of both values, the first value is unsafe, and the second is safe.
var constants = {
  // See: <https://html.spec.whatwg.org/#attribute-name-state>.
  name: [['\t\n\f\r &/=>'.split(''), '\t\n\f\r "&\'/=>`'.split('')], ['\0\t\n\f\r "&\'/<=>'.split(''), '\0\t\n\f\r "&\'/<=>`'.split('')]],
  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.
  unquoted: [['\t\n\f\r &>'.split(''), '\0\t\n\f\r "&\'<=>`'.split('')], ['\0\t\n\f\r "&\'<=>`'.split(''), '\0\t\n\f\r "&\'<=>`'.split('')]],
  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.
  single: [["&'".split(''), '"&\'`'.split('')], ["\0&'".split(''), '\0"&\'`'.split('')]],
  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.
  double: [['"&'.split(''), '"&\'`'.split('')], ['\0"&'.split(''), '\0"&\'`'.split('')]]
};
;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/comment.js
/**
 * @typedef {import('./types.js').Handle} Handle
 * @typedef {import('./types.js').Comment} Comment
 */

/**
 * @type {Handle}
 * @param {Comment} node
 */

function lib_comment_comment(ctx, node) {
  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>
  return ctx.bogusComments ? '<?' + stringifyEntities(node.value, Object.assign({}, ctx.entities, {
    subset: ['>']
  })) + '>' : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->';
  /**
   * @param {string} $0
   */

  function encode($0) {
    return stringifyEntities($0, Object.assign({}, ctx.entities, {
      subset: ['<', '>']
    }));
  }
}
;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/doctype.js
/**
 * @typedef {import('./types.js').Handle} Handle
 */

/**
 * @type {Handle}
 */
function doctype_doctype(ctx) {
  return '<!' + (ctx.upperDoctype ? 'DOCTYPE' : 'doctype') + (ctx.tightDoctype ? '' : ' ') + 'html>';
}
;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/text.js
/**
 * @typedef {import('./types.js').Handle} Handle
 * @typedef {import('./types.js').Text} Text
 */

/**
 * @type {Handle}
 * @param {Text} node
 */

function text_text(ctx, node, _, parent) {
  // Check if content of `node` should be escaped.
  return parent && parent.type === 'element' && ( // @ts-expect-error: hush.
  parent.tagName === 'script' || parent.tagName === 'style') ? node.value : stringifyEntities(node.value, Object.assign({}, ctx.entities, {
    subset: ['<', '&']
  }));
}
;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/raw.js
/**
 * @typedef {import('./types.js').Handle} Handle
 * @typedef {import('./types.js').Raw} Raw
 */

/**
 * @type {Handle}
 * @param {Raw} node
 */

function raw(ctx, node, index, parent) {
  // @ts-ignore Hush.
  return ctx.dangerous ? node.value : text_text(ctx, node, index, parent);
}
;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/tree.js
/**
 * @typedef {import('./types.js').Handle} Handle
 * @typedef {import('./types.js').Element} Element
 * @typedef {import('./types.js').Context} Context
 * @typedef {import('./types.js').Properties} Properties
 * @typedef {import('./types.js').PropertyValue} PropertyValue
 * @typedef {import('./types.js').Parent} Parent
 */










/**
 * @type {Object.<string, Handle>}
 */

var handlers = {
  comment: lib_comment_comment,
  doctype: doctype_doctype,
  element: tree_element,
  // @ts-ignore `raw` is nonstandard
  raw: raw,
  // @ts-ignore `root` is a parent.
  root: tree_all,
  text: text_text
};
var tree_own = {}.hasOwnProperty;
/**
 * @type {Handle}
 */

function tree_one(ctx, node, index, parent) {
  if (!node || !node.type) {
    throw new Error('Expected node, not `' + node + '`');
  }

  if (!tree_own.call(handlers, node.type)) {
    throw new Error('Cannot compile unknown node `' + node.type + '`');
  }

  return handlers[node.type](ctx, node, index, parent);
}
/**
 * Serialize all children of `parent`.
 *
 * @type {Handle}
 * @param {Parent} parent
 */

function tree_all(ctx, parent) {
  /** @type {Array.<string>} */
  var results = [];
  var children = parent && parent.children || [];
  var index = -1;

  while (++index < children.length) {
    results[index] = tree_one(ctx, children[index], index, parent);
  }

  return results.join('');
}
/**
 * @type {Handle}
 * @param {Element} node
 */
// eslint-disable-next-line complexity

function tree_element(ctx, node, index, parent) {
  var schema = ctx.schema;
  var omit = schema.space === 'svg' ? undefined : ctx.omit;
  var selfClosing = schema.space === 'svg' ? ctx.closeEmpty : ctx.voids.includes(node.tagName.toLowerCase());
  /** @type {Array.<string>} */

  var parts = [];
  /** @type {string} */

  var last;

  if (schema.space === 'html' && node.tagName === 'svg') {
    ctx.schema = property_information_svg;
  }

  var attrs = serializeAttributes(ctx, node.properties);
  var content = tree_all(ctx, schema.space === 'html' && node.tagName === 'template' ? node.content : node);
  ctx.schema = schema; // If the node is categorised as void, but it has children, remove the
  // categorisation.
  // This enables for example `menuitem`s, which are void in W3C HTML but not
  // void in WHATWG HTML, to be stringified properly.

  if (content) selfClosing = false;

  if (attrs || !omit || !omit.opening(node, index, parent)) {
    parts.push('<', node.tagName, attrs ? ' ' + attrs : '');

    if (selfClosing && (schema.space === 'svg' || ctx.close)) {
      last = attrs.charAt(attrs.length - 1);

      if (!ctx.tightClose || last === '/' || last && last !== '"' && last !== "'") {
        parts.push(' ');
      }

      parts.push('/');
    }

    parts.push('>');
  }

  parts.push(content);

  if (!selfClosing && (!omit || !omit.closing(node, index, parent))) {
    parts.push('</' + node.tagName + '>');
  }

  return parts.join('');
}
/**
 * @param {Context} ctx
 * @param {Properties} props
 * @returns {string}
 */

function serializeAttributes(ctx, props) {
  /** @type {Array.<string>} */
  var values = [];
  var index = -1;
  /** @type {string} */

  var key;
  /** @type {string} */

  var value;
  /** @type {string} */

  var last;

  for (key in props) {
    if (props[key] !== undefined && props[key] !== null) {
      value = serializeAttribute(ctx, key, props[key]);
      if (value) values.push(value);
    }
  }

  while (++index < values.length) {
    last = ctx.tight ? values[index].charAt(values[index].length - 1) : null; // In tight mode, don’t add a space after quoted attributes.

    if (index !== values.length - 1 && last !== '"' && last !== "'") {
      values[index] += ' ';
    }
  }

  return values.join('');
}
/**
 * @param {Context} ctx
 * @param {string} key
 * @param {PropertyValue} value
 * @returns {string}
 */
// eslint-disable-next-line complexity


function serializeAttribute(ctx, key, value) {
  var info = find(ctx.schema, key);
  var quote = ctx.quote;
  /** @type {string} */

  var result;

  if (info.overloadedBoolean && (value === info.attribute || value === '')) {
    value = true;
  } else if (info.boolean || info.overloadedBoolean && typeof value !== 'string') {
    value = Boolean(value);
  }

  if (value === undefined || value === null || value === false || typeof value === 'number' && Number.isNaN(value)) {
    return '';
  }

  var name = stringifyEntities(info.attribute, Object.assign({}, ctx.entities, {
    // Always encode without parse errors in non-HTML.
    subset: constants.name[ctx.schema.space === 'html' ? ctx.valid : 1][ctx.safe]
  })); // No value.
  // There is currently only one boolean property in SVG: `[download]` on
  // `<a>`.
  // This property does not seem to work in browsers (FF, Sa, Ch), so I can’t
  // test if dropping the value works.
  // But I assume that it should:
  //
  // ```html
  // <!doctype html>
  // <svg viewBox="0 0 100 100">
  //   <a href=https://example.com download>
  //     <circle cx=50 cy=40 r=35 />
  //   </a>
  // </svg>
  // ```
  //
  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>

  if (value === true) return name;
  value = typeof value === 'object' && 'length' in value ? // `spaces` doesn’t accept a second argument, but it’s given here just to
  // keep the code cleaner.
  (info.commaSeparated ? comma_separated_tokens_stringify : space_separated_tokens_stringify)(value, {
    padLeft: !ctx.tightLists
  }) : String(value);
  if (ctx.collapseEmpty && !value) return name; // Check unquoted value.

  if (ctx.unquoted) {
    result = stringifyEntities(value, Object.assign({}, ctx.entities, {
      subset: constants.unquoted[ctx.valid][ctx.safe],
      attribute: true
    }));
  } // If we don’t want unquoted, or if `value` contains character references when
  // unquoted…


  if (result !== value) {
    // If the alternative is less common than `quote`, switch.
    if (ctx.smart && ccount(value, quote) > ccount(value, ctx.alternative)) {
      quote = ctx.alternative;
    }

    result = quote + stringifyEntities(value, Object.assign({}, ctx.entities, {
      // Always encode without parse errors in non-HTML.
      subset: (quote === "'" ? constants.single : constants.double)[ctx.schema.space === 'html' ? ctx.valid : 1][ctx.safe],
      attribute: true
    })) + quote;
  } // Don’t add a `=` for unquoted empties.


  return name + (result ? '=' + result : result);
}
;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/index.js
/**
 * @typedef {import('./types.js').Node} Node
 * @typedef {import('./types.js').Options} Options
 * @typedef {import('./types.js').Context} Context
 * @typedef {import('./types.js').Quote} Quote
 */




/**
 * @param {Node|Array.<Node>} node
 * @param {Options} [options]
 * @returns {string}
 */

function toHtml(node) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var quote = options.quote || '"';
  /** @type {Quote} */

  var alternative = quote === '"' ? "'" : '"';

  if (quote !== '"' && quote !== "'") {
    throw new Error('Invalid quote `' + quote + '`, expected `\'` or `"`');
  }
  /** @type {Context} */


  var context = {
    valid: options.allowParseErrors ? 0 : 1,
    safe: options.allowDangerousCharacters ? 0 : 1,
    schema: options.space === 'svg' ? property_information_svg : property_information_html,
    omit: options.omitOptionalTags ? omission_omission : undefined,
    quote: quote,
    alternative: alternative,
    smart: options.quoteSmart,
    unquoted: options.preferUnquoted,
    tight: options.tightAttributes,
    upperDoctype: options.upperDoctype,
    tightDoctype: options.tightDoctype,
    bogusComments: options.bogusComments,
    tightLists: options.tightCommaSeparatedLists,
    tightClose: options.tightSelfClosing,
    collapseEmpty: options.collapseEmptyAttributes,
    dangerous: options.allowDangerousHtml,
    voids: options.voids || htmlVoidElements.concat(),
    entities: options.entities || {},
    close: options.closeSelfClosing,
    closeEmpty: options.closeEmptyElements
  };
  return tree_one(context, // @ts-ignore Assume `node` does not contain a root.
  Array.isArray(node) ? {
    type: 'root',
    children: node
  } : node, null, null);
}
;// CONCATENATED MODULE: ./node_modules/rehype-stringify/lib/index.js
/**
 * @typedef {import('hast').Root} Root
 * @typedef {Root|Root['children'][number]} Node
 * @typedef {import('hast-util-to-html').Options} Options
 */

/** @type {import('unified').Plugin<[Options?]|Array<void>, Node, string>} */

function rehypeStringify(config) {
  var processorSettings =
  /** @type {Options} */
  this.data('settings');
  var settings = Object.assign({}, processorSettings, config);
  Object.assign(this, {
    Compiler: compiler
  });
  /**
   * @type {import('unified').CompilerFunction<Node, string>}
   */

  function compiler(tree) {
    return toHtml(tree, settings);
  }
}
;// CONCATENATED MODULE: ./node_modules/zwitch/index.js
var zwitch_own = {}.hasOwnProperty;
/**
 * @callback Handler
 * @param {...unknown} value
 * @return {unknown}
 *
 * @typedef {Record<string, Handler>} Handlers
 *
 * @typedef {Object} Options
 * @property {Handler} [unknown]
 * @property {Handler} [invalid]
 * @property {Handlers} [handlers]
 */

/**
 * Handle values based on a property.
 *
 * @param {string} key
 * @param {Options} [options]
 */

function zwitch(key, options) {
  var settings = options || {};
  /**
   * Handle one value.
   * Based on the bound `key`, a respective handler will be called.
   * If `value` is not an object, or doesn’t have a `key` property, the special
   * “invalid” handler will be called.
   * If `value` has an unknown `key`, the special “unknown” handler will be
   * called.
   *
   * All arguments, and the context object, are passed through to the handler,
   * and it’s result is returned.
   *
   * @param {...unknown} [value]
   * @this {unknown}
   * @returns {unknown}
   * @property {Handler} invalid
   * @property {Handler} unknown
   * @property {Handlers} handlers
   */

  function one(value) {
    var fn = one.invalid;
    var handlers = one.handlers;

    if (value && zwitch_own.call(value, key)) {
      fn = zwitch_own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown;
    }

    if (fn) {
      return fn.apply(this, arguments);
    }
  }

  one.handlers = settings.handlers || {};
  one.invalid = settings.invalid;
  one.unknown = settings.unknown;
  return one;
}
;// CONCATENATED MODULE: ./node_modules/direction/index.js
var rtlRange = "\u0591-\u07FF\uFB1D-\uFDFD\uFE70-\uFEFC";
var ltrRange = "A-Za-z\xC0-\xD6\xD8-\xF6" + "\xF8-\u02B8\u0300-\u0590\u0800-\u1FFF\u200E\u2C00-\uFB1C" + "\uFE00-\uFE6F\uFEFD-\uFFFF";
/* eslint-disable no-misleading-character-class */

var rtl = new RegExp('^[^' + ltrRange + ']*[' + rtlRange + ']');
var ltr = new RegExp('^[^' + rtlRange + ']*[' + ltrRange + ']');
/* eslint-enable no-misleading-character-class */

/**
 * Detect the direction of text: left-to-right, right-to-left, or neutral
 *
 * @param {string} value
 * @returns {'rtl'|'ltr'|'neutral'}
 */

function direction(value) {
  var source = String(value || '');
  return rtl.test(source) ? 'rtl' : ltr.test(source) ? 'ltr' : 'neutral';
}
;// CONCATENATED MODULE: ./node_modules/hast-util-to-string/index.js
/**
 * @fileoverview
 *   Get the plain-text value of a hast node.
 * @longdescription
 *   ## Use
 *
 *   ```js
 *   import {h} from 'hastscript'
 *   import {toString} from 'hast-util-to-string'
 *
 *   toString(h('p', 'Alpha'))
 *   //=> 'Alpha'
 *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))
 *   //=> 'Bold and italic.'
 *   ```
 *
 *   ## API
 *
 *   ### `toString(node)`
 *
 *   Transform a node to a string.
 */

/**
 * @typedef {import('hast').Root} Root
 * @typedef {import('hast').Element} Element
 * @typedef {Root|Root['children'][number]} Node
 */

/**
 * Get the plain-text value of a hast node.
 *
 * @param {Node} node
 * @returns {string}
 */
function hast_util_to_string_toString(node) {
  // “The concatenation of data of all the Text node descendants of the context
  // object, in tree order.”
  if ('children' in node) {
    return hast_util_to_string_all(node);
  } // “Context object’s data.”


  return 'value' in node ? node.value : '';
}
/**
 * @param {Node} node
 * @returns {string}
 */

function hast_util_to_string_one(node) {
  if (node.type === 'text') {
    return node.value;
  }

  return 'children' in node ? hast_util_to_string_all(node) : '';
}
/**
 * @param {Root|Element} node
 * @returns {string}
 */


function hast_util_to_string_all(node) {
  var index = -1;
  /** @type {string[]} */

  var result = [];

  while (++index < node.children.length) {
    result[index] = hast_util_to_string_one(node.children[index]);
  }

  return result.join('');
}
;// CONCATENATED MODULE: ./node_modules/hast-util-select/node_modules/unist-util-visit-parents/color.browser.js
/**
 * @param {string} d
 * @returns {string}
 */
function color_browser_color(d) {
  return d;
}
;// CONCATENATED MODULE: ./node_modules/hast-util-select/node_modules/unist-util-visit-parents/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Parent} Parent
 * @typedef {import('unist-util-is').Test} Test
 * @typedef {import('./complex-types').Action} Action
 * @typedef {import('./complex-types').Index} Index
 * @typedef {import('./complex-types').ActionTuple} ActionTuple
 * @typedef {import('./complex-types').VisitorResult} VisitorResult
 * @typedef {import('./complex-types').Visitor} Visitor
 */


/**
 * Continue traversing as normal
 */

var unist_util_visit_parents_CONTINUE = true;
/**
 * Do not traverse this node’s children
 */

var unist_util_visit_parents_SKIP = 'skip';
/**
 * Stop traversing immediately
 */

var unist_util_visit_parents_EXIT = false;
/**
 * Visit children of tree which pass a test
 *
 * @param tree Abstract syntax tree to walk
 * @param test Test node, optional
 * @param visitor Function to run for each node
 * @param reverse Visit the tree in reverse order, defaults to false
 */

var unist_util_visit_parents_visitParents =
/**
 * @type {(
 *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &
 *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)
 * )}
 */

/**
 * @param {Node} tree
 * @param {Test} test
 * @param {import('./complex-types').Visitor<Node>} visitor
 * @param {boolean} [reverse]
 */
function visitParents(tree, test, visitor, reverse) {
  if (typeof test === 'function' && typeof visitor !== 'function') {
    reverse = visitor; // @ts-expect-error no visitor given, so `visitor` is test.

    visitor = test;
    test = null;
  }

  var is = convert(test);
  var step = reverse ? -1 : 1;
  factory(tree, null, [])();
  /**
   * @param {Node} node
   * @param {number?} index
   * @param {Array.<Parent>} parents
   */

  function factory(node, index, parents) {
    /** @type {Object.<string, unknown>} */
    // @ts-expect-error: hush
    var value = typeof node === 'object' && node !== null ? node : {};
    /** @type {string|undefined} */

    var name;

    if (typeof value.type === 'string') {
      name = typeof value.tagName === 'string' ? value.tagName : typeof value.name === 'string' ? value.name : undefined;
      Object.defineProperty(visit, 'name', {
        value: 'node (' + color_browser_color(value.type + (name ? '<' + name + '>' : '')) + ')'
      });
    }

    return visit;

    function visit() {
      /** @type {ActionTuple} */
      var result = [];
      /** @type {ActionTuple} */

      var subresult;
      /** @type {number} */

      var offset;
      /** @type {Array.<Parent>} */

      var grandparents;

      if (!test || is(node, index, parents[parents.length - 1] || null)) {
        result = unist_util_visit_parents_toResult(visitor(node, parents));

        if (result[0] === unist_util_visit_parents_EXIT) {
          return result;
        }
      } // @ts-expect-error looks like a parent.


      if (node.children && result[0] !== unist_util_visit_parents_SKIP) {
        // @ts-expect-error looks like a parent.
        offset = (reverse ? node.children.length : -1) + step; // @ts-expect-error looks like a parent.

        grandparents = parents.concat(node); // @ts-expect-error looks like a parent.

        while (offset > -1 && offset < node.children.length) {
          // @ts-expect-error looks like a parent.
          subresult = factory(node.children[offset], offset, grandparents)();

          if (subresult[0] === unist_util_visit_parents_EXIT) {
            return subresult;
          }

          offset = typeof subresult[1] === 'number' ? subresult[1] : offset + step;
        }
      }

      return result;
    }
  }
};
/**
 * @param {VisitorResult} value
 * @returns {ActionTuple}
 */

function unist_util_visit_parents_toResult(value) {
  if (Array.isArray(value)) {
    return value;
  }

  if (typeof value === 'number') {
    return [unist_util_visit_parents_CONTINUE, value];
  }

  return [value];
}
;// CONCATENATED MODULE: ./node_modules/hast-util-select/node_modules/unist-util-visit/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Parent} Parent
 * @typedef {import('unist-util-is').Test} Test
 * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult
 * @typedef {import('./complex-types').Visitor} Visitor
 */


/**
 * Visit children of tree which pass a test
 *
 * @param tree Abstract syntax tree to walk
 * @param test Test, optional
 * @param visitor Function to run for each node
 * @param reverse Fisit the tree in reverse, defaults to false
 */

var unist_util_visit_visit =
/**
 * @type {(
 *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &
 *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)
 * )}
 */

/**
 * @param {Node} tree
 * @param {Test} test
 * @param {import('./complex-types').Visitor} visitor
 * @param {boolean} [reverse]
 */
function visit(tree, test, visitor, reverse) {
  if (typeof test === 'function' && typeof visitor !== 'function') {
    reverse = visitor;
    visitor = test;
    test = null;
  }

  unist_util_visit_parents_visitParents(tree, test, overload, reverse);
  /**
   * @param {Node} node
   * @param {Array.<Parent>} parents
   */

  function overload(node, parents) {
    var parent = parents[parents.length - 1];
    return visitor(node, parent ? parent.children.indexOf(node) : null, parent);
  }
};
;// CONCATENATED MODULE: ./node_modules/hast-util-select/lib/util.js
/**
 * @typedef {import('./types.js').Node} Node
 * @typedef {import('./types.js').Element} Element
 * @typedef {import('./types.js').Parent} Parent
 * @typedef {import('hast-util-is-element').AssertPredicate<Element>} IsElement
 */

/**
 * @param {Node} node
 * @returns {node is Parent}
 */

function util_parent(node) {
  // @ts-expect-error: hush.
  return Array.isArray(node.children);
}
/** @type {IsElement} */
// @ts-expect-error it works.

var util_element = convertElement();
;// CONCATENATED MODULE: ./node_modules/hast-util-select/lib/enter-state.js
/**
 * @typedef {import('./types.js').SelectState} SelectState
 * @typedef {import('./types.js').HastNode} HastNode
 * @typedef {import('./types.js').ElementChild} ElementChild
 * @typedef {import('./types.js').Direction} Direction
 * @typedef {import('unist-util-visit/complex-types').Visitor<ElementChild>} Visitor
 */






/**
 * @param {SelectState} state
 * @param {HastNode} node
 * @returns {() => void}
 */
// eslint-disable-next-line complexity

function enterState(state, node) {
  var schema = state.schema;
  var language = state.language;
  var currentDirection = state.direction;
  var editableOrEditingHost = state.editableOrEditingHost;
  /** @type {Direction|undefined} */

  var dirInferred;
  /** @type {boolean|undefined} */

  var found;

  if (util_element(node) && node.properties) {
    var lang = node.properties.xmlLang || node.properties.lang;
    var type = node.properties.type || 'text';
    var dir = dirProperty(node);

    if (lang !== undefined && lang !== null) {
      state.language = String(lang);
      found = true;
    }

    if (schema && schema.space === 'html') {
      if (node.properties.contentEditable === 'true') {
        state.editableOrEditingHost = true;
        found = true;
      }

      if (isElement(node, 'svg')) {
        state.schema = property_information_svg;
        found = true;
      } // See: <https://html.spec.whatwg.org/#the-directionality>.
      // Explicit `[dir=rtl]`.


      if (dir === 'rtl') {
        dirInferred = dir;
      } else if ( // Explicit `[dir=ltr]`.
      dir === 'ltr' || // HTML with an invalid or no `[dir]`.
      dir !== 'auto' && isElement(node, 'html') || // `input[type=tel]` with an invalid or no `[dir]`.
      dir !== 'auto' && isElement(node, 'input') && type === 'tel') {
        dirInferred = 'ltr'; // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.
      } else if (dir === 'auto' || isElement(node, 'bdi')) {
        if (isElement(node, 'textarea')) {
          // Check contents of `<textarea>`.
          dirInferred = dirBidi(hast_util_to_string_toString(node));
        } else if (isElement(node, 'input') && (type === 'email' || type === 'search' || type === 'tel' || type === 'text')) {
          // Check value of `<input>`.
          // @ts-expect-error something is `never` in types but this is needed.
          dirInferred = node.properties.value ? // @ts-expect-error Assume string
          dirBidi(node.properties.value) : 'ltr';
        } else {
          // Check text nodes in `node`.
          unist_util_visit_visit(node, inferDirectionality);
        }
      }

      if (dirInferred) {
        state.direction = dirInferred;
        found = true;
      }
    } // Turn off editing mode in non-HTML spaces.
    else if (state.editableOrEditingHost) {
      state.editableOrEditingHost = false;
      found = true;
    }
  }

  return found ? reset : enter_state_noop;

  function reset() {
    state.schema = schema;
    state.language = language;
    state.direction = currentDirection;
    state.editableOrEditingHost = editableOrEditingHost;
  }
  /** @type {Visitor} */


  function inferDirectionality(child) {
    if (child.type === 'text') {
      dirInferred = dirBidi(child.value);
      return dirInferred ? unist_util_visit_parents_EXIT : null;
    }

    if (child !== node && (isElement(child, ['bdi', 'script', 'style', 'textare']) || dirProperty(child))) {
      return unist_util_visit_parents_SKIP;
    }
  }
}
/**
 * @param {string} value
 * @returns {Direction|undefined}
 */

function dirBidi(value) {
  var result = direction(value);
  return result === 'neutral' ? undefined : result;
}
/**
 * @param {ElementChild} node
 * @returns {Direction|undefined}
 */


function dirProperty(node) {
  var value = util_element(node) && node.properties && typeof node.properties.dir === 'string' ? node.properties.dir.toLowerCase() : undefined;
  return value === 'auto' || value === 'ltr' || value === 'rtl' ? value : undefined;
}

function enter_state_noop() {}
;// CONCATENATED MODULE: ./node_modules/hast-util-select/lib/nest.js
/**
 * @typedef {import('./types.js').Rule} Rule
 * @typedef {import('./types.js').Node} Node
 * @typedef {import('./types.js').Element} Element
 * @typedef {import('./types.js').Parent} Parent
 * @typedef {import('./types.js').SelectState} SelectState
 * @typedef {import('./types.js').SelectIterator} SelectIterator
 * @typedef {import('./types.js').Handler} Handler
 */



var nest_own = {}.hasOwnProperty;
var handle = zwitch('nestingOperator', {
  // @ts-expect-error: hush.
  unknown: unknownNesting,
  // @ts-expect-error: hush.
  invalid: topScan,
  // `undefined` is the top query selector.
  handlers: {
    // @ts-expect-error: hush.
    null: descendant,
    // `null` is the descendant combinator.
    // @ts-expect-error: hush.
    '>': child,
    // @ts-expect-error: hush.
    '+': adjacentSibling,
    // @ts-expect-error: hush.
    '~': generalSibling
  }
});
/** @type {Handler} */

function nest(query, node, index, parent, state) {
  handle(query, node, index, parent, state);
} // Shouldn’t be called, parser gives correct data.

/* c8 ignore next 6 */

/**
 * @param {{[x: string]: unknown, type: string}} query
 */

function unknownNesting(query) {
  throw new Error('Unexpected nesting `' + query.nestingOperator + '`');
}
/** @type {Handler} */


function topScan(query, node, index, parent, state) {
  // Shouldn’t happen.

  /* c8 ignore next 3 */
  if (parent || index === null) {
    throw new Error('topScan is supposed to be called from the root node');
  } // Shouldn’t happen.

  /* c8 ignore next 3 */


  if (!state.iterator) {
    throw new Error('Expected `iterator`');
  }

  state.iterator(query, node, index, parent, state);
  if (!state.shallow) descendant(query, node, index, parent, state);
}
/** @type {Handler} */


function descendant(query, node, index, parent, state) {
  var previous = state.iterator;
  state.iterator = iterator;
  child(query, node, index, parent, state);
  /** @type {SelectIterator} */

  function iterator(query, node, index, parent, state) {
    // Shouldn’t happen.

    /* c8 ignore next 3 */
    if (!previous) {
      throw new Error('Expected `iterator`');
    }

    state.iterator = previous;
    previous(query, node, index, parent, state);
    state.iterator = iterator;
    if (state.one && state.found) return;
    child(query, node, index, parent, state);
  }
}
/** @type {Handler} */


function child(query, node, _1, _2, state) {
  if (!util_parent(node)) return;
  if (node.children.length === 0) return;
  indexedSearch(query, node, state);
}
/** @type {Handler} */


function adjacentSibling(query, _, index, parent, state) {
  // Shouldn’t happen.

  /* c8 ignore next */
  if (!parent || index === null) return;
  indexedSearch(query, parent, state, index + 1, true);
}
/** @type {Handler} */


function generalSibling(query, _, index, parent, state) {
  // Shouldn’t happen.

  /* c8 ignore next */
  if (!parent || index === null) return;
  indexedSearch(query, parent, state, index + 1);
}
/**
 * Handles `typeIndex` and `typeCount` properties for every walker.
 *
 * @param {Rule} query
 * @param {Parent} parent
 * @param {SelectState} state
 * @param {number} [from=0]
 * @param {boolean} [firstElementOnly=false]
 */


function indexedSearch(query, parent, state, from, firstElementOnly) {
  var handle = state.index ? delay : add;
  var children = parent.children;
  var elements = 0;
  var index = -1;
  /** @type {Record<string, number>} */

  var types = {};
  /** @type {Array<Function>} */

  var delayed = []; // Start looking at `from`

  if (from === undefined || from === null) from = 0; // Exit if there are no further nodes.

  if (from >= children.length) return; // If we need to index for types, do so for all elements before `from`.

  if (state.index) {
    while (++index < from) {
      var _child = children[index];
      if (util_element(_child)) count(_child.tagName);
    }
  }

  index = from - 1;

  while (++index < children.length) {
    var _child2 = children[index]; // Only check elements.
    // Check either all elements, or only check the first sibling

    if (util_element(_child2)) {
      handle(_child2, index); // Stop if we’re looking for one node and it’s already found.

      if (state.one && state.found) return;
      if (firstElementOnly) break;
    }
  }

  if (state.index) {
    index = -1;

    while (++index < delayed.length) {
      delayed[index]();
      if (state.one && state.found) return;
    }
  }
  /**
   * @param {Element} node
   * @param {number} childIndex
   */


  function delay(node, childIndex) {
    var elementsBefore = elements;
    var elementsByTypeBefore = nest_own.call(types, node.tagName) ? types[node.tagName] : 0;
    count(node.tagName);
    delayed.push(fn);

    function fn() {
      // Before counting further elements:
      state.elementIndex = elementsBefore;
      state.typeIndex = elementsByTypeBefore; // After counting all elements.

      state.elementCount = elements;
      state.typeCount = types[node.tagName];
      add(node, childIndex);
    }
  }
  /**
   * @param {Element} node
   * @param {number} childIndex
   */


  function add(node, childIndex) {
    var exit = enterState(state, node); // Shouldn’t happen.

    /* c8 ignore next 3 */

    if (!state.iterator) {
      throw new Error('Expected `iterator`');
    }

    state.iterator(query, node, childIndex, parent, state);
    exit();
  }
  /**
   * @param {string} name
   */


  function count(name) {
    if (!nest_own.call(types, name)) types[name] = 0;
    elements++;
    types[name]++;
  }
}
;// CONCATENATED MODULE: ./node_modules/bcp-47-match/index.js
/**
 * See <https://tools.ietf.org/html/rfc4647#section-3.1>
 * for more information on the algorithms.
 */

/**
 * @typedef {string} Tag
 * @typedef {Array<Tag>} Tags
 * @typedef {string} Range
 * @typedef {Array<Range>} Ranges
 */

/**
 * @callback Check
 * @param {Tag} tag
 * @param {Range} range
 * @returns {boolean}
 */

/**
 * @callback Filter
 * @param {Tag|Tags} tag
 * @param {Range|Ranges} [ranges]
 * @returns {Tag}
 */

/**
 * @callback Lookup
 * @param {Tag|Tags} tag
 * @param {Range|Ranges} [ranges]
 * @returns {Tag}
 */

/**
 * Factory to perform a filter or a lookup.
 * This factory creates a function that accepts a list of tags and a list of
 * ranges, and contains logic to exit early for lookups.
 * `check` just has to deal with one tag and one range.
 * This match function iterates over ranges, and for each range,
 * iterates over tags.  That way, earlier ranges matching any tag have
 * precedence over later ranges.
 *
 * @type {{
 *   (check: Check, filter: true): Filter
 *   (check: Check, filter?: false): Lookup
 * }}
 */
// prettier-ignore
var factory =
/**
 * @param {Check} check
 * @param {boolean} [filter=false]
 */
function factory(check, filter) {
  return match;
  /**
   * @param {Tag|Tags} tags
   * @param {Range|Ranges} [ranges='*']
   * @returns {Tag|Tags|undefined}
   */

  function match(tags, ranges) {
    var left = cast(tags, 'tag');
    var right = cast(ranges === null || ranges === undefined ? '*' : ranges, 'range');
    /** @type {Tags} */

    var matches = [];
    var rightIndex = -1;

    while (++rightIndex < right.length) {
      var range = right[rightIndex].toLowerCase(); // Ignore wildcards in lookup mode.

      if (!filter && range === '*') continue;
      var leftIndex = -1;
      /** @type {Tags} */

      var next = [];

      while (++leftIndex < left.length) {
        if (check(left[leftIndex].toLowerCase(), range)) {
          // Exit if this is a lookup and we have a match.
          if (!filter) return left[leftIndex];
          matches.push(left[leftIndex]);
        } else {
          next.push(left[leftIndex]);
        }
      }

      left = next;
    } // If this is a filter, return the list.  If it’s a lookup, we didn’t find
    // a match, so return `undefined`.


    return filter ? matches : undefined;
  }
};
/**
 * Basic Filtering (Section 3.3.1) matches a language priority list consisting
 * of basic language ranges (Section 2.1) to sets of language tags.
 * @param {Tag|Tags} tags
 * @param {Range|Ranges} [ranges]
 * @returns {Tags}
 */


var basicFilter = factory(
/** @type {Check} */
function (tag, range) {
  return range === '*' || tag === range || tag.includes(range + '-');
}, true);
/**
 * Extended Filtering (Section 3.3.2) matches a language priority list
 * consisting of extended language ranges (Section 2.2) to sets of language
 * tags.
 * @param {Tag|Tags} tags
 * @param {Range|Ranges} [ranges]
 * @returns {Tags}
 */

var extendedFilter = factory(
/** @type {Check} */
function (tag, range) {
  // 3.3.2.1
  var left = tag.split('-');
  var right = range.split('-');
  var leftIndex = 0;
  var rightIndex = 0; // 3.3.2.2

  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {
    return false;
  }

  leftIndex++;
  rightIndex++; // 3.3.2.3

  while (rightIndex < right.length) {
    // 3.3.2.3.A
    if (right[rightIndex] === '*') {
      rightIndex++;
      continue;
    } // 3.3.2.3.B


    if (!left[leftIndex]) return false; // 3.3.2.3.C

    if (left[leftIndex] === right[rightIndex]) {
      leftIndex++;
      rightIndex++;
      continue;
    } // 3.3.2.3.D


    if (left[leftIndex].length === 1) return false; // 3.3.2.3.E

    leftIndex++;
  } // 3.3.2.4


  return true;
}, true);
/**
 * Lookup (Section 3.4) matches a language priority list consisting of basic
 * language ranges to sets of language tags to find the one exact language tag
 * that best matches the range.
 * @param {Tag|Tags} tags
 * @param {Range|Ranges} [ranges]
 * @returns {Tag}
 */

var lookup = factory(
/** @type {Check} */
function (tag, range) {
  var right = range;
  /* eslint-disable-next-line no-constant-condition */

  while (true) {
    if (right === '*' || tag === right) return true;
    var index = right.lastIndexOf('-');
    if (index < 0) return false;
    if (right.charAt(index - 2) === '-') index -= 2;
    right = right.slice(0, index);
  }
});
/**
 * Validate tags or ranges, and cast them to arrays.
 *
 * @param {string|Array<string>} values
 * @param {string} name
 * @returns {Array<string>}
 */

function cast(values, name) {
  var value = values && typeof values === 'string' ? [values] : values;

  if (!value || typeof value !== 'object' || !('length' in value)) {
    throw new Error('Invalid ' + name + ' `' + value + '`, expected non-empty string');
  }

  return value;
}
;// CONCATENATED MODULE: ./node_modules/hast-util-has-property/index.js
var hast_util_has_property_own = {}.hasOwnProperty;
/**
 * Check if `node` has a set `name` property.
 *
 * @param {unknown} node
 * @param {string} name
 * @returns {boolean}
 */

function hasProperty(node, name) {
  /** @type {unknown} */
  var value = name && node && typeof node === 'object' && // @ts-ignore Looks like a node.
  node.type === 'element' && // @ts-ignore Looks like an element.
  node.properties && // @ts-ignore Looks like an element.
  hast_util_has_property_own.call(node.properties, name) && // @ts-ignore Looks like an element.
  node.properties[name];
  return value !== null && value !== undefined && value !== false;
}
;// CONCATENATED MODULE: ./node_modules/hast-util-select/lib/pseudo.js
/**
 * @typedef {import('./types.js').Rule} Rule
 * @typedef {import('./types.js').RulePseudo} RulePseudo
 * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth
 * @typedef {import('./types.js').RulePseudoSelector} RulePseudoSelector
 * @typedef {import('./types.js').Parent} Parent
 * @typedef {import('./types.js').Selector} Selector
 * @typedef {import('./types.js').Selectors} Selectors
 * @typedef {import('./types.js').SelectState} SelectState
 * @typedef {import('./types.js').Element} Element
 * @typedef {import('./types.js').ElementChild} ElementChild
 */







var pseudo_handle = zwitch('name', {
  // @ts-expect-error: hush.
  unknown: unknownPseudo,
  invalid: invalidPseudo,
  handlers: {
    // @ts-expect-error: hush.
    any: pseudo_matches,
    // @ts-expect-error: hush.
    'any-link': anyLink,
    // @ts-expect-error: hush.
    blank: blank,
    // @ts-expect-error: hush.
    checked: checked,
    // @ts-expect-error: hush.
    dir: dir,
    // @ts-expect-error: hush.
    disabled: disabled,
    // @ts-expect-error: hush.
    empty: empty,
    // @ts-expect-error: hush.
    enabled: enabled,
    // @ts-expect-error: hush.
    'first-child': firstChild,
    // @ts-expect-error: hush.
    'first-of-type': firstOfType,
    // @ts-expect-error: hush.
    has: has,
    // @ts-expect-error: hush.
    lang: lang,
    // @ts-expect-error: hush.
    'last-child': lastChild,
    // @ts-expect-error: hush.
    'last-of-type': lastOfType,
    // @ts-expect-error: hush.
    matches: pseudo_matches,
    // @ts-expect-error: hush.
    not: not,
    // @ts-expect-error: hush.
    'nth-child': nthChild,
    // @ts-expect-error: hush.
    'nth-last-child': nthLastChild,
    // @ts-expect-error: hush.
    'nth-of-type': nthOfType,
    // @ts-expect-error: hush.
    'nth-last-of-type': nthLastOfType,
    // @ts-expect-error: hush.
    'only-child': onlyChild,
    // @ts-expect-error: hush.
    'only-of-type': onlyOfType,
    // @ts-expect-error: hush.
    optional: optional,
    // @ts-expect-error: hush.
    'read-only': pseudo_readOnly,
    // @ts-expect-error: hush.
    'read-write': readWrite,
    // @ts-expect-error: hush.
    required: required,
    // @ts-expect-error: hush.
    root: pseudo_root,
    // @ts-expect-error: hush.
    scope: scope
  }
});
pseudo.needsIndex = ['first-child', 'first-of-type', 'last-child', 'last-of-type', 'nth-child', 'nth-last-child', 'nth-of-type', 'nth-last-of-type', 'only-child', 'only-of-type'];
/**
 * @param {Rule} query
 * @param {Element} element
 * @param {number|null} index
 * @param {Parent|null} parent
 * @param {SelectState} state
 * @returns {boolean}
 */

function pseudo(query, element, index, parent, state) {
  var pseudos = query.pseudos;
  var offset = -1;

  while (++offset < pseudos.length) {
    if (!pseudo_handle(pseudos[offset], element, index, parent, state)) return false;
  }

  return true;
}
/**
 * @param {RulePseudoSelector} query
 * @param {Element} element
 * @param {number|null} _1
 * @param {Parent|null} _2
 * @param {SelectState} state
 * @returns {boolean}
 */

function pseudo_matches(query, element, _1, _2, state) {
  var shallow = state.shallow;
  var one = state.one;
  state.shallow = true;
  state.one = true;
  var result = any_any(query.value, element, state)[0] === element;
  state.shallow = shallow;
  state.one = one;
  return result;
}
/**
 * @param {RulePseudoSelector} query
 * @param {Element} element
 * @param {number|null} index
 * @param {Parent|null} parent
 * @param {SelectState} state
 * @returns {boolean}
 */


function not(query, element, index, parent, state) {
  return !pseudo_matches(query, element, index, parent, state);
}
/**
 * @param {RulePseudo} _
 * @param {Element} element
 * @returns {boolean}
 */


function anyLink(_, element) {
  return isElement(element, ['a', 'area', 'link']) && hasProperty(element, 'href');
}
/**
 * @param {RulePseudo} _
 * @param {Element} element
 * @returns {boolean}
 */


function checked(_, element) {
  if (isElement(element, ['input', 'menuitem'])) {
    return Boolean(element.properties && (element.properties.type === 'checkbox' || element.properties.type === 'radio') && hasProperty(element, 'checked'));
  }

  if (isElement(element, 'option')) {
    return hasProperty(element, 'selected');
  }

  return false;
}
/**
 * @param {RulePseudo} query
 * @param {Element} _1
 * @param {number|null} _2
 * @param {Parent|null} _3
 * @param {SelectState} state
 * @returns {boolean}
 */


function dir(query, _1, _2, _3, state) {
  return state.direction === query.value;
}
/**
 * @param {RulePseudo} _
 * @param {Element} element
 * @returns {boolean}
 */


function disabled(_, element) {
  return isElement(element, ['button', 'input', 'select', 'textarea', 'optgroup', 'option', 'menuitem', 'fieldset']) && hasProperty(element, 'disabled');
}
/**
 * @param {RulePseudo} query
 * @param {Element} element
 * @returns {boolean}
 */


function enabled(query, element) {
  return !disabled(query, element);
}
/**
 * @param {RulePseudo} _
 * @param {Element} element
 * @returns {boolean}
 */


function required(_, element) {
  return isElement(element, ['input', 'textarea', 'select']) && hasProperty(element, 'required');
}
/**
 * @param {RulePseudo} query
 * @param {Element} element
 * @returns {boolean}
 */


function optional(query, element) {
  return !required(query, element);
}
/**
 * @param {RulePseudo} _
 * @param {Element} element
 * @param {number|null} _1
 * @param {Parent|null} _2
 * @param {SelectState} state
 * @returns {boolean}
 */


function readWrite(_, element, _1, _2, state) {
  return isElement(element, ['input', 'textarea']) ? !hasProperty(element, 'readOnly') && !hasProperty(element, 'disabled') : Boolean(state.editableOrEditingHost);
}
/**
 * @param {RulePseudo} query
 * @param {Element} element
 * @param {number|null} index
 * @param {Parent|null} parent
 * @param {SelectState} state
 * @returns {boolean}
 */


function pseudo_readOnly(query, element, index, parent, state) {
  return !readWrite(query, element, index, parent, state);
}
/**
 * @param {RulePseudo} _
 * @param {Element} element
 * @param {number|null} _1
 * @param {Parent|null} parent
 * @param {SelectState} state
 * @returns {boolean}
 */


function pseudo_root(_, element, _1, parent, state) {
  return Boolean((!parent || parent.type === 'root') && state.schema && (state.schema.space === 'html' || state.schema.space === 'svg') && isElement(element, ['html', 'svg']));
}
/**
 * @param {RulePseudo} _
 * @param {Element} element
 * @param {number|null} _1
 * @param {Parent|null} _2
 * @param {SelectState} state
 * @returns {boolean}
 */


function scope(_, element, _1, _2, state) {
  return Boolean(isElement(element) && state.scopeElements && state.scopeElements.includes(element));
}
/**
 * @param {RulePseudo} _
 * @param {Element} element
 * @returns {boolean}
 */


function empty(_, element) {
  return !someChildren(element, check);
  /**
   * @param {ElementChild} child
   * @returns {boolean}
   */

  function check(child) {
    return child.type === 'element' || child.type === 'text';
  }
}
/**
 * @param {RulePseudo} _
 * @param {Element} element
 * @returns {boolean}
 */


function blank(_, element) {
  return !someChildren(element, check);
  /**
   * @param {ElementChild} child
   * @returns {boolean}
   */

  function check(child) {
    return child.type === 'element' || child.type === 'text' && !whitespace(child);
  }
}
/**
 * @param {RulePseudo} query
 * @param {Element} _1
 * @param {number|null} _2
 * @param {Parent|null} _3
 * @param {SelectState} state
 * @returns {boolean}
 */


function firstChild(query, _1, _2, _3, state) {
  assertDeep(state, query);
  return state.elementIndex === 0;
}
/**
 * @param {RulePseudo} query
 * @param {Element} _1
 * @param {number|null} _2
 * @param {Parent|null} _3
 * @param {SelectState} state
 * @returns {boolean}
 */


function lang(query, _1, _2, _3, state) {
  return state.language !== '' && state.language !== undefined && state.language !== null && // @ts-expect-error never `selectors`.
  extendedFilter(state.language, comma_separated_tokens_parse(query.value)).length > 0;
}
/**
 * @param {RulePseudo} query
 * @param {Element} _1
 * @param {number|null} _2
 * @param {Parent|null} _3
 * @param {SelectState} state
 * @returns {boolean}
 */


function lastChild(query, _1, _2, _3, state) {
  assertDeep(state, query);
  return Boolean(state.elementCount && state.elementIndex === state.elementCount - 1);
}
/**
 * @param {RulePseudo} query
 * @param {Element} _1
 * @param {number|null} _2
 * @param {Parent|null} _3
 * @param {SelectState} state
 * @returns {boolean}
 */


function onlyChild(query, _1, _2, _3, state) {
  assertDeep(state, query);
  return state.elementCount === 1;
}
/**
 * @param {RulePseudoNth} query
 * @param {Element} _1
 * @param {number|null} _2
 * @param {Parent|null} _3
 * @param {SelectState} state
 * @returns {boolean}
 */


function nthChild(query, _1, _2, _3, state) {
  assertDeep(state, query);
  return typeof state.elementIndex === 'number' && query.value(state.elementIndex);
}
/**
 * @param {RulePseudoNth} query
 * @param {Element} _1
 * @param {number|null} _2
 * @param {Parent|null} _3
 * @param {SelectState} state
 * @returns {boolean}
 */


function nthLastChild(query, _1, _2, _3, state) {
  assertDeep(state, query);
  return Boolean(typeof state.elementCount === 'number' && typeof state.elementIndex === 'number' && query.value(state.elementCount - state.elementIndex - 1));
}
/**
 * @param {RulePseudoNth} query
 * @param {Element} _1
 * @param {number|null} _2
 * @param {Parent|null} _3
 * @param {SelectState} state
 * @returns {boolean}
 */


function nthOfType(query, _1, _2, _3, state) {
  assertDeep(state, query);
  return typeof state.typeIndex === 'number' && query.value(state.typeIndex);
}
/**
 * @param {RulePseudoNth} query
 * @param {Element} _1
 * @param {number|null} _2
 * @param {Parent|null} _3
 * @param {SelectState} state
 * @returns {boolean}
 */


function nthLastOfType(query, _1, _2, _3, state) {
  assertDeep(state, query);
  return typeof state.typeCount === 'number' && typeof state.typeIndex === 'number' && query.value(state.typeCount - 1 - state.typeIndex);
}
/**
 * @param {RulePseudo} query
 * @param {Element} _1
 * @param {number|null} _2
 * @param {Parent|null} _3
 * @param {SelectState} state
 * @returns {boolean}
 */


function firstOfType(query, _1, _2, _3, state) {
  assertDeep(state, query);
  return state.typeIndex === 0;
}
/**
 * @param {RulePseudo} query
 * @param {Element} _1
 * @param {number|null} _2
 * @param {Parent|null} _3
 * @param {SelectState} state
 * @returns {boolean}
 */


function lastOfType(query, _1, _2, _3, state) {
  assertDeep(state, query);
  return typeof state.typeIndex === 'number' && typeof state.typeCount === 'number' && state.typeIndex === state.typeCount - 1;
}
/**
 * @param {RulePseudo} query
 * @param {Element} _1
 * @param {number|null} _2
 * @param {Parent|null} _3
 * @param {SelectState} state
 * @returns {boolean}
 */


function onlyOfType(query, _1, _2, _3, state) {
  assertDeep(state, query);
  return state.typeCount === 1;
}
/**
 * @param {Element} element
 * @param {(child: ElementChild) => boolean} check
 * @returns {boolean}
 */


function someChildren(element, check) {
  var children = element.children;
  var index = -1;

  while (++index < children.length) {
    if (check(children[index])) return true;
  }

  return false;
} // Shouldn’t be called, parser gives correct data.

/* c8 ignore next 3 */


function invalidPseudo() {
  throw new Error('Invalid pseudo-selector');
}
/**
 * @param {RulePseudo} query
 */


function unknownPseudo(query) {
  if (query.name) {
    throw new Error('Unknown pseudo-selector `' + query.name + '`');
  }

  throw new Error('Unexpected pseudo-element or empty pseudo-class');
}
/**
 * @param {SelectState} state
 * @param {RulePseudo|RulePseudoNth} query
 */


function assertDeep(state, query) {
  if (state.shallow) {
    throw new Error('Cannot use `:' + query.name + '` without parent');
  }
}
/**
 * @param {RulePseudoSelector} query
 * @param {Element} element
 * @param {number|null} _2
 * @param {Parent|null} _3
 * @param {SelectState} state
 * @returns {boolean}
 */


function has(query, element, _2, _3, state) {
  var shallow = state.shallow;
  var one = state.one;
  var scopeElements = state.scopeElements;
  var value = appendScope(query.value);
  state.shallow = false;
  state.one = true;
  state.scopeElements = [element];
  var result = any_any(value, element, state).length > 0;
  state.shallow = shallow;
  state.one = one;
  state.scopeElements = scopeElements;
  return result;
}
/**
 * @param {Selector} value
 * @returns {Selectors}
 */


function appendScope(value) {
  /** @type {Selectors} */
  var selector = value.type === 'ruleSet' ? {
    type: 'selectors',
    selectors: [value]
  } : value;
  var index = -1;

  while (++index < selector.selectors.length) {
    var rule = selector.selectors[index].rule;
    rule.nestingOperator = null;

    if (!rule.pseudos || rule.pseudos.length !== 1 || rule.pseudos[0].name !== 'scope') {
      selector.selectors[index] = {
        type: 'ruleSet',
        // @ts-expect-error pseudos are fine w/ just a name!
        rule: {
          type: 'rule',
          rule: rule,
          pseudos: [{
            name: 'scope'
          }]
        }
      };
    }
  }

  return selector;
}
;// CONCATENATED MODULE: ./node_modules/hast-util-select/lib/attribute.js
/**
 * @typedef {import('./types.js').Rule} Rule
 * @typedef {import('./types.js').RuleAttr} RuleAttr
 * @typedef {import('./types.js').Element} Element
 * @typedef {import('./types.js').Schema} Schema
 * @typedef {import('./types.js').Info} Info
 * @typedef {import('./types.js').PropertyValue} PropertyValue
 */





var attribute_handle = zwitch('operator', {
  // @ts-expect-error: hush.
  unknown: unknownOperator,
  // @ts-expect-error: hush.
  invalid: exists,
  handlers: {
    // @ts-expect-error: hush.
    '=': exact,
    // @ts-expect-error: hush.
    '~=': spaceSeparatedList,
    // @ts-expect-error: hush.
    '|=': exactOrPrefix,
    // @ts-expect-error: hush.
    '^=': begins,
    // @ts-expect-error: hush.
    '$=': ends,
    // @ts-expect-error: hush.
    '*=': contains
  }
});
/**
 * @param {Rule} query
 * @param {Element} element
 * @param {Schema} schema
 * @returns {boolean}
 */

function attribute(query, element, schema) {
  var attrs = query.attrs;
  var index = -1;

  while (++index < attrs.length) {
    if (!attribute_handle(attrs[index], element, find(schema, attrs[index].name))) {
      return false;
    }
  }

  return true;
}
/**
 * `[attr]`
 *
 * @param {RuleAttr} _
 * @param {Element} element
 * @param {Info} info
 * @returns {boolean}
 */

function exists(_, element, info) {
  return hasProperty(element, info.property);
}
/**
 * `[attr=value]`
 *
 * @param {RuleAttr} query
 * @param {Element} element
 * @param {Info} info
 * @returns {boolean}
 */


function exact(query, element, info) {
  return Boolean(hasProperty(element, info.property) && element.properties && normalizeValue(element.properties[info.property], info) === query.value);
}
/**
 * `[attr~=value]`
 *
 * @param {RuleAttr} query
 * @param {Element} element
 * @param {Info} info
 * @returns {boolean}
 */


function spaceSeparatedList(query, element, info) {
  var value = element.properties && element.properties[info.property];
  return (// If this is a comma-separated list, and the query is contained in it, return
    // true.
    !info.commaSeparated && value && typeof value === 'object' && query.value && value.includes(query.value) || // For all other values (including comma-separated lists), return whether this
    // is an exact match.
    hasProperty(element, info.property) && normalizeValue(value, info) === query.value
  );
}
/**
 * `[attr|=value]`
 *
 * @param {RuleAttr} query
 * @param {Element} element
 * @param {Info} info
 * @returns {boolean}
 */


function exactOrPrefix(query, element, info) {
  var value = normalizeValue(element.properties && element.properties[info.property], info);
  return Boolean(hasProperty(element, info.property) && query.value && (value === query.value || value.slice(0, query.value.length) === query.value && value.charAt(query.value.length) === '-'));
}
/**
 * `[attr^=value]`
 *
 * @param {RuleAttr} query
 * @param {Element} element
 * @param {Info} info
 * @returns {boolean}
 */


function begins(query, element, info) {
  return Boolean(hasProperty(element, info.property) && element.properties && query.value && normalizeValue(element.properties[info.property], info).slice(0, query.value.length) === query.value);
}
/**
 * `[attr$=value]`
 *
 * @param {RuleAttr} query
 * @param {Element} element
 * @param {Info} info
 * @returns {boolean}
 */


function ends(query, element, info) {
  return Boolean(hasProperty(element, info.property) && element.properties && query.value && normalizeValue(element.properties[info.property], info).slice(-query.value.length) === query.value);
}
/**
 * `[attr*=value]`
 *
 * @param {RuleAttr} query
 * @param {Element} element
 * @param {Info} info
 * @returns {boolean}
 */


function contains(query, element, info) {
  return Boolean(hasProperty(element, info.property) && element.properties && query.value && normalizeValue(element.properties[info.property], info).includes(query.value));
} // Shouldn’t be called, Parser throws an error instead.

/**
 * @param {RuleAttr} query
 * @returns {boolean}
 */

/* c8 ignore next 3 */


function unknownOperator(query) {
  throw new Error('Unknown operator `' + query.operator + '`');
}
/**
 * Stringify a hast value back to its HTML form.
 *
 * @param {PropertyValue} value
 * @param {Info} info
 * @returns {string}
 */


function normalizeValue(value, info) {
  if (typeof value === 'boolean') {
    return info.attribute;
  }

  if (Array.isArray(value)) {
    return (info.commaSeparated ? comma_separated_tokens_stringify : space_separated_tokens_stringify)(value);
  }

  return String(value);
}
;// CONCATENATED MODULE: ./node_modules/hast-util-select/lib/class-name.js
/**
 * @typedef {import('./types.js').Rule} Rule
 * @typedef {import('./types.js').Element} Element
 */

/**
 * @param {Rule} query
 * @param {Element} element
 * @returns {boolean}
 */
function className(query, element) {
  /** @type {Array<string>} */
  // @ts-expect-error Assume array.
  var value = element.properties.className || [];
  var index = -1;

  if (query.classNames) {
    while (++index < query.classNames.length) {
      if (!value.includes(query.classNames[index])) return false;
    }
  }

  return true;
}
;// CONCATENATED MODULE: ./node_modules/hast-util-select/lib/id.js
/**
 * @typedef {import('./types.js').Rule} Rule
 * @typedef {import('./types.js').Element} Element
 */

/**
 * @param {Rule} query
 * @param {Element} element
 * @returns {boolean}
 */
function id(query, element) {
  return Boolean(element.properties && element.properties.id === query.id);
}
;// CONCATENATED MODULE: ./node_modules/hast-util-select/lib/name.js
/**
 * @typedef {import('./types.js').Rule} Rule
 * @typedef {import('./types.js').Element} Element
 */

/**
 * @param {Rule} query
 * @param {Element} element
 * @returns {boolean}
 */
function name_name(query, element) {
  return query.tagName === '*' || query.tagName === element.tagName;
}
;// CONCATENATED MODULE: ./node_modules/hast-util-select/lib/test.js
/**
 * @typedef {import('./types.js').Rule} Rule
 * @typedef {import('./types.js').HastNode} HastNode
 * @typedef {import('./types.js').Element} Element
 * @typedef {import('./types.js').Parent} Parent
 * @typedef {import('./types.js').SelectState} SelectState
 * @typedef {import('hast-util-is-element').AssertPredicate<Element>} IsElement
 */






/**
 * @param {Rule} query
 * @param {HastNode} node
 * @param {number|null} index
 * @param {Parent|null} parent
 * @param {SelectState} state
 * @returns {boolean}
 */

function test(query, node, index, parent, state) {
  return Boolean(util_element(node) && state.schema && (!query.tagName || name_name(query, node)) && (!query.classNames || className(query, node)) && (!query.id || id(query, node)) && (!query.attrs || attribute(query, node, state.schema)) && (!query.pseudos || pseudo(query, node, index, parent, state)));
}
;// CONCATENATED MODULE: ./node_modules/hast-util-select/lib/any.js



/**
 * @typedef {import('hast').Element} Element
 * @typedef {import('./types.js').Selectors} Selectors
 * @typedef {import('./types.js').Rule} Rule
 * @typedef {import('./types.js').RuleSet} RuleSet
 * @typedef {import('./types.js').HastNode} HastNode
 * @typedef {import('./types.js').SelectIterator} SelectIterator
 * @typedef {import('./types.js').SelectState} SelectState
 */






var type = zwitch('type', {
  // @ts-expect-error: hush.
  unknown: unknownType,
  invalid: invalidType,
  // @ts-expect-error: hush.
  handlers: {
    selectors: selectors,
    ruleSet: ruleSet,
    rule: rule
  }
});
/**
 * @param {Selectors|RuleSet|Rule} query
 * @param {HastNode|undefined} node
 * @param {SelectState} state
 * @returns {Array<Element>}
 */

function any_any(query, node, state) {
  // @ts-expect-error zwitch types are off.
  return query && node ? type(query, node, state) : [];
}
/**
 * @param {Selectors} query
 * @param {HastNode} node
 * @param {SelectState} state
 * @returns {Array<Element>}
 */

function selectors(query, node, state) {
  var collector = new Collector(state.one);
  var index = -1;

  while (++index < query.selectors.length) {
    collector.collectAll(ruleSet(query.selectors[index], node, state));
  }

  return collector.result;
}
/**
 * @param {RuleSet} query
 * @param {HastNode} node
 * @param {SelectState} state
 * @returns {Array<Element>}
 */


function ruleSet(query, node, state) {
  return rule(query.rule, node, state);
}
/**
 * @param {Rule} query
 * @param {HastNode} tree
 * @param {SelectState} state
 * @returns {Array<Element>}
 */


function rule(query, tree, state) {
  var collector = new Collector(state.one);

  if (state.shallow && query.rule) {
    throw new Error('Expected selector without nesting');
  }

  nest(query, tree, 0, null, configure(query, {
    schema: state.space === 'svg' ? property_information_svg : property_information_html,
    language: undefined,
    direction: 'ltr',
    editableOrEditingHost: false,
    // @ts-expect-error assume elements.
    scopeElements: tree.type === 'root' ? tree.children : [tree],
    iterator: iterator,
    one: state.one,
    shallow: state.shallow
  }));
  return collector.result;
  /** @type {SelectIterator} */

  function iterator(query, node, index, parent, state) {
    var exit = enterState(state, node);

    if (test(query, node, index, parent, state)) {
      if (query.rule) {
        nest(query.rule, node, index, parent, configure(query.rule, state));
      } else {
        // @ts-expect-error `test` also asserts `node is Element`
        collector.collect(node);
        state.found = true;
      }
    }

    exit();
  }
  /**
   * @template {SelectState} S
   * @param {Rule} query
   * @param {S} state
   * @returns {S}
   */


  function configure(query, state) {
    var pseudos = query.pseudos || [];
    var index = -1;

    while (++index < pseudos.length) {
      if (pseudo.needsIndex.includes(pseudos[index].name)) {
        state.index = true;
        break;
      }
    }

    return state;
  }
} // Shouldn’t be called, all data is handled.

/* c8 ignore next 6 */

/**
 * @param {{[x: string]: unknown, type: string}} query
 */


function unknownType(query) {
  throw new Error('Unknown type `' + query.type + '`');
} // Shouldn’t be called, parser gives correct data.

/* c8 ignore next 3 */


function invalidType() {
  throw new Error('Invalid type');
}

var Collector = /*#__PURE__*/function () {
  /**
   * @param {boolean|undefined} [one]
   */
  function Collector(one) {
    _classCallCheck(this, Collector);

    /** @type {Array<Element>} */
    this.result = [];
    /** @type {boolean|undefined} */

    this.one = one;
    /** @type {boolean} */

    this.found = false;
  }
  /**
   * Append nodes to array, filtering out duplicates.
   *
   * @param {Array<Element>} elements
   */


  _createClass(Collector, [{
    key: "collectAll",
    value: function collectAll(elements) {
      var index = -1;

      while (++index < elements.length) {
        this.collect(elements[index]);
      }
    }
    /**
     * Append one node.
     *
     * @param {Element} element
     */

  }, {
    key: "collect",
    value: function collect(element) {
      if (this.one) {
        // Shouldn’t happen, safeguards performance problems.

        /* c8 ignore next */
        if (this.found) return;
        this.found = true;
      }

      if (!this.result.includes(element)) this.result.push(element);
    }
  }]);

  return Collector;
}();
// EXTERNAL MODULE: ./node_modules/css-selector-parser/lib/index.js
var css_selector_parser_lib = __webpack_require__(2181);
// EXTERNAL MODULE: ./node_modules/nth-check/lib/index.js
var nth_check_lib = __webpack_require__(1469);
;// CONCATENATED MODULE: ./node_modules/hast-util-select/lib/parse.js
/**
 * @typedef {import('./types.js').Selector} Selector
 * @typedef {import('./types.js').Selectors} Selectors
 * @typedef {import('./types.js').RuleSet} RuleSet
 * @typedef {import('./types.js').Rule} Rule
 * @typedef {import('./types.js').RulePseudo} RulePseudo
 * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth
 */



/** @type {import('nth-check').default} */
// @ts-expect-error

var nthCheck = nth_check_lib["default"] || nth_check_lib;
var nth = new Set(['nth-child', 'nth-last-child', 'nth-of-type', 'nth-last-of-type']);
var parse_parser = new css_selector_parser_lib/* CssSelectorParser */.N(); // @ts-expect-error: hush.

var compile = zwitch('type', {
  handlers: {
    selectors: parse_selectors,
    ruleSet: parse_ruleSet,
    rule: parse_rule
  }
});
parse_parser.registerAttrEqualityMods('~', '|', '^', '$', '*');
parse_parser.registerSelectorPseudos('any', 'matches', 'not', 'has');
parse_parser.registerNestingOperators('>', '+', '~');
/**
 * @param {string} selector
 * @returns {Selector}
 */

function parse_parse(selector) {
  if (typeof selector !== 'string') {
    throw new TypeError('Expected `string` as selector, not `' + selector + '`');
  } // @ts-expect-error types are wrong.


  return compile(parse_parser.parse(selector));
}
/**
 * @param {Selectors} query
 * @returns {Selectors}
 */

function parse_selectors(query) {
  var index = -1;

  while (++index < query.selectors.length) {
    compile(query.selectors[index]);
  }

  return query;
}
/**
 * @param {RuleSet} query
 * @returns {Rule}
 */


function parse_ruleSet(query) {
  return parse_rule(query.rule);
}
/**
 * @param {Rule} query
 * @returns {Rule}
 */


function parse_rule(query) {
  var pseudos = query.pseudos || [];
  var index = -1;

  while (++index < pseudos.length) {
    var pseudo = pseudos[index];

    if (nth.has(pseudo.name)) {
      // @ts-expect-error Patch a non-primitive type.
      pseudo.value = nthCheck(pseudo.value); // @ts-expect-error Patch a non-primitive type.

      pseudo.valueType = 'function';
    }
  }

  compile(query.rule);
  return query;
}
;// CONCATENATED MODULE: ./node_modules/hast-util-select/index.js
/**
 * @typedef {import('./lib/types.js').Element} Element
 * @typedef {import('./lib/types.js').HastNode} HastNode
 * @typedef {import('./lib/types.js').Space} Space
 */


/**
 * @param {string} selector
 * @param {HastNode} [node]
 * @param {Space} [space]
 * @returns {boolean}
 */

function hast_util_select_matches(selector, node, space) {
  return Boolean(any(parse(selector), node, {
    space: space,
    one: true,
    shallow: true
  })[0]);
}
/**
 * @param {string} selector
 * @param {HastNode} [node]
 * @param {Space} [space]
 * @returns {Element|null}
 */

function hast_util_select_select(selector, node, space) {
  return any_any(parse_parse(selector), node, {
    space: space,
    one: true
  })[0] || null;
}
/**
 * @param {string} selector
 * @param {HastNode} [node]
 * @param {Space} [space]
 * @returns {Array<Element>}
 */

function selectAll(selector, node, space) {
  return any_any(parse_parse(selector), node, {
    space: space
  });
}
;// CONCATENATED MODULE: ./src/utils/html-manipulation/static-render.ts
/**
 * Uses MathJax to statically render Math.
 */function staticallyRenderMathJax(_x){return _staticallyRenderMathJax.apply(this,arguments);}function _staticallyRenderMathJax(){_staticallyRenderMathJax=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee(domStr){var file;return regenerator_default().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return unified().use(rehypeParse,{fragment:true}).use(function(){return function(ast,file){// To process math, the rehypeMathjax plugin requires an `inline-math` or `display-math`
// class. Pretext outputs a `process-math` class. So, we add the required classes.
var _iterator=_createForOfIteratorHelper(selectAll(".process-math",ast)),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _elm$properties;var elm=_step.value;var className=(_elm$properties=elm.properties)===null||_elm$properties===void 0?void 0:_elm$properties.className;if(!Array.isArray(className)){continue;}className.includes("displaymath")?className.push("math-display"):className.push("math-inline");// We need to trim any braces \( and \) from the start and end of the string.
var child=elm.children[0];if((child===null||child===void 0?void 0:child.type)==="text"){var innerText=child.value.trim();if(innerText.startsWith("\\(")){innerText=innerText.slice(2);}if(innerText.endsWith("\\)")){innerText=innerText.slice(0,innerText.length-2);}child.value=innerText;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return;};}).use(rehype_mathjax_chtml,{chtml:{fontURL:"https://cdn.jsdelivr.net/npm/mathjax@3/es5/output/chtml/fonts/woff-v2",mtextInheritFont:true,scale:0.88}}).use(rehypeStringify).process(domStr);case 2:file=_context.sent;return _context.abrupt("return",String(file));case 4:case"end":return _context.stop();}}},_callee);}));return _staticallyRenderMathJax.apply(this,arguments);}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(3366);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = (0,objectWithoutPropertiesLoose/* default */.Z)(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}
;// CONCATENATED MODULE: ./node_modules/reakit/es/_rollupPluginBabelHelpers-1f0bf8c2.js
function _rollupPluginBabelHelpers_1f0bf8c2_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _rollupPluginBabelHelpers_1f0bf8c2_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      _rollupPluginBabelHelpers_1f0bf8c2_ownKeys(Object(source), true).forEach(function (key) {
        _rollupPluginBabelHelpers_1f0bf8c2_defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      _rollupPluginBabelHelpers_1f0bf8c2_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _rollupPluginBabelHelpers_1f0bf8c2_unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _rollupPluginBabelHelpers_1f0bf8c2_arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _rollupPluginBabelHelpers_1f0bf8c2_arrayLikeToArray(o, minLen);
}

function _rollupPluginBabelHelpers_1f0bf8c2_arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function _createForOfIteratorHelperLoose(o, allowArrayLike) {
  var it;

  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = _rollupPluginBabelHelpers_1f0bf8c2_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      return function () {
        if (i >= o.length) return {
          done: true
        };
        return {
          done: false,
          value: o[i++]
        };
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  it = o[Symbol.iterator]();
  return it.next.bind(it);
}


;// CONCATENATED MODULE: ./node_modules/reakit-system/es/_rollupPluginBabelHelpers-0c84a174.js
function _rollupPluginBabelHelpers_0c84a174_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _rollupPluginBabelHelpers_0c84a174_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _rollupPluginBabelHelpers_0c84a174_objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      _rollupPluginBabelHelpers_0c84a174_ownKeys(Object(source), true).forEach(function (key) {
        _rollupPluginBabelHelpers_0c84a174_defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      _rollupPluginBabelHelpers_0c84a174_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _rollupPluginBabelHelpers_0c84a174_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _rollupPluginBabelHelpers_0c84a174_unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _rollupPluginBabelHelpers_0c84a174_arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _rollupPluginBabelHelpers_0c84a174_arrayLikeToArray(o, minLen);
}

function _rollupPluginBabelHelpers_0c84a174_arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function _rollupPluginBabelHelpers_0c84a174_createForOfIteratorHelperLoose(o, allowArrayLike) {
  var it;

  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = _rollupPluginBabelHelpers_0c84a174_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      return function () {
        if (i >= o.length) return {
          done: true
        };
        return {
          done: false,
          value: o[i++]
        };
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  it = o[Symbol.iterator]();
  return it.next.bind(it);
}


;// CONCATENATED MODULE: ./node_modules/reakit-system/es/SystemContext.js

var SystemContext = /*#__PURE__*/(0,react.createContext)({});

;// CONCATENATED MODULE: ./node_modules/reakit-system/es/useCreateElement.js




function isRenderProp(children) {
  return typeof children === "function";
}
/**
 * Custom hook that will call `children` if it's a function. If
 * `useCreateElement` has been passed to the context, it'll be used instead.
 *
 * @example
 * import React from "react";
 * import { SystemProvider, useCreateElement } from "reakit-system";
 *
 * const system = {
 *   useCreateElement(type, props, children = props.children) {
 *     // very similar to what `useCreateElement` does already
 *     if (typeof children === "function") {
 *       const { children: _, ...rest } = props;
 *       return children(rest);
 *     }
 *     return React.createElement(type, props, children);
 *   },
 * };
 *
 * function Component(props) {
 *   return useCreateElement("div", props);
 * }
 *
 * function App() {
 *   return (
 *     <SystemProvider unstable_system={system}>
 *       <Component url="url">{({ url }) => <a href={url}>link</a>}</Component>
 *     </SystemProvider>
 *   );
 * }
 */


var useCreateElement = function useCreateElement(type, props, children) {
  if (children === void 0) {
    children = props.children;
  }

  var context = (0,react.useContext)(SystemContext);

  if (context.useCreateElement) {
    return context.useCreateElement(type, props, children);
  }

  if (typeof type === "string" && isRenderProp(children)) {
    var _ = props.children,
        rest = _rollupPluginBabelHelpers_0c84a174_objectWithoutPropertiesLoose(props, ["children"]);

    return children(rest);
  }

  return /*#__PURE__*/(0,react.createElement)(type, props, children);
};


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/_rollupPluginBabelHelpers-1f0bf8c2.js
function es_rollupPluginBabelHelpers_1f0bf8c2_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function es_rollupPluginBabelHelpers_1f0bf8c2_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function es_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      es_rollupPluginBabelHelpers_1f0bf8c2_ownKeys(Object(source), true).forEach(function (key) {
        es_rollupPluginBabelHelpers_1f0bf8c2_defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      es_rollupPluginBabelHelpers_1f0bf8c2_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _rollupPluginBabelHelpers_1f0bf8c2_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function es_rollupPluginBabelHelpers_1f0bf8c2_unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return es_rollupPluginBabelHelpers_1f0bf8c2_arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return es_rollupPluginBabelHelpers_1f0bf8c2_arrayLikeToArray(o, minLen);
}

function es_rollupPluginBabelHelpers_1f0bf8c2_arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function _rollupPluginBabelHelpers_1f0bf8c2_createForOfIteratorHelperLoose(o, allowArrayLike) {
  var it;

  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = es_rollupPluginBabelHelpers_1f0bf8c2_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      return function () {
        if (i >= o.length) return {
          done: true
        };
        return {
          done: false,
          value: o[i++]
        };
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  it = o[Symbol.iterator]();
  return it.next.bind(it);
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/isObject.js
/**
 * Checks whether `arg` is an object or not.
 *
 * @returns {boolean}
 */
function isObject_isObject(arg) {
  return typeof arg === "object" && arg != null;
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/isPlainObject.js

/**
 * Checks whether `arg` is a plain object or not.
 *
 * @returns {boolean}
 */

function isPlainObject_isPlainObject(arg) {
  var _proto$constructor;

  if (!isObject_isObject(arg)) return false;
  var proto = Object.getPrototypeOf(arg);
  if (proto == null) return true;
  return ((_proto$constructor = proto.constructor) === null || _proto$constructor === void 0 ? void 0 : _proto$constructor.toString()) === Object.toString();
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/splitProps.js



/**
 * Splits an object (`props`) into a tuple where the first item is an object
 * with the passed `keys`, and the second item is an object with these keys
 * omitted.
 *
 * @deprecated will be removed in version 2
 *
 * @example
 * import { splitProps } from "reakit-utils";
 *
 * splitProps({ a: "a", b: "b" }, ["a"]); // [{ a: "a" }, { b: "b" }]
 */

function __deprecatedSplitProps(props, keys) {
  var propsKeys = Object.keys(props);
  var picked = {};
  var omitted = {};

  for (var _i = 0, _propsKeys = propsKeys; _i < _propsKeys.length; _i++) {
    var key = _propsKeys[_i];

    if (keys.indexOf(key) >= 0) {
      picked[key] = props[key];
    } else {
      omitted[key] = props[key];
    }
  }

  return [picked, omitted];
}
/**
 * Splits an object (`props`) into a tuple where the first item
 * is the `state` property, and the second item is the rest of the properties.
 *
 * It is also backward compatible with version 1. If `keys` are passed then
 * splits an object (`props`) into a tuple where the first item is an object
 * with the passed `keys`, and the second item is an object with these keys
 * omitted.
 *
 * @example
 * import { splitProps } from "reakit-utils";
 *
 * splitProps({ a: "a", b: "b" }, ["a"]); // [{ a: "a" }, { b: "b" }]
 *
 * @example
 * import { splitProps } from "reakit-utils";
 *
 * splitProps({ state: { a: "a" }, b: "b" }); // [{ a: "a" }, { b: "b" }]
 */


function splitProps(props, keys) {
  if (keys === void 0) {
    keys = [];
  }

  if (!isPlainObject_isPlainObject(props.state)) {
    return __deprecatedSplitProps(props, keys);
  }

  var _deprecatedSplitProp = __deprecatedSplitProps(props, [].concat(keys, ["state"])),
      picked = _deprecatedSplitProp[0],
      omitted = _deprecatedSplitProp[1];

  var state = picked.state,
      restPicked = _rollupPluginBabelHelpers_1f0bf8c2_objectWithoutPropertiesLoose(picked, ["state"]);

  return [es_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(es_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), restPicked), omitted];
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/shallowEqual.js
/**
 * Compares two objects.
 *
 * @example
 * import { shallowEqual } from "reakit-utils";
 *
 * shallowEqual({ a: "a" }, {}); // false
 * shallowEqual({ a: "a" }, { b: "b" }); // false
 * shallowEqual({ a: "a" }, { a: "a" }); // true
 * shallowEqual({ a: "a" }, { a: "a", b: "b" }); // false
 */
function shallowEqual(objA, objB) {
  if (objA === objB) return true;
  if (!objA) return false;
  if (!objB) return false;
  if (typeof objA !== "object") return false;
  if (typeof objB !== "object") return false;
  var aKeys = Object.keys(objA);
  var bKeys = Object.keys(objB);
  var length = aKeys.length;
  if (bKeys.length !== length) return false;

  for (var _i = 0, _aKeys = aKeys; _i < _aKeys.length; _i++) {
    var key = _aKeys[_i];

    if (objA[key] !== objB[key]) {
      return false;
    }
  }

  return true;
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/normalizePropsAreEqual.js



/**
 * This higher order functions take `propsAreEqual` function and
 * returns a new function which normalizes the props.
 *
 * Normalizing in our case is making sure the `propsAreEqual` works with
 * both version 1 (object spreading) and version 2 (state object) state passing.
 *
 * To achieve this, the returned function in case of a state object
 * will spread the state object in both `prev` and `next props.
 *
 * Other case it just returns the function as is which makes sure
 * that we are still backward compatible
 */

function normalizePropsAreEqual(propsAreEqual) {
  if (propsAreEqual.name === "normalizePropsAreEqualInner") {
    return propsAreEqual;
  }

  return function normalizePropsAreEqualInner(prev, next) {
    if (!isPlainObject_isPlainObject(prev.state) || !isPlainObject_isPlainObject(next.state)) {
      return propsAreEqual(prev, next);
    }

    return propsAreEqual(es_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(es_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, prev.state), prev), es_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(es_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, next.state), next));
  };
}


;// CONCATENATED MODULE: ./node_modules/reakit-system/es/createComponent.js








function forwardRef(component) {
  return /*#__PURE__*/(0,react.forwardRef)(component);
}

function memo(component, propsAreEqual) {
  return /*#__PURE__*/(0,react.memo)(component, propsAreEqual);
}
/**
 * Creates a React component.
 *
 * @example
 * import { createComponent } from "reakit-system";
 *
 * const A = createComponent({ as: "a" });
 *
 * @param options
 */


function createComponent(_ref) {
  var type = _ref.as,
      useHook = _ref.useHook,
      shouldMemo = _ref.memo,
      _ref$propsAreEqual = _ref.propsAreEqual,
      propsAreEqual = _ref$propsAreEqual === void 0 ? useHook === null || useHook === void 0 ? void 0 : useHook.unstable_propsAreEqual : _ref$propsAreEqual,
      _ref$keys = _ref.keys,
      keys = _ref$keys === void 0 ? (useHook === null || useHook === void 0 ? void 0 : useHook.__keys) || [] : _ref$keys,
      _ref$useCreateElement = _ref.useCreateElement,
      useCreateElement$1 = _ref$useCreateElement === void 0 ? useCreateElement : _ref$useCreateElement;

  var Comp = function Comp(_ref2, ref) {
    var _ref2$as = _ref2.as,
        as = _ref2$as === void 0 ? type : _ref2$as,
        props = _rollupPluginBabelHelpers_0c84a174_objectWithoutPropertiesLoose(_ref2, ["as"]);

    if (useHook) {
      var _as$render;

      var _splitProps = splitProps(props, keys),
          _options = _splitProps[0],
          htmlProps = _splitProps[1];

      var _useHook = useHook(_options, _rollupPluginBabelHelpers_0c84a174_objectSpread2({
        ref: ref
      }, htmlProps)),
          wrapElement = _useHook.wrapElement,
          elementProps = _rollupPluginBabelHelpers_0c84a174_objectWithoutPropertiesLoose(_useHook, ["wrapElement"]); // @ts-ignore


      var asKeys = ((_as$render = as.render) === null || _as$render === void 0 ? void 0 : _as$render.__keys) || as.__keys;
      var asOptions = asKeys && splitProps(props, asKeys)[0];
      var allProps = asOptions ? _rollupPluginBabelHelpers_0c84a174_objectSpread2(_rollupPluginBabelHelpers_0c84a174_objectSpread2({}, elementProps), asOptions) : elementProps;

      var _element = useCreateElement$1(as, allProps);

      if (wrapElement) {
        return wrapElement(_element);
      }

      return _element;
    }

    return useCreateElement$1(as, _rollupPluginBabelHelpers_0c84a174_objectSpread2({
      ref: ref
    }, props));
  };

  if (false) {}

  Comp = forwardRef(Comp);

  if (shouldMemo) {
    Comp = memo(Comp, propsAreEqual && normalizePropsAreEqual(propsAreEqual));
  }

  Comp.__keys = keys;
  Comp.unstable_propsAreEqual = normalizePropsAreEqual(propsAreEqual || shallowEqual);
  return Comp;
}


;// CONCATENATED MODULE: ./node_modules/reakit-system/es/useToken.js


/**
 * React custom hook that returns the value of any token defined in the
 * SystemContext. It's mainly used internally in [`useOptions`](#useoptions)
 * and [`useProps`](#useprops).
 *
 * @example
 * import { SystemProvider, useToken } from "reakit-system";
 *
 * const system = {
 *   token: "value",
 * };
 *
 * function Component(props) {
 *   const token = useToken("token", "default value");
 *   return <div {...props}>{token}</div>;
 * }
 *
 * function App() {
 *   return (
 *     <SystemProvider unstable_system={system}>
 *       <Component />
 *     </SystemProvider>
 *   );
 * }
 */

function useToken(token, defaultValue) {
  (0,react.useDebugValue)(token);
  var context = (0,react.useContext)(SystemContext);
  return context[token] != null ? context[token] : defaultValue;
}


;// CONCATENATED MODULE: ./node_modules/reakit-system/es/useProps.js



/**
 * React custom hook that returns the props returned by a given
 * `use${name}Props` in the SystemContext.
 *
 * @example
 * import { SystemProvider, useProps } from "reakit-system";
 *
 * const system = {
 *   useAProps(options, htmlProps) {
 *     return {
 *       ...htmlProps,
 *       href: options.url,
 *     };
 *   },
 * };
 *
 * function A({ url, ...htmlProps }) {
 *   const props = useProps("A", { url }, htmlProps);
 *   return <a {...props} />;
 * }
 *
 * function App() {
 *   return (
 *     <SystemProvider unstable_system={system}>
 *       <A url="url">It will convert url into href in useAProps</A>
 *     </SystemProvider>
 *   );
 * }
 */

function useProps(name, options, htmlProps) {
  if (options === void 0) {
    options = {};
  }

  if (htmlProps === void 0) {
    htmlProps = {};
  }

  var hookName = "use" + name + "Props";
  (0,react.useDebugValue)(hookName);
  var useHook = useToken(hookName);

  if (useHook) {
    return useHook(options, htmlProps);
  }

  return htmlProps;
}


;// CONCATENATED MODULE: ./node_modules/reakit-system/es/useOptions.js




/**
 * React custom hook that returns the options returned by a given
 * `use${name}Options` in the SystemContext.
 *
 * @example
 * import React from "react";
 * import { SystemProvider, useOptions } from "reakit-system";
 *
 * const system = {
 *   useAOptions(options, htmlProps) {
 *     return {
 *       ...options,
 *       url: htmlProps.href,
 *     };
 *   },
 * };
 *
 * function A({ url, ...htmlProps }) {
 *   const options = useOptions("A", { url }, htmlProps);
 *   return <a href={options.url} {...htmlProps} />;
 * }
 *
 * function App() {
 *   return (
 *     <SystemProvider unstable_system={system}>
 *       <A href="url">
 *         It will convert href into url in useAOptions and then url into href in A
 *       </A>
 *     </SystemProvider>
 *   );
 * }
 */

function useOptions(name, options, htmlProps) {
  if (options === void 0) {
    options = {};
  }

  if (htmlProps === void 0) {
    htmlProps = {};
  }

  var hookName = "use" + name + "Options";
  (0,react.useDebugValue)(hookName);
  var useHook = useToken(hookName);

  if (useHook) {
    return _rollupPluginBabelHelpers_0c84a174_objectSpread2(_rollupPluginBabelHelpers_0c84a174_objectSpread2({}, options), useHook(options, htmlProps));
  }

  return options;
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/toArray.js
/**
 * Transforms `arg` into an array if it's not already.
 *
 * @example
 * import { toArray } from "reakit-utils";
 *
 * toArray("a"); // ["a"]
 * toArray(["a"]); // ["a"]
 */
function toArray(arg) {
  if (Array.isArray(arg)) {
    return arg;
  }

  return typeof arg !== "undefined" ? [arg] : [];
}


;// CONCATENATED MODULE: ./node_modules/reakit-system/es/createHook.js








/**
 * Creates a React custom hook that will return component props.
 *
 * @example
 * import { createHook } from "reakit-system";
 *
 * const useA = createHook({
 *   name: "A",
 *   keys: ["url"], // custom props/options keys
 *   useProps(options, htmlProps) {
 *     return {
 *       ...htmlProps,
 *       href: options.url,
 *     };
 *   },
 * });
 *
 * function A({ url, ...htmlProps }) {
 *   const props = useA({ url }, htmlProps);
 *   return <a {...props} />;
 * }
 *
 * @param options
 */

function createHook(options) {
  var _options$useState, _composedHooks$;

  var composedHooks = toArray(options.compose);

  var __useOptions = function __useOptions(hookOptions, htmlProps) {
    // Call the current hook's useOptions first
    if (options.useOptions) {
      hookOptions = options.useOptions(hookOptions, htmlProps);
    } // If there's name, call useOptions from the system context


    if (options.name) {
      hookOptions = useOptions(options.name, hookOptions, htmlProps);
    } // Run composed hooks useOptions


    if (options.compose) {
      for (var _iterator = _rollupPluginBabelHelpers_0c84a174_createForOfIteratorHelperLoose(composedHooks), _step; !(_step = _iterator()).done;) {
        var hook = _step.value;
        hookOptions = hook.__useOptions(hookOptions, htmlProps);
      }
    }

    return hookOptions;
  };

  var useHook = function useHook(hookOptions, htmlProps, unstable_ignoreUseOptions) {
    if (hookOptions === void 0) {
      hookOptions = {};
    }

    if (htmlProps === void 0) {
      htmlProps = {};
    }

    if (unstable_ignoreUseOptions === void 0) {
      unstable_ignoreUseOptions = false;
    } // This won't execute when useHook was called from within another useHook


    if (!unstable_ignoreUseOptions) {
      hookOptions = __useOptions(hookOptions, htmlProps);
    } // Call the current hook's useProps


    if (options.useProps) {
      htmlProps = options.useProps(hookOptions, htmlProps);
    } // If there's name, call useProps from the system context


    if (options.name) {
      htmlProps = useProps(options.name, hookOptions, htmlProps);
    }

    if (options.compose) {
      if (options.useComposeOptions) {
        hookOptions = options.useComposeOptions(hookOptions, htmlProps);
      }

      if (options.useComposeProps) {
        htmlProps = options.useComposeProps(hookOptions, htmlProps);
      } else {
        for (var _iterator2 = _rollupPluginBabelHelpers_0c84a174_createForOfIteratorHelperLoose(composedHooks), _step2; !(_step2 = _iterator2()).done;) {
          var hook = _step2.value;
          htmlProps = hook(hookOptions, htmlProps, true);
        }
      }
    } // Remove undefined values from htmlProps


    var finalHTMLProps = {};
    var definedHTMLProps = htmlProps || {};

    for (var prop in definedHTMLProps) {
      if (definedHTMLProps[prop] !== undefined) {
        finalHTMLProps[prop] = definedHTMLProps[prop];
      }
    }

    return finalHTMLProps;
  };

  useHook.__useOptions = __useOptions;
  var composedKeys = composedHooks.reduce(function (keys, hook) {
    keys.push.apply(keys, hook.__keys || []);
    return keys;
  }, []); // It's used by createComponent to split option props (keys) and html props

  useHook.__keys = [].concat(composedKeys, ((_options$useState = options.useState) === null || _options$useState === void 0 ? void 0 : _options$useState.__keys) || [], options.keys || []);
  useHook.unstable_propsAreEqual = options.propsAreEqual || ((_composedHooks$ = composedHooks[0]) === null || _composedHooks$ === void 0 ? void 0 : _composedHooks$.unstable_propsAreEqual) || shallowEqual;

  if (false) {}

  return useHook;
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/useForkRef.js
 // https://github.com/mui-org/material-ui/blob/2bcc874cf07b81202968f769cb9c2398c7c11311/packages/material-ui/src/utils/useForkRef.js

function setRef(ref, value) {
  if (value === void 0) {
    value = null;
  }

  if (!ref) return;

  if (typeof ref === "function") {
    ref(value);
  } else {
    ref.current = value;
  }
}
/**
 * Merges up to two React Refs into a single memoized function React Ref so you
 * can pass it to an element.
 *
 * @example
 * import React from "react";
 * import { useForkRef } from "reakit-utils";
 *
 * const Component = React.forwardRef((props, ref) => {
 *   const internalRef = React.useRef();
 *   return <div {...props} ref={useForkRef(internalRef, ref)} />;
 * });
 */


function useForkRef(refA, refB) {
  return (0,react.useMemo)(function () {
    if (refA == null && refB == null) {
      return null;
    }

    return function (value) {
      setRef(refA, value);
      setRef(refB, value);
    };
  }, [refA, refB]);
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/isButton.js
var buttonInputTypes = ["button", "color", "file", "image", "reset", "submit"];
/**
 * Checks whether `element` is a native HTML button element.
 *
 * @example
 * import { isButton } from "reakit-utils";
 *
 * isButton(document.querySelector("button")); // true
 * isButton(document.querySelector("input[type='button']")); // true
 * isButton(document.querySelector("div")); // false
 * isButton(document.querySelector("input[type='text']")); // false
 * isButton(document.querySelector("div[role='button']")); // false
 *
 * @returns {boolean}
 */

function isButton(element) {
  if (element.tagName === "BUTTON") return true;

  if (element.tagName === "INPUT") {
    var input = element;
    return buttonInputTypes.indexOf(input.type) !== -1;
  }

  return false;
}


;// CONCATENATED MODULE: ./node_modules/reakit-warning/es/useWarning.js





function isRefObject(ref) {
  return isObject(ref) && "current" in ref;
}
/**
 * Logs `messages` to the console using `console.warn` based on a `condition`.
 * This should be used inside components.
 */


function useWarning(condition) {
  for (var _len = arguments.length, messages = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    messages[_key - 1] = arguments[_key];
  }

  if (false) {}
}


;// CONCATENATED MODULE: ./node_modules/reakit-warning/es/index.js





;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/getDocument.js
/**
 * Returns `element.ownerDocument || document`.
 */
function getDocument(element) {
  return element ? element.ownerDocument || element : document;
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/getWindow.js
 // Thanks to Fluent UI for doing the [research on IE11 memory leak](https://github.com/microsoft/fluentui/pull/9010#issuecomment-490768427)

var _window; // Note: Accessing "window" in IE11 is somewhat expensive, and calling "typeof window"
// hits a memory leak, whereas aliasing it and calling "typeof _window" does not.
// Caching the window value at the file scope lets us minimize the impact.


try {
  _window = window;
} catch (e) {
  /* no-op */
}
/**
 * Returns `element.ownerDocument.defaultView || window`.
 */


function getWindow(element) {
  if (!element) {
    return _window;
  }

  return getDocument(element).defaultView || _window;
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/canUseDOM.js



function checkIsBrowser() {
  var _window = getWindow();

  return Boolean(typeof _window !== "undefined" && _window.document && _window.document.createElement);
}
/**
 * It's `true` if it is running in a browser environment or `false` if it is not (SSR).
 *
 * @example
 * import { canUseDOM } from "reakit-utils";
 *
 * const title = canUseDOM ? document.title : "";
 */


var canUseDOM = checkIsBrowser();

;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/useIsomorphicEffect.js




/**
 * `React.useLayoutEffect` that fallbacks to `React.useEffect` on server side
 * rendering.
 */

var useIsomorphicEffect = !canUseDOM ? react.useEffect : react.useLayoutEffect;

;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/useLiveRef.js





/**
 * A `React.Ref` that keeps track of the passed `value`.
 */

function useLiveRef(value) {
  var ref = (0,react.useRef)(value);
  useIsomorphicEffect(function () {
    ref.current = value;
  });
  return ref;
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/isSelfTarget.js
/**
 * Returns `true` if `event.target` and `event.currentTarget` are the same.
 */
function isSelfTarget(event) {
  return event.target === event.currentTarget;
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/getActiveElement.js

/**
 * Returns `element.ownerDocument.activeElement`.
 */

function getActiveElement_getActiveElement(element) {
  var _getDocument = getDocument(element),
      activeElement = _getDocument.activeElement;

  if (!(activeElement !== null && activeElement !== void 0 && activeElement.nodeName)) {
    // In IE11, activeElement might be an empty object if we're interacting
    // with elements inside of an iframe.
    return null;
  }

  return activeElement;
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/contains.js
/**
 * Similar to `Element.prototype.contains`, but a little bit faster when
 * `element` is the same as `child`.
 *
 * @example
 * import { contains } from "reakit-utils";
 *
 * contains(document.getElementById("parent"), document.getElementById("child"));
 */
function contains_contains(parent, child) {
  return parent === child || parent.contains(child);
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/hasFocusWithin.js



/**
 * Checks if `element` has focus within. Elements that are referenced by
 * `aria-activedescendant` are also considered.
 *
 * @example
 * import { hasFocusWithin } from "reakit-utils";
 *
 * hasFocusWithin(document.getElementById("id"));
 */

function hasFocusWithin(element) {
  var activeElement = getActiveElement_getActiveElement(element);
  if (!activeElement) return false;
  if (contains_contains(element, activeElement)) return true;
  var activeDescendant = activeElement.getAttribute("aria-activedescendant");
  if (!activeDescendant) return false;
  if (activeDescendant === element.id) return true;
  return !!element.querySelector("#" + activeDescendant);
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/isPortalEvent.js

/**
 * Returns `true` if `event` has been fired within a React Portal element.
 */

function isPortalEvent(event) {
  return !contains_contains(event.currentTarget, event.target);
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/dom.js



/**
 * Checks if a given string exists in the user agent string.
 */

function isUA(string) {
  if (!canUseDOM) return false;
  return window.navigator.userAgent.indexOf(string) !== -1;
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/matches.js
/**
 * Ponyfill for `Element.prototype.matches`
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/matches
 */
function matches_matches(element, selectors) {
  if ("matches" in element) {
    return element.matches(selectors);
  }

  if ("msMatchesSelector" in element) {
    return element.msMatchesSelector(selectors);
  }

  return element.webkitMatchesSelector(selectors);
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/tabbable.js




/** @module tabbable */

var selector = "input:not([type='hidden']):not([disabled]), select:not([disabled]), " + "textarea:not([disabled]), a[href], button:not([disabled]), [tabindex], " + "iframe, object, embed, area[href], audio[controls], video[controls], " + "[contenteditable]:not([contenteditable='false'])";

function isVisible(element) {
  var htmlElement = element;
  return htmlElement.offsetWidth > 0 || htmlElement.offsetHeight > 0 || element.getClientRects().length > 0;
}

function hasNegativeTabIndex(element) {
  var tabIndex = parseInt(element.getAttribute("tabindex") || "0", 10);
  return tabIndex < 0;
}
/**
 * Checks whether `element` is focusable or not.
 *
 * @memberof tabbable
 *
 * @example
 * import { isFocusable } from "reakit-utils";
 *
 * isFocusable(document.querySelector("input")); // true
 * isFocusable(document.querySelector("input[tabindex='-1']")); // true
 * isFocusable(document.querySelector("input[hidden]")); // false
 * isFocusable(document.querySelector("input:disabled")); // false
 */


function isFocusable(element) {
  return matches_matches(element, selector) && isVisible(element);
}
/**
 * Checks whether `element` is tabbable or not.
 *
 * @memberof tabbable
 *
 * @example
 * import { isTabbable } from "reakit-utils";
 *
 * isTabbable(document.querySelector("input")); // true
 * isTabbable(document.querySelector("input[tabindex='-1']")); // false
 * isTabbable(document.querySelector("input[hidden]")); // false
 * isTabbable(document.querySelector("input:disabled")); // false
 */


function isTabbable(element) {
  return isFocusable(element) && !hasNegativeTabIndex(element);
}
/**
 * Returns all the focusable elements in `container`.
 *
 * @memberof tabbable
 *
 * @param {Element} container
 *
 * @returns {Element[]}
 */


function getAllFocusableIn(container) {
  var allFocusable = Array.from(container.querySelectorAll(selector));
  allFocusable.unshift(container);
  return allFocusable.filter(isFocusable);
}
/**
 * Returns the first focusable element in `container`.
 *
 * @memberof tabbable
 *
 * @param {Element} container
 *
 * @returns {Element|null}
 */


function getFirstFocusableIn(container) {
  var _getAllFocusableIn = getAllFocusableIn(container),
      first = _getAllFocusableIn[0];

  return first || null;
}
/**
 * Returns all the tabbable elements in `container`, including the container
 * itself.
 *
 * @memberof tabbable
 *
 * @param {Element} container
 * @param fallbackToFocusable If `true`, it'll return focusable elements if there are no tabbable ones.
 *
 * @returns {Element[]}
 */


function getAllTabbableIn(container, fallbackToFocusable) {
  var allFocusable = Array.from(container.querySelectorAll(selector));
  var allTabbable = allFocusable.filter(isTabbable);

  if (isTabbable(container)) {
    allTabbable.unshift(container);
  }

  if (!allTabbable.length && fallbackToFocusable) {
    return allFocusable;
  }

  return allTabbable;
}
/**
 * Returns the first tabbable element in `container`, including the container
 * itself if it's tabbable.
 *
 * @memberof tabbable
 *
 * @param {Element} container
 * @param fallbackToFocusable If `true`, it'll return the first focusable element if there are no tabbable ones.
 *
 * @returns {Element|null}
 */


function getFirstTabbableIn(container, fallbackToFocusable) {
  var _getAllTabbableIn = getAllTabbableIn(container, fallbackToFocusable),
      first = _getAllTabbableIn[0];

  return first || null;
}
/**
 * Returns the last tabbable element in `container`, including the container
 * itself if it's tabbable.
 *
 * @memberof tabbable
 *
 * @param {Element} container
 * @param fallbackToFocusable If `true`, it'll return the last focusable element if there are no tabbable ones.
 *
 * @returns {Element|null}
 */


function getLastTabbableIn(container, fallbackToFocusable) {
  var allTabbable = getAllTabbableIn(container, fallbackToFocusable);
  return allTabbable[allTabbable.length - 1] || null;
}
/**
 * Returns the next tabbable element in `container`.
 *
 * @memberof tabbable
 *
 * @param {Element} container
 * @param fallbackToFocusable If `true`, it'll return the next focusable element if there are no tabbable ones.
 *
 * @returns {Element|null}
 */


function getNextTabbableIn(container, fallbackToFocusable) {
  var activeElement = getActiveElement(container);
  var allFocusable = getAllFocusableIn(container);
  var index = allFocusable.indexOf(activeElement);
  var slice = allFocusable.slice(index + 1);
  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);
}
/**
 * Returns the previous tabbable element in `container`.
 *
 * @memberof tabbable
 *
 * @param {Element} container
 * @param fallbackToFocusable If `true`, it'll return the previous focusable element if there are no tabbable ones.
 *
 * @returns {Element|null}
 */


function getPreviousTabbableIn(container, fallbackToFocusable) {
  var activeElement = getActiveElement(container);
  var allFocusable = getAllFocusableIn(container).reverse();
  var index = allFocusable.indexOf(activeElement);
  var slice = allFocusable.slice(index + 1);
  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);
}
/**
 * Returns the closest focusable element.
 *
 * @memberof tabbable
 *
 * @param {Element} container
 *
 * @returns {Element|null}
 */


function getClosestFocusable(element) {
  while (element && !isFocusable(element)) {
    element = closest(element, selector);
  }

  return element;
}


;// CONCATENATED MODULE: ./node_modules/reakit/es/Role/Role.js



 // Automatically generated

var ROLE_KEYS = ["unstable_system"];
var useRole = createHook({
  name: "Role",
  keys: ROLE_KEYS,
  propsAreEqual: function propsAreEqual(prev, next) {
    var prevSystem = prev.unstable_system,
        prevProps = _objectWithoutPropertiesLoose(prev, ["unstable_system"]);

    var nextSystem = next.unstable_system,
        nextProps = _objectWithoutPropertiesLoose(next, ["unstable_system"]);

    if (prevSystem !== nextSystem && !shallowEqual(prevSystem, nextSystem)) {
      return false;
    }

    return shallowEqual(prevProps, nextProps);
  }
});
var Role = createComponent({
  as: "div",
  useHook: useRole
});

;// CONCATENATED MODULE: ./node_modules/reakit/es/Tabbable/Tabbable.js














 // Automatically generated

var TABBABLE_KEYS = ["disabled", "focusable"];
var isSafariOrFirefoxOnMac = isUA("Mac") && !isUA("Chrome") && (isUA("Safari") || isUA("Firefox"));

function focusIfNeeded(element) {
  if (!hasFocusWithin(element) && isFocusable(element)) {
    element.focus();
  }
}

function isNativeTabbable(element) {
  return ["BUTTON", "INPUT", "SELECT", "TEXTAREA", "A"].includes(element.tagName);
}

function supportsDisabledAttribute(element) {
  return ["BUTTON", "INPUT", "SELECT", "TEXTAREA"].includes(element.tagName);
}

function getTabIndex(trulyDisabled, nativeTabbable, supportsDisabled, htmlTabIndex) {
  if (trulyDisabled) {
    if (nativeTabbable && !supportsDisabled) {
      // Anchor, audio and video tags don't support the `disabled` attribute.
      // We must pass tabIndex={-1} so they don't receive focus on tab.
      return -1;
    } // Elements that support the `disabled` attribute don't need tabIndex.


    return undefined;
  }

  if (nativeTabbable) {
    // If the element is enabled and it's natively tabbable, we don't need to
    // specify a tabIndex attribute unless it's explicitly set by the user.
    return htmlTabIndex;
  } // If the element is enabled and is not natively tabbable, we have to
  // fallback tabIndex={0}.


  return htmlTabIndex || 0;
}

function useDisableEvent(htmlEventRef, disabled) {
  return (0,react.useCallback)(function (event) {
    var _htmlEventRef$current;

    (_htmlEventRef$current = htmlEventRef.current) === null || _htmlEventRef$current === void 0 ? void 0 : _htmlEventRef$current.call(htmlEventRef, event);
    if (event.defaultPrevented) return;

    if (disabled) {
      event.stopPropagation();
      event.preventDefault();
    }
  }, [htmlEventRef, disabled]);
}

var useTabbable = createHook({
  name: "Tabbable",
  compose: useRole,
  keys: TABBABLE_KEYS,
  useOptions: function useOptions(options, _ref) {
    var disabled = _ref.disabled;
    return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({
      disabled: disabled
    }, options);
  },
  useProps: function useProps(options, _ref2) {
    var htmlRef = _ref2.ref,
        htmlTabIndex = _ref2.tabIndex,
        htmlOnClickCapture = _ref2.onClickCapture,
        htmlOnMouseDownCapture = _ref2.onMouseDownCapture,
        htmlOnMouseDown = _ref2.onMouseDown,
        htmlOnKeyPressCapture = _ref2.onKeyPressCapture,
        htmlStyle = _ref2.style,
        htmlProps = _objectWithoutPropertiesLoose(_ref2, ["ref", "tabIndex", "onClickCapture", "onMouseDownCapture", "onMouseDown", "onKeyPressCapture", "style"]);

    var ref = (0,react.useRef)(null);
    var onClickCaptureRef = useLiveRef(htmlOnClickCapture);
    var onMouseDownCaptureRef = useLiveRef(htmlOnMouseDownCapture);
    var onMouseDownRef = useLiveRef(htmlOnMouseDown);
    var onKeyPressCaptureRef = useLiveRef(htmlOnKeyPressCapture);
    var trulyDisabled = !!options.disabled && !options.focusable;

    var _React$useState = (0,react.useState)(true),
        nativeTabbable = _React$useState[0],
        setNativeTabbable = _React$useState[1];

    var _React$useState2 = (0,react.useState)(true),
        supportsDisabled = _React$useState2[0],
        setSupportsDisabled = _React$useState2[1];

    var style = options.disabled ? _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({
      pointerEvents: "none"
    }, htmlStyle) : htmlStyle;
    useIsomorphicEffect(function () {
      var tabbable = ref.current;

      if (!tabbable) {
         false ? 0 : void 0;
        return;
      }

      if (!isNativeTabbable(tabbable)) {
        setNativeTabbable(false);
      }

      if (!supportsDisabledAttribute(tabbable)) {
        setSupportsDisabled(false);
      }
    }, []);
    var onClickCapture = useDisableEvent(onClickCaptureRef, options.disabled);
    var onMouseDownCapture = useDisableEvent(onMouseDownCaptureRef, options.disabled);
    var onKeyPressCapture = useDisableEvent(onKeyPressCaptureRef, options.disabled);
    var onMouseDown = (0,react.useCallback)(function (event) {
      var _onMouseDownRef$curre;

      (_onMouseDownRef$curre = onMouseDownRef.current) === null || _onMouseDownRef$curre === void 0 ? void 0 : _onMouseDownRef$curre.call(onMouseDownRef, event);
      var element = event.currentTarget;
      if (event.defaultPrevented) return; // Safari and Firefox on MacOS don't focus on buttons on mouse down
      // like other browsers/platforms. Instead, they focus on the closest
      // focusable ancestor element, which is ultimately the body element. So
      // we make sure to give focus to the tabbable element on mouse down so
      // it works consistently across browsers.

      if (!isSafariOrFirefoxOnMac) return;
      if (isPortalEvent(event)) return;
      if (!isButton(element)) return; // We can't focus right away after on mouse down, otherwise it would
      // prevent drag events from happening. So we schedule the focus to the
      // next animation frame.

      var raf = requestAnimationFrame(function () {
        element.removeEventListener("mouseup", focusImmediately, true);
        focusIfNeeded(element);
      }); // If mouseUp happens before the next animation frame (which is common
      // on touch screens or by just tapping the trackpad on MacBook's), we
      // cancel the animation frame and immediately focus on the element.

      var focusImmediately = function focusImmediately() {
        cancelAnimationFrame(raf);
        focusIfNeeded(element);
      }; // By listening to the event in the capture phase, we make sure the
      // focus event is fired before the onMouseUp and onMouseUpCapture React
      // events, which is aligned with the default browser behavior.


      element.addEventListener("mouseup", focusImmediately, {
        once: true,
        capture: true
      });
    }, []);
    return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({
      ref: useForkRef(ref, htmlRef),
      style: style,
      tabIndex: getTabIndex(trulyDisabled, nativeTabbable, supportsDisabled, htmlTabIndex),
      disabled: trulyDisabled && supportsDisabled ? true : undefined,
      "aria-disabled": options.disabled ? true : undefined,
      onClickCapture: onClickCapture,
      onMouseDownCapture: onMouseDownCapture,
      onMouseDown: onMouseDown,
      onKeyPressCapture: onKeyPressCapture
    }, htmlProps);
  }
});
var Tabbable = createComponent({
  as: "div",
  useHook: useTabbable
});

;// CONCATENATED MODULE: ./node_modules/reakit/es/Clickable/Clickable.js
















 // Automatically generated

var CLICKABLE_KEYS = ["unstable_clickOnEnter", "unstable_clickOnSpace"];

function isNativeClick(event) {
  var element = event.currentTarget;
  if (!event.isTrusted) return false; // istanbul ignore next: can't test trusted events yet

  return isButton(element) || element.tagName === "INPUT" || element.tagName === "TEXTAREA" || element.tagName === "A" || element.tagName === "SELECT";
}

var useClickable = createHook({
  name: "Clickable",
  compose: useTabbable,
  keys: CLICKABLE_KEYS,
  useOptions: function useOptions(_ref) {
    var _ref$unstable_clickOn = _ref.unstable_clickOnEnter,
        unstable_clickOnEnter = _ref$unstable_clickOn === void 0 ? true : _ref$unstable_clickOn,
        _ref$unstable_clickOn2 = _ref.unstable_clickOnSpace,
        unstable_clickOnSpace = _ref$unstable_clickOn2 === void 0 ? true : _ref$unstable_clickOn2,
        options = _objectWithoutPropertiesLoose(_ref, ["unstable_clickOnEnter", "unstable_clickOnSpace"]);

    return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({
      unstable_clickOnEnter: unstable_clickOnEnter,
      unstable_clickOnSpace: unstable_clickOnSpace
    }, options);
  },
  useProps: function useProps(options, _ref2) {
    var htmlOnKeyDown = _ref2.onKeyDown,
        htmlOnKeyUp = _ref2.onKeyUp,
        htmlProps = _objectWithoutPropertiesLoose(_ref2, ["onKeyDown", "onKeyUp"]);

    var _React$useState = (0,react.useState)(false),
        active = _React$useState[0],
        setActive = _React$useState[1];

    var onKeyDownRef = useLiveRef(htmlOnKeyDown);
    var onKeyUpRef = useLiveRef(htmlOnKeyUp);
    var onKeyDown = (0,react.useCallback)(function (event) {
      var _onKeyDownRef$current;

      (_onKeyDownRef$current = onKeyDownRef.current) === null || _onKeyDownRef$current === void 0 ? void 0 : _onKeyDownRef$current.call(onKeyDownRef, event);
      if (event.defaultPrevented) return;
      if (options.disabled) return;
      if (event.metaKey) return;
      if (!isSelfTarget(event)) return;
      var isEnter = options.unstable_clickOnEnter && event.key === "Enter";
      var isSpace = options.unstable_clickOnSpace && event.key === " ";

      if (isEnter || isSpace) {
        if (isNativeClick(event)) return;
        event.preventDefault();

        if (isEnter) {
          event.currentTarget.click();
        } else if (isSpace) {
          setActive(true);
        }
      }
    }, [options.disabled, options.unstable_clickOnEnter, options.unstable_clickOnSpace]);
    var onKeyUp = (0,react.useCallback)(function (event) {
      var _onKeyUpRef$current;

      (_onKeyUpRef$current = onKeyUpRef.current) === null || _onKeyUpRef$current === void 0 ? void 0 : _onKeyUpRef$current.call(onKeyUpRef, event);
      if (event.defaultPrevented) return;
      if (options.disabled) return;
      if (event.metaKey) return;
      var isSpace = options.unstable_clickOnSpace && event.key === " ";

      if (active && isSpace) {
        setActive(false);
        event.currentTarget.click();
      }
    }, [options.disabled, options.unstable_clickOnSpace, active]);
    return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({
      "data-active": active || undefined,
      onKeyDown: onKeyDown,
      onKeyUp: onKeyUp
    }, htmlProps);
  }
});
var Clickable = createComponent({
  as: "button",
  memo: true,
  useHook: useClickable
});

;// CONCATENATED MODULE: ./node_modules/reakit/es/Button/Button.js

















 // Automatically generated

var BUTTON_KEYS = [];
var useButton = createHook({
  name: "Button",
  compose: useClickable,
  keys: BUTTON_KEYS,
  useProps: function useProps(_, _ref) {
    var htmlRef = _ref.ref,
        htmlProps = _objectWithoutPropertiesLoose(_ref, ["ref"]);

    var ref = (0,react.useRef)(null);

    var _React$useState = (0,react.useState)(undefined),
        role = _React$useState[0],
        setRole = _React$useState[1];

    var _React$useState2 = (0,react.useState)("button"),
        type = _React$useState2[0],
        setType = _React$useState2[1];

    (0,react.useEffect)(function () {
      var element = ref.current;

      if (!element) {
         false ? 0 : void 0;
        return;
      }

      if (!isButton(element)) {
        if (element.tagName !== "A") {
          setRole("button");
        }

        setType(undefined);
      }
    }, []);
    return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({
      ref: useForkRef(ref, htmlRef),
      role: role,
      type: type
    }, htmlProps);
  }
});
var Button = createComponent({
  as: "button",
  memo: true,
  useHook: useButton
});

// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(184);
;// CONCATENATED MODULE: ./src/components/links.tsx
var _excluded=["href","pageId","children","className","onClick"],_excluded2=["href","pageId","children","className","onClick","title"];/**
 * An anchor element for internal links. Instead of redirecting to a new page,
 * the click directs a page to be loaded from the cache.
 */var InternalAnchor=/*#__PURE__*/react.forwardRef(function InternalAnchor(_ref,ref){var href=_ref.href,pageId=_ref.pageId,children=_ref.children,className=_ref.className,_onClick=_ref.onClick,rest=_objectWithoutProperties(_ref,_excluded);var dispatch=useAppDispatch();return/*#__PURE__*/(0,jsx_runtime.jsx)(Button,_objectSpread2(_objectSpread2({as:"a",ref:ref,href:href,onClick:function onClick(e){// We take over navigation with cached async loading,
// so prevent a normal click from going through
// UNLESS the user is trying to open the link in a new tab
// by using a different mouse button or ctrl+click/etc.
if(e.button!==0||e.metaKey||e.altKey||e.ctrlKey||e.shiftKey){return;}e.preventDefault();if(pageId){dispatch(navActions.setCurrentPage(pageId));}else{dispatch(navActions.setCurrentPageByUrl(href));}if(_onClick){_onClick(e);}},className:className?"".concat(className," internal"):"internal"},rest),{},{children:children}));});/**
 * An anchor element that when clicked copies a permalink URL to the clipboard.
 */function PermalinkAnchor(_ref2){var href=_ref2.href,pageId=_ref2.pageId,children=_ref2.children,className=_ref2.className,onClick=_ref2.onClick,title=_ref2.title,rest=_objectWithoutProperties(_ref2,_excluded2);var dispatch=useAppDispatch();var url=""+new URL(href,window.location.href);return/*#__PURE__*/(0,jsx_runtime.jsx)(Button,_objectSpread2(_objectSpread2({as:"a",href:url,title:"Copy permalink to clipboard for ".concat(title),onClick:function onClick(e){// We take over navigation with cached async loading,
// so prevent a normal click from going through.
e.preventDefault();dispatch(globalActions.copyToClipboard(url));},className:className},rest),{},{children:children}));}
;// CONCATENATED MODULE: ./src/utils/mathjax.ts
var globalTypesettingMap=new WeakMap();function ensureMathJax(){if(typeof MathJax==="undefined"){throw new Error("MathJax not defined");}}/**
 * Queue a re-typesetting of the math on a page.
 */function reTypesetMathJax(){return _reTypesetMathJax.apply(this,arguments);}/**
 * Typeset a single html element with MathJax. This function
 * uses `typesetPromise` but ensures that the same element
 * is never concurrently re-typeset.
 */function _reTypesetMathJax(){_reTypesetMathJax=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _MathJax3;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;ensureMathJax();_context.next=7;break;case 4:_context.prev=4;_context.t0=_context["catch"](0);return _context.abrupt("return");case 7:if(!((_MathJax3=MathJax)!==null&&_MathJax3!==void 0&&_MathJax3.typesetPromise)){_context.next=9;break;}return _context.abrupt("return",MathJax.typesetPromise());case 9:case"end":return _context.stop();}}},_callee,null,[[0,4]]);}));return _reTypesetMathJax.apply(this,arguments);}function typesetElement(e){var _MathJax;try{ensureMathJax();}catch(_unused){return;}if((_MathJax=MathJax)!==null&&_MathJax!==void 0&&_MathJax.typesetPromise){// Check if typesetting is already in progress.
if(globalTypesettingMap.has(e)){return;}// MathJax doesn't like being called while it's already running,
// so we keep a record of whether we are currently typesetting.
globalTypesettingMap.set(e,true);return MathJax.typesetPromise([e]).then(function(){globalTypesettingMap.delete(e);});}}/**
 * Re-export of `MathJax.typesetClear()`. Used for resetting the
 * MathJax cache (useful for labeled equations to make sure that
 * MathJax doesn't crash on a non-unique label.)
 */function typesetClear(nodes){try{ensureMathJax();}catch(_unused2){return;}var clear=MathJax.typesetClear;if(clear){clear(nodes);}}function fullMathJaxReset(){var _mj$startup,_mj$startup$document;try{ensureMathJax();}catch(_unused3){return;}var mj=MathJax;if(mj!==null&&mj!==void 0&&(_mj$startup=mj.startup)!==null&&_mj$startup!==void 0&&(_mj$startup$document=_mj$startup.document)!==null&&_mj$startup$document!==void 0&&_mj$startup$document.state){mj.startup.document.state(0);mj.texReset();}}function mathJaxDefaultReady(){var _MathJax2;try{ensureMathJax();}catch(_unused4){return;}var startup=(_MathJax2=MathJax)===null||_MathJax2===void 0?void 0:_MathJax2.startup;if(!startup){return;}// We don't want to run `defaultReady` twice, so we check to see
// if `.adaptor` is set, which should be set after a call to `defaultReady`
// has been made.
if(!startup.adaptor){startup.defaultReady();}}
;// CONCATENATED MODULE: ./src/components/mathjax.tsx
/**
 * `MathJax.typesetPromise()` is automatically called on the children of this element.
 * This is theoretically efficient because MathJax caches its rendering.
 *
 * This element temporarily inserts a `<span />` into the return nodes in order
 * to grab a reference to the parent. After a reference to the parent is found, the `<span />`
 * is removed.
 */function MathJaxRenderer(_ref){var children=_ref.children;var parentRef=react.useRef(null);// We need to grab the parent element so that we can ask MathJax to typeset its contents.
var refCallback=react.useCallback(function(node){if(node!=null){parentRef.current=node.parentElement||document.body;}},[]);react.useEffect(function(){if(parentRef.current){typesetElement(parentRef.current);}});return/*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment,{children:[!parentRef.current&&/*#__PURE__*/(0,jsx_runtime.jsx)("span",{style:{display:"none"},ref:refCallback}),children]});}/**
 * Like `MathJaxRenderer`, but won't re-render math when the child component updates.
 *
 * If you pass a `React.ref` to `forceUpdateRef`, the `.current` value on the ref
 * will be set to a function that when called will force a re-render of the component.
 * This is an escape hatch that allows a parent to control when MathJax is called.
 *
 * This wrapper is used for performance-critical components that are re-rendered often.
 */function MathJaxOneTimeRenderer(_ref2){var children=_ref2.children,forceUpdateRef=_ref2.forceUpdateRef;// It's sometimes nice to allow the parent to force this component to re-render.
// We use a trick from https://blog.logrocket.com/how-when-to-force-react-component-re-render/
// We pass back an update function in a ref which sets a new state of `{}`. Since
// objects are compared by reference, this will force a re-run of MathJax
var _React$useState=react.useState({}),_React$useState2=slicedToArray_slicedToArray(_React$useState,2),updateObj=_React$useState2[0],setUpdateObj=_React$useState2[1];var parentRef=react.useRef(null);var forceUpdate=react.useCallback(function(){return setUpdateObj({});},[]);// We need to grab the parent element so that we can ask MathJax to typeset its contents.
var refCallback=react.useCallback(function(node){if(node!=null){parentRef.current=node.parentElement||document.body;}},[]);react.useEffect(function(){if(parentRef.current){typesetElement(parentRef.current);}},[updateObj]);if(forceUpdateRef){forceUpdateRef.current=forceUpdate;}return/*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment,{children:[!parentRef.current&&/*#__PURE__*/(0,jsx_runtime.jsx)("span",{style:{display:"none"},ref:refCallback}),children]});}
// EXTERNAL MODULE: ./node_modules/react-chevron/Chevron/Chevron.js
var Chevron = __webpack_require__(5223);
var Chevron_default = /*#__PURE__*/__webpack_require__.n(Chevron);
;// CONCATENATED MODULE: ./node_modules/react-chevron/index.ts


/* harmony default export */ var react_chevron = ((Chevron_default()));

;// CONCATENATED MODULE: ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js
/**
 * A collection of shims that provide minimal functionality of the ES6 collections.
 *
 * These implementations are not meant to be used outside of the ResizeObserver
 * modules as they cover only a limited range of use cases.
 */

/* eslint-disable require-jsdoc, valid-jsdoc */
var MapShim = function () {
  if (typeof Map !== 'undefined') {
    return Map;
  }
  /**
   * Returns index in provided array that matches the specified key.
   *
   * @param {Array<Array>} arr
   * @param {*} key
   * @returns {number}
   */


  function getIndex(arr, key) {
    var result = -1;
    arr.some(function (entry, index) {
      if (entry[0] === key) {
        result = index;
        return true;
      }

      return false;
    });
    return result;
  }

  return (
    /** @class */
    function () {
      function class_1() {
        this.__entries__ = [];
      }

      Object.defineProperty(class_1.prototype, "size", {
        /**
         * @returns {boolean}
         */
        get: function get() {
          return this.__entries__.length;
        },
        enumerable: true,
        configurable: true
      });
      /**
       * @param {*} key
       * @returns {*}
       */

      class_1.prototype.get = function (key) {
        var index = getIndex(this.__entries__, key);
        var entry = this.__entries__[index];
        return entry && entry[1];
      };
      /**
       * @param {*} key
       * @param {*} value
       * @returns {void}
       */


      class_1.prototype.set = function (key, value) {
        var index = getIndex(this.__entries__, key);

        if (~index) {
          this.__entries__[index][1] = value;
        } else {
          this.__entries__.push([key, value]);
        }
      };
      /**
       * @param {*} key
       * @returns {void}
       */


      class_1.prototype.delete = function (key) {
        var entries = this.__entries__;
        var index = getIndex(entries, key);

        if (~index) {
          entries.splice(index, 1);
        }
      };
      /**
       * @param {*} key
       * @returns {void}
       */


      class_1.prototype.has = function (key) {
        return !!~getIndex(this.__entries__, key);
      };
      /**
       * @returns {void}
       */


      class_1.prototype.clear = function () {
        this.__entries__.splice(0);
      };
      /**
       * @param {Function} callback
       * @param {*} [ctx=null]
       * @returns {void}
       */


      class_1.prototype.forEach = function (callback, ctx) {
        if (ctx === void 0) {
          ctx = null;
        }

        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
          var entry = _a[_i];
          callback.call(ctx, entry[1], entry[0]);
        }
      };

      return class_1;
    }()
  );
}();
/**
 * Detects whether window and document objects are available in current environment.
 */


var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document; // Returns global object of a current environment.

var global$1 = function () {
  if (typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g.Math === Math) {
    return __webpack_require__.g;
  }

  if (typeof self !== 'undefined' && self.Math === Math) {
    return self;
  }

  if (typeof window !== 'undefined' && window.Math === Math) {
    return window;
  } // eslint-disable-next-line no-new-func


  return Function('return this')();
}();
/**
 * A shim for the requestAnimationFrame which falls back to the setTimeout if
 * first one is not supported.
 *
 * @returns {number} Requests' identifier.
 */


var requestAnimationFrame$1 = function () {
  if (typeof requestAnimationFrame === 'function') {
    // It's required to use a bounded function because IE sometimes throws
    // an "Invalid calling object" error if rAF is invoked without the global
    // object on the left hand side.
    return requestAnimationFrame.bind(global$1);
  }

  return function (callback) {
    return setTimeout(function () {
      return callback(Date.now());
    }, 1000 / 60);
  };
}(); // Defines minimum timeout before adding a trailing call.


var trailingTimeout = 2;
/**
 * Creates a wrapper function which ensures that provided callback will be
 * invoked only once during the specified delay period.
 *
 * @param {Function} callback - Function to be invoked after the delay period.
 * @param {number} delay - Delay after which to invoke callback.
 * @returns {Function}
 */

function throttle(callback, delay) {
  var leadingCall = false,
      trailingCall = false,
      lastCallTime = 0;
  /**
   * Invokes the original callback function and schedules new invocation if
   * the "proxy" was called during current request.
   *
   * @returns {void}
   */

  function resolvePending() {
    if (leadingCall) {
      leadingCall = false;
      callback();
    }

    if (trailingCall) {
      proxy();
    }
  }
  /**
   * Callback invoked after the specified delay. It will further postpone
   * invocation of the original function delegating it to the
   * requestAnimationFrame.
   *
   * @returns {void}
   */


  function timeoutCallback() {
    requestAnimationFrame$1(resolvePending);
  }
  /**
   * Schedules invocation of the original function.
   *
   * @returns {void}
   */


  function proxy() {
    var timeStamp = Date.now();

    if (leadingCall) {
      // Reject immediately following calls.
      if (timeStamp - lastCallTime < trailingTimeout) {
        return;
      } // Schedule new call to be in invoked when the pending one is resolved.
      // This is important for "transitions" which never actually start
      // immediately so there is a chance that we might miss one if change
      // happens amids the pending invocation.


      trailingCall = true;
    } else {
      leadingCall = true;
      trailingCall = false;
      setTimeout(timeoutCallback, delay);
    }

    lastCallTime = timeStamp;
  }

  return proxy;
} // Minimum delay before invoking the update of observers.


var REFRESH_DELAY = 20; // A list of substrings of CSS properties used to find transition events that
// might affect dimensions of observed elements.

var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight']; // Check if MutationObserver is available.

var mutationObserverSupported = typeof MutationObserver !== 'undefined';
/**
 * Singleton controller class which handles updates of ResizeObserver instances.
 */

var ResizeObserverController =
/** @class */
function () {
  /**
   * Creates a new instance of ResizeObserverController.
   *
   * @private
   */
  function ResizeObserverController() {
    /**
     * Indicates whether DOM listeners have been added.
     *
     * @private {boolean}
     */
    this.connected_ = false;
    /**
     * Tells that controller has subscribed for Mutation Events.
     *
     * @private {boolean}
     */

    this.mutationEventsAdded_ = false;
    /**
     * Keeps reference to the instance of MutationObserver.
     *
     * @private {MutationObserver}
     */

    this.mutationsObserver_ = null;
    /**
     * A list of connected observers.
     *
     * @private {Array<ResizeObserverSPI>}
     */

    this.observers_ = [];
    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
  }
  /**
   * Adds observer to observers list.
   *
   * @param {ResizeObserverSPI} observer - Observer to be added.
   * @returns {void}
   */


  ResizeObserverController.prototype.addObserver = function (observer) {
    if (!~this.observers_.indexOf(observer)) {
      this.observers_.push(observer);
    } // Add listeners if they haven't been added yet.


    if (!this.connected_) {
      this.connect_();
    }
  };
  /**
   * Removes observer from observers list.
   *
   * @param {ResizeObserverSPI} observer - Observer to be removed.
   * @returns {void}
   */


  ResizeObserverController.prototype.removeObserver = function (observer) {
    var observers = this.observers_;
    var index = observers.indexOf(observer); // Remove observer if it's present in registry.

    if (~index) {
      observers.splice(index, 1);
    } // Remove listeners if controller has no connected observers.


    if (!observers.length && this.connected_) {
      this.disconnect_();
    }
  };
  /**
   * Invokes the update of observers. It will continue running updates insofar
   * it detects changes.
   *
   * @returns {void}
   */


  ResizeObserverController.prototype.refresh = function () {
    var changesDetected = this.updateObservers_(); // Continue running updates if changes have been detected as there might
    // be future ones caused by CSS transitions.

    if (changesDetected) {
      this.refresh();
    }
  };
  /**
   * Updates every observer from observers list and notifies them of queued
   * entries.
   *
   * @private
   * @returns {boolean} Returns "true" if any observer has detected changes in
   *      dimensions of it's elements.
   */


  ResizeObserverController.prototype.updateObservers_ = function () {
    // Collect observers that have active observations.
    var activeObservers = this.observers_.filter(function (observer) {
      return observer.gatherActive(), observer.hasActive();
    }); // Deliver notifications in a separate cycle in order to avoid any
    // collisions between observers, e.g. when multiple instances of
    // ResizeObserver are tracking the same element and the callback of one
    // of them changes content dimensions of the observed target. Sometimes
    // this may result in notifications being blocked for the rest of observers.

    activeObservers.forEach(function (observer) {
      return observer.broadcastActive();
    });
    return activeObservers.length > 0;
  };
  /**
   * Initializes DOM listeners.
   *
   * @private
   * @returns {void}
   */


  ResizeObserverController.prototype.connect_ = function () {
    // Do nothing if running in a non-browser environment or if listeners
    // have been already added.
    if (!isBrowser || this.connected_) {
      return;
    } // Subscription to the "Transitionend" event is used as a workaround for
    // delayed transitions. This way it's possible to capture at least the
    // final state of an element.


    document.addEventListener('transitionend', this.onTransitionEnd_);
    window.addEventListener('resize', this.refresh);

    if (mutationObserverSupported) {
      this.mutationsObserver_ = new MutationObserver(this.refresh);
      this.mutationsObserver_.observe(document, {
        attributes: true,
        childList: true,
        characterData: true,
        subtree: true
      });
    } else {
      document.addEventListener('DOMSubtreeModified', this.refresh);
      this.mutationEventsAdded_ = true;
    }

    this.connected_ = true;
  };
  /**
   * Removes DOM listeners.
   *
   * @private
   * @returns {void}
   */


  ResizeObserverController.prototype.disconnect_ = function () {
    // Do nothing if running in a non-browser environment or if listeners
    // have been already removed.
    if (!isBrowser || !this.connected_) {
      return;
    }

    document.removeEventListener('transitionend', this.onTransitionEnd_);
    window.removeEventListener('resize', this.refresh);

    if (this.mutationsObserver_) {
      this.mutationsObserver_.disconnect();
    }

    if (this.mutationEventsAdded_) {
      document.removeEventListener('DOMSubtreeModified', this.refresh);
    }

    this.mutationsObserver_ = null;
    this.mutationEventsAdded_ = false;
    this.connected_ = false;
  };
  /**
   * "Transitionend" event handler.
   *
   * @private
   * @param {TransitionEvent} event
   * @returns {void}
   */


  ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
    var _b = _a.propertyName,
        propertyName = _b === void 0 ? '' : _b; // Detect whether transition may affect dimensions of an element.

    var isReflowProperty = transitionKeys.some(function (key) {
      return !!~propertyName.indexOf(key);
    });

    if (isReflowProperty) {
      this.refresh();
    }
  };
  /**
   * Returns instance of the ResizeObserverController.
   *
   * @returns {ResizeObserverController}
   */


  ResizeObserverController.getInstance = function () {
    if (!this.instance_) {
      this.instance_ = new ResizeObserverController();
    }

    return this.instance_;
  };
  /**
   * Holds reference to the controller's instance.
   *
   * @private {ResizeObserverController}
   */


  ResizeObserverController.instance_ = null;
  return ResizeObserverController;
}();
/**
 * Defines non-writable/enumerable properties of the provided target object.
 *
 * @param {Object} target - Object for which to define properties.
 * @param {Object} props - Properties to be defined.
 * @returns {Object} Target object.
 */


var defineConfigurable = function defineConfigurable(target, props) {
  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
    var key = _a[_i];
    Object.defineProperty(target, key, {
      value: props[key],
      enumerable: false,
      writable: false,
      configurable: true
    });
  }

  return target;
};
/**
 * Returns the global object associated with provided element.
 *
 * @param {Object} target
 * @returns {Object}
 */


var getWindowOf = function getWindowOf(target) {
  // Assume that the element is an instance of Node, which means that it
  // has the "ownerDocument" property from which we can retrieve a
  // corresponding global object.
  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView; // Return the local global object if it's not possible extract one from
  // provided element.

  return ownerGlobal || global$1;
}; // Placeholder of an empty content rectangle.


var emptyRect = createRectInit(0, 0, 0, 0);
/**
 * Converts provided string to a number.
 *
 * @param {number|string} value
 * @returns {number}
 */

function toFloat(value) {
  return parseFloat(value) || 0;
}
/**
 * Extracts borders size from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @param {...string} positions - Borders positions (top, right, ...)
 * @returns {number}
 */


function getBordersSize(styles) {
  var positions = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    positions[_i - 1] = arguments[_i];
  }

  return positions.reduce(function (size, position) {
    var value = styles['border-' + position + '-width'];
    return size + toFloat(value);
  }, 0);
}
/**
 * Extracts paddings sizes from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @returns {Object} Paddings box.
 */


function getPaddings(styles) {
  var positions = ['top', 'right', 'bottom', 'left'];
  var paddings = {};

  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
    var position = positions_1[_i];
    var value = styles['padding-' + position];
    paddings[position] = toFloat(value);
  }

  return paddings;
}
/**
 * Calculates content rectangle of provided SVG element.
 *
 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
 *      to be calculated.
 * @returns {DOMRectInit}
 */


function getSVGContentRect(target) {
  var bbox = target.getBBox();
  return createRectInit(0, 0, bbox.width, bbox.height);
}
/**
 * Calculates content rectangle of provided HTMLElement.
 *
 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
 * @returns {DOMRectInit}
 */


function getHTMLElementContentRect(target) {
  // Client width & height properties can't be
  // used exclusively as they provide rounded values.
  var clientWidth = target.clientWidth,
      clientHeight = target.clientHeight; // By this condition we can catch all non-replaced inline, hidden and
  // detached elements. Though elements with width & height properties less
  // than 0.5 will be discarded as well.
  //
  // Without it we would need to implement separate methods for each of
  // those cases and it's not possible to perform a precise and performance
  // effective test for hidden elements. E.g. even jQuery's ':visible' filter
  // gives wrong results for elements with width & height less than 0.5.

  if (!clientWidth && !clientHeight) {
    return emptyRect;
  }

  var styles = getWindowOf(target).getComputedStyle(target);
  var paddings = getPaddings(styles);
  var horizPad = paddings.left + paddings.right;
  var vertPad = paddings.top + paddings.bottom; // Computed styles of width & height are being used because they are the
  // only dimensions available to JS that contain non-rounded values. It could
  // be possible to utilize the getBoundingClientRect if only it's data wasn't
  // affected by CSS transformations let alone paddings, borders and scroll bars.

  var width = toFloat(styles.width),
      height = toFloat(styles.height); // Width & height include paddings and borders when the 'border-box' box
  // model is applied (except for IE).

  if (styles.boxSizing === 'border-box') {
    // Following conditions are required to handle Internet Explorer which
    // doesn't include paddings and borders to computed CSS dimensions.
    //
    // We can say that if CSS dimensions + paddings are equal to the "client"
    // properties then it's either IE, and thus we don't need to subtract
    // anything, or an element merely doesn't have paddings/borders styles.
    if (Math.round(width + horizPad) !== clientWidth) {
      width -= getBordersSize(styles, 'left', 'right') + horizPad;
    }

    if (Math.round(height + vertPad) !== clientHeight) {
      height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
    }
  } // Following steps can't be applied to the document's root element as its
  // client[Width/Height] properties represent viewport area of the window.
  // Besides, it's as well not necessary as the <html> itself neither has
  // rendered scroll bars nor it can be clipped.


  if (!isDocumentElement(target)) {
    // In some browsers (only in Firefox, actually) CSS width & height
    // include scroll bars size which can be removed at this step as scroll
    // bars are the only difference between rounded dimensions + paddings
    // and "client" properties, though that is not always true in Chrome.
    var vertScrollbar = Math.round(width + horizPad) - clientWidth;
    var horizScrollbar = Math.round(height + vertPad) - clientHeight; // Chrome has a rather weird rounding of "client" properties.
    // E.g. for an element with content width of 314.2px it sometimes gives
    // the client width of 315px and for the width of 314.7px it may give
    // 314px. And it doesn't happen all the time. So just ignore this delta
    // as a non-relevant.

    if (Math.abs(vertScrollbar) !== 1) {
      width -= vertScrollbar;
    }

    if (Math.abs(horizScrollbar) !== 1) {
      height -= horizScrollbar;
    }
  }

  return createRectInit(paddings.left, paddings.top, width, height);
}
/**
 * Checks whether provided element is an instance of the SVGGraphicsElement.
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */


var isSVGGraphicsElement = function () {
  // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
  // interface.
  if (typeof SVGGraphicsElement !== 'undefined') {
    return function (target) {
      return target instanceof getWindowOf(target).SVGGraphicsElement;
    };
  } // If it's so, then check that element is at least an instance of the
  // SVGElement and that it has the "getBBox" method.
  // eslint-disable-next-line no-extra-parens


  return function (target) {
    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';
  };
}();
/**
 * Checks whether provided element is a document element (<html>).
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */


function isDocumentElement(target) {
  return target === getWindowOf(target).document.documentElement;
}
/**
 * Calculates an appropriate content rectangle for provided html or svg element.
 *
 * @param {Element} target - Element content rectangle of which needs to be calculated.
 * @returns {DOMRectInit}
 */


function getContentRect(target) {
  if (!isBrowser) {
    return emptyRect;
  }

  if (isSVGGraphicsElement(target)) {
    return getSVGContentRect(target);
  }

  return getHTMLElementContentRect(target);
}
/**
 * Creates rectangle with an interface of the DOMRectReadOnly.
 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
 *
 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
 * @returns {DOMRectReadOnly}
 */


function createReadOnlyRect(_a) {
  var x = _a.x,
      y = _a.y,
      width = _a.width,
      height = _a.height; // If DOMRectReadOnly is available use it as a prototype for the rectangle.

  var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
  var rect = Object.create(Constr.prototype); // Rectangle's properties are not writable and non-enumerable.

  defineConfigurable(rect, {
    x: x,
    y: y,
    width: width,
    height: height,
    top: y,
    right: x + width,
    bottom: height + y,
    left: x
  });
  return rect;
}
/**
 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
 *
 * @param {number} x - X coordinate.
 * @param {number} y - Y coordinate.
 * @param {number} width - Rectangle's width.
 * @param {number} height - Rectangle's height.
 * @returns {DOMRectInit}
 */


function createRectInit(x, y, width, height) {
  return {
    x: x,
    y: y,
    width: width,
    height: height
  };
}
/**
 * Class that is responsible for computations of the content rectangle of
 * provided DOM element and for keeping track of it's changes.
 */


var ResizeObservation =
/** @class */
function () {
  /**
   * Creates an instance of ResizeObservation.
   *
   * @param {Element} target - Element to be observed.
   */
  function ResizeObservation(target) {
    /**
     * Broadcasted width of content rectangle.
     *
     * @type {number}
     */
    this.broadcastWidth = 0;
    /**
     * Broadcasted height of content rectangle.
     *
     * @type {number}
     */

    this.broadcastHeight = 0;
    /**
     * Reference to the last observed content rectangle.
     *
     * @private {DOMRectInit}
     */

    this.contentRect_ = createRectInit(0, 0, 0, 0);
    this.target = target;
  }
  /**
   * Updates content rectangle and tells whether it's width or height properties
   * have changed since the last broadcast.
   *
   * @returns {boolean}
   */


  ResizeObservation.prototype.isActive = function () {
    var rect = getContentRect(this.target);
    this.contentRect_ = rect;
    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
  };
  /**
   * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
   * from the corresponding properties of the last observed content rectangle.
   *
   * @returns {DOMRectInit} Last observed content rectangle.
   */


  ResizeObservation.prototype.broadcastRect = function () {
    var rect = this.contentRect_;
    this.broadcastWidth = rect.width;
    this.broadcastHeight = rect.height;
    return rect;
  };

  return ResizeObservation;
}();

var ResizeObserverEntry =
/** @class */
function () {
  /**
   * Creates an instance of ResizeObserverEntry.
   *
   * @param {Element} target - Element that is being observed.
   * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
   */
  function ResizeObserverEntry(target, rectInit) {
    var contentRect = createReadOnlyRect(rectInit); // According to the specification following properties are not writable
    // and are also not enumerable in the native implementation.
    //
    // Property accessors are not being used as they'd require to define a
    // private WeakMap storage which may cause memory leaks in browsers that
    // don't support this type of collections.

    defineConfigurable(this, {
      target: target,
      contentRect: contentRect
    });
  }

  return ResizeObserverEntry;
}();

var ResizeObserverSPI =
/** @class */
function () {
  /**
   * Creates a new instance of ResizeObserver.
   *
   * @param {ResizeObserverCallback} callback - Callback function that is invoked
   *      when one of the observed elements changes it's content dimensions.
   * @param {ResizeObserverController} controller - Controller instance which
   *      is responsible for the updates of observer.
   * @param {ResizeObserver} callbackCtx - Reference to the public
   *      ResizeObserver instance which will be passed to callback function.
   */
  function ResizeObserverSPI(callback, controller, callbackCtx) {
    /**
     * Collection of resize observations that have detected changes in dimensions
     * of elements.
     *
     * @private {Array<ResizeObservation>}
     */
    this.activeObservations_ = [];
    /**
     * Registry of the ResizeObservation instances.
     *
     * @private {Map<Element, ResizeObservation>}
     */

    this.observations_ = new MapShim();

    if (typeof callback !== 'function') {
      throw new TypeError('The callback provided as parameter 1 is not a function.');
    }

    this.callback_ = callback;
    this.controller_ = controller;
    this.callbackCtx_ = callbackCtx;
  }
  /**
   * Starts observing provided element.
   *
   * @param {Element} target - Element to be observed.
   * @returns {void}
   */


  ResizeObserverSPI.prototype.observe = function (target) {
    if (!arguments.length) {
      throw new TypeError('1 argument required, but only 0 present.');
    } // Do nothing if current environment doesn't have the Element interface.


    if (typeof Element === 'undefined' || !(Element instanceof Object)) {
      return;
    }

    if (!(target instanceof getWindowOf(target).Element)) {
      throw new TypeError('parameter 1 is not of type "Element".');
    }

    var observations = this.observations_; // Do nothing if element is already being observed.

    if (observations.has(target)) {
      return;
    }

    observations.set(target, new ResizeObservation(target));
    this.controller_.addObserver(this); // Force the update of observations.

    this.controller_.refresh();
  };
  /**
   * Stops observing provided element.
   *
   * @param {Element} target - Element to stop observing.
   * @returns {void}
   */


  ResizeObserverSPI.prototype.unobserve = function (target) {
    if (!arguments.length) {
      throw new TypeError('1 argument required, but only 0 present.');
    } // Do nothing if current environment doesn't have the Element interface.


    if (typeof Element === 'undefined' || !(Element instanceof Object)) {
      return;
    }

    if (!(target instanceof getWindowOf(target).Element)) {
      throw new TypeError('parameter 1 is not of type "Element".');
    }

    var observations = this.observations_; // Do nothing if element is not being observed.

    if (!observations.has(target)) {
      return;
    }

    observations.delete(target);

    if (!observations.size) {
      this.controller_.removeObserver(this);
    }
  };
  /**
   * Stops observing all elements.
   *
   * @returns {void}
   */


  ResizeObserverSPI.prototype.disconnect = function () {
    this.clearActive();
    this.observations_.clear();
    this.controller_.removeObserver(this);
  };
  /**
   * Collects observation instances the associated element of which has changed
   * it's content rectangle.
   *
   * @returns {void}
   */


  ResizeObserverSPI.prototype.gatherActive = function () {
    var _this = this;

    this.clearActive();
    this.observations_.forEach(function (observation) {
      if (observation.isActive()) {
        _this.activeObservations_.push(observation);
      }
    });
  };
  /**
   * Invokes initial callback function with a list of ResizeObserverEntry
   * instances collected from active resize observations.
   *
   * @returns {void}
   */


  ResizeObserverSPI.prototype.broadcastActive = function () {
    // Do nothing if observer doesn't have active observations.
    if (!this.hasActive()) {
      return;
    }

    var ctx = this.callbackCtx_; // Create ResizeObserverEntry instance for every active observation.

    var entries = this.activeObservations_.map(function (observation) {
      return new ResizeObserverEntry(observation.target, observation.broadcastRect());
    });
    this.callback_.call(ctx, entries, ctx);
    this.clearActive();
  };
  /**
   * Clears the collection of active observations.
   *
   * @returns {void}
   */


  ResizeObserverSPI.prototype.clearActive = function () {
    this.activeObservations_.splice(0);
  };
  /**
   * Tells whether observer has active observations.
   *
   * @returns {boolean}
   */


  ResizeObserverSPI.prototype.hasActive = function () {
    return this.activeObservations_.length > 0;
  };

  return ResizeObserverSPI;
}(); // Registry of internal observers. If WeakMap is not available use current shim
// for the Map collection as it has all required methods and because WeakMap
// can't be fully polyfilled anyway.


var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
/**
 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
 * exposing only those methods and properties that are defined in the spec.
 */

var ResizeObserver =
/** @class */
function () {
  /**
   * Creates a new instance of ResizeObserver.
   *
   * @param {ResizeObserverCallback} callback - Callback that is invoked when
   *      dimensions of the observed elements change.
   */
  function ResizeObserver(callback) {
    if (!(this instanceof ResizeObserver)) {
      throw new TypeError('Cannot call a class as a function.');
    }

    if (!arguments.length) {
      throw new TypeError('1 argument required, but only 0 present.');
    }

    var controller = ResizeObserverController.getInstance();
    var observer = new ResizeObserverSPI(callback, controller, this);
    observers.set(this, observer);
  }

  return ResizeObserver;
}(); // Expose public methods of ResizeObserver.


['observe', 'unobserve', 'disconnect'].forEach(function (method) {
  ResizeObserver.prototype[method] = function () {
    var _a;

    return (_a = observers.get(this))[method].apply(_a, arguments);
  };
});

var ResizeObserver_es_index = function () {
  // Export existing implementation if available.
  if (typeof global$1.ResizeObserver !== 'undefined') {
    return global$1.ResizeObserver;
  }

  return ResizeObserver;
}();

/* harmony default export */ var ResizeObserver_es = (ResizeObserver_es_index);
;// CONCATENATED MODULE: ./src/components/accordion/accordion.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var accordion = ({});
;// CONCATENATED MODULE: ./src/components/accordion/index.tsx
/**
 * Provide a transitions state `"entering" | "entered" | "exiting" | "exited"`
 * triggered whenever `active` changes. Transitions to the `*ed` state
 * after `delay` number of milliseconds.
 */function useTransition(active,delay){var _React$useState=react.useState(null),_React$useState2=slicedToArray_slicedToArray(_React$useState,2),prevActive=_React$useState2[0],setPrevActive=_React$useState2[1];var _React$useState3=react.useState(null),_React$useState4=slicedToArray_slicedToArray(_React$useState3,2),status=_React$useState4[0],setStatus=_React$useState4[1];var timeoutRef=react.useRef(null);var lastTimeActivatedRef=react.useRef(0);react.useEffect(function(){// Receiving the same state twice means we do nothing
if(active===prevActive){return;}var status=active===true?"entering":"exiting";setPrevActive(active);setStatus(status);if(timeoutRef.current!=null){clearTimeout(timeoutRef.current);}// If we transitioned "partway" through, we want reverse
// symmetrically rather than spend the whole `delay` for the second transition.
var adjustedDelay=Math.min(delay,Date.now()-lastTimeActivatedRef.current);lastTimeActivatedRef.current=Date.now();timeoutRef.current=window.setTimeout(function(){setStatus(function(status){if(status==="entering"){return"entered";}if(status==="exiting"){return"exited";}console.log("couldn't decide state",status);return status;});},adjustedDelay);},[active,prevActive,delay]);return status;}/**
 * An `Accordion` hides or reveals its children with an animation. In order to animate,
 * it must add several `<div>`s around the content. Transition animations happen automatically
 * whenever the `open` state changes.
 */function Accordion(_ref){var open=_ref.open,children=_ref.children;var state=useTransition(open,400);return/*#__PURE__*/(0,jsx_runtime.jsx)(AccordionInner,{status:state,children:children});}function AccordionInner(_ref2){var status=_ref2.status,propsChildren=_ref2.children;var innerContainerRef=react.useRef(null);var outerContainerRef=react.useRef(null);var _React$useState5=react.useState(null),_React$useState6=slicedToArray_slicedToArray(_React$useState5,2),innerContainerHeight=_React$useState6[0],setInnerContainerHeight=_React$useState6[1];var _React$useState7=react.useState(propsChildren),_React$useState8=slicedToArray_slicedToArray(_React$useState7,2),children=_React$useState8[0],setChildren=_React$useState8[1];// Keep track of the inner div's size. CSS handles the animation,
// but we are in charge of setting our max-size.
react.useEffect(function(){if(innerContainerRef.current==null||outerContainerRef.current==null){return;}var innerResizeObserver=new ResizeObserver_es(function(entries){var _iterator=_createForOfIteratorHelper(entries),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var entry=_step.value;setInnerContainerHeight(entry.contentRect.height);}}catch(err){_iterator.e(err);}finally{_iterator.f();}});innerResizeObserver.observe(innerContainerRef.current);return function(){innerResizeObserver.disconnect();};},[]);react.useEffect(function(){if(status==="entering"||status==="exited"){setChildren(propsChildren);}},[propsChildren,status]);var open=status==="entering"||status==="entered";return/*#__PURE__*/(0,jsx_runtime.jsx)("div",{ref:outerContainerRef,className:classnames_default()("accordion-surround",{open:open,animate:status==="entering"||status==="exiting"}),style:{maxHeight:open&&innerContainerHeight!=null?innerContainerHeight:0,height:open&&innerContainerHeight!=null?innerContainerHeight:0},children:/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"accordion-inner-container",ref:innerContainerRef,children:children})});}
;// CONCATENATED MODULE: ./src/components/toc/index.tsx
/**
 * Returns whether or not there is a TOC item with id `childId` that is a child of the
 * TOC item with id `selfId`.
 */function isTocChild(toc,selfId,childId){function search(items,targetId){var _iterator=_createForOfIteratorHelper(items),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var item=_step.value;if(item.id===targetId){return item;}if(item.children){var found=search(item.children,targetId);if(found){return found;}}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}var self=search(toc,selfId);if(!self){throw new Error("Could not find item with id \"".concat(selfId,"\" in TOC"));}return!!search(self.children||[],childId);}function TocEntry(_ref){var entry=_ref.entry;var currentPage=useAppSelector(currentPageIdSelector);var toc=useAppSelector(tocSelector);var childTocItemIsActive=isTocChild(toc,entry.id||"",currentPage||"");var openStatePreference=childTocItemIsActive||entry.id===currentPage||entry.level===2;var _React$useState=react.useState(entry.title||""),_React$useState2=slicedToArray_slicedToArray(_React$useState,2),innerHtml=_React$useState2[0],setInnerHtml=_React$useState2[1];var _React$useState3=react.useState(openStatePreference),_React$useState4=slicedToArray_slicedToArray(_React$useState3,2),openState=_React$useState4[0],setOpenState=_React$useState4[1];var _React$useState5=react.useState(false),_React$useState6=slicedToArray_slicedToArray(_React$useState5,2),hasHadInteraction=_React$useState6[0],setHasHadInteraction=_React$useState6[1];// Until the user clicks something, we should force the nav to be open/closed
// depending on whether the child's contents are displayed.
if(!hasHadInteraction){openState=openStatePreference;}react.useEffect(function(){if((entry.title||"").includes("process-math")){staticallyRenderMathJax(entry.title||"").then(function(rendered){return setInnerHtml(rendered);});}},[entry.title]);var shouldRenderCodeNumber=!!entry.codeNumber&&(entry.level||0)<3||true;// We never render divisions with empty headers.
var children=entry.children?entry.children.filter(function(child){return child.title;}):[];var shouldRenderChildren=children.length>0;var chevron=shouldRenderChildren?/*#__PURE__*/(0,jsx_runtime.jsx)(Button,{as:"span",className:"toc-chevron-surround ".concat(openState?"open":""),title:"Toggle sections",onClick:function onClick(){setOpenState(function(state){return!state;});setHasHadInteraction(true);},children:/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"chevron-rotator",children:/*#__PURE__*/(0,jsx_runtime.jsx)(react_chevron,{direction:"right"})})}):null;return/*#__PURE__*/(0,jsx_runtime.jsxs)("li",{className:"link ".concat(currentPage===entry.id?"active":""," ").concat(entry.type),children:[/*#__PURE__*/(0,jsx_runtime.jsx)(MathJaxOneTimeRenderer,{children:/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"toc-item",children:[/*#__PURE__*/(0,jsx_runtime.jsxs)(InternalAnchor,{href:entry.href||"#",pageId:entry.id||undefined,className:classnames_default()({active:currentPage===entry.id,"has-chevron":chevron}),onClick:function onClick(){// Auto open sections when we click on them, but don't close
// them unless we click the "close arrow"
if(!openState){setOpenState(function(state){return!state;});setHasHadInteraction(true);}},children:[shouldRenderCodeNumber&&/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"codenumber",children:entry.codeNumber}),/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"title",dangerouslySetInnerHTML:{__html:innerHtml}})]}),chevron]})}),shouldRenderChildren&&/*#__PURE__*/(0,jsx_runtime.jsx)(Accordion,{open:openState,children:/*#__PURE__*/(0,jsx_runtime.jsx)("ul",{className:classnames_default()(_defineProperty({},"division-level-".concat(entry.level),entry.level),"structural"),children:children.map(function(entry,i){return/*#__PURE__*/(0,jsx_runtime.jsx)(TocEntry,{entry:entry},entry.id||i);})})})]});}function Toc(){var toc=useAppSelector(tocSelector);if(toc.length===1){// If the root TOC consists of exactly one item, assume that its children are what
// we really want to render.
toc=toc[0].children||[];}return/*#__PURE__*/(0,jsx_runtime.jsx)("ul",{children:toc.map(function(entry,i){return/*#__PURE__*/(0,jsx_runtime.jsx)(TocEntry,{entry:entry},entry.id||i);})});}
;// CONCATENATED MODULE: ./node_modules/react-router/index.js


/**
 * React Router v6.3.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */



var NavigationContext = /*#__PURE__*/(0,react.createContext)(null);

if (false) {}

var LocationContext = /*#__PURE__*/(0,react.createContext)(null);

if (false) {}

var RouteContext = /*#__PURE__*/(0,react.createContext)({
  outlet: null,
  matches: []
});

if (false) {}

function react_router_invariant(cond, message) {
  if (!cond) throw new Error(message);
}

function react_router_warning(cond, message) {
  if (!cond) {
    // eslint-disable-next-line no-console
    if (typeof console !== "undefined") console.warn(message);

    try {
      // Welcome to debugging React Router!
      //
      // This error is thrown as a convenience so you can more easily
      // find the source for a warning that appears in the console by
      // enabling "pause on exceptions" in your JavaScript debugger.
      throw new Error(message); // eslint-disable-next-line no-empty
    } catch (e) {}
  }
}

var alreadyWarned = {};

function warningOnce(key, cond, message) {
  if (!cond && !alreadyWarned[key]) {
    alreadyWarned[key] = true;
     false ? 0 : void 0;
  }
}
/**
 * Returns a path with params interpolated.
 *
 * @see https://reactrouter.com/docs/en/v6/api#generatepath
 */


function generatePath(path, params) {
  if (params === void 0) {
    params = {};
  }

  return path.replace(/:(\w+)/g, function (_, key) {
    !(params[key] != null) ?  false ? 0 : react_router_invariant(false) : void 0;
    return params[key];
  }).replace(/\/*\*$/, function (_) {
    return params["*"] == null ? "" : params["*"].replace(/^\/*/, "/");
  });
}
/**
 * A RouteMatch contains info about how a route matched a URL.
 */

/**
 * Matches the given routes to a location and returns the match data.
 *
 * @see https://reactrouter.com/docs/en/v6/api#matchroutes
 */


function matchRoutes(routes, locationArg, basename) {
  if (basename === void 0) {
    basename = "/";
  }

  var location = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
  var pathname = stripBasename(location.pathname || "/", basename);

  if (pathname == null) {
    return null;
  }

  var branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  var matches = null;

  for (var i = 0; matches == null && i < branches.length; ++i) {
    matches = matchRouteBranch(branches[i], pathname);
  }

  return matches;
}

function flattenRoutes(routes, branches, parentsMeta, parentPath) {
  if (branches === void 0) {
    branches = [];
  }

  if (parentsMeta === void 0) {
    parentsMeta = [];
  }

  if (parentPath === void 0) {
    parentPath = "";
  }

  routes.forEach(function (route, index) {
    var meta = {
      relativePath: route.path || "",
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index,
      route: route
    };

    if (meta.relativePath.startsWith("/")) {
      !meta.relativePath.startsWith(parentPath) ?  false ? 0 : react_router_invariant(false) : void 0;
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }

    var path = joinPaths([parentPath, meta.relativePath]);
    var routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the
    // route tree depth-first and child routes appear before their parents in
    // the "flattened" version.

    if (route.children && route.children.length > 0) {
      !(route.index !== true) ?  false ? 0 : react_router_invariant(false) : void 0;
      flattenRoutes(route.children, branches, routesMeta, path);
    } // Routes without a path shouldn't ever match by themselves unless they are
    // index routes, so don't add them to the list of possible branches.


    if (route.path == null && !route.index) {
      return;
    }

    branches.push({
      path: path,
      score: computeScore(path, route.index),
      routesMeta: routesMeta
    });
  });
  return branches;
}

function rankRouteBranches(branches) {
  branches.sort(function (a, b) {
    return a.score !== b.score ? b.score - a.score // Higher score first
    : compareIndexes(a.routesMeta.map(function (meta) {
      return meta.childrenIndex;
    }), b.routesMeta.map(function (meta) {
      return meta.childrenIndex;
    }));
  });
}

var paramRe = /^:\w+$/;
var dynamicSegmentValue = 3;
var indexRouteValue = 2;
var emptySegmentValue = 1;
var staticSegmentValue = 10;
var splatPenalty = (/* unused pure expression or super */ null && (-2));

var isSplat = function isSplat(s) {
  return s === "*";
};

function computeScore(path, index) {
  var segments = path.split("/");
  var initialScore = segments.length;

  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }

  if (index) {
    initialScore += indexRouteValue;
  }

  return segments.filter(function (s) {
    return !isSplat(s);
  }).reduce(function (score, segment) {
    return score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue);
  }, initialScore);
}

function compareIndexes(a, b) {
  var siblings = a.length === b.length && a.slice(0, -1).every(function (n, i) {
    return n === b[i];
  });
  return siblings ? // If two routes are siblings, we should try to match the earlier sibling
  // first. This allows people to have fine-grained control over the matching
  // behavior by simply putting routes with identical paths in the order they
  // want them tried.
  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,
  // so they sort equally.
  0;
}

function matchRouteBranch(branch, pathname) {
  var routesMeta = branch.routesMeta;
  var matchedParams = {};
  var matchedPathname = "/";
  var matches = [];

  for (var i = 0; i < routesMeta.length; ++i) {
    var meta = routesMeta[i];
    var end = i === routesMeta.length - 1;
    var remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
    var match = matchPath({
      path: meta.relativePath,
      caseSensitive: meta.caseSensitive,
      end: end
    }, remainingPathname);
    if (!match) return null;
    Object.assign(matchedParams, match.params);
    var route = meta.route;
    matches.push({
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match.pathname]),
      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),
      route: route
    });

    if (match.pathnameBase !== "/") {
      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);
    }
  }

  return matches;
}
/**
 * A PathPattern is used to match on some portion of a URL pathname.
 */

/**
 * Performs pattern matching on a URL pathname and returns information about
 * the match.
 *
 * @see https://reactrouter.com/docs/en/v6/api#matchpath
 */


function matchPath(pattern, pathname) {
  if (typeof pattern === "string") {
    pattern = {
      path: pattern,
      caseSensitive: false,
      end: true
    };
  }

  var _compilePath = compilePath(pattern.path, pattern.caseSensitive, pattern.end),
      _compilePath2 = _slicedToArray(_compilePath, 2),
      matcher = _compilePath2[0],
      paramNames = _compilePath2[1];

  var match = pathname.match(matcher);
  if (!match) return null;
  var matchedPathname = match[0];
  var pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  var captureGroups = match.slice(1);
  var params = paramNames.reduce(function (memo, paramName, index) {
    // We need to compute the pathnameBase here using the raw splat value
    // instead of using params["*"] later because it will be decoded then
    if (paramName === "*") {
      var splatValue = captureGroups[index] || "";
      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
    }

    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || "", paramName);
    return memo;
  }, {});
  return {
    params: params,
    pathname: matchedPathname,
    pathnameBase: pathnameBase,
    pattern: pattern
  };
}

function compilePath(path, caseSensitive, end) {
  if (caseSensitive === void 0) {
    caseSensitive = false;
  }

  if (end === void 0) {
    end = true;
  }

   false ? 0 : void 0;
  var paramNames = [];
  var regexpSource = "^" + path.replace(/\/*\*?$/, "") // Ignore trailing / and /*, we'll handle it below
  .replace(/^\/*/, "/") // Make sure it has a leading /
  .replace(/[\\.*+^$?{}|()[\]]/g, "\\$&") // Escape special regex chars
  .replace(/:(\w+)/g, function (_, paramName) {
    paramNames.push(paramName);
    return "([^\\/]+)";
  });

  if (path.endsWith("*")) {
    paramNames.push("*");
    regexpSource += path === "*" || path === "/*" ? "(.*)$" // Already matched the initial /, just match the rest
    : "(?:\\/(.+)|\\/*)$"; // Don't include the / in params["*"]
  } else {
    regexpSource += end ? "\\/*$" // When matching to the end, ignore trailing slashes
    : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts
    // parent routes to matching only their own words and nothing more, e.g. parent
    // route "/home" should not match "/home2".
    // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,
    // but do not consume the character in the matched path so they can match against
    // nested paths.
    "(?:(?=[.~-]|%[0-9A-F]{2})|\\b|\\/|$)";
  }

  var matcher = new RegExp(regexpSource, caseSensitive ? undefined : "i");
  return [matcher, paramNames];
}

function safelyDecodeURIComponent(value, paramName) {
  try {
    return decodeURIComponent(value);
  } catch (error) {
     false ? 0 : void 0;
    return value;
  }
}
/**
 * Returns a resolved path object relative to the given pathname.
 *
 * @see https://reactrouter.com/docs/en/v6/api#resolvepath
 */


function resolvePath(to, fromPathname) {
  if (fromPathname === void 0) {
    fromPathname = "/";
  }

  var _ref5 = typeof to === "string" ? parsePath(to) : to,
      toPathname = _ref5.pathname,
      _ref5$search = _ref5.search,
      search = _ref5$search === void 0 ? "" : _ref5$search,
      _ref5$hash = _ref5.hash,
      hash = _ref5$hash === void 0 ? "" : _ref5$hash;

  var pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
  return {
    pathname: pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash)
  };
}

function resolvePathname(relativePath, fromPathname) {
  var segments = fromPathname.replace(/\/+$/, "").split("/");
  var relativeSegments = relativePath.split("/");
  relativeSegments.forEach(function (segment) {
    if (segment === "..") {
      // Keep the root "" segment so the pathname starts at /
      if (segments.length > 1) segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join("/") : "/";
}

function resolveTo(toArg, routePathnames, locationPathname) {
  var to = typeof toArg === "string" ? parsePath(toArg) : toArg;
  var toPathname = toArg === "" || to.pathname === "" ? "/" : to.pathname; // If a pathname is explicitly provided in `to`, it should be relative to the
  // route context. This is explained in `Note on `<Link to>` values` in our
  // migration guide from v5 as a means of disambiguation between `to` values
  // that begin with `/` and those that do not. However, this is problematic for
  // `to` values that do not provide a pathname. `to` can simply be a search or
  // hash string, in which case we should assume that the navigation is relative
  // to the current location's pathname and *not* the route pathname.

  var from;

  if (toPathname == null) {
    from = locationPathname;
  } else {
    var routePathnameIndex = routePathnames.length - 1;

    if (toPathname.startsWith("..")) {
      var toSegments = toPathname.split("/"); // Each leading .. segment means "go up one route" instead of "go up one
      // URL segment".  This is a key difference from how <a href> works and a
      // major reason we call this a "to" value instead of a "href".

      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }

      to.pathname = toSegments.join("/");
    } // If there are more ".." segments than parent routes, resolve relative to
    // the root / URL.


    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }

  var path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original to value had one.

  if (toPathname && toPathname !== "/" && toPathname.endsWith("/") && !path.pathname.endsWith("/")) {
    path.pathname += "/";
  }

  return path;
}

function getToPathname(to) {
  // Empty strings should be treated the same as / paths
  return to === "" || to.pathname === "" ? "/" : typeof to === "string" ? parsePath(to).pathname : to.pathname;
}

function stripBasename(pathname, basename) {
  if (basename === "/") return pathname;

  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  }

  var nextChar = pathname.charAt(basename.length);

  if (nextChar && nextChar !== "/") {
    // pathname does not start with basename/
    return null;
  }

  return pathname.slice(basename.length) || "/";
}

var joinPaths = function joinPaths(paths) {
  return paths.join("/").replace(/\/\/+/g, "/");
};

var normalizePathname = function normalizePathname(pathname) {
  return pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
};

var normalizeSearch = function normalizeSearch(search) {
  return !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
};

var normalizeHash = function normalizeHash(hash) {
  return !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
};
/**
 * Returns the full href for the given "to" value. This is useful for building
 * custom links that are also accessible and preserve right-click behavior.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usehref
 */


function useHref(to) {
  !useInRouterContext() ?  false ? 0 : react_router_invariant(false) : void 0;

  var _useContext = useContext(NavigationContext),
      basename = _useContext.basename,
      navigator = _useContext.navigator;

  var _useResolvedPath = useResolvedPath(to),
      hash = _useResolvedPath.hash,
      pathname = _useResolvedPath.pathname,
      search = _useResolvedPath.search;

  var joinedPathname = pathname;

  if (basename !== "/") {
    var toPathname = getToPathname(to);
    var endsWithSlash = toPathname != null && toPathname.endsWith("/");
    joinedPathname = pathname === "/" ? basename + (endsWithSlash ? "/" : "") : joinPaths([basename, pathname]);
  }

  return navigator.createHref({
    pathname: joinedPathname,
    search: search,
    hash: hash
  });
}
/**
 * Returns true if this component is a descendant of a <Router>.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext
 */


function useInRouterContext() {
  return (0,react.useContext)(LocationContext) != null;
}
/**
 * Returns the current location object, which represents the current URL in web
 * browsers.
 *
 * Note: If you're using this it may mean you're doing some of your own
 * "routing" in your app, and we'd like to know what your use case is. We may
 * be able to provide something higher-level to better suit your needs.
 *
 * @see https://reactrouter.com/docs/en/v6/api#uselocation
 */


function useLocation() {
  !useInRouterContext() ?  false ? 0 : react_router_invariant(false) : void 0;
  return (0,react.useContext)(LocationContext).location;
}
/**
 * Returns the current navigation action which describes how the router came to
 * the current location, either by a pop, push, or replace on the history stack.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype
 */


function useNavigationType() {
  return useContext(LocationContext).navigationType;
}
/**
 * Returns true if the URL for the given "to" value matches the current URL.
 * This is useful for components that need to know "active" state, e.g.
 * <NavLink>.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usematch
 */


function useMatch(pattern) {
  !useInRouterContext() ?  false ? 0 : react_router_invariant(false) : void 0;

  var _useLocation = useLocation(),
      pathname = _useLocation.pathname;

  return useMemo(function () {
    return matchPath(pattern, pathname);
  }, [pathname, pattern]);
}
/**
 * The interface for the navigate() function returned from useNavigate().
 */

/**
 * Returns an imperative method for changing the location. Used by <Link>s, but
 * may also be used by other elements to change the location.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usenavigate
 */


function useNavigate() {
  !useInRouterContext() ?  false ? 0 : react_router_invariant(false) : void 0;

  var _useContext2 = useContext(NavigationContext),
      basename = _useContext2.basename,
      navigator = _useContext2.navigator;

  var _useContext3 = useContext(RouteContext),
      matches = _useContext3.matches;

  var _useLocation2 = useLocation(),
      locationPathname = _useLocation2.pathname;

  var routePathnamesJson = JSON.stringify(matches.map(function (match) {
    return match.pathnameBase;
  }));
  var activeRef = useRef(false);
  useEffect(function () {
    activeRef.current = true;
  });
  var navigate = useCallback(function (to, options) {
    if (options === void 0) {
      options = {};
    }

     false ? 0 : void 0;
    if (!activeRef.current) return;

    if (typeof to === "number") {
      navigator.go(to);
      return;
    }

    var path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);

    if (basename !== "/") {
      path.pathname = joinPaths([basename, path.pathname]);
    }

    (!!options.replace ? navigator.replace : navigator.push)(path, options.state);
  }, [basename, navigator, routePathnamesJson, locationPathname]);
  return navigate;
}

var OutletContext = /*#__PURE__*/(/* unused pure expression or super */ null && (createContext(null)));
/**
 * Returns the context (if provided) for the child route at this level of the route
 * hierarchy.
 * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext
 */

function useOutletContext() {
  return useContext(OutletContext);
}
/**
 * Returns the element for the child route at this level of the route
 * hierarchy. Used internally by <Outlet> to render child routes.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useoutlet
 */


function useOutlet(context) {
  var outlet = useContext(RouteContext).outlet;

  if (outlet) {
    return /*#__PURE__*/createElement(OutletContext.Provider, {
      value: context
    }, outlet);
  }

  return outlet;
}
/**
 * Returns an object of key/value pairs of the dynamic params from the current
 * URL that were matched by the route path.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useparams
 */


function useParams() {
  var _useContext4 = useContext(RouteContext),
      matches = _useContext4.matches;

  var routeMatch = matches[matches.length - 1];
  return routeMatch ? routeMatch.params : {};
}
/**
 * Resolves the pathname of the given `to` value against the current location.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath
 */


function useResolvedPath(to) {
  var _useContext5 = useContext(RouteContext),
      matches = _useContext5.matches;

  var _useLocation3 = useLocation(),
      locationPathname = _useLocation3.pathname;

  var routePathnamesJson = JSON.stringify(matches.map(function (match) {
    return match.pathnameBase;
  }));
  return useMemo(function () {
    return resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);
  }, [to, routePathnamesJson, locationPathname]);
}
/**
 * Returns the element of the route that matched the current location, prepared
 * with the correct context to render the remainder of the route tree. Route
 * elements in the tree must render an <Outlet> to render their child route's
 * element.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useroutes
 */


function useRoutes(routes, locationArg) {
  !useInRouterContext() ?  false ? 0 : react_router_invariant(false) : void 0;

  var _useContext6 = useContext(RouteContext),
      parentMatches = _useContext6.matches;

  var routeMatch = parentMatches[parentMatches.length - 1];
  var parentParams = routeMatch ? routeMatch.params : {};
  var parentPathname = routeMatch ? routeMatch.pathname : "/";
  var parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  var parentRoute = routeMatch && routeMatch.route;

  if (false) { var parentPath; }

  var locationFromContext = useLocation();
  var location;

  if (locationArg) {
    var _parsedLocationArg$pa;

    var parsedLocationArg = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
    !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ?  false ? 0 : react_router_invariant(false) : void 0;
    location = parsedLocationArg;
  } else {
    location = locationFromContext;
  }

  var pathname = location.pathname || "/";
  var remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/";
  var matches = matchRoutes(routes, {
    pathname: remainingPathname
  });

  if (false) {}

  return _renderMatches(matches && matches.map(function (match) {
    return Object.assign({}, match, {
      params: Object.assign({}, parentParams, match.params),
      pathname: joinPaths([parentPathnameBase, match.pathname]),
      pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])
    });
  }), parentMatches);
}

function _renderMatches(matches, parentMatches) {
  if (parentMatches === void 0) {
    parentMatches = [];
  }

  if (matches == null) return null;
  return matches.reduceRight(function (outlet, match, index) {
    return /*#__PURE__*/createElement(RouteContext.Provider, {
      children: match.route.element !== undefined ? match.route.element : outlet,
      value: {
        outlet: outlet,
        matches: parentMatches.concat(matches.slice(0, index + 1))
      }
    });
  }, null);
}
/**
 * A <Router> that stores all entries in memory.
 *
 * @see https://reactrouter.com/docs/en/v6/api#memoryrouter
 */


function MemoryRouter(_ref) {
  var basename = _ref.basename,
      children = _ref.children,
      initialEntries = _ref.initialEntries,
      initialIndex = _ref.initialIndex;
  var historyRef = useRef();

  if (historyRef.current == null) {
    historyRef.current = createMemoryHistory({
      initialEntries: initialEntries,
      initialIndex: initialIndex
    });
  }

  var history = historyRef.current;

  var _useState = useState({
    action: history.action,
    location: history.location
  }),
      _useState2 = _slicedToArray(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  useLayoutEffect(function () {
    return history.listen(setState);
  }, [history]);
  return /*#__PURE__*/createElement(Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
/**
 * Changes the current location.
 *
 * Note: This API is mostly useful in React.Component subclasses that are not
 * able to use hooks. In functional components, we recommend you use the
 * `useNavigate` hook instead.
 *
 * @see https://reactrouter.com/docs/en/v6/api#navigate
 */


function Navigate(_ref2) {
  var to = _ref2.to,
      replace = _ref2.replace,
      state = _ref2.state;
  !useInRouterContext() ?  false ? 0 : react_router_invariant(false) : void 0;
   false ? 0 : void 0;
  var navigate = useNavigate();
  useEffect(function () {
    navigate(to, {
      replace: replace,
      state: state
    });
  });
  return null;
}
/**
 * Renders the child route's element, if there is one.
 *
 * @see https://reactrouter.com/docs/en/v6/api#outlet
 */


function Outlet(props) {
  return useOutlet(props.context);
}
/**
 * Declares an element that should be rendered at a certain URL path.
 *
 * @see https://reactrouter.com/docs/en/v6/api#route
 */


function Route(_props) {
   false ? 0 : react_router_invariant(false);
}
/**
 * Provides location context for the rest of the app.
 *
 * Note: You usually won't render a <Router> directly. Instead, you'll render a
 * router that is more specific to your environment such as a <BrowserRouter>
 * in web browsers or a <StaticRouter> for server rendering.
 *
 * @see https://reactrouter.com/docs/en/v6/api#router
 */


function Router(_ref3) {
  var _ref3$basename = _ref3.basename,
      basenameProp = _ref3$basename === void 0 ? "/" : _ref3$basename,
      _ref3$children = _ref3.children,
      children = _ref3$children === void 0 ? null : _ref3$children,
      locationProp = _ref3.location,
      _ref3$navigationType = _ref3.navigationType,
      navigationType = _ref3$navigationType === void 0 ? Action.Pop : _ref3$navigationType,
      navigator = _ref3.navigator,
      _ref3$static = _ref3.static,
      staticProp = _ref3$static === void 0 ? false : _ref3$static;
  !!useInRouterContext() ?  false ? 0 : react_router_invariant(false) : void 0;
  var basename = normalizePathname(basenameProp);
  var navigationContext = (0,react.useMemo)(function () {
    return {
      basename: basename,
      navigator: navigator,
      static: staticProp
    };
  }, [basename, navigator, staticProp]);

  if (typeof locationProp === "string") {
    locationProp = history_parsePath(locationProp);
  }

  var _locationProp = locationProp,
      _locationProp$pathnam = _locationProp.pathname,
      pathname = _locationProp$pathnam === void 0 ? "/" : _locationProp$pathnam,
      _locationProp$search = _locationProp.search,
      search = _locationProp$search === void 0 ? "" : _locationProp$search,
      _locationProp$hash = _locationProp.hash,
      hash = _locationProp$hash === void 0 ? "" : _locationProp$hash,
      _locationProp$state = _locationProp.state,
      state = _locationProp$state === void 0 ? null : _locationProp$state,
      _locationProp$key = _locationProp.key,
      key = _locationProp$key === void 0 ? "default" : _locationProp$key;
  var location = (0,react.useMemo)(function () {
    var trailingPathname = stripBasename(pathname, basename);

    if (trailingPathname == null) {
      return null;
    }

    return {
      pathname: trailingPathname,
      search: search,
      hash: hash,
      state: state,
      key: key
    };
  }, [basename, pathname, search, hash, state, key]);
   false ? 0 : void 0;

  if (location == null) {
    return null;
  }

  return /*#__PURE__*/(0,react.createElement)(NavigationContext.Provider, {
    value: navigationContext
  }, /*#__PURE__*/(0,react.createElement)(LocationContext.Provider, {
    children: children,
    value: {
      location: location,
      navigationType: navigationType
    }
  }));
}
/**
 * A container for a nested tree of <Route> elements that renders the branch
 * that best matches the current location.
 *
 * @see https://reactrouter.com/docs/en/v6/api#routes
 */


function Routes(_ref4) {
  var children = _ref4.children,
      location = _ref4.location;
  return useRoutes(createRoutesFromChildren(children), location);
} ///////////////////////////////////////////////////////////////////////////////
// UTILS
///////////////////////////////////////////////////////////////////////////////

/**
 * Creates a route config from a React "children" object, which is usually
 * either a `<Route>` element or an array of them. Used internally by
 * `<Routes>` to create a route config from its children.
 *
 * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren
 */


function createRoutesFromChildren(children) {
  var routes = [];
  Children.forEach(children, function (element) {
    if (! /*#__PURE__*/isValidElement(element)) {
      // Ignore non-elements. This allows people to more easily inline
      // conditionals in their route config.
      return;
    }

    if (element.type === Fragment) {
      // Transparently support React.Fragment and its children.
      routes.push.apply(routes, createRoutesFromChildren(element.props.children));
      return;
    }

    !(element.type === Route) ?  false ? 0 : react_router_invariant(false) : void 0;
    var route = {
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      index: element.props.index,
      path: element.props.path
    };

    if (element.props.children) {
      route.children = createRoutesFromChildren(element.props.children);
    }

    routes.push(route);
  });
  return routes;
}
/**
 * Renders the result of `matchRoutes()` into a React element.
 */


function renderMatches(matches) {
  return _renderMatches(matches);
}


// EXTERNAL MODULE: ./node_modules/crypto-js/md5.js
var md5 = __webpack_require__(3074);
var md5_default = /*#__PURE__*/__webpack_require__.n(md5);
;// CONCATENATED MODULE: ./src/components/cached-component.tsx
/**
 * A component that caches the dom nodes of everything it is asked to render.
 *
 * `cacheId` should be a unique id associated with the content. If the content with `cacheId`
 * has never been rendered before, `childRenderer` will be called to generate the content.
 * If the content has been rendered before, the previous copy of the content will be used
 * instead of it being re-rendered.
 *
 * All content is kept in the DOM tree but hidden. Only the content corresponding to `cacheId`
 * is displayed.
 */function CachedComponent(_ref){var cacheId=_ref.cacheId,childRenderer=_ref.childRenderer;var cacheRef=react.useRef({});var cache=cacheRef.current;var domCaching=useAppSelector(domCachingSelector);if(!domCaching){return/*#__PURE__*/(0,jsx_runtime.jsx)(HidableElement,{hidden:false,cacheId:cacheId,children:childRenderer()},cacheId);}// Strict check for undefined, since `null` is a valid react element.
if(typeof cache[cacheId]==="undefined"){cache[cacheId]=childRenderer();}// DOM caching is the most aggressive form of caching where we render the tree and then hide it if
// the page shouldn't be shown. It comes with side-effects. For example, videos on a hidden page
// still exist and might keep playing even when the page is hidden. Further, plugins that scan for
// content across the whole DOM may try to process too much, or process content they've already
// processed.
var children=Object.entries(cache).map(function(_ref2){var _ref3=slicedToArray_slicedToArray(_ref2,2),id=_ref3[0],content=_ref3[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(HidableElement,{hidden:id!==cacheId,cacheId:id,children:content},id);});return/*#__PURE__*/(0,jsx_runtime.jsx)(react.Fragment,{children:children});}/**
 * Element whose content can be hidden but which is not removed from the DOM.
 */var HidableElement=/*#__PURE__*/react.memo(function HidableElement(_ref4){var hidden=_ref4.hidden,cacheId=_ref4.cacheId,children=_ref4.children;var dispatch=useAppDispatch();react.useLayoutEffect(function(){if(!hidden){dispatch(navActions.setPageLoadingStatus("rendered"));}},[hidden,dispatch]);return/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"component-cache ".concat(hidden?"hidden":""),id:"component-cache-".concat(cacheId),"aria-hidden":hidden,style:{display:hidden?"none":"block"},children:/*#__PURE__*/(0,jsx_runtime.jsx)(StaticChildren,{children:children})});});/**
 * A component which always reports to React that it does not need to be rerendered.
 * This should generally not be used, but can give a performance boost.
 */var StaticChildren=/*#__PURE__*/react.memo(function StaticChildren(_ref5){var children=_ref5.children;return/*#__PURE__*/(0,jsx_runtime.jsx)(react.Fragment,{children:children});},function(){return true;});
;// CONCATENATED MODULE: ./src/page-init.ts
var initInfo={bannerContent:null,currentPageContent:null,latexPreamble:null};function extractBannerContent(){var elm=document.querySelector(".ptx-banner");if(!elm){throw new Error("Cannot find banner content");}// Strip away un-needed container divs.
// XXX This code should be removed when the new HTML structure is finalized 2022-02-15
var innerElm=elm.querySelector(".container");if(innerElm){elm=innerElm;}return elm.innerHTML;}function extractCurrentPageContent(){var elm=document.querySelector(".ptx-content");if(!elm){throw new Error("Cannot find current page content");}return elm.innerHTML;}function extractLatexPreamble(){var elm=document.querySelector("#latex-macros");if(!elm){throw new Error("Cannot find latex macros");}return elm.textContent;}/**
 * Extract needed information from the current page that may be lost
 * after the page is rendered (because elements may be replaced). This function is safe
 * to call multiple times. Info will only be extracted once.
 */function extractInitInfo(){if(initInfo.bannerContent===null){initInfo.bannerContent=extractBannerContent();}if(initInfo.currentPageContent===null){initInfo.currentPageContent=extractCurrentPageContent();}if(initInfo.latexPreamble===null){initInfo.latexPreamble=extractLatexPreamble();}}
;// CONCATENATED MODULE: ./src/utils/html-manipulation/hast-from-string-native.ts
function strToFrag(html){var template=document.createElement("template");template.innerHTML=html;return template.content;}/**
 * Use the native DOM parser to parse the dom into a `hast` AST. This
 * is orders of magnitude faster than using `rehype` (which uses the parser5
 * html parser).
 */var hastFromStringNative=function hastFromStringNative(){var parser=function parser(str){var dom=strToFrag(str);return fromDom(dom);};Object.assign(this,{Parser:parser});};
// EXTERNAL MODULE: ./node_modules/github-slugger/index.js
var github_slugger = __webpack_require__(6249);
var github_slugger_default = /*#__PURE__*/__webpack_require__.n(github_slugger);
;// CONCATENATED MODULE: ./src/utils/html-manipulation/hast-dom.ts
/**
 * Make a map from elements to their parent so we can do efficient lookups.
 * If an existing `parentMap` is passed, it will be added to.
 */function makeParentMap(ast){var parentMap=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new WeakMap();function mapChildren(parent){var _iterator=_createForOfIteratorHelper(parent.children),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var elm=_step.value;if(elm.type==="element"){parentMap.set(elm,parent);mapChildren(elm);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}mapChildren(ast);return parentMap;}var HastDom=/*#__PURE__*/function(){function HastDom(ast,existingIds){var _this=this;_classCallCheck(this,HastDom);this.parentMap=void 0;this.ast=void 0;this.slugger=void 0;this.sluggerInitialized=void 0;this.ast=ast;this.parentMap=makeParentMap(ast);this.slugger=new (github_slugger_default())();this.sluggerInitialized=false;if(existingIds){// Inserting existing IDs doesn't count as initializing, so we
// don't set `sluggerInitialized=true`.
existingIds.forEach(function(id){return _this.slugger.slug(id);});}}/**
     * Generate a globally-unique html id. `prefix` can be any string;
     * invalid characters are always turned into `"-"`.
     */_createClass(HastDom,[{key:"uniqueSlug",value:function uniqueSlug(){var prefix=arguments.length>0&&arguments[0]!==undefined?arguments[0]:"ident";if(!this.sluggerInitialized){this.sluggerInitialized=true;var _iterator2=_createForOfIteratorHelper(selectAll("[id]",this.ast)),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _elm$properties;var elm=_step2.value;var id=(_elm$properties=elm.properties)===null||_elm$properties===void 0?void 0:_elm$properties.id;if(typeof id==="string"){this.slugger.slug(id,true);}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}return this.slugger.slug(prefix);}/**
     * Wrapper around `hast-util-select` `select` function.
     */},{key:"querySelector",value:function querySelector(selector){return hast_util_select_select(selector,this.ast);}/**
     * Wrapper around `hast-util-select` `selectAll` function.
     */},{key:"querySelectorAll",value:function querySelectorAll(selector){return selectAll(selector,this.ast);}/**
     * Return the parent of `elm`.
     */},{key:"parentOf",value:function parentOf(elm){return this.parentMap.get(elm);}/**
     * Returns an array of all parent nodes. The array starts
     * with the immediate parent and ends with the "highest up"
     * parent.
     */},{key:"allParentsOf",value:function allParentsOf(elm){var ret=[];var parent=this.parentOf(elm);while(parent){ret.push(parent);if(parent.type!=="element"){break;}parent=this.parentOf(parent);}return ret;}/**
     * Inserts `elmToInsert` immediately after `target` in the HAST tree.
     */},{key:"insertAfter",value:function insertAfter(elmToInsert,target){var parent=this.parentMap.get(target);if(!parent){throw new Error("Cannot find parent of target element");}// Remove from current position (if any)
var elmToInsertParent=this.parentMap.get(elmToInsert);if(elmToInsertParent){elmToInsertParent.children=elmToInsertParent.children.filter(function(elm){return elm!==elmToInsert;});}else{// If this element doesn't exist in the parent map, it's children
// won't either. We need to add them so they don't get lost.
makeParentMap(elmToInsert,this.parentMap);}// Insert into the child list
parent.children=parent.children.flatMap(function(elm){if(elm===target){return[elm,elmToInsert];}return elm;});this.parentMap.set(elmToInsert,parent);}/**
     * Remove `elmToRemove` from the tree.
     *
     * Returns `true`/`false` depending on whether something was removed.
     */},{key:"remove",value:function remove(elmToRemove){var parent=this.parentOf(elmToRemove);if(!parent){return false;}var i=parent.children.indexOf(elmToRemove);if(i<0){throw new Error("Cannot find element in `parent.children`");}parent.children.splice(i,1);this.parentMap.delete(elmToRemove);return true;}/**
     * Returns whether the element is currently inside a table.
     */},{key:"insideTable",value:function insideTable(elm){return this.allParentsOf(elm).some(function(x){return x.type==="element"&&x.tagName==="table";});}/**
     * Get all the type="element" leaves of the element `elm`. `elm`
     * does not need to be inserted into the tree.
     */},{key:"getElementLeaves",value:function getElementLeaves(elm){var ret=[];if(elm.children.length===0){return[elm];}var _iterator3=_createForOfIteratorHelper(elm.children),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var child=_step3.value;if(child.type!=="element"){continue;}ret=ret.concat(this.getElementLeaves(child));}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}return ret;}/**
     * Retrieve the value of the specified attribute as a string.
     * HAST has complex rules for whether a specific property is a string,
     * list, or object. This function simplifies attribute retrieval.
     */},{key:"getAttribute",value:function getAttribute(node,attrName){var _attrs$info$property;if(attrName==="style"){return(node.properties||{style:{}})["style"];}// HAST makes a distinction between "attributes" and "properties".
// The HTML attributes (e.g., `data-for-xxx`) are mapped to camelCase
// properties (e.g. `dataForXxx`). The `find` utility maps between these.
var info=find(property_information_html,attrName);var attrs={};var props=node.properties||{};addAttribute(attrs,info.property,props[info.property],{schema:property_information_html,key:0,prefix:""},node.tagName);// @ts-ignore
return(_attrs$info$property=attrs[info.property])!==null&&_attrs$info$property!==void 0?_attrs$info$property:props[info.property];}}]);return HastDom;}();
;// CONCATENATED MODULE: ./node_modules/property-information/lib/hast-to-react.js
var hastToReact = {
  classId: 'classID',
  dataType: 'datatype',
  itemId: 'itemID',
  strokeDashArray: 'strokeDasharray',
  strokeDashOffset: 'strokeDashoffset',
  strokeLineCap: 'strokeLinecap',
  strokeLineJoin: 'strokeLinejoin',
  strokeMiterLimit: 'strokeMiterlimit',
  typeOf: 'typeof',
  xLinkActuate: 'xlinkActuate',
  xLinkArcRole: 'xlinkArcrole',
  xLinkHref: 'xlinkHref',
  xLinkRole: 'xlinkRole',
  xLinkShow: 'xlinkShow',
  xLinkTitle: 'xlinkTitle',
  xLinkType: 'xlinkType',
  xmlnsXLink: 'xmlnsXlink'
};
// EXTERNAL MODULE: ./node_modules/style-to-object/index.js
var style_to_object = __webpack_require__(6426);
var style_to_object_default = /*#__PURE__*/__webpack_require__.n(style_to_object);
;// CONCATENATED MODULE: ./src/utils/html-manipulation/hast-react.ts
// No types for hast-util-table-cell-style, so we tell TS to ignore.
// @ts-ignore
var toReact=hastToReact;var tableElements=new Set(["table","thead","tbody","tfoot","tr","th","td"]);/**
 * A version of `rehype-react` that allows an `html-react-parser`-style interface.
 *
 * `replacers` is a list of `ReplacerFunc` functions. A `ReplacerFunc` is called on each
 * element. If `ReplacerFunc` returns a react component, that component is used. If
 * `undefined` is returned, a the HTML node is converted naively into a react element
 * and the process continues to recurse.
 *
 */var hastReactTransformer=function hastReactTransformer(options){/**
     * Do the actual work of converting a node into a ReactElement.
     */function h(node,key,file){// We first test every replacer function to see if it constructed an element.
// If it did, we use that element and short-circuit any further computations.
var _iterator=_createForOfIteratorHelper(options.replacers||[]),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var replacer=_step.value;if(typeof replacer!=="function"){throw new Error("replacer must be a function");}var hastDom=file.data.hastDom;if(!(hastDom instanceof HastDom)){throw new Error("Expected HastDom object but found \"".concat(hastDom,"\""));}var result=replacer(node,function(n){return Array.isArray(n)?n.flatMap(function(n,i){return process(n,i,file);}):process(n,0,file);},{hastDom:hastDom,currentPageId:file.data.currentPageId||""});if(typeof result!=="undefined"){// We need to make sure that we have a key, since we might be in the middle of
// a list of children.
return[/*#__PURE__*/react.cloneElement(result,{key:result.key||key})];}}// No replacer applied, so we want to turn this node into a regular react object.
}catch(err){_iterator.e(err);}finally{_iterator.f();}var tagName=node.tagName;var origProps=node.properties||{};var props={};Object.entries(origProps).forEach(function(_ref){var _ref2=slicedToArray_slicedToArray(_ref,2),propName=_ref2[0],val=_ref2[1];addAttribute(props,propName,val,{schema:property_information_html,key:key||0,prefix:"h-"},tagName);});// Make sure that every element has a unique key; Otherwise React will complain.
props.key="h-".concat(key);// Currently, a warning is triggered by react for *any* white space in
// tables.
// So we remove the pretty lines for now.
// See: <https://github.com/facebook/react/pull/7081>.
// See: <https://github.com/facebook/react/pull/7515>.
// See: <https://github.com/remarkjs/remark-react/issues/64>.
var children=node.children;if(children&&tableElements.has(tagName)){children=children.filter(function(child){return!whitespace(child);});}// React complains if elements that aren't supposed to have children get passed children (e.g., <br />).
// React counts even empty lists as children, so we need to special case this behavior.
if(children.length===0){return[/*#__PURE__*/react.createElement(tagName,props)];}return[/*#__PURE__*/react.createElement(tagName,props,children.flatMap(function(n,i){return process(n,i,file);}))];}function process(node){var key=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var file=arguments.length>2?arguments[2]:undefined;if(node.type==="comment"||node.type==="doctype"){return[];}if(node.type==="text"){return[node.value];}if(node.type==="root"){return[/*#__PURE__*/react.createElement(react.Fragment,{key:key},node.children.flatMap(function(n,i){return process(n,i,file);}))];}if(node.type==="element"){return h(node,key,file);}console.warn("Cannot process node \"".concat(JSON.stringify(node),"\""));return[];}var compiler=function compiler(node,file){return process(node,0,file);};Object.assign(this,{Compiler:compiler});};/**
 * Adds `[prop]: value` to `attributes` with appropriate name mangling. For example,
 * attributes in camel case are converted to kebab-case and style attributes/className lists are
 * converted to strings appropriately.
 *
 * Modified from https://github.com/syntax-tree/hast-to-hyperscript
 * MIT License
 */function addAttribute(attributes,prop,value,ctx,name){var info=find(ctx.schema,prop);// Ignore nullish and `NaN` values.
// Ignore `false` and falsey known booleans for hyperlike DSLs.
if(value===undefined||value===null||typeof value==="number"&&Number.isNaN(value)){return;}if(Array.isArray(value)){// Accept `array`.
// Most props are space-separated.
value=info.commaSeparated?comma_separated_tokens_stringify(value):space_separated_tokens_stringify(value);}// accept `style` as object.
if(info.property==="style"&&typeof value==="string"){value=parseStyle(value,name);}if(info.space){attributes[toReact[info.property]||info.property]=value;}else{attributes[info.attribute]=value;}}/**
 * `parseStyle` function from https://github.com/syntax-tree/hast-to-hyperscript/
 * MIT License.
 */function parseStyle(value,tagName){var result={};try{style_to_object_default()(value,function(name,value){if(name.slice(0,4)==="-ms-")name="ms-"+name.slice(4);result[name.replace(/-([a-z])/g,/**
                     * @param {string} _
                     * @param {string} $1
                     * @returns {string}
                     */function(_,$1){return $1.toUpperCase();})]=value;});}catch(e){var error=e;error.message=tagName+"[style]"+error.message.slice("undefined".length);throw error;}return result;}
;// CONCATENATED MODULE: ./node_modules/hast-util-from-selector/index.js
/**
 * @typedef {import('css-selector-parser').RuleAttr} CssRuleAttr
 * @typedef {import('css-selector-parser').RulePseudo} CssRulePseudo
 * @typedef {import('css-selector-parser').Selectors} CssSelectors
 * @typedef {import('css-selector-parser').RuleSet} CssRuleSet
 * @typedef {import('css-selector-parser').Rule} CssRule
 *
 * @typedef {import('hast').Element} HastElement
 * @typedef {import('hast').Properties} HastProperties
 *
 * @typedef {'html'|'svg'} Space
 *
 * @typedef Options
 * @property {Space} [space]
 *
 * @typedef Context
 * @property {Space} space
 * @property {boolean} root
 */



var hast_util_from_selector_compile = zwitch('type', {
  handlers: {
    selectors: hast_util_from_selector_selectors,
    ruleSet: hast_util_from_selector_ruleSet,
    rule: hast_util_from_selector_rule
  }
});
var hast_util_from_selector_parser = new css_selector_parser_lib/* CssSelectorParser */.N();
hast_util_from_selector_parser.registerNestingOperators('>', '+', '~'); // Register these so we can throw nicer errors.

hast_util_from_selector_parser.registerAttrEqualityMods('~', '|', '^', '$', '*');
/**
 * @param {string} [selector='']
 * @param {Space|Options} [space='html']
 * @returns {HastElement}
 */

function fromSelector(selector, space) {
  /** @type {Context} */
  var config = {
    space: space && typeof space === 'object' && space.space || typeof space === 'string' && space || 'html',
    root: true
  };
  return (// @ts-ignore Assume one element is returned.
    hast_util_from_selector_compile(hast_util_from_selector_parser.parse(selector || ''), config) || build(config.space)('')
  );
}
/**
 * @param {CssSelectors} _
 */

function hast_util_from_selector_selectors(_) {
  throw new Error('Cannot handle selector list');
}
/**
 * @param {CssRuleSet} query
 * @param {Context} config
 * @returns {HastElement|Array.<HastElement>}
 */


function hast_util_from_selector_ruleSet(query, config) {
  // @ts-ignore Assume one or more elements is returned.
  return hast_util_from_selector_compile(query.rule, config);
}
/**
 * @param {CssRule} query
 * @param {Context} config
 * @returns {HastElement|Array.<HastElement>}
 */


function hast_util_from_selector_rule(query, config) {
  var parentSpace = config.space;
  var name = query.tagName === '*' ? '' : query.tagName || '';
  var space = parentSpace === 'html' && name === 'svg' ? 'svg' : parentSpace;
  /** @type {boolean} */

  var sibling;
  /** @type {HastElement} */

  var node;

  if (query.rule) {
    sibling = query.rule.nestingOperator === '+' || query.rule.nestingOperator === '~';

    if (sibling && config.root) {
      throw new Error('Cannot handle sibling combinator `' + query.rule.nestingOperator + '` at root');
    }
  } // @ts-ignore Assume one or more elements is returned.


  node = build(space)(name, Object.assign({
    id: query.id,
    className: query.classNames
  }, pseudosToHast(query.pseudos || []), attrsToHast(query.attrs || [])), !query.rule || sibling ? [] : hast_util_from_selector_compile(query.rule, {
    space: space
  })); // @ts-ignore Assume one or more elements is returned.

  return sibling ? [node, hast_util_from_selector_compile(query.rule, {
    space: parentSpace
  })] : node;
}
/**
 * @param {Array.<CssRulePseudo>} pseudos
 * @returns {HastProperties}
 */


function pseudosToHast(pseudos) {
  var pseudo = pseudos[0];

  if (pseudo) {
    if (pseudo.name) {
      throw new Error('Cannot handle pseudo-selector `' + pseudo.name + '`');
    }

    throw new Error('Cannot handle pseudo-element or empty pseudo-class');
  }

  return {};
}
/**
 * @param {Array.<CssRuleAttr>} attrs
 * @returns {HastProperties}
 */


function attrsToHast(attrs) {
  var index = -1;
  /** @type {HastProperties} */

  var props = {};
  /** @type {CssRuleAttr} */

  var attr;

  while (++index < attrs.length) {
    attr = attrs[index];

    if ('operator' in attr) {
      if (attr.operator === '=') {
        props[attr.name] = attr.value;
      } else {
        throw new Error('Cannot handle attribute equality modifier `' + attr.operator + '`');
      }
    } else {
      props[attr.name] = true;
    }
  }

  return props;
}
/**
 * @param {Space} space
 * @returns {typeof h}
 */


function build(space) {
  return space === 'html' ? html_h : svg_s;
}
;// CONCATENATED MODULE: ./src/utils/html-manipulation/place-knowls.ts
/**
 * Place the `knowlContentNode` in the correct position in hastDom based on
 * the position of `knowlContentNode`.
 */function positionKnowlContent(knowlTriggerNode,knowlContentNode,hastDom){var parent=hastDom.parentOf(knowlTriggerNode);if((parent===null||parent===void 0?void 0:parent.type)==="element"){// If the parent is an article, we insert the knowl content right
// after the knowl button.
if(parent.tagName==="article"){hastDom.insertAfter(knowlContentNode,knowlTriggerNode);}// Inserting a knowl into a table
else if(hastDom.insideTable(knowlTriggerNode)){var parents=hastDom.allParentsOf(knowlTriggerNode);var surroundingTr=parents.find(function(elm){return elm.type==="element"&&elm.tagName==="tr";});if(!surroundingTr||surroundingTr.type!=="element"){throw new Error("Knowl contained in a table, but could not find a surrounding <tr>");}var numCols=surroundingTr.children.filter(function(elm){return elm.type==="element"&&elm.tagName==="td";}).length;// We need to create a table row that spans the width of the table so the content isn't squished.
var surround=fromSelector("tr.knowl-container-top td.knowl-td[colspan=".concat(numCols,"]"));var leaf=hastDom.getElementLeaves(surround)[0];if(!leaf){throw new Error("Error when find leaf to insert into.");}// The content node goes inside our newly-created row.
leaf.children.push(knowlContentNode);hastDom.insertAfter(surround,surroundingTr);}// In all other cases, we insert right after the knowl button's parent.
else{hastDom.insertAfter(knowlContentNode,hastDom.parentOf(knowlTriggerNode)||knowlTriggerNode);}}}/**
 * `unifiedjs` plugin that inputs a `hast` AST and inserts/moves the knowl
 * content areas where needed. This plugin must be called in conjunction with `rehypeParse`
 *
 * @returns
 */var rehypeInsertKnowlExpandStubs=function rehypeInsertKnowlExpandStubs(){return function(ast,file){var hastDom=new HastDom(ast,file.data.existingIds);file.data.hastDom=hastDom;var knowlContainersMap=new Map();/**
             * Get the container element corresponding to the knowl trigger element `elm`.
             */function getKnowlContainer(elm){// For dynamically-loaded knowls, the interaction behavior is complicated
// (e.g., the order the knowls are displayed may change based on user interaction).
// So we create a master parent container that contains several peer children.
// This container is reused.
var parent=hastDom.parentOf(elm);var masterContainer=knowlContainersMap.get(parent);if(!masterContainer){masterContainer=fromSelector("div.knowl-group-container");knowlContainersMap.set(parent,masterContainer);positionKnowlContent(elm,masterContainer,hastDom);}return masterContainer;}// If the knowl has a refid, find it's hidden content and move it to the correct place.
var _iterator=_createForOfIteratorHelper(hastDom.querySelectorAll("[data-knowl][data-refid]")),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var elm=_step.value;var parent=hastDom.parentOf(elm);if((parent===null||parent===void 0?void 0:parent.type)==="element"){var _elm$properties,_elm$properties2;var knowlContent=hast_util_select_select("#".concat((_elm$properties=elm.properties)===null||_elm$properties===void 0?void 0:_elm$properties.dataRefid),ast);if(!knowlContent){// We may have failed to find the knowl's content because
// the content is part of a nested knowl. In that case, the content
// may have been turned into a blob URL and removed from the tree.
// Since we don't control the traversal order, we may still run across the
// "knowl trigger". It is safe to do nothing and continue in this case.
continue;}// Preloaded knowl content and fetched knowl content are treated identically
// in terms of behavior, so we combine both of them. However, we need
// to create synthetic URLs for the data of the preloaded content.
var html=toHtml(knowlContent.children);var blobUrl=URL.createObjectURL(new Blob([html],{type:"text/html"}));hastDom.remove(knowlContent);var id=((_elm$properties2=elm.properties)===null||_elm$properties2===void 0?void 0:_elm$properties2.dataRefid)||"";elm.properties=Object.assign(elm.properties||{},{dataKnowlContainerId:id});var container=fromSelector("div");container.properties=Object.assign(container.properties||{},{dataForKnowlUrl:blobUrl,dataIsPreloadedKnowl:true,id:id});var masterContainer=getKnowlContainer(elm);masterContainer.children.push(container);}}// If the knowl does not have a refid, then its content is fetched from a URL.
// We pre-insert a container element for this knowl so that the react code
// Doesn't have to do wild things to the DOM.
}catch(err){_iterator.e(err);}finally{_iterator.f();}var _iterator2=_createForOfIteratorHelper(hastDom.querySelectorAll("[data-knowl]:not([data-refid])")),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _elm$properties3;var _elm=_step2.value;var url=""+(((_elm$properties3=_elm.properties)===null||_elm$properties3===void 0?void 0:_elm$properties3.dataKnowl)||"");if(!url){console.warn("Could not find data url for ".concat(toHtml(_elm)));}var _id=hastDom.uniqueSlug("knowl-ref-".concat(url));_elm.properties=Object.assign(_elm.properties||{},{dataKnowlContainerId:_id});var _container=fromSelector("div");_container.properties=Object.assign(_container.properties||{},{dataForKnowlUrl:url,id:_id});var _masterContainer=getKnowlContainer(_elm);_masterContainer.children.push(_container);}// Handle Math Knowls as a special case
}catch(err){_iterator2.e(err);}finally{_iterator2.f();}var _iterator3=_createForOfIteratorHelper(hastDom.querySelectorAll("[data-contains-math-knowls]")),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _elm2$properties;var _elm2=_step3.value;if(!_elm2.properties){throw new Error("Missing `properties` attribute");}var rawUrls=""+(((_elm2$properties=_elm2.properties)===null||_elm2$properties===void 0?void 0:_elm2$properties.dataContainsMathKnowls)||"");if(!rawUrls){console.warn("Could not find data url for ".concat(toHtml(_elm2)));}var urls=rawUrls.split(/\s/).filter(function(s){return s;});var dataContainsMathKnowlIds=_elm2.properties.dataContainsMathKnowlIds=[];var _masterContainer2=getKnowlContainer(_elm2);var _iterator4=_createForOfIteratorHelper(urls),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var _url=_step4.value;var _id2=hastDom.uniqueSlug("knowl-ref-".concat(_url));dataContainsMathKnowlIds.push({id:_id2,url:_url});var _container2=fromSelector("div");_container2.properties=Object.assign(_container2.properties||{},{dataForKnowlUrl:_url,id:_id2});_masterContainer2.children.push(_container2);}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}};};
;// CONCATENATED MODULE: ./src/utils/html-manipulation/place-permalinks.ts
/**
 * Returns a text-only description of the Hast Element.
 */function getNodeDescription(elm,hastDom){if(elm.tagName==="p"){return"Paragraph";}if(elm.tagName.startsWith("h")){return toText(elm);}if(elm.tagName==="section"||elm.tagName==="article"){var header=hast_util_select_select(".heading",elm);if(header){return toText(header);}}return"";}/**
 * `unifiedjs` plugin that injects Permalink anchors where needed.
 * This plugin must be called in conjunction with `rehypeParse`
 */var rehypeInsertPermalinks=function rehypeInsertPermalinks(){return function(ast,file){file.data.hastDom=file.data.hastDom||new HastDom(ast,file.data.existingIds);var hastDom=file.data.hastDom;// Full list of elements that get permalinks.
var _iterator=_createForOfIteratorHelper(hastDom.querySelectorAll(["section:not(.introduction)[id]","section > .para[id]","section article[id]","section > figure.table-like[id]",//"section > figure.figure-like > figcaption[id]",
"section .exercisegroup article[id]","section .exercisegroup[id]","section article.exercise[id]","section article.paragraphs > .para[id]","section article.paragraphs > figure.table-like[id]","section article.paragraphs > figure.figure-like[id]"].join(", "))),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var elm=_step.value;var id=hastDom.getAttribute(elm,"id")||"";if(!id){throw new Error("Permalink element has no id: ".concat(toHtml(elm)));}var permalink=fromSelector("a[class=\"permalink\"][href=\"#".concat(id,"\"]"));// In the appropriate font, this is a "link" icon
permalink.children.push({type:"text",value:"🔗"});Object.assign(permalink.properties||{},{title:getNodeDescription(elm,hastDom)});// For section/article we actually want the permalink to be inside
// the item's .header instead of a direct child
if(elm.tagName==="section"||elm.tagName==="article"){var header=hast_util_select_select(".heading",elm);if(header&&// We cannot place an anchor inside another anchor, so make sure we don't
!hastDom.allParentsOf(header).some(function(elm){return elm.type==="element"&&elm.tagName==="a";})){header.children.unshift(permalink);continue;}}// Prepend the permalink. React will take care of placing/etc.
elm.children.unshift(permalink);}}catch(err){_iterator.e(err);}finally{_iterator.f();}};};
;// CONCATENATED MODULE: ./src/components/asides.tsx
/**
 * A wrapper for an `<aside>` element.
 */function Aside(_ref){var children=_ref.children,id=_ref.id,className=_ref.className;var _React$useState=react.useState(false),_React$useState2=slicedToArray_slicedToArray(_React$useState,2),active=_React$useState2[0],setActive=_React$useState2[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Button,{as:"aside",id:id,className:classnames_default()(className,{front:active}),onClick:function onClick(){setActive(function(state){return!state;});},children:children});}
;// CONCATENATED MODULE: ./src/components/replacers/asides.tsx
/**
 * Replace all `<aside.aside-like>` links with the appropriate React element(s).
 */var replaceAsides=function replaceAsides(node,processContent,_ref){var hastDom=_ref.hastDom;if(node.tagName!=="aside"){return;}var className=hastDom.getAttribute(node,"className");if(className!==null&&className!==void 0&&className.includes("aside-like")){var id=hastDom.getAttribute(node,"id")||"";return/*#__PURE__*/(0,jsx_runtime.jsx)(Aside,{className:className,id:id,children:processContent(node.children)});}};
// EXTERNAL MODULE: ./node_modules/focus-options-polyfill/index.js
var focus_options_polyfill = __webpack_require__(1570);
// EXTERNAL MODULE: ./node_modules/react-use/lib/useEvent.js
var useEvent = __webpack_require__(1042);
// EXTERNAL MODULE: ./node_modules/react-use/lib/useWindowSize.js
var useWindowSize = __webpack_require__(3339);
// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(9388);
;// CONCATENATED MODULE: ./node_modules/react-medium-image-zoom/dist/esm/helpers.js


var toDurationString = function toDurationString(duration) {
  return duration + "ms";
};

var getScale = function getScale(_a) {
  var height = _a.height,
      innerHeight = _a.innerHeight,
      innerWidth = _a.innerWidth,
      width = _a.width,
      zoomMargin = _a.zoomMargin;
  var scaleX = innerWidth / (width + zoomMargin);
  var scaleY = innerHeight / (height + zoomMargin);
  var scale = Math.min(scaleX, scaleY);
  return scale;
};

var getModalContentStyle = function getModalContentStyle(_a) {
  var height = _a.height,
      innerHeight = _a.innerHeight,
      innerWidth = _a.innerWidth,
      isLoaded = _a.isLoaded,
      isUnloading = _a.isUnloading,
      left = _a.left,
      originalTransform = _a.originalTransform,
      top = _a.top,
      transitionDuration = _a.transitionDuration,
      width = _a.width,
      zoomMargin = _a.zoomMargin;
  var transitionDurationString = toDurationString(transitionDuration);

  if (!isLoaded || isUnloading) {
    var initTransform = (0,tslib_es6.__spreadArrays)(["scale(1)", "translate(0, 0)"], originalTransform ? [originalTransform] : []).join(' ');

    return {
      height: height,
      left: left,
      top: top,
      transform: initTransform,
      WebkitTransform: initTransform,
      transitionDuration: transitionDurationString,
      width: width
    };
  } // Get amount to scale item


  var scale = getScale({
    height: height,
    innerWidth: innerWidth,
    innerHeight: innerHeight,
    width: width,
    zoomMargin: zoomMargin
  }); // Get the the coords for center of the viewport

  var viewportX = innerWidth / 2;
  var viewportY = innerHeight / 2; // Get the coords for center of the parent item

  var childCenterX = left + width / 2;
  var childCenterY = top + height / 2; // Get offset amounts for item coords to be centered on screen

  var translateX = (viewportX - childCenterX) / scale;
  var translateY = (viewportY - childCenterY) / scale; // Build transform style, including any original transform

  var transform = (0,tslib_es6.__spreadArrays)(["scale(" + scale + ")", "translate(" + translateX + "px, " + translateY + "px)"], originalTransform ? [originalTransform] : []).join(' ');

  return {
    height: height,
    left: left,
    top: top,
    transform: transform,
    WebkitTransform: transform,
    transitionDuration: transitionDurationString,
    width: width
  };
};

var getModalOverlayStyle = function getModalOverlayStyle(_a) {
  var isLoaded = _a.isLoaded,
      isUnloading = _a.isUnloading,
      overlayBgColorEnd = _a.overlayBgColorEnd,
      overlayBgColorStart = _a.overlayBgColorStart,
      transitionDuration = _a.transitionDuration,
      zoomZindex = _a.zoomZindex;
  var style = {
    backgroundColor: overlayBgColorStart,
    transitionDuration: toDurationString(transitionDuration),
    zIndex: zoomZindex
  };

  if (isLoaded && !isUnloading) {
    style.backgroundColor = overlayBgColorEnd;
  }

  return style;
};

var pseudoParentEl = {
  getBoundingClientRect: function getBoundingClientRect() {
    return {
      height: 0,
      left: 0,
      top: 0,
      width: 0
    };
  },
  style: {
    transform: null
  }
};

;// CONCATENATED MODULE: ./node_modules/react-medium-image-zoom/dist/esm/index.js










var UncontrolledActivated = function UncontrolledActivated(_a) {
  var children = _a.children,
      _b = _a.closeText,
      closeText = _b === void 0 ? 'Unzoom Image' : _b,
      onUnload = _a.onUnload,
      onLoad = _a.onLoad,
      _c = _a.overlayBgColorEnd,
      overlayBgColorEnd = _c === void 0 ? 'rgba(255, 255, 255, 0.95)' : _c,
      _d = _a.overlayBgColorStart,
      overlayBgColorStart = _d === void 0 ? 'rgba(255, 255, 255, 0)' : _d,
      parentRef = _a.parentRef,
      _e = _a.portalEl,
      portalEl = _e === void 0 ? document.body : _e,
      _f = _a.scrollableEl,
      scrollableEl = _f === void 0 ? window : _f,
      _g = _a.transitionDuration,
      transitionDuration = _g === void 0 ? 300 : _g,
      _h = _a.zoomMargin,
      zoomMargin = _h === void 0 ? 0 : _h,
      _j = _a.zoomZindex,
      zoomZindex = _j === void 0 ? 2147483647 : _j;
  var btnRef = (0,react.useRef)(null);

  var _k = (0,react.useState)(0),
      forceUpdate = _k[1];

  var _l = (0,react.useState)(false),
      isLoaded = _l[0],
      setIsLoaded = _l[1];

  var _m = (0,react.useState)(false),
      isUnloading = _m[0],
      setIsUnloading = _m[1];

  var _o = (0,useWindowSize/* default */.Z)(),
      innerWidth = _o.width,
      innerHeight = _o.height; // on click, begin unloading


  var handleClick = (0,react.useCallback)(function (e) {
    e.preventDefault();
    setIsUnloading(true);
  }, []); // on escape, begin unloading

  var handleKeyDown = (0,react.useCallback)(function (e) {
    if (e.key === 'Escape' || e.keyCode === 27) {
      e.stopPropagation();
      setIsUnloading(true);
    }
  }, []);
  var handleScroll = (0,react.useCallback)(function () {
    forceUpdate(function (n) {
      return n + 1;
    });

    if (!isUnloading) {
      setIsUnloading(true);
    }
  }, [isUnloading]); // listen for keydown on the document

  (0,useEvent/* default */.Z)('keydown', handleKeyDown, document); // listen for scroll and close

  (0,useEvent/* default */.Z)('scroll', handleScroll, scrollableEl); // set loaded on mount and focus

  (0,react.useEffect)(function () {
    setIsLoaded(true);
    onLoad();

    if (btnRef.current) {
      btnRef.current.focus({
        preventScroll: true
      });
    }
  }, [onLoad]); // if unloading, tell parent that we're all done here after Nms

  (0,react.useEffect)(function () {
    var unloadTimeout = isUnloading ? setTimeout(onUnload, transitionDuration) : null;
    return function () {
      if (unloadTimeout) {
        clearTimeout(unloadTimeout);
      }
    };
  }, [isUnloading, onUnload, transitionDuration]); // use parent element or fake one if it's not yet loaded

  var parentEl = parentRef.current || pseudoParentEl; // get parent item's dimensions

  var _p = parentEl.getBoundingClientRect(),
      height = _p.height,
      left = _p.left,
      top = _p.top,
      width = _p.width;

  var overlayStyle = getModalOverlayStyle({
    isLoaded: isLoaded,
    isUnloading: isUnloading,
    overlayBgColorEnd: overlayBgColorEnd,
    overlayBgColorStart: overlayBgColorStart,
    transitionDuration: transitionDuration,
    zoomZindex: zoomZindex
  });
  var contentStyle = getModalContentStyle({
    height: height,
    isLoaded: isLoaded,
    innerHeight: innerHeight,
    innerWidth: innerWidth,
    isUnloading: isUnloading,
    left: left,
    originalTransform: parentEl.style.transform,
    top: top,
    transitionDuration: transitionDuration,
    width: width,
    zoomMargin: zoomMargin
  });
  return (0,react_dom.createPortal)(react.createElement("div", {
    "aria-modal": true,
    "data-rmiz-overlay": true,
    role: "dialog",
    style: overlayStyle
  }, react.createElement("div", {
    "data-rmiz-modal-content": true,
    style: contentStyle
  }, children), react.createElement("button", {
    "aria-label": closeText,
    "data-rmiz-btn-close": true,
    onClick: handleClick,
    ref: btnRef
  })), portalEl);
};

var UncontrolledActivated$1 = (0,react.memo)(UncontrolledActivated);

var Uncontrolled = function Uncontrolled(_a) {
  var children = _a.children,
      _b = _a.closeText,
      closeText = _b === void 0 ? 'Unzoom image' : _b,
      _c = _a.overlayBgColorEnd,
      overlayBgColorEnd = _c === void 0 ? 'rgba(255, 255, 255, 0.95)' : _c,
      _d = _a.overlayBgColorStart,
      overlayBgColorStart = _d === void 0 ? 'rgba(255, 255, 255, 0)' : _d,
      portalEl = _a.portalEl,
      _e = _a.openText,
      openText = _e === void 0 ? 'Zoom image' : _e,
      scrollableEl = _a.scrollableEl,
      _f = _a.transitionDuration,
      transitionDuration = _f === void 0 ? 300 : _f,
      _g = _a.wrapElement,
      WrapElement = _g === void 0 ? 'div' : _g,
      wrapStyle = _a.wrapStyle,
      _h = _a.zoomMargin,
      zoomMargin = _h === void 0 ? 0 : _h,
      _j = _a.zoomZindex,
      zoomZindex = _j === void 0 ? 2147483647 : _j;

  var _k = (0,react.useState)(false),
      isActive = _k[0],
      setIsActive = _k[1];

  var _l = (0,react.useState)(false),
      isChildLoaded = _l[0],
      setIsChildLoaded = _l[1];

  var wrapRef = (0,react.useRef)(null);
  var btnRef = (0,react.useRef)(null);
  var handleClickTrigger = (0,react.useCallback)(function (e) {
    if (!isActive) {
      e.preventDefault();
      setIsActive(true);
    }
  }, [isActive]);
  var handleChildLoad = (0,react.useCallback)(function () {
    setIsChildLoaded(true);
  }, []);
  var handleChildUnload = (0,react.useCallback)(function () {
    setIsActive(false);
    setIsChildLoaded(false);

    if (btnRef.current) {
      btnRef.current.focus({
        preventScroll: true
      });
    }
  }, []);
  var isExpanded = isActive && isChildLoaded;
  var wrapType = isExpanded ? 'hidden' : 'visible';
  return react.createElement(react.StrictMode, null, react.createElement(WrapElement, {
    "data-rmiz-wrap": wrapType,
    ref: wrapRef,
    style: wrapStyle
  }, children, react.createElement("button", {
    "aria-label": openText,
    "data-rmiz-btn-open": true,
    onClick: handleClickTrigger,
    ref: btnRef
  }), typeof window !== 'undefined' && isActive && react.createElement(UncontrolledActivated$1, {
    closeText: closeText,
    onLoad: handleChildLoad,
    onUnload: handleChildUnload,
    overlayBgColorEnd: overlayBgColorEnd,
    overlayBgColorStart: overlayBgColorStart,
    parentRef: wrapRef,
    portalEl: portalEl,
    scrollableEl: scrollableEl,
    transitionDuration: transitionDuration,
    zoomMargin: zoomMargin,
    zoomZindex: zoomZindex
  }, children)));
};

var Uncontrolled$1 = (0,react.memo)(Uncontrolled);
/* harmony default export */ var esm = (Uncontrolled$1);
;// CONCATENATED MODULE: ./node_modules/react-medium-image-zoom/dist/styles.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var styles = ({});
;// CONCATENATED MODULE: ./src/components/images/zoomable-image.tsx
var zoomable_image_excluded=["className","alt"];/**
 * Wraps an `<img />` tag in a `<Zoom />` element. All props
 * are passed on to the `img`.
 */function ZoomableImage(_ref){var className=_ref.className,alt=_ref.alt,rest=_objectWithoutProperties(_ref,zoomable_image_excluded);// Note: the `width` on the `img` tag must be set for `Zoom` to work.
return/*#__PURE__*/(0,jsx_runtime.jsx)(react.Fragment,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(esm,{children:/*#__PURE__*/(0,jsx_runtime.jsx)("img",_objectSpread2(_objectSpread2({alt:alt,className:className},rest),{},{width:"100%"}))})});}
;// CONCATENATED MODULE: ./src/components/replacers/images.tsx
/**
 * Replace all internal links with `InternalAnchor` tags.
 */var replaceImages=function replaceImages(node,processContent,_ref){var hastDom=_ref.hastDom;if(node.tagName!=="img"){return;}// If an image is contained in an anchor, we don't replace it.
var parents=hastDom.allParentsOf(node);if(parents.some(function(elm){return elm.type==="element"&&elm.tagName==="a";})){return;}var className=hastDom.getAttribute(node,"className");var src=hastDom.getAttribute(node,"src");var alt=hastDom.getAttribute(node,"alt");return/*#__PURE__*/(0,jsx_runtime.jsx)(ZoomableImage,{className:className,src:src,alt:alt});};
;// CONCATENATED MODULE: ./src/features/knowl/knowlSlice.ts
var knowlSlice_initialState={visible:{}};var knowlSlice=createSlice({name:"knowl",initialState:knowlSlice_initialState,// The `reducers` field lets us define reducers and generate associated actions
reducers:{setVisible:function setVisible(state,action){Object.assign(state.visible,action.payload);},closeAll:function closeAll(state){state.visible={};}}});var knowlActions=_objectSpread2({},knowlSlice.actions);var knowlSlice_selfSelector=function selfSelector(state){return state.knowl;};var visibleKnowlsSelector=createDraftSafeSelector(knowlSlice_selfSelector,function(state){return state.visible;});
;// CONCATENATED MODULE: ./src/components/knowl/knowls.tsx
var knowls_excluded=["children","url","containerId","className"],knowls_excluded2=["children","className","refId"];/**
 * Returns the closest ancestor that has the class `className`.
 */function getParentWithClass(elm,className){if(!elm){return null;}var base=elm.parentElement;while(base){if(base.classList.contains(className)){return base;}base=base.parentElement;}return null;}/**
 * Looks for a parent with the `knowl-container-top` class and toggles the class `hidden-content`
 * on that element. If no such parent exists, the function exists.
 */function toggleKnowlContainerTopHiddenValue(knowlContainer,contentVisible){if(knowlContainer){var containerTop=getParentWithClass(knowlContainer,"knowl-container-top");if(containerTop&&contentVisible){containerTop.classList.remove("hidden-content");}else if(containerTop&&!contentVisible){containerTop.classList.add("hidden-content");}}}/**
 * A link that, when pressed, triggers a knowl's content to be displayed. This component
 * isn't responsible for actually displaying the content. That is handled by `KnowlContainer`.
 */function Knowl(_ref){var children=_ref.children,url=_ref.url,containerId=_ref.containerId,className=_ref.className,rest=_objectWithoutProperties(_ref,knowls_excluded);var visibleKnowls=useAppSelector(visibleKnowlsSelector);var contentVisible=visibleKnowls[containerId];var dispatch=useAppDispatch();return/*#__PURE__*/(0,jsx_runtime.jsx)(Button,_objectSpread2(_objectSpread2({as:"a",className:classnames_default()(className,{active:contentVisible})},rest),{},{href:url,onClick:function onClick(e){e.preventDefault();console.log("Knowl clicked",url);dispatch(knowlActions.setVisible(_defineProperty({},containerId,!contentVisible)));},"data-knowl":true,"data-knowl-container-id":containerId,children:children}));}function KnowlContent(_ref2){var show=_ref2.show,url=_ref2.url;var parser=react.useContext(ParserContext);var fetchingRef=react.useRef(false);var _React$useState=react.useState(null),_React$useState2=slicedToArray_slicedToArray(_React$useState,2),fetchedData=_React$useState2[0],setFetchedData=_React$useState2[1];var _React$useState3=react.useState(null),_React$useState4=slicedToArray_slicedToArray(_React$useState3,2),renderedContent=_React$useState4[0],setRenderedContent=_React$useState4[1];react.useEffect(function(){if(show===true&&fetchedData==null&&fetchingRef.current===false){// If we're here, we have not yet fetched the knowl's content.
fetchingRef.current=true;fetch(url).then(/*#__PURE__*/function(){var _ref3=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee(resp){var data;return regenerator_default().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return resp.text();case 2:data=_context.sent;// We only want to store the knowl's content, so we strip
// away the header, etc.
setFetchedData(extractKnowlContent(data).innerHTML);case 4:case"end":return _context.stop();}}},_callee);}));return function(_x){return _ref3.apply(this,arguments);};}()).finally(function(){fetchingRef.current=false;});}},[show,fetchedData,url]);react.useEffect(function(){if(!fetchedData){return;}setRenderedContent(parser.parseString(fetchedData));},[fetchedData,parser]);if(!show){return null;}var body=renderedContent||"Content not yet loaded...";return/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"knowl",children:renderedContent?/*#__PURE__*/(0,jsx_runtime.jsx)(MathJaxRenderer,{children:body}):body});}function PreloadedKnowl(_ref4){var children=_ref4.children,className=_ref4.className,refId=_ref4.refId,rest=_objectWithoutProperties(_ref4,knowls_excluded2);var visibleKnowls=useAppSelector(visibleKnowlsSelector);var contentVisible=visibleKnowls[refId];var dispatch=useAppDispatch();react.useEffect(function(){},[contentVisible,refId]);var activeClass=contentVisible?"active":"";return/*#__PURE__*/(0,jsx_runtime.jsx)(Button,_objectSpread2(_objectSpread2({as:"a",href:"#"},rest),{},{onClick:function onClick(e){e.preventDefault();console.log("Preloaded Knowl clicked",refId);dispatch(knowlActions.setVisible(_defineProperty({},refId,!contentVisible)));},"data-knowl":true,tabIndex:0,className:className?"".concat(className," ").concat(activeClass):activeClass,children:children}));}function PreloadedKnowlContent(_ref5){var children=_ref5.children,id=_ref5.id,className=_ref5.className;var visibleKnowls=useAppSelector(visibleKnowlsSelector);var contentVisible=visibleKnowls[id||""];return/*#__PURE__*/(0,jsx_runtime.jsx)(Accordion,{open:contentVisible,children:// We need to completely suppress the rendering of children here,
// otherwise they will be invisible but still have a tab-index set
// and thus could steal focus.
contentVisible&&/*#__PURE__*/(0,jsx_runtime.jsx)(MathJaxOneTimeRenderer,{children:/*#__PURE__*/(0,jsx_runtime.jsx)("div",{id:id,className:className,children:children})})});}
;// CONCATENATED MODULE: ./src/components/knowl/knowl-container.tsx
/**
 * A container element for the content of several knowls. This container listens
 * for requests to display the knowl's content and then displays it with newly-opened
 * content before previously-opened content.
 */function KnowlContainer(_ref){var knowlData=_ref.knowlData;var visibleKnowls=useAppSelector(visibleKnowlsSelector);var displayOrderRef=react.useRef([]);var _React$useState=react.useState([]),_React$useState2=slicedToArray_slicedToArray(_React$useState,2),displayOrder=_React$useState2[0],setDisplayOrder=_React$useState2[1];var displayed=react.useMemo(function(){// It is possible there are stale ids in `displayOrder`. We make sure to filter them out before displaying anything.
return displayOrder.flatMap(function(id){var item=knowlData.find(function(item){return item.id===id;});return item?[item]:[];});},[knowlData,displayOrder]);// Display order
react.useEffect(function(){var numPreviouslyOrdered=displayOrderRef.current.length;var _iterator=_createForOfIteratorHelper(knowlData),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var info=_step.value;if(visibleKnowls[info.id]&&!displayOrderRef.current.includes(info.id)){// Any newly-opened knowl should display its contents *before*
// any the other knowls. But, once it's been opened, it's position
// stays fixed.
displayOrderRef.current.unshift(info.id);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(displayOrderRef.current.length!==numPreviouslyOrdered){// The display order list can only grow! A new knowl was just displayed,
// so we need to update the display order.
setDisplayOrder(_toConsumableArray(displayOrderRef.current));}},[visibleKnowls,knowlData]);return/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"knowl-group-container",children:displayed.map(function(dat){return/*#__PURE__*/(0,jsx_runtime.jsx)("div",{id:dat.id,"data-for-knowl-url":dat.forKnowlUrl,children:/*#__PURE__*/(0,jsx_runtime.jsx)(Accordion,{open:visibleKnowls[dat.id],children:/*#__PURE__*/(0,jsx_runtime.jsx)(KnowlContent,{show:visibleKnowls[dat.id],url:dat.forKnowlUrl})})},dat.id);})});}
;// CONCATENATED MODULE: ./src/components/replacers/knowls.tsx
/**
 * Replace HAST nodes that should trigger knowls with appropriate React elements.
 */var replaceKnowl=function replaceKnowl(node,processContent,_ref){var hastDom=_ref.hastDom;if(!(node.tagName==="a"||node.tagName==="div")){return;}var knowlLoc=hastDom.getAttribute(node,"data-knowl");var refId=hastDom.getAttribute(node,"data-refid");if(!knowlLoc&&!refId){return;}var className=hastDom.getAttribute(node,"className");var title=hastDom.getAttribute(node,"title");// Wrap the preloaded knowl content, if needed
if(className!==null&&className!==void 0&&className.includes("preloaded-knowl-content")){var id=hastDom.getAttribute(node,"id");return/*#__PURE__*/(0,jsx_runtime.jsx)(PreloadedKnowlContent,{id:id||"",className:className,children:processContent(node.children)});}// Everything past this point should be a `div`.
if(!(node.tagName==="a")){return;}if(refId){return/*#__PURE__*/(0,jsx_runtime.jsx)(PreloadedKnowl,{refId:refId,className:className,title:title||"Expand content",children:processContent(node.children)});}var containerId=hastDom.getAttribute(node,"data-knowl-container-id");return/*#__PURE__*/(0,jsx_runtime.jsx)(Knowl,{url:knowlLoc||"",containerId:containerId||"",className:className,title:title,children:processContent(node.children)});};/**
 * Replace HAST nodes that should trigger knowls with appropriate React elements.
 *
 * A knowl group container controls the visibility of several knowls associated with the
 * same block (e.g., the same paragraph). The display order of these knowls can depend on the
 * order of button presses, etc., so they are handled specially
 */var replaceKnowlGroupContainers=function replaceKnowlGroupContainers(node,processContent,_ref2){var _hastDom$getAttribute;var hastDom=_ref2.hastDom;if(!(node.tagName==="div")){return;}if(!((_hastDom$getAttribute=hastDom.getAttribute(node,"className"))!==null&&_hastDom$getAttribute!==void 0&&_hastDom$getAttribute.includes("knowl-group-container"))){return;}var data=[];// Direct children of a knowl-group-container have unique ids that we want to collect.
var _iterator=_createForOfIteratorHelper(node.children),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var elm=_step.value;if(!(elm.type==="element")){continue;}var id=hastDom.getAttribute(elm,"id")||"";var forKnowlUrl=hastDom.getAttribute(elm,"data-for-knowl-url")||"";data.push({id:id,forKnowlUrl:forKnowlUrl});}}catch(err){_iterator.e(err);}finally{_iterator.f();}return/*#__PURE__*/(0,jsx_runtime.jsx)(KnowlContainer,{knowlData:data});};
;// CONCATENATED MODULE: ./src/components/replacers/links.tsx
/**
 * Replace all internal links with `InternalAnchor` tags.
 */var replaceInternalLinks=function replaceInternalLinks(node,processContent,_ref){var hastDom=_ref.hastDom;if(node.tagName!=="a"){return;}var className=hastDom.getAttribute(node,"className");if(className!==null&&className!==void 0&&className.includes("internal")){var href=hastDom.getAttribute(node,"href");var title=hastDom.getAttribute(node,"title");return/*#__PURE__*/(0,jsx_runtime.jsx)(InternalAnchor,{href:href||"",className:className,title:title,children:processContent(node.children)});}if(className!==null&&className!==void 0&&className.includes("permalink")){var _href=hastDom.getAttribute(node,"href");var _title=hastDom.getAttribute(node,"title");return/*#__PURE__*/(0,jsx_runtime.jsx)(PermalinkAnchor,{href:_href||"",className:className,title:_title,children:processContent(node.children)});}};
;// CONCATENATED MODULE: ./src/components/knowl/math-knowl.tsx
var math_knowl_excluded=["children","id","knowlIds","className"];function clickedMathKnowl(e){var container=e.currentTarget;var clickedElm=e.target;var node=clickedElm;while(node&&node!==container){if(node.matches("[data-knowl]")){return node;}node=node.parentElement;}return false;}/**
 * A wrapper for MathJax display math that monitors for click events.
 * When a click is detected, a check is performed to see if a knowl link was
 * clicked
 */function MathKnowl(_ref){var children=_ref.children,id=_ref.id,knowlIds=_ref.knowlIds,className=_ref.className,rest=_objectWithoutProperties(_ref,math_knowl_excluded);var dispatch=useAppDispatch();var visibleKnowls=useAppSelector(visibleKnowlsSelector);var urlToIdMap=react.useMemo(function(){return Object.fromEntries(knowlIds.map(function(_ref2){var id=_ref2.id,url=_ref2.url;return[url,id];}));},[knowlIds]);var doClick=react.useCallback(function doClick(knowlTrigger){var knowlUrl=knowlTrigger.getAttribute("data-knowl");console.log("Math knowl clicked",knowlUrl);var knowlId=urlToIdMap[knowlUrl||""];dispatch(knowlActions.setVisible(_defineProperty({},knowlId,!visibleKnowls[knowlId])));},[visibleKnowls,dispatch,urlToIdMap]);// We cannot attach to the knowl links directly because we have no idea when MathJax will
// render them. Instead we listen to all events and detect on-the-fly whether we've clicked one.
// Since we're not actually looking for clicks on the "parent", the accessibility lints give
// false positives; we disable them.
/* eslint-disable jsx-a11y/interactive-supports-focus, jsx-a11y/no-static-element-interactions */return/*#__PURE__*/(0,jsx_runtime.jsx)("div",_objectSpread2(_objectSpread2({id:id,className:className},rest),{},{"data-watching":true,onClick:function onClick(e){var knowlTrigger=clickedMathKnowl(e);if(!knowlTrigger){return;}e.preventDefault();e.stopPropagation();doClick(knowlTrigger);},onKeyDown:function onKeyDown(e){if(e.key!=="Enter"){return;}var knowlTrigger=clickedMathKnowl(e);if(!knowlTrigger){return;}e.preventDefault();e.stopPropagation();doClick(knowlTrigger);},children:children}));}
;// CONCATENATED MODULE: ./src/components/replacers/math.tsx
/**
 * `unifiedjs` plugin that injects `data.latexPreamble` at the start of any `.process-math` elements.
 */var rehypeInsertMathPreambles=function rehypeInsertMathPreambles(){return function(ast,file){var preamble=file.data.latexPreamble||"";if(!preamble){return;}var _iterator=_createForOfIteratorHelper(selectAll(".process-math",ast)),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var node=_step.value;if(node.children.length>1||node.children.length===0){continue;}var child=node.children[0];if(child.type!=="text"){continue;}child.value=preamble+child.value;}}catch(err){_iterator.e(err);}finally{_iterator.f();}};};/**
 * Replace HAST nodes that should trigger knowls with appropriate React elements.
 */var replaceMathKnowl=function replaceMathKnowl(node,processContent,_ref){var hastDom=_ref.hastDom;if(!(node.tagName==="div")){return;}var className=hastDom.getAttribute(node,"className");if(!(className!==null&&className!==void 0&&className.includes("displaymath"))){return;}var containedKnowlIds=hastDom.getAttribute(node,"data-contains-math-knowl-ids")||[];return/*#__PURE__*/(0,jsx_runtime.jsx)(MathKnowl,{className:className,id:hastDom.getAttribute(node,"id"),knowlIds:containedKnowlIds,children:processContent(node.children)});};
;// CONCATENATED MODULE: ./src/components/knowl/sage-knowl.tsx
var sage_knowl_excluded=["id","children","buttonText","languages","linkKey"],sage_knowl_excluded2=["id","children","languages"];function SageKnowl(_ref){var id=_ref.id,children=_ref.children,buttonText=_ref.buttonText,languages=_ref.languages,linkKey=_ref.linkKey,rest=_objectWithoutProperties(_ref,sage_knowl_excluded);var _React$useState=react.useState(false),_React$useState2=slicedToArray_slicedToArray(_React$useState,2),sageCellHasRun=_React$useState2[0],setSageCellHasRun=_React$useState2[1];react.useEffect(function(){if(!sageCellHasRun){var _sagecell;// sagecell will replace the contents of the div with id `id`
// with executable sage content. Make sure to let it render once
// we're set up.
// No types for this one...
(_sagecell=window.sagecell)===null||_sagecell===void 0?void 0:_sagecell.makeSagecell({inputLocation:"#".concat(id),linked:true,linkKey:linkKey,languages:languages||["sage"],evalButtonText:buttonText});setSageCellHasRun(true);}},[sageCellHasRun,id,buttonText,languages,linkKey]);return/*#__PURE__*/(0,jsx_runtime.jsx)("div",_objectSpread2(_objectSpread2({id:id},rest),{},{children:children}));}function SageDisplayKnowl(_ref2){var id=_ref2.id,children=_ref2.children,languages=_ref2.languages,rest=_objectWithoutProperties(_ref2,sage_knowl_excluded2);var _React$useState3=react.useState(false),_React$useState4=slicedToArray_slicedToArray(_React$useState3,2),sageCellHasRun=_React$useState4[0],setSageCellHasRun=_React$useState4[1];react.useEffect(function(){if(!sageCellHasRun){var _sagecell2;// sagecell will replace the contents of the div with id `id`
// with executable sage content. Make sure to let it render once
// we're set up.
// No types for this one...
(_sagecell2=window.sagecell)===null||_sagecell2===void 0?void 0:_sagecell2.makeSagecell({inputLocation:"#".concat(id),languages:languages||["sage"],editor:"codemirror-readonly",hide:["evalButton","editorToggle","language"]});setSageCellHasRun(true);}},[sageCellHasRun,id,languages]);console.log("display sage",id);return/*#__PURE__*/(0,jsx_runtime.jsx)("div",_objectSpread2(_objectSpread2({id:id},rest),{},{children:children}));}
;// CONCATENATED MODULE: ./src/components/replacers/sage-knowls.tsx
// A list of class names that indicate sage-cell content. Generated using
// ```
// Object.fromEntries(
//    ["GAP", "GP", "HTML", "Maxima", "Octave", "Python", "R", "Singular"].map(
//        (v) => [
//            `sagecell-${v}`,
//            { languages: [v.toLowerCase()], buttonText: `Evaluate (${v})` },
//        ]
//    )
// );
// ```
var SUPPORTED_LANGUAGES_BY_CLASS={"sagecell-gap":{languages:["gap"],buttonText:"Evaluate (GAP)"},"sagecell-gp":{languages:["gp"],buttonText:"Evaluate (GP)"},"sagecell-html":{languages:["html"],buttonText:"Evaluate (HTML)"},"sagecell-maxima":{languages:["maxima"],buttonText:"Evaluate (Maxima)"},"sagecell-octave":{languages:["octave"],buttonText:"Evaluate (Octave)"},"sagecell-practice":{languages:["sage"],buttonText:"Evaluate"},"sagecell-python":{languages:["python"],buttonText:"Evaluate (Python)"},"sagecell-r":{languages:["r"],buttonText:"Evaluate (R)"},"sagecell-sage":{languages:["sage"],buttonText:"Evaluate (Sage)"},"sagecell-singular":{languages:["singular"],buttonText:"Evaluate (Singular)"}};/**
 * Replace HAST nodes that should trigger knowls with appropriate React elements.
 */var replaceSageKnowl=function replaceSageKnowl(node,processContent,_ref){var hastDom=_ref.hastDom,currentPageId=_ref.currentPageId;if(!(node.tagName==="pre")){return;}var className=hastDom.getAttribute(node,"className");var id=hastDom.getAttribute(node,"id");if(className!==null&&className!==void 0&&className.includes("sage-display")){// Display-only sage cells may not have an id
var newId=id||hastDom.slugger.slug("sage-display");return/*#__PURE__*/(0,jsx_runtime.jsx)(SageDisplayKnowl,{id:newId,className:className,children:processContent(node.children)});}for(var _i=0,_Object$entries=Object.entries(SUPPORTED_LANGUAGES_BY_CLASS);_i<_Object$entries.length;_i++){var _Object$entries$_i=slicedToArray_slicedToArray(_Object$entries[_i],2),name=_Object$entries$_i[0],props=_Object$entries$_i[1];if(className!==null&&className!==void 0&&className.includes(name)){return/*#__PURE__*/(0,jsx_runtime.jsx)(SageKnowl,{id:id,className:className,buttonText:props.buttonText,languages:props.languages,linkKey:currentPageId+props.languages,children:processContent(node.children)});}}};
;// CONCATENATED MODULE: ./src/components/content-page/process-content.tsx
var processHtmlContentViaUnified=unified().use(hastFromStringNative).use(rehypeInsertKnowlExpandStubs).use(rehypeInsertPermalinks).use(rehypeInsertMathPreambles).use(hastReactTransformer,{replacers:[replaceInternalLinks,replaceKnowl,replaceSageKnowl,replaceMathKnowl,// Must come after `replaceKnowl`
replaceKnowlGroupContainers,replaceImages,replaceAsides]}).freeze();/**
 * Process `content` and turn it into react components with the necessary replacements (e.g.,
 * internal links get replaced with `InternalAnchor`, etc.).
 *
 * @param {string} content - html string
 */function htmlToComponent(content){var existingIds=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Set();var currentPageId=arguments.length>2&&arguments[2]!==undefined?arguments[2]:"";var file=processHtmlContentViaUnified.processSync({value:content,data:{existingIds:existingIds,currentPageId:currentPageId,latexPreamble:initInfo.latexPreamble}});return{component:/*#__PURE__*/(0,jsx_runtime.jsx)(MathJaxOneTimeRenderer,{children:file.result}),data:file.data};}
;// CONCATENATED MODULE: ./src/components/content-page/index.tsx
var ParserContext=/*#__PURE__*/react.createContext({parseString:function parseString(html){return/*#__PURE__*/(0,jsx_runtime.jsx)("div",{children:"Default Parser Used. This should have been overridden"});}});/**
 * Render a page's content in the content area. This element returns a portal
 * that is automatically rendered in the correct location.
 */function ContentPage(_ref){var content=_ref.content;var _React$useState=react.useState(false),_React$useState2=slicedToArray_slicedToArray(_React$useState,2),haveClearedInnerHtml=_React$useState2[0],setHaveClearedInnerHtml=_React$useState2[1];var existingIdsRef=react.useRef(new Set());var domCaching=useAppSelector(domCachingSelector);var parseString=react.useCallback(function(html){var _htmlToComponent=htmlToComponent(html,existingIdsRef.current,""+md5_default()(html)),component=_htmlToComponent.component,data=_htmlToComponent.data;// If DOM caching is enabled, we need to keep a globally-unique list of ids.
// If we don't we might create an id that is duplicated on a hidden page.
// With DOM caching disabled, hidden pages are fully removed from the DOM,
// so they shouldn't cause an issue.
if(data.hastDom&&domCaching){var _data$hastDom$slugger;var _iterator=_createForOfIteratorHelper(Object.keys((_data$hastDom$slugger=data.hastDom.slugger)===null||_data$hastDom$slugger===void 0?void 0:_data$hastDom$slugger.occurrences)||[]),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var id=_step.value;existingIdsRef.current.add(id);}}catch(err){_iterator.e(err);}finally{_iterator.f();}}return component;},[domCaching]);// Render the content on demand. Since the content is cached, it will not
// need to be re-rendered when it is asked to be displayed again.
var childRenderer=react.useCallback(function(){return parseString(content);},[content,parseString]);var contentNode=document.querySelector(".ptx-content");react.useEffect(function(){// On the first mount of this component, we want to clear the contents of `contentNode`
// so that it is take over by the react portal.
if(!haveClearedInnerHtml&&contentNode){contentNode.innerHTML="";setHaveClearedInnerHtml(true);// We don't start MathJax until after the original page contents has been cleared.
// This is because MathJax may be quick and typeset the page before we've cleared it.
// In that case, MathJax may have typeset an equation with a label twice, in which case
// it will complain.
window.setTimeout(mathJaxDefaultReady,10);}},[haveClearedInnerHtml,contentNode]);// If we haven't cleared the HTML, we wait until that is done to render anything meaningful
if(!haveClearedInnerHtml){return null;}if(!contentNode){console.warn("Could not find content node. Page render failed");return null;}// Since child components may need to render HTML, we pass down a `parseString` function.
return/*#__PURE__*/(0,jsx_runtime.jsx)(ParserContext.Provider,{value:{parseString:parseString},children:/*#__PURE__*/(0,jsx_runtime.jsx)(CachedComponent,{cacheId:""+md5_default()(content),childRenderer:childRenderer})});}
;// CONCATENATED MODULE: ./src/components/banner.tsx
function Banner(){var _React$useState=react.useState(/*#__PURE__*/(0,jsx_runtime.jsx)(react.Fragment,{children:"Loading"})),_React$useState2=slicedToArray_slicedToArray(_React$useState,2),content=_React$useState2[0],setContent=_React$useState2[1];react.useEffect(function(){if(!initInfo.bannerContent){throw new Error("Missing banner content");}setContent(htmlToComponent(initInfo.bannerContent).component);},[]);return content;}
;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/useSealedState.js

/**
 * React custom hook that returns the very first value passed to `initialState`,
 * even if it changes between re-renders.
 */

function useSealedState(initialState) {
  var _React$useState = (0,react.useState)(initialState),
      sealed = _React$useState[0];

  return sealed;
}


;// CONCATENATED MODULE: ./node_modules/reakit/es/reverse-30eaa122.js


function groupItems(items) {
  var groups = [[]];

  var _loop = function _loop() {
    var item = _step.value;
    var group = groups.find(function (g) {
      return !g[0] || g[0].groupId === item.groupId;
    });

    if (group) {
      group.push(item);
    } else {
      groups.push([item]);
    }
  };

  for (var _iterator = _createForOfIteratorHelperLoose(items), _step; !(_step = _iterator()).done;) {
    _loop();
  }

  return groups;
}

function flatten(grid) {
  var flattened = [];

  for (var _iterator = _createForOfIteratorHelperLoose(grid), _step; !(_step = _iterator()).done;) {
    var row = _step.value;
    flattened.push.apply(flattened, row);
  }

  return flattened;
}

function reverse(array) {
  return array.slice().reverse();
}


;// CONCATENATED MODULE: ./node_modules/reakit/es/getCurrentId-5aa9849e.js
function findFirstEnabledItem(items, excludeId) {
  if (excludeId) {
    return items.find(function (item) {
      return !item.disabled && item.id !== excludeId;
    });
  }

  return items.find(function (item) {
    return !item.disabled;
  });
}

function getCurrentId(options, passedId) {
  var _findFirstEnabledItem;

  if (passedId || passedId === null) {
    return passedId;
  }

  if (options.currentId || options.currentId === null) {
    return options.currentId;
  }

  return (_findFirstEnabledItem = findFirstEnabledItem(options.items || [])) === null || _findFirstEnabledItem === void 0 ? void 0 : _findFirstEnabledItem.id;
}


;// CONCATENATED MODULE: ./node_modules/reakit/es/findEnabledItemById-8ddca752.js
function findEnabledItemById(items, id) {
  if (!id) return undefined;
  return items === null || items === void 0 ? void 0 : items.find(function (item) {
    return item.id === id && !item.disabled;
  });
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/applyState.js
function isUpdater(argument) {
  return typeof argument === "function";
}
/**
 * Receives a `setState` argument and calls it with `currentValue` if it's a
 * function. Otherwise return the argument as the new value.
 *
 * @example
 * import { applyState } from "reakit-utils";
 *
 * applyState((value) => value + 1, 1); // 2
 * applyState(2, 1); // 2
 */


function applyState(argument, currentValue) {
  if (isUpdater(argument)) {
    return argument(currentValue);
  }

  return argument;
}


;// CONCATENATED MODULE: ./node_modules/reakit/es/Id/IdProvider.js

var defaultPrefix = "id";

function generateRandomString(prefix) {
  if (prefix === void 0) {
    prefix = defaultPrefix;
  }

  return "" + (prefix ? prefix + "-" : "") + Math.random().toString(32).substr(2, 6);
}

var unstable_IdContext = /*#__PURE__*/(0,react.createContext)(generateRandomString);

function unstable_IdProvider(_ref) {
  var children = _ref.children,
      _ref$prefix = _ref.prefix,
      prefix = _ref$prefix === void 0 ? defaultPrefix : _ref$prefix;
  var count = useRef(0);
  var generateId = useCallback(function (localPrefix) {
    if (localPrefix === void 0) {
      localPrefix = prefix;
    }

    return "" + (localPrefix ? localPrefix + "-" : "") + ++count.current;
  }, [prefix]);
  return /*#__PURE__*/createElement(unstable_IdContext.Provider, {
    value: generateId
  }, children);
}


;// CONCATENATED MODULE: ./node_modules/reakit/es/Id/IdState.js




function unstable_useIdState(initialState) {
  if (initialState === void 0) {
    initialState = {};
  }

  var _useSealedState = useSealedState(initialState),
      initialBaseId = _useSealedState.baseId;

  var generateId = (0,react.useContext)(unstable_IdContext);
  var idCountRef = (0,react.useRef)(0);

  var _React$useState = (0,react.useState)(function () {
    return initialBaseId || generateId();
  }),
      baseId = _React$useState[0],
      setBaseId = _React$useState[1];

  return {
    baseId: baseId,
    setBaseId: setBaseId,
    unstable_idCountRef: idCountRef
  };
}


;// CONCATENATED MODULE: ./node_modules/reakit/es/Composite/CompositeState.js












function isElementPreceding(element1, element2) {
  return Boolean(element2.compareDocumentPosition(element1) & Node.DOCUMENT_POSITION_PRECEDING);
}

function findDOMIndex(items, item) {
  return items.findIndex(function (currentItem) {
    if (!currentItem.ref.current || !item.ref.current) {
      return false;
    }

    return isElementPreceding(item.ref.current, currentItem.ref.current);
  });
}

function getMaxLength(rows) {
  var maxLength = 0;

  for (var _iterator = _createForOfIteratorHelperLoose(rows), _step; !(_step = _iterator()).done;) {
    var length = _step.value.length;

    if (length > maxLength) {
      maxLength = length;
    }
  }

  return maxLength;
}
/**
 * Turns [row1, row1, row2, row2] into [row1, row2, row1, row2]
 */


function verticalizeItems(items) {
  var groups = groupItems(items);
  var maxLength = getMaxLength(groups);
  var verticalized = [];

  for (var i = 0; i < maxLength; i += 1) {
    for (var _iterator = _createForOfIteratorHelperLoose(groups), _step; !(_step = _iterator()).done;) {
      var group = _step.value;

      if (group[i]) {
        verticalized.push(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, group[i]), {}, {
          // If there's no groupId, it means that it's not a grid composite,
          // but a single row instead. So, instead of verticalizing it, that
          // is, assigning a different groupId based on the column index, we
          // keep it undefined so they will be part of the same group.
          // It's useful when using up/down on one-dimensional composites.
          groupId: group[i].groupId ? "" + i : undefined
        }));
      }
    }
  }

  return verticalized;
}

function createEmptyItem(groupId) {
  return {
    id: "__EMPTY_ITEM__",
    disabled: true,
    ref: {
      current: null
    },
    groupId: groupId
  };
}
/**
 * Turns [[row1, row1], [row2]] into [[row1, row1], [row2, row2]]
 */


function fillGroups(groups, currentId, shift) {
  var maxLength = getMaxLength(groups);

  for (var _iterator = _createForOfIteratorHelperLoose(groups), _step; !(_step = _iterator()).done;) {
    var group = _step.value;

    for (var i = 0; i < maxLength; i += 1) {
      var item = group[i];

      if (!item || shift && item.disabled) {
        var isFrist = i === 0;
        var previousItem = isFrist && shift ? findFirstEnabledItem(group) : group[i - 1];
        group[i] = previousItem && currentId !== (previousItem === null || previousItem === void 0 ? void 0 : previousItem.id) && shift ? previousItem : createEmptyItem(previousItem === null || previousItem === void 0 ? void 0 : previousItem.groupId);
      }
    }
  }

  return groups;
}

var nullItem = {
  id: null,
  ref: {
    current: null
  }
};

function placeItemsAfter(items, id, shouldInsertNullItem) {
  var index = items.findIndex(function (item) {
    return item.id === id;
  });
  return [].concat(items.slice(index + 1), shouldInsertNullItem ? [nullItem] : [], items.slice(0, index));
}

function getItemsInGroup(items, groupId) {
  return items.filter(function (item) {
    return item.groupId === groupId;
  });
}

var CompositeState_map = {
  horizontal: "vertical",
  vertical: "horizontal"
};

function getOppositeOrientation(orientation) {
  return orientation && CompositeState_map[orientation];
}

function addItemAtIndex(array, item, index) {
  if (!(index in array)) {
    return [].concat(array, [item]);
  }

  return [].concat(array.slice(0, index), [item], array.slice(index));
}

function sortBasedOnDOMPosition(items) {
  var pairs = items.map(function (item, index) {
    return [index, item];
  });
  var isOrderDifferent = false;
  pairs.sort(function (_ref, _ref2) {
    var indexA = _ref[0],
        a = _ref[1];
    var indexB = _ref2[0],
        b = _ref2[1];
    var elementA = a.ref.current;
    var elementB = b.ref.current;
    if (!elementA || !elementB) return 0; // a before b

    if (isElementPreceding(elementA, elementB)) {
      if (indexA > indexB) {
        isOrderDifferent = true;
      }

      return -1;
    } // a after b


    if (indexA < indexB) {
      isOrderDifferent = true;
    }

    return 1;
  });

  if (isOrderDifferent) {
    return pairs.map(function (_ref3) {
      var _ = _ref3[0],
          item = _ref3[1];
      return item;
    });
  }

  return items;
}

function setItemsBasedOnDOMPosition(items, setItems) {
  var sortedItems = sortBasedOnDOMPosition(items);

  if (items !== sortedItems) {
    setItems(sortedItems);
  }
}

function getCommonParent(items) {
  var _firstItem$ref$curren;

  var firstItem = items[0],
      nextItems = items.slice(1);
  var parentElement = firstItem === null || firstItem === void 0 ? void 0 : (_firstItem$ref$curren = firstItem.ref.current) === null || _firstItem$ref$curren === void 0 ? void 0 : _firstItem$ref$curren.parentElement;

  var _loop = function _loop() {
    var parent = parentElement;

    if (nextItems.every(function (item) {
      return parent.contains(item.ref.current);
    })) {
      return {
        v: parentElement
      };
    }

    parentElement = parentElement.parentElement;
  };

  while (parentElement) {
    var _ret = _loop();

    if (typeof _ret === "object") return _ret.v;
  }

  return getDocument(parentElement).body;
} // istanbul ignore next: JSDOM doesn't support IntersectionObverser
// See https://github.com/jsdom/jsdom/issues/2032


function useIntersectionObserver(items, setItems) {
  var previousItems = (0,react.useRef)([]);
  (0,react.useEffect)(function () {
    var callback = function callback() {
      var hasPreviousItems = !!previousItems.current.length; // We don't want to sort items if items have been just registered.

      if (hasPreviousItems) {
        setItemsBasedOnDOMPosition(items, setItems);
      }

      previousItems.current = items;
    };

    var root = getCommonParent(items);
    var observer = new IntersectionObserver(callback, {
      root: root
    });

    for (var _iterator = _createForOfIteratorHelperLoose(items), _step; !(_step = _iterator()).done;) {
      var item = _step.value;

      if (item.ref.current) {
        observer.observe(item.ref.current);
      }
    }

    return function () {
      observer.disconnect();
    };
  }, [items]);
}

function useTimeoutObserver(items, setItems) {
  (0,react.useEffect)(function () {
    var callback = function callback() {
      return setItemsBasedOnDOMPosition(items, setItems);
    };

    var timeout = setTimeout(callback, 250);
    return function () {
      return clearTimeout(timeout);
    };
  });
}

function useSortBasedOnDOMPosition(items, setItems) {
  if (typeof IntersectionObserver === "function") {
    useIntersectionObserver(items, setItems);
  } else {
    useTimeoutObserver(items, setItems);
  }
}

function reducer(state, action) {
  var virtual = state.unstable_virtual,
      rtl = state.rtl,
      orientation = state.orientation,
      items = state.items,
      groups = state.groups,
      currentId = state.currentId,
      loop = state.loop,
      wrap = state.wrap,
      pastIds = state.pastIds,
      shift = state.shift,
      moves = state.unstable_moves,
      includesBaseElement = state.unstable_includesBaseElement,
      initialVirtual = state.initialVirtual,
      initialRTL = state.initialRTL,
      initialOrientation = state.initialOrientation,
      initialCurrentId = state.initialCurrentId,
      initialLoop = state.initialLoop,
      initialWrap = state.initialWrap,
      initialShift = state.initialShift,
      hasSetCurrentId = state.hasSetCurrentId;

  switch (action.type) {
    case "registerGroup":
      {
        var _group = action.group; // If there are no groups yet, just add it as the first one

        if (groups.length === 0) {
          return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
            groups: [_group]
          });
        } // Finds the group index based on DOM position


        var index = findDOMIndex(groups, _group);
        return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
          groups: addItemAtIndex(groups, _group, index)
        });
      }

    case "unregisterGroup":
      {
        var _id = action.id;
        var nextGroups = groups.filter(function (group) {
          return group.id !== _id;
        }); // The group isn't registered, so do nothing

        if (nextGroups.length === groups.length) {
          return state;
        }

        return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
          groups: nextGroups
        });
      }

    case "registerItem":
      {
        var _item = action.item; // Finds the item group based on the DOM hierarchy

        var _group2 = groups.find(function (r) {
          var _r$ref$current;

          return (_r$ref$current = r.ref.current) === null || _r$ref$current === void 0 ? void 0 : _r$ref$current.contains(_item.ref.current);
        }); // Group will be null if it's a one-dimensional composite


        var nextItem = _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({
          groupId: _group2 === null || _group2 === void 0 ? void 0 : _group2.id
        }, _item);

        var _index = findDOMIndex(items, nextItem);

        var nextState = _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
          items: addItemAtIndex(items, nextItem, _index)
        });

        if (!hasSetCurrentId && !moves && initialCurrentId === undefined) {
          var _findFirstEnabledItem; // Sets currentId to the first enabled item. This runs whenever an item
          // is registered because the first enabled item may be registered
          // asynchronously.


          return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, nextState), {}, {
            currentId: (_findFirstEnabledItem = findFirstEnabledItem(nextState.items)) === null || _findFirstEnabledItem === void 0 ? void 0 : _findFirstEnabledItem.id
          });
        }

        return nextState;
      }

    case "unregisterItem":
      {
        var _id2 = action.id;
        var nextItems = items.filter(function (item) {
          return item.id !== _id2;
        }); // The item isn't registered, so do nothing

        if (nextItems.length === items.length) {
          return state;
        } // Filters out the item that is being removed from the pastIds list


        var nextPastIds = pastIds.filter(function (pastId) {
          return pastId !== _id2;
        });

        var _nextState = _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
          pastIds: nextPastIds,
          items: nextItems
        }); // If the current item is the item that is being removed, focus pastId


        if (currentId && currentId === _id2) {
          var nextId = includesBaseElement ? null : getCurrentId(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, _nextState), {}, {
            currentId: nextPastIds[0]
          }));
          return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, _nextState), {}, {
            currentId: nextId
          });
        }

        return _nextState;
      }

    case "move":
      {
        var _id3 = action.id; // move() does nothing

        if (_id3 === undefined) {
          return state;
        } // Removes the current item and the item that is receiving focus from the
        // pastIds list


        var filteredPastIds = pastIds.filter(function (pastId) {
          return pastId !== currentId && pastId !== _id3;
        }); // If there's a currentId, add it to the pastIds list so it can be focused
        // if the new item gets removed or disabled

        var _nextPastIds = currentId ? [currentId].concat(filteredPastIds) : filteredPastIds;

        var _nextState2 = _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
          pastIds: _nextPastIds
        }); // move(null) will focus the composite element itself, not an item


        if (_id3 === null) {
          return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, _nextState2), {}, {
            unstable_moves: moves + 1,
            currentId: getCurrentId(_nextState2, _id3)
          });
        }

        var _item2 = findEnabledItemById(items, _id3);

        return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, _nextState2), {}, {
          unstable_moves: _item2 ? moves + 1 : moves,
          currentId: getCurrentId(_nextState2, _item2 === null || _item2 === void 0 ? void 0 : _item2.id)
        });
      }

    case "next":
      {
        // If there's no item focused, we just move the first one
        if (currentId == null) {
          return reducer(state, _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, action), {}, {
            type: "first"
          }));
        } // RTL doesn't make sense on vertical navigation


        var isHorizontal = orientation !== "vertical";
        var isRTL = rtl && isHorizontal;
        var allItems = isRTL ? reverse(items) : items;
        var currentItem = allItems.find(function (item) {
          return item.id === currentId;
        }); // If there's no item focused, we just move the first one

        if (!currentItem) {
          return reducer(state, _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, action), {}, {
            type: "first"
          }));
        }

        var isGrid = !!currentItem.groupId;
        var currentIndex = allItems.indexOf(currentItem);

        var _nextItems = allItems.slice(currentIndex + 1);

        var nextItemsInGroup = getItemsInGroup(_nextItems, currentItem.groupId); // Home, End

        if (action.allTheWay) {
          // We reverse so we can get the last enabled item in the group. If it's
          // RTL, nextItems and nextItemsInGroup are already reversed and don't
          // have the items before the current one anymore. So we have to get
          // items in group again with allItems.
          var _nextItem2 = findFirstEnabledItem(isRTL ? getItemsInGroup(allItems, currentItem.groupId) : reverse(nextItemsInGroup));

          return reducer(state, _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, action), {}, {
            type: "move",
            id: _nextItem2 === null || _nextItem2 === void 0 ? void 0 : _nextItem2.id
          }));
        }

        var oppositeOrientation = getOppositeOrientation( // If it's a grid and orientation is not set, it's a next/previous
        // call, which is inherently horizontal. up/down will call next with
        // orientation set to vertical by default (see below on up/down cases).
        isGrid ? orientation || "horizontal" : orientation);
        var canLoop = loop && loop !== oppositeOrientation;
        var canWrap = isGrid && wrap && wrap !== oppositeOrientation;
        var hasNullItem = // `previous` and `up` will set action.hasNullItem, but when calling
        // next directly, hasNullItem will only be true if it's not a grid and
        // loop is set to true, which means that pressing right or down keys on
        // grids will never focus the composite element. On one-dimensional
        // composites that don't loop, pressing right or down keys also doesn't
        // focus the composite element.
        action.hasNullItem || !isGrid && canLoop && includesBaseElement;

        if (canLoop) {
          var loopItems = canWrap && !hasNullItem ? allItems : getItemsInGroup(allItems, currentItem.groupId); // Turns [0, 1, current, 3, 4] into [3, 4, 0, 1]

          var sortedItems = placeItemsAfter(loopItems, currentId, hasNullItem);

          var _nextItem3 = findFirstEnabledItem(sortedItems, currentId);

          return reducer(state, _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, action), {}, {
            type: "move",
            id: _nextItem3 === null || _nextItem3 === void 0 ? void 0 : _nextItem3.id
          }));
        }

        if (canWrap) {
          var _nextItem4 = findFirstEnabledItem( // We can use nextItems, which contains all the next items, including
          // items from other groups, to wrap between groups. However, if there
          // is a null item (the composite element), we'll only use the next
          // items in the group. So moving next from the last item will focus
          // the composite element (null). On grid composites, horizontal
          // navigation never focuses the composite element, only vertical.
          hasNullItem ? nextItemsInGroup : _nextItems, currentId);

          var _nextId = hasNullItem ? (_nextItem4 === null || _nextItem4 === void 0 ? void 0 : _nextItem4.id) || null : _nextItem4 === null || _nextItem4 === void 0 ? void 0 : _nextItem4.id;

          return reducer(state, _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, action), {}, {
            type: "move",
            id: _nextId
          }));
        }

        var _nextItem = findFirstEnabledItem(nextItemsInGroup, currentId);

        if (!_nextItem && hasNullItem) {
          return reducer(state, _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, action), {}, {
            type: "move",
            id: null
          }));
        }

        return reducer(state, _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, action), {}, {
          type: "move",
          id: _nextItem === null || _nextItem === void 0 ? void 0 : _nextItem.id
        }));
      }

    case "previous":
      {
        // If currentId is initially set to null, the composite element will be
        // focusable while navigating with arrow keys. But, if it's a grid, we
        // don't want to focus the composite element with horizontal navigation.
        var _isGrid = !!groups.length;

        var _hasNullItem = !_isGrid && includesBaseElement;

        var _nextState3 = reducer(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
          items: reverse(items)
        }), _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, action), {}, {
          type: "next",
          hasNullItem: _hasNullItem
        }));

        return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, _nextState3), {}, {
          items: items
        });
      }

    case "down":
      {
        var shouldShift = shift && !action.allTheWay; // First, we make sure groups have the same number of items by filling it
        // with disabled fake items. Then, we reorganize the items list so
        // [1-1, 1-2, 2-1, 2-2] becomes [1-1, 2-1, 1-2, 2-2].

        var verticalItems = verticalizeItems(flatten(fillGroups(groupItems(items), currentId, shouldShift)));

        var _canLoop = loop && loop !== "horizontal"; // Pressing down arrow key will only focus the composite element if loop
        // is true or vertical.


        var _hasNullItem2 = _canLoop && includesBaseElement;

        var _nextState4 = reducer(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
          orientation: "vertical",
          items: verticalItems
        }), _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, action), {}, {
          type: "next",
          hasNullItem: _hasNullItem2
        }));

        return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, _nextState4), {}, {
          orientation: orientation,
          items: items
        });
      }

    case "up":
      {
        var _shouldShift = shift && !action.allTheWay;

        var _verticalItems = verticalizeItems(reverse(flatten(fillGroups(groupItems(items), currentId, _shouldShift)))); // If currentId is initially set to null, we'll always focus the
        // composite element when the up arrow key is pressed in the first row.


        var _hasNullItem3 = includesBaseElement;

        var _nextState5 = reducer(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
          orientation: "vertical",
          items: _verticalItems
        }), _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, action), {}, {
          type: "next",
          hasNullItem: _hasNullItem3
        }));

        return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, _nextState5), {}, {
          orientation: orientation,
          items: items
        });
      }

    case "first":
      {
        var firstItem = findFirstEnabledItem(items);
        return reducer(state, _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, action), {}, {
          type: "move",
          id: firstItem === null || firstItem === void 0 ? void 0 : firstItem.id
        }));
      }

    case "last":
      {
        var _nextState6 = reducer(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
          items: reverse(items)
        }), _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, action), {}, {
          type: "first"
        }));

        return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, _nextState6), {}, {
          items: items
        });
      }

    case "sort":
      {
        return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
          items: sortBasedOnDOMPosition(items),
          groups: sortBasedOnDOMPosition(groups)
        });
      }

    case "setVirtual":
      return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
        unstable_virtual: applyState(action.virtual, virtual)
      });

    case "setRTL":
      return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
        rtl: applyState(action.rtl, rtl)
      });

    case "setOrientation":
      return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
        orientation: applyState(action.orientation, orientation)
      });

    case "setCurrentId":
      {
        var nextCurrentId = getCurrentId(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
          currentId: applyState(action.currentId, currentId)
        }));
        return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
          currentId: nextCurrentId,
          hasSetCurrentId: true
        });
      }

    case "setLoop":
      return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
        loop: applyState(action.loop, loop)
      });

    case "setWrap":
      return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
        wrap: applyState(action.wrap, wrap)
      });

    case "setShift":
      return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
        shift: applyState(action.shift, shift)
      });

    case "setIncludesBaseElement":
      {
        return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
          unstable_includesBaseElement: applyState(action.includesBaseElement, includesBaseElement)
        });
      }

    case "reset":
      return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
        unstable_virtual: initialVirtual,
        rtl: initialRTL,
        orientation: initialOrientation,
        currentId: getCurrentId(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
          currentId: initialCurrentId
        })),
        loop: initialLoop,
        wrap: initialWrap,
        shift: initialShift,
        unstable_moves: 0,
        pastIds: []
      });

    case "setItems":
      {
        return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, state), {}, {
          items: action.items
        });
      }

    default:
      throw new Error();
  }
}

function useAction(fn) {
  return (0,react.useCallback)(fn, []);
}

function useIsUnmountedRef() {
  var isUnmountedRef = (0,react.useRef)(false);
  useIsomorphicEffect(function () {
    return function () {
      isUnmountedRef.current = true;
    };
  }, []);
  return isUnmountedRef;
}

function useCompositeState(initialState) {
  if (initialState === void 0) {
    initialState = {};
  }

  var _useSealedState = useSealedState(initialState),
      _useSealedState$unsta = _useSealedState.unstable_virtual,
      virtual = _useSealedState$unsta === void 0 ? false : _useSealedState$unsta,
      _useSealedState$rtl = _useSealedState.rtl,
      rtl = _useSealedState$rtl === void 0 ? false : _useSealedState$rtl,
      orientation = _useSealedState.orientation,
      currentId = _useSealedState.currentId,
      _useSealedState$loop = _useSealedState.loop,
      loop = _useSealedState$loop === void 0 ? false : _useSealedState$loop,
      _useSealedState$wrap = _useSealedState.wrap,
      wrap = _useSealedState$wrap === void 0 ? false : _useSealedState$wrap,
      _useSealedState$shift = _useSealedState.shift,
      shift = _useSealedState$shift === void 0 ? false : _useSealedState$shift,
      unstable_includesBaseElement = _useSealedState.unstable_includesBaseElement,
      sealed = _objectWithoutPropertiesLoose(_useSealedState, ["unstable_virtual", "rtl", "orientation", "currentId", "loop", "wrap", "shift", "unstable_includesBaseElement"]);

  var idState = unstable_useIdState(sealed);

  var _React$useReducer = (0,react.useReducer)(reducer, {
    unstable_virtual: virtual,
    rtl: rtl,
    orientation: orientation,
    items: [],
    groups: [],
    currentId: currentId,
    loop: loop,
    wrap: wrap,
    shift: shift,
    unstable_moves: 0,
    pastIds: [],
    unstable_includesBaseElement: unstable_includesBaseElement != null ? unstable_includesBaseElement : currentId === null,
    initialVirtual: virtual,
    initialRTL: rtl,
    initialOrientation: orientation,
    initialCurrentId: currentId,
    initialLoop: loop,
    initialWrap: wrap,
    initialShift: shift
  }),
      _React$useReducer$ = _React$useReducer[0],
      pastIds = _React$useReducer$.pastIds,
      initialVirtual = _React$useReducer$.initialVirtual,
      initialRTL = _React$useReducer$.initialRTL,
      initialOrientation = _React$useReducer$.initialOrientation,
      initialCurrentId = _React$useReducer$.initialCurrentId,
      initialLoop = _React$useReducer$.initialLoop,
      initialWrap = _React$useReducer$.initialWrap,
      initialShift = _React$useReducer$.initialShift,
      hasSetCurrentId = _React$useReducer$.hasSetCurrentId,
      state = _objectWithoutPropertiesLoose(_React$useReducer$, ["pastIds", "initialVirtual", "initialRTL", "initialOrientation", "initialCurrentId", "initialLoop", "initialWrap", "initialShift", "hasSetCurrentId"]),
      dispatch = _React$useReducer[1];

  var _React$useState = (0,react.useState)(false),
      hasActiveWidget = _React$useState[0],
      setHasActiveWidget = _React$useState[1]; // register/unregister may be called when this component is unmounted. We
  // store the unmounted state here so we don't update the state if it's true.
  // This only happens in a very specific situation.
  // See https://github.com/reakit/reakit/issues/650


  var isUnmountedRef = useIsUnmountedRef();
  var setItems = (0,react.useCallback)(function (items) {
    return dispatch({
      type: "setItems",
      items: items
    });
  }, []);
  useSortBasedOnDOMPosition(state.items, setItems);
  return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, idState), state), {}, {
    unstable_hasActiveWidget: hasActiveWidget,
    unstable_setHasActiveWidget: setHasActiveWidget,
    registerItem: useAction(function (item) {
      if (isUnmountedRef.current) return;
      dispatch({
        type: "registerItem",
        item: item
      });
    }),
    unregisterItem: useAction(function (id) {
      if (isUnmountedRef.current) return;
      dispatch({
        type: "unregisterItem",
        id: id
      });
    }),
    registerGroup: useAction(function (group) {
      if (isUnmountedRef.current) return;
      dispatch({
        type: "registerGroup",
        group: group
      });
    }),
    unregisterGroup: useAction(function (id) {
      if (isUnmountedRef.current) return;
      dispatch({
        type: "unregisterGroup",
        id: id
      });
    }),
    move: useAction(function (id) {
      return dispatch({
        type: "move",
        id: id
      });
    }),
    next: useAction(function (allTheWay) {
      return dispatch({
        type: "next",
        allTheWay: allTheWay
      });
    }),
    previous: useAction(function (allTheWay) {
      return dispatch({
        type: "previous",
        allTheWay: allTheWay
      });
    }),
    up: useAction(function (allTheWay) {
      return dispatch({
        type: "up",
        allTheWay: allTheWay
      });
    }),
    down: useAction(function (allTheWay) {
      return dispatch({
        type: "down",
        allTheWay: allTheWay
      });
    }),
    first: useAction(function () {
      return dispatch({
        type: "first"
      });
    }),
    last: useAction(function () {
      return dispatch({
        type: "last"
      });
    }),
    sort: useAction(function () {
      return dispatch({
        type: "sort"
      });
    }),
    unstable_setVirtual: useAction(function (value) {
      return dispatch({
        type: "setVirtual",
        virtual: value
      });
    }),
    setRTL: useAction(function (value) {
      return dispatch({
        type: "setRTL",
        rtl: value
      });
    }),
    setOrientation: useAction(function (value) {
      return dispatch({
        type: "setOrientation",
        orientation: value
      });
    }),
    setCurrentId: useAction(function (value) {
      return dispatch({
        type: "setCurrentId",
        currentId: value
      });
    }),
    setLoop: useAction(function (value) {
      return dispatch({
        type: "setLoop",
        loop: value
      });
    }),
    setWrap: useAction(function (value) {
      return dispatch({
        type: "setWrap",
        wrap: value
      });
    }),
    setShift: useAction(function (value) {
      return dispatch({
        type: "setShift",
        shift: value
      });
    }),
    unstable_setIncludesBaseElement: useAction(function (value) {
      return dispatch({
        type: "setIncludesBaseElement",
        includesBaseElement: value
      });
    }),
    reset: useAction(function () {
      return dispatch({
        type: "reset"
      });
    })
  });
}


;// CONCATENATED MODULE: ./node_modules/reakit/es/Toolbar/ToolbarState.js













function useToolbarState(initialState) {
  if (initialState === void 0) {
    initialState = {};
  }

  var _useSealedState = useSealedState(initialState),
      _useSealedState$orien = _useSealedState.orientation,
      orientation = _useSealedState$orien === void 0 ? "horizontal" : _useSealedState$orien,
      sealed = _objectWithoutPropertiesLoose(_useSealedState, ["orientation"]);

  return useCompositeState(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({
    orientation: orientation
  }, sealed));
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/createEvent.js

/**
 * Creates an `Event` in a way that also works on IE 11.
 *
 * @example
 * import { createEvent } from "reakit-utils";
 *
 * const el = document.getElementById("id");
 * el.dispatchEvent(createEvent(el, "blur", { bubbles: false }));
 */

function createEvent(element, type, eventInit) {
  if (typeof Event === "function") {
    return new Event(type, eventInit);
  } // IE 11 doesn't support Event constructors


  var event = getDocument(element).createEvent("Event");
  event.initEvent(type, eventInit === null || eventInit === void 0 ? void 0 : eventInit.bubbles, eventInit === null || eventInit === void 0 ? void 0 : eventInit.cancelable);
  return event;
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/fireBlurEvent.js




function createFocusEvent(element, type, eventInit) {
  if (eventInit === void 0) {
    eventInit = {};
  }

  if (typeof FocusEvent === "function") {
    return new FocusEvent(type, eventInit);
  }

  return createEvent(element, type, eventInit);
}
/**
 * Creates and dispatches a blur event in a way that also works on IE 11.
 *
 * @example
 * import { fireBlurEvent } from "reakit-utils";
 *
 * fireBlurEvent(document.getElementById("id"));
 */


function fireBlurEvent(element, eventInit) {
  var event = createFocusEvent(element, "blur", eventInit);
  var defaultAllowed = element.dispatchEvent(event);

  var bubbleInit = es_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(es_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, eventInit), {}, {
    bubbles: true
  });

  element.dispatchEvent(createFocusEvent(element, "focusout", bubbleInit));
  return defaultAllowed;
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/fireKeyboardEvent.js



function createKeyboardEvent(element, type, eventInit) {
  if (eventInit === void 0) {
    eventInit = {};
  }

  if (typeof KeyboardEvent === "function") {
    return new KeyboardEvent(type, eventInit);
  } // IE 11 doesn't support Event constructors


  var event = getDocument(element).createEvent("KeyboardEvent");
  event.initKeyboardEvent(type, eventInit.bubbles, eventInit.cancelable, getWindow(element), eventInit.key, eventInit.location, eventInit.ctrlKey, eventInit.altKey, eventInit.shiftKey, eventInit.metaKey);
  return event;
}
/**
 * Creates and dispatches `KeyboardEvent` in a way that also works on IE 11.
 *
 * @example
 * import { fireKeyboardEvent } from "reakit-utils";
 *
 * fireKeyboardEvent(document.getElementById("id"), "keydown", {
 *   key: "ArrowDown",
 *   shiftKey: true,
 * });
 */


function fireKeyboardEvent(element, type, eventInit) {
  return element.dispatchEvent(createKeyboardEvent(element, type, eventInit));
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/getNextActiveElementOnBlur.js




var isIE11 = canUseDOM && "msCrypto" in window;
/**
 * Cross-browser method that returns the next active element (the element that
 * is receiving focus) after a blur event is dispatched. It receives the blur
 * event object as the argument.
 *
 * @example
 * import { getNextActiveElementOnBlur } from "reakit-utils";
 *
 * const element = document.getElementById("id");
 * element.addEventListener("blur", (event) => {
 *   const nextActiveElement = getNextActiveElementOnBlur(event);
 * });
 */

function getNextActiveElementOnBlur(event) {
  // IE 11 doesn't support event.relatedTarget on blur.
  // document.activeElement points the the next active element.
  // On modern browsers, document.activeElement points to the current target.
  if (isIE11) {
    var activeElement = getActiveElement_getActiveElement(event.currentTarget);
    return activeElement;
  }

  return event.relatedTarget;
}


;// CONCATENATED MODULE: ./node_modules/reakit/es/__keys-6742f591.js
// Automatically generated
var COMPOSITE_STATE_KEYS = ["baseId", "unstable_idCountRef", "setBaseId", "unstable_virtual", "rtl", "orientation", "items", "groups", "currentId", "loop", "wrap", "shift", "unstable_moves", "unstable_hasActiveWidget", "unstable_includesBaseElement", "registerItem", "unregisterItem", "registerGroup", "unregisterGroup", "move", "next", "previous", "up", "down", "first", "last", "sort", "unstable_setVirtual", "setRTL", "setOrientation", "setCurrentId", "setLoop", "setWrap", "setShift", "reset", "unstable_setIncludesBaseElement", "unstable_setHasActiveWidget"];
var COMPOSITE_KEYS = COMPOSITE_STATE_KEYS;
var COMPOSITE_GROUP_KEYS = COMPOSITE_KEYS;
var COMPOSITE_ITEM_KEYS = COMPOSITE_GROUP_KEYS;
var COMPOSITE_ITEM_WIDGET_KEYS = (/* unused pure expression or super */ null && (COMPOSITE_ITEM_KEYS));

;// CONCATENATED MODULE: ./node_modules/reakit/es/userFocus-e16425e3.js
function userFocus(element) {
  element.userFocus = true;
  element.focus();
  element.userFocus = false;
}

function hasUserFocus(element) {
  return !!element.userFocus;
}

function setUserFocus(element, value) {
  element.userFocus = value;
}


;// CONCATENATED MODULE: ./node_modules/reakit/es/Composite/Composite.js




























var Composite_isIE11 = canUseDOM && "msCrypto" in window;

function canProxyKeyboardEvent(event) {
  if (!isSelfTarget(event)) return false;
  if (event.metaKey) return false;
  if (event.key === "Tab") return false;
  return true;
}

function useKeyboardEventProxy(virtual, currentItem, htmlEventHandler) {
  var eventHandlerRef = useLiveRef(htmlEventHandler);
  return (0,react.useCallback)(function (event) {
    var _eventHandlerRef$curr;

    (_eventHandlerRef$curr = eventHandlerRef.current) === null || _eventHandlerRef$curr === void 0 ? void 0 : _eventHandlerRef$curr.call(eventHandlerRef, event);
    if (event.defaultPrevented) return;

    if (virtual && canProxyKeyboardEvent(event)) {
      var currentElement = currentItem === null || currentItem === void 0 ? void 0 : currentItem.ref.current;

      if (currentElement) {
        if (!fireKeyboardEvent(currentElement, event.type, event)) {
          event.preventDefault();
        } // The event will be triggered on the composite item and then
        // propagated up to this composite element again, so we can pretend
        // that it wasn't called on this component in the first place.


        if (event.currentTarget.contains(currentElement)) {
          event.stopPropagation();
        }
      }
    }
  }, [virtual, currentItem]);
} // istanbul ignore next


function useActiveElementRef(elementRef) {
  var activeElementRef = (0,react.useRef)(null);
  (0,react.useEffect)(function () {
    var document = getDocument(elementRef.current);

    var onFocus = function onFocus(event) {
      var target = event.target;
      activeElementRef.current = target;
    };

    document.addEventListener("focus", onFocus, true);
    return function () {
      document.removeEventListener("focus", onFocus, true);
    };
  }, []);
  return activeElementRef;
}

function findFirstEnabledItemInTheLastRow(items) {
  return findFirstEnabledItem(flatten(reverse(groupItems(items))));
}

function isItem(items, element) {
  return items === null || items === void 0 ? void 0 : items.some(function (item) {
    return !!element && item.ref.current === element;
  });
}

function useScheduleUserFocus(currentItem) {
  var currentItemRef = useLiveRef(currentItem);

  var _React$useReducer = (0,react.useReducer)(function (n) {
    return n + 1;
  }, 0),
      scheduled = _React$useReducer[0],
      schedule = _React$useReducer[1];

  (0,react.useEffect)(function () {
    var _currentItemRef$curre;

    var currentElement = (_currentItemRef$curre = currentItemRef.current) === null || _currentItemRef$curre === void 0 ? void 0 : _currentItemRef$curre.ref.current;

    if (scheduled && currentElement) {
      userFocus(currentElement);
    }
  }, [scheduled]);
  return schedule;
}

var useComposite = createHook({
  name: "Composite",
  compose: [useTabbable],
  keys: COMPOSITE_KEYS,
  useOptions: function useOptions(options) {
    return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, options), {}, {
      currentId: getCurrentId(options)
    });
  },
  useProps: function useProps(options, _ref) {
    var htmlRef = _ref.ref,
        htmlOnFocusCapture = _ref.onFocusCapture,
        htmlOnFocus = _ref.onFocus,
        htmlOnBlurCapture = _ref.onBlurCapture,
        htmlOnKeyDown = _ref.onKeyDown,
        htmlOnKeyDownCapture = _ref.onKeyDownCapture,
        htmlOnKeyUpCapture = _ref.onKeyUpCapture,
        htmlProps = _objectWithoutPropertiesLoose(_ref, ["ref", "onFocusCapture", "onFocus", "onBlurCapture", "onKeyDown", "onKeyDownCapture", "onKeyUpCapture"]);

    var ref = (0,react.useRef)(null);
    var currentItem = findEnabledItemById(options.items, options.currentId);
    var previousElementRef = (0,react.useRef)(null);
    var onFocusCaptureRef = useLiveRef(htmlOnFocusCapture);
    var onFocusRef = useLiveRef(htmlOnFocus);
    var onBlurCaptureRef = useLiveRef(htmlOnBlurCapture);
    var onKeyDownRef = useLiveRef(htmlOnKeyDown);
    var scheduleUserFocus = useScheduleUserFocus(currentItem); // IE 11 doesn't support event.relatedTarget, so we use the active element
    // ref instead.

    var activeElementRef = Composite_isIE11 ? useActiveElementRef(ref) : undefined;
    (0,react.useEffect)(function () {
      var element = ref.current;

      if (options.unstable_moves && !currentItem) {
         false ? 0 : void 0; // If composite.move(null) has been called, the composite container
        // will receive focus.

        element === null || element === void 0 ? void 0 : element.focus();
      }
    }, [options.unstable_moves, currentItem]);
    var onKeyDownCapture = useKeyboardEventProxy(options.unstable_virtual, currentItem, htmlOnKeyDownCapture);
    var onKeyUpCapture = useKeyboardEventProxy(options.unstable_virtual, currentItem, htmlOnKeyUpCapture);
    var onFocusCapture = (0,react.useCallback)(function (event) {
      var _onFocusCaptureRef$cu;

      (_onFocusCaptureRef$cu = onFocusCaptureRef.current) === null || _onFocusCaptureRef$cu === void 0 ? void 0 : _onFocusCaptureRef$cu.call(onFocusCaptureRef, event);
      if (event.defaultPrevented) return;
      if (!options.unstable_virtual) return; // IE11 doesn't support event.relatedTarget, so we use the active
      // element ref instead.

      var previousActiveElement = (activeElementRef === null || activeElementRef === void 0 ? void 0 : activeElementRef.current) || event.relatedTarget;
      var previousActiveElementWasItem = isItem(options.items, previousActiveElement);

      if (isSelfTarget(event) && previousActiveElementWasItem) {
        // Composite has been focused as a result of an item receiving focus.
        // The composite item will move focus back to the composite
        // container. In this case, we don't want to propagate this
        // additional event nor call the onFocus handler passed to
        // <Composite onFocus={...} />.
        event.stopPropagation(); // We keep track of the previous active item element so we can
        // manually fire a blur event on it later when the focus is moved to
        // another item on the onBlurCapture event below.

        previousElementRef.current = previousActiveElement;
      }
    }, [options.unstable_virtual, options.items]);
    var onFocus = (0,react.useCallback)(function (event) {
      var _onFocusRef$current;

      (_onFocusRef$current = onFocusRef.current) === null || _onFocusRef$current === void 0 ? void 0 : _onFocusRef$current.call(onFocusRef, event);
      if (event.defaultPrevented) return;

      if (options.unstable_virtual) {
        if (isSelfTarget(event)) {
          // This means that the composite element has been focused while the
          // composite item has not. For example, by clicking on the
          // composite element without touching any item, or by tabbing into
          // the composite element. In this case, we want to trigger focus on
          // the item, just like it would happen with roving tabindex.
          // When it receives focus, the composite item will put focus back
          // on the composite element, in which case hasItemWithFocus will be
          // true.
          scheduleUserFocus();
        }
      } else if (isSelfTarget(event)) {
        var _options$setCurrentId; // When the roving tabindex composite gets intentionally focused (for
        // example, by clicking directly on it, and not on an item), we make
        // sure to set the current id to null (which means the composite
        // itself is focused).


        (_options$setCurrentId = options.setCurrentId) === null || _options$setCurrentId === void 0 ? void 0 : _options$setCurrentId.call(options, null);
      }
    }, [options.unstable_virtual, options.setCurrentId]);
    var onBlurCapture = (0,react.useCallback)(function (event) {
      var _onBlurCaptureRef$cur;

      (_onBlurCaptureRef$cur = onBlurCaptureRef.current) === null || _onBlurCaptureRef$cur === void 0 ? void 0 : _onBlurCaptureRef$cur.call(onBlurCaptureRef, event);
      if (event.defaultPrevented) return;
      if (!options.unstable_virtual) return; // When virtual is set to true, we move focus from the composite
      // container (this component) to the composite item that is being
      // selected. Then we move focus back to the composite container. This
      // is so we can provide the same API as the roving tabindex method,
      // which means people can attach onFocus/onBlur handlers on the
      // CompositeItem component regardless of whether it's virtual or not.
      // This sequence of blurring and focusing items and composite may be
      // confusing, so we ignore intermediate focus and blurs by stopping its
      // propagation and not calling the passed onBlur handler (htmlOnBlur).

      var currentElement = (currentItem === null || currentItem === void 0 ? void 0 : currentItem.ref.current) || null;
      var nextActiveElement = getNextActiveElementOnBlur(event);
      var nextActiveElementIsItem = isItem(options.items, nextActiveElement);

      if (isSelfTarget(event) && nextActiveElementIsItem) {
        // This is an intermediate blur event: blurring the composite
        // container to focus an item (nextActiveElement).
        if (nextActiveElement === currentElement) {
          // The next active element will be the same as the current item in
          // the state in two scenarios:
          //   - Moving focus with keyboard: the state is updated before the
          // blur event is triggered, so here the current item is already
          // pointing to the next active element.
          //   - Clicking on the current active item with a pointer: this
          // will trigger blur on the composite element and then the next
          // active element will be the same as the current item. Clicking on
          // an item other than the current one doesn't end up here as the
          // currentItem state will be updated only after it.
          if (previousElementRef.current && previousElementRef.current !== nextActiveElement) {
            // If there's a previous active item and it's not a click action,
            // then we fire a blur event on it so it will work just like if
            // it had DOM focus before (like when using roving tabindex).
            fireBlurEvent(previousElementRef.current, event);
          }
        } else if (currentElement) {
          // This will be true when the next active element is not the
          // current element, but there's a current item. This will only
          // happen when clicking with a pointer on a different item, when
          // there's already an item selected, in which case currentElement
          // is the item that is getting blurred, and nextActiveElement is
          // the item that is being clicked.
          fireBlurEvent(currentElement, event);
        } // We want to ignore intermediate blur events, so we stop its
        // propagation and return early so onFocus will not be called.


        event.stopPropagation();
      } else {
        var targetIsItem = isItem(options.items, event.target);

        if (!targetIsItem && currentElement) {
          // If target is not a composite item, it may be the composite
          // element itself (isSelfTarget) or a tabbable element inside the
          // composite widget. This may be triggered by clicking outside the
          // composite widget or by tabbing out of it. In either cases we
          // want to fire a blur event on the current item.
          fireBlurEvent(currentElement, event);
        }
      }
    }, [options.unstable_virtual, options.items, currentItem]);
    var onKeyDown = (0,react.useCallback)(function (event) {
      var _onKeyDownRef$current, _options$groups;

      (_onKeyDownRef$current = onKeyDownRef.current) === null || _onKeyDownRef$current === void 0 ? void 0 : _onKeyDownRef$current.call(onKeyDownRef, event);
      if (event.defaultPrevented) return;
      if (options.currentId !== null) return;
      if (!isSelfTarget(event)) return;
      var isVertical = options.orientation !== "horizontal";
      var isHorizontal = options.orientation !== "vertical";
      var isGrid = !!((_options$groups = options.groups) !== null && _options$groups !== void 0 && _options$groups.length);

      var up = function up() {
        if (isGrid) {
          var item = findFirstEnabledItemInTheLastRow(options.items);

          if (item !== null && item !== void 0 && item.id) {
            var _options$move;

            (_options$move = options.move) === null || _options$move === void 0 ? void 0 : _options$move.call(options, item.id);
          }
        } else {
          var _options$last;

          (_options$last = options.last) === null || _options$last === void 0 ? void 0 : _options$last.call(options);
        }
      };

      var keyMap = {
        ArrowUp: (isGrid || isVertical) && up,
        ArrowRight: (isGrid || isHorizontal) && options.first,
        ArrowDown: (isGrid || isVertical) && options.first,
        ArrowLeft: (isGrid || isHorizontal) && options.last,
        Home: options.first,
        End: options.last,
        PageUp: options.first,
        PageDown: options.last
      };
      var action = keyMap[event.key];

      if (action) {
        event.preventDefault();
        action();
      }
    }, [options.currentId, options.orientation, options.groups, options.items, options.move, options.last, options.first]);
    return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({
      ref: useForkRef(ref, htmlRef),
      id: options.baseId,
      onFocus: onFocus,
      onFocusCapture: onFocusCapture,
      onBlurCapture: onBlurCapture,
      onKeyDownCapture: onKeyDownCapture,
      onKeyDown: onKeyDown,
      onKeyUpCapture: onKeyUpCapture,
      "aria-activedescendant": options.unstable_virtual ? (currentItem === null || currentItem === void 0 ? void 0 : currentItem.id) || undefined : undefined
    }, htmlProps);
  },
  useComposeProps: function useComposeProps(options, htmlProps) {
    htmlProps = useRole(options, htmlProps, true);
    var tabbableHTMLProps = useTabbable(options, htmlProps, true);

    if (options.unstable_virtual || options.currentId === null) {
      // Composite will only be tabbable by default if the focus is managed
      // using aria-activedescendant, which requires DOM focus on the container
      // element (the composite)
      return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({
        tabIndex: 0
      }, tabbableHTMLProps);
    }

    return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, htmlProps), {}, {
      ref: tabbableHTMLProps.ref
    });
  }
});
var Composite = createComponent({
  as: "div",
  useHook: useComposite,
  useCreateElement: function useCreateElement$1(type, props, children) {
     false ? 0 : void 0;
    return useCreateElement(type, props, children);
  }
});

;// CONCATENATED MODULE: ./node_modules/reakit/es/__keys-ae468c11.js
// Automatically generated
var TOOLBAR_STATE_KEYS = ["baseId", "unstable_idCountRef", "unstable_virtual", "rtl", "orientation", "items", "groups", "currentId", "loop", "wrap", "shift", "unstable_moves", "unstable_hasActiveWidget", "unstable_includesBaseElement", "setBaseId", "registerItem", "unregisterItem", "registerGroup", "unregisterGroup", "move", "next", "previous", "up", "down", "first", "last", "sort", "unstable_setVirtual", "setRTL", "setOrientation", "setCurrentId", "setLoop", "setWrap", "setShift", "reset", "unstable_setIncludesBaseElement", "unstable_setHasActiveWidget"];
var TOOLBAR_KEYS = TOOLBAR_STATE_KEYS;
var TOOLBAR_ITEM_KEYS = TOOLBAR_KEYS;
var TOOLBAR_SEPARATOR_KEYS = (/* unused pure expression or super */ null && (TOOLBAR_ITEM_KEYS));

;// CONCATENATED MODULE: ./node_modules/reakit/es/Toolbar/Toolbar.js






























var useToolbar = createHook({
  name: "Toolbar",
  compose: useComposite,
  keys: TOOLBAR_KEYS,
  useProps: function useProps(options, htmlProps) {
    return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({
      role: "toolbar",
      "aria-orientation": options.orientation
    }, htmlProps);
  }
});
var Toolbar = createComponent({
  as: "div",
  useHook: useToolbar,
  useCreateElement: function useCreateElement$1(type, props, children) {
     false ? 0 : void 0;
    return useCreateElement(type, props, children);
  }
});

;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/isTextField.js
/**
 * Check whether the given element is a text field, where text field is defined
 * by the ability to select within the input, or that it is contenteditable.
 *
 * @example
 * import { isTextField } from "reakit-utils";
 *
 * isTextField(document.querySelector("div")); // false
 * isTextField(document.querySelector("input")); // true
 * isTextField(document.querySelector("input[type='button']")); // false
 * isTextField(document.querySelector("textarea")); // true
 * isTextField(document.querySelector("div[contenteditable='true']")); // true
 */
function isTextField(element) {
  try {
    var isTextInput = element instanceof HTMLInputElement && element.selectionStart !== null;
    var isTextArea = element.tagName === "TEXTAREA";
    var isContentEditable = element.contentEditable === "true";
    return isTextInput || isTextArea || isContentEditable || false;
  } catch (error) {
    // Safari throws an exception when trying to get `selectionStart`
    // on non-text <input> elements (which, understandably, don't
    // have the text selection API). We catch this via a try/catch
    // block, as opposed to a more explicit check of the element's
    // input types, because of Safari's non-standard behavior. This
    // also means we don't have to worry about the list of input
    // types that support `selectionStart` changing as the HTML spec
    // evolves over time.
    return false;
  }
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/hasFocus.js


/**
 * Checks if `element` has focus. Elements that are referenced by
 * `aria-activedescendant` are also considered.
 *
 * @example
 * import { hasFocus } from "reakit-utils";
 *
 * hasFocus(document.getElementById("id"));
 */

function hasFocus(element) {
  var activeElement = getActiveElement_getActiveElement(element);
  if (!activeElement) return false;
  if (activeElement === element) return true;
  var activeDescendant = activeElement.getAttribute("aria-activedescendant");
  if (!activeDescendant) return false;
  return activeDescendant === element.id;
}


;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/ensureFocus.js



/**
 * Ensures `element` will receive focus if it's not already.
 *
 * @example
 * import { ensureFocus } from "reakit-utils";
 *
 * ensureFocus(document.activeElement); // does nothing
 *
 * const element = document.querySelector("input");
 *
 * ensureFocus(element); // focuses element
 * ensureFocus(element, { preventScroll: true }); // focuses element preventing scroll jump
 *
 * function isActive(el) {
 *   return el.dataset.active === "true";
 * }
 *
 * ensureFocus(document.querySelector("[data-active='true']"), { isActive }); // does nothing
 *
 * @returns {number} `requestAnimationFrame` call ID so it can be passed to `cancelAnimationFrame` if needed.
 */

function ensureFocus(element, _temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      preventScroll = _ref.preventScroll,
      _ref$isActive = _ref.isActive,
      isActive = _ref$isActive === void 0 ? hasFocus : _ref$isActive;

  if (isActive(element)) return -1;
  element.focus({
    preventScroll: preventScroll
  });
  if (isActive(element)) return -1;
  return requestAnimationFrame(function () {
    element.focus({
      preventScroll: preventScroll
    });
  });
}


;// CONCATENATED MODULE: ./node_modules/reakit/es/Id/Id.js




 // Automatically generated

var ID_STATE_KEYS = ["baseId", "unstable_idCountRef", "setBaseId"];
var ID_KEYS = [].concat(ID_STATE_KEYS, ["id"]);
var unstable_useId = createHook({
  keys: ID_KEYS,
  useOptions: function useOptions(options, htmlProps) {
    var generateId = (0,react.useContext)(unstable_IdContext);

    var _React$useState = (0,react.useState)(function () {
      // This comes from useIdState
      if (options.unstable_idCountRef) {
        options.unstable_idCountRef.current += 1;
        return "-" + options.unstable_idCountRef.current;
      } // If there's no useIdState, we check if `baseId` was passed (as a prop,
      // not from useIdState).


      if (options.baseId) {
        return "-" + generateId("");
      }

      return "";
    }),
        suffix = _React$useState[0]; // `baseId` will be the prop passed directly as a prop or via useIdState.
    // If there's neither, then it'll fallback to Context's generateId.
    // This generateId can result in a sequential ID (if there's a Provider)
    // or a random string (without Provider).


    var baseId = (0,react.useMemo)(function () {
      return options.baseId || generateId();
    }, [options.baseId, generateId]);
    var id = htmlProps.id || options.id || "" + baseId + suffix;
    return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, options), {}, {
      id: id
    });
  },
  useProps: function useProps(options, htmlProps) {
    return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({
      id: options.id
    }, htmlProps);
  }
});
var unstable_Id = createComponent({
  as: "div",
  useHook: unstable_useId
});

;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/fireEvent.js


/**
 * Creates and dispatches `Event` in a way that also works on IE 11.
 *
 * @example
 * import { fireEvent } from "reakit-utils";
 *
 * fireEvent(document.getElementById("id"), "blur", {
 *   bubbles: true,
 *   cancelable: true,
 * });
 */

function fireEvent(element, type, eventInit) {
  return element.dispatchEvent(createEvent(element, type, eventInit));
}


;// CONCATENATED MODULE: ./node_modules/reakit/es/setTextFieldValue-0a221f4e.js


function setTextFieldValue(element, value) {
  if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {
    var _Object$getOwnPropert;

    var proto = Object.getPrototypeOf(element);
    var setValue = (_Object$getOwnPropert = Object.getOwnPropertyDescriptor(proto, "value")) === null || _Object$getOwnPropert === void 0 ? void 0 : _Object$getOwnPropert.set;

    if (setValue) {
      setValue.call(element, value);
      fireEvent(element, "input", {
        bubbles: true
      });
    }
  }
}


;// CONCATENATED MODULE: ./node_modules/reakit/es/Composite/CompositeItem.js





























function getWidget(itemElement) {
  return itemElement.querySelector("[data-composite-item-widget]");
}

function useItem(options) {
  return (0,react.useMemo)(function () {
    var _options$items;

    return (_options$items = options.items) === null || _options$items === void 0 ? void 0 : _options$items.find(function (item) {
      return options.id && item.id === options.id;
    });
  }, [options.items, options.id]);
}

function targetIsAnotherItem(event, items) {
  if (isSelfTarget(event)) return false;

  for (var _iterator = _createForOfIteratorHelperLoose(items), _step; !(_step = _iterator()).done;) {
    var item = _step.value;

    if (item.ref.current === event.target) {
      return true;
    }
  }

  return false;
}

var useCompositeItem = createHook({
  name: "CompositeItem",
  compose: [useClickable, unstable_useId],
  keys: COMPOSITE_ITEM_KEYS,
  propsAreEqual: function propsAreEqual(prev, next) {
    if (!next.id || prev.id !== next.id) {
      return useClickable.unstable_propsAreEqual(prev, next);
    }

    var prevCurrentId = prev.currentId,
        prevMoves = prev.unstable_moves,
        prevProps = _objectWithoutPropertiesLoose(prev, ["currentId", "unstable_moves"]);

    var nextCurrentId = next.currentId,
        nextMoves = next.unstable_moves,
        nextProps = _objectWithoutPropertiesLoose(next, ["currentId", "unstable_moves"]);

    if (nextCurrentId !== prevCurrentId) {
      if (next.id === nextCurrentId || next.id === prevCurrentId) {
        return false;
      }
    } else if (prevMoves !== nextMoves) {
      return false;
    }

    return useClickable.unstable_propsAreEqual(prevProps, nextProps);
  },
  useOptions: function useOptions(options) {
    return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({}, options), {}, {
      id: options.id,
      currentId: getCurrentId(options),
      unstable_clickOnSpace: options.unstable_hasActiveWidget ? false : options.unstable_clickOnSpace
    });
  },
  useProps: function useProps(options, _ref) {
    var _options$items2;

    var htmlRef = _ref.ref,
        _ref$tabIndex = _ref.tabIndex,
        htmlTabIndex = _ref$tabIndex === void 0 ? 0 : _ref$tabIndex,
        htmlOnMouseDown = _ref.onMouseDown,
        htmlOnFocus = _ref.onFocus,
        htmlOnBlurCapture = _ref.onBlurCapture,
        htmlOnKeyDown = _ref.onKeyDown,
        htmlOnClick = _ref.onClick,
        htmlProps = _objectWithoutPropertiesLoose(_ref, ["ref", "tabIndex", "onMouseDown", "onFocus", "onBlurCapture", "onKeyDown", "onClick"]);

    var ref = (0,react.useRef)(null);
    var id = options.id;
    var trulyDisabled = options.disabled && !options.focusable;
    var isCurrentItem = options.currentId === id;
    var isCurrentItemRef = useLiveRef(isCurrentItem);
    var hasFocusedComposite = (0,react.useRef)(false);
    var item = useItem(options);
    var onMouseDownRef = useLiveRef(htmlOnMouseDown);
    var onFocusRef = useLiveRef(htmlOnFocus);
    var onBlurCaptureRef = useLiveRef(htmlOnBlurCapture);
    var onKeyDownRef = useLiveRef(htmlOnKeyDown);
    var onClickRef = useLiveRef(htmlOnClick);
    var shouldTabIndex = !options.unstable_virtual && !options.unstable_hasActiveWidget && isCurrentItem || // We don't want to set tabIndex="-1" when using CompositeItem as a
    // standalone component, without state props.
    !((_options$items2 = options.items) !== null && _options$items2 !== void 0 && _options$items2.length);
    (0,react.useEffect)(function () {
      var _options$registerItem;

      if (!id) return undefined;
      (_options$registerItem = options.registerItem) === null || _options$registerItem === void 0 ? void 0 : _options$registerItem.call(options, {
        id: id,
        ref: ref,
        disabled: !!trulyDisabled
      });
      return function () {
        var _options$unregisterIt;

        (_options$unregisterIt = options.unregisterItem) === null || _options$unregisterIt === void 0 ? void 0 : _options$unregisterIt.call(options, id);
      };
    }, [id, trulyDisabled, options.registerItem, options.unregisterItem]);
    (0,react.useEffect)(function () {
      var element = ref.current;

      if (!element) {
         false ? 0 : void 0;
        return;
      } // `moves` will be incremented whenever next, previous, up, down, first,
      // last or move have been called. This means that the composite item will
      // be focused whenever some of these functions are called. We're using
      // isCurrentItemRef instead of isCurrentItem because we don't want to
      // focus the item if isCurrentItem changes (and options.moves doesn't).


      if (options.unstable_moves && isCurrentItemRef.current) {
        userFocus(element);
      }
    }, [options.unstable_moves]);
    var onMouseDown = (0,react.useCallback)(function (event) {
      var _onMouseDownRef$curre;

      (_onMouseDownRef$curre = onMouseDownRef.current) === null || _onMouseDownRef$curre === void 0 ? void 0 : _onMouseDownRef$curre.call(onMouseDownRef, event);
      setUserFocus(event.currentTarget, true);
    }, []);
    var onFocus = (0,react.useCallback)(function (event) {
      var _onFocusRef$current, _options$setCurrentId;

      var shouldFocusComposite = hasUserFocus(event.currentTarget);
      setUserFocus(event.currentTarget, false);
      (_onFocusRef$current = onFocusRef.current) === null || _onFocusRef$current === void 0 ? void 0 : _onFocusRef$current.call(onFocusRef, event);
      if (event.defaultPrevented) return;
      if (isPortalEvent(event)) return;
      if (!id) return;
      if (targetIsAnotherItem(event, options.items)) return;
      (_options$setCurrentId = options.setCurrentId) === null || _options$setCurrentId === void 0 ? void 0 : _options$setCurrentId.call(options, id); // When using aria-activedescendant, we want to make sure that the
      // composite container receives focus, not the composite item.
      // But we don't want to do this if the target is another focusable
      // element inside the composite item, such as CompositeItemWidget.

      if (shouldFocusComposite && options.unstable_virtual && options.baseId && isSelfTarget(event)) {
        var target = event.target;
        var composite = getDocument(target).getElementById(options.baseId);

        if (composite) {
          hasFocusedComposite.current = true;
          ensureFocus(composite);
        }
      }
    }, [id, options.items, options.setCurrentId, options.unstable_virtual, options.baseId]);
    var onBlurCapture = (0,react.useCallback)(function (event) {
      var _onBlurCaptureRef$cur;

      (_onBlurCaptureRef$cur = onBlurCaptureRef.current) === null || _onBlurCaptureRef$cur === void 0 ? void 0 : _onBlurCaptureRef$cur.call(onBlurCaptureRef, event);
      if (event.defaultPrevented) return;

      if (options.unstable_virtual && hasFocusedComposite.current) {
        // When hasFocusedComposite is true, composite has been focused right
        // after focusing this item. This is an intermediate blur event, so
        // we ignore it.
        hasFocusedComposite.current = false;
        event.preventDefault();
        event.stopPropagation();
      }
    }, [options.unstable_virtual]);
    var onKeyDown = (0,react.useCallback)(function (event) {
      var _onKeyDownRef$current;

      if (!isSelfTarget(event)) return;
      var isVertical = options.orientation !== "horizontal";
      var isHorizontal = options.orientation !== "vertical";
      var isGrid = !!(item !== null && item !== void 0 && item.groupId);
      var keyMap = {
        ArrowUp: (isGrid || isVertical) && options.up,
        ArrowRight: (isGrid || isHorizontal) && options.next,
        ArrowDown: (isGrid || isVertical) && options.down,
        ArrowLeft: (isGrid || isHorizontal) && options.previous,
        Home: function Home() {
          if (!isGrid || event.ctrlKey) {
            var _options$first;

            (_options$first = options.first) === null || _options$first === void 0 ? void 0 : _options$first.call(options);
          } else {
            var _options$previous;

            (_options$previous = options.previous) === null || _options$previous === void 0 ? void 0 : _options$previous.call(options, true);
          }
        },
        End: function End() {
          if (!isGrid || event.ctrlKey) {
            var _options$last;

            (_options$last = options.last) === null || _options$last === void 0 ? void 0 : _options$last.call(options);
          } else {
            var _options$next;

            (_options$next = options.next) === null || _options$next === void 0 ? void 0 : _options$next.call(options, true);
          }
        },
        PageUp: function PageUp() {
          if (isGrid) {
            var _options$up;

            (_options$up = options.up) === null || _options$up === void 0 ? void 0 : _options$up.call(options, true);
          } else {
            var _options$first2;

            (_options$first2 = options.first) === null || _options$first2 === void 0 ? void 0 : _options$first2.call(options);
          }
        },
        PageDown: function PageDown() {
          if (isGrid) {
            var _options$down;

            (_options$down = options.down) === null || _options$down === void 0 ? void 0 : _options$down.call(options, true);
          } else {
            var _options$last2;

            (_options$last2 = options.last) === null || _options$last2 === void 0 ? void 0 : _options$last2.call(options);
          }
        }
      };
      var action = keyMap[event.key];

      if (action) {
        event.preventDefault();
        action();
        return;
      }

      (_onKeyDownRef$current = onKeyDownRef.current) === null || _onKeyDownRef$current === void 0 ? void 0 : _onKeyDownRef$current.call(onKeyDownRef, event);
      if (event.defaultPrevented) return;

      if (event.key.length === 1 && event.key !== " ") {
        var widget = getWidget(event.currentTarget);

        if (widget && isTextField(widget)) {
          widget.focus();
          setTextFieldValue(widget, "");
        }
      } else if (event.key === "Delete" || event.key === "Backspace") {
        var _widget = getWidget(event.currentTarget);

        if (_widget && isTextField(_widget)) {
          event.preventDefault();
          setTextFieldValue(_widget, "");
        }
      }
    }, [options.orientation, item, options.up, options.next, options.down, options.previous, options.first, options.last]);
    var onClick = (0,react.useCallback)(function (event) {
      var _onClickRef$current;

      (_onClickRef$current = onClickRef.current) === null || _onClickRef$current === void 0 ? void 0 : _onClickRef$current.call(onClickRef, event);
      if (event.defaultPrevented) return;
      var element = event.currentTarget;
      var widget = getWidget(element);

      if (widget && !hasFocusWithin(widget)) {
        // If there's a widget inside the composite item, we make sure it's
        // focused when pressing enter, space or clicking on the composite item.
        widget.focus();
      }
    }, []);
    return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({
      ref: useForkRef(ref, htmlRef),
      id: id,
      tabIndex: shouldTabIndex ? htmlTabIndex : -1,
      "aria-selected": options.unstable_virtual && isCurrentItem ? true : undefined,
      onMouseDown: onMouseDown,
      onFocus: onFocus,
      onBlurCapture: onBlurCapture,
      onKeyDown: onKeyDown,
      onClick: onClick
    }, htmlProps);
  }
});
var CompositeItem = createComponent({
  as: "button",
  memo: true,
  useHook: useCompositeItem
});

;// CONCATENATED MODULE: ./node_modules/reakit/es/Toolbar/ToolbarItem.js






























var useToolbarItem = createHook({
  name: "ToolbarItem",
  compose: useCompositeItem,
  keys: TOOLBAR_ITEM_KEYS
});
var ToolbarItem = createComponent({
  as: "button",
  memo: true,
  useHook: useToolbarItem
});

;// CONCATENATED MODULE: ./src/components/nav-buttons.tsx
function NavButtons(){var _navTargets$prev,_navTargets$up,_navTargets$next;var toolbar=useToolbarState();var navTargets=useAppSelector(nextPrevParentSelector);return/*#__PURE__*/(0,jsx_runtime.jsxs)(Toolbar,_objectSpread2(_objectSpread2({},toolbar),{},{"aria-label":"Previous/Next Section",className:"treebuttons",children:[/*#__PURE__*/(0,jsx_runtime.jsxs)(ToolbarItem,_objectSpread2(_objectSpread2({},toolbar),{},{as:InternalAnchor,href:((_navTargets$prev=navTargets.prev)===null||_navTargets$prev===void 0?void 0:_navTargets$prev.href)||"#",className:"previous-button toolbar-item button",title:navTargets.prev?"Previous (".concat(navTargets.prev.title,")"):"Previous",disabled:!navTargets.prev,children:[/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"icon",children:"<"}),/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"name",children:"Prev"})]})),/*#__PURE__*/(0,jsx_runtime.jsxs)(ToolbarItem,_objectSpread2(_objectSpread2({},toolbar),{},{as:InternalAnchor,href:((_navTargets$up=navTargets.up)===null||_navTargets$up===void 0?void 0:_navTargets$up.href)||"#",title:navTargets.up?"Up (".concat(navTargets.up.title,")"):"Up",className:"up-button button",disabled:!navTargets.up,children:[/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"icon",children:"^"}),/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"name",children:"Up"})]})),/*#__PURE__*/(0,jsx_runtime.jsxs)(ToolbarItem,_objectSpread2(_objectSpread2({},toolbar),{},{as:InternalAnchor,href:((_navTargets$next=navTargets.next)===null||_navTargets$next===void 0?void 0:_navTargets$next.href)||"#",title:navTargets.next?"Next (".concat(navTargets.next.title,")"):"Next",className:"next-button button",disabled:!navTargets.next,children:[/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"name",children:"Next"}),/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"icon",children:">"})]}))]}));}
;// CONCATENATED MODULE: ./src/components/index-button.tsx
function IndexButton(){var toolbar=useToolbarState();var navTargets=useAppSelector(nextPrevParentSelector);var dispatch=useAppDispatch();return/*#__PURE__*/(0,jsx_runtime.jsx)(ToolbarItem,_objectSpread2(_objectSpread2({},toolbar),{},{as:"a",href:"index-1.html",className:"index-button button",title:"Index",onClick:function onClick(){dispatch(navActions.setCurrentPage("index-1"));},children:/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"name",children:"Index"})}));}
;// CONCATENATED MODULE: ./src/components/page-footer.tsx
function PageFooter(){var _navTargets$prev,_navTargets$next;var navTargets=useAppSelector(nextPrevParentSelector);return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"ptx-content-footer",children:[/*#__PURE__*/(0,jsx_runtime.jsxs)(InternalAnchor,{href:((_navTargets$prev=navTargets.prev)===null||_navTargets$prev===void 0?void 0:_navTargets$prev.href)||"#",className:"previous-button button",title:navTargets.prev?"Previous (".concat(navTargets.prev.title,")"):"Previous",children:[/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"icon",children:"<"}),/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"name",children:"Prev"})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)(InternalAnchor,{href:"#",title:"Top",className:"top-button button",children:[/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"icon",children:"^"}),/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"name",children:"Top"})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)(InternalAnchor,{href:((_navTargets$next=navTargets.next)===null||_navTargets$next===void 0?void 0:_navTargets$next.href)||"#",title:navTargets.next?"Next (".concat(navTargets.next.title,")"):"Next",className:"next-button button",children:[/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"name",children:"Next"}),/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"icon",children:">"})]})]});}
;// CONCATENATED MODULE: ./src/components/toc/toggle.tsx
function TocVisibilityToggle(){var visible=useAppSelector(tocIsVisibleSelector);var dispatch=useAppDispatch();return/*#__PURE__*/(0,jsx_runtime.jsxs)(Button,{onClick:function onClick(){dispatch(tocActions.setVisible(!visible));},className:"toc-toggle button ".concat(visible?"active":""),children:[/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"icon",children:"\u2630"}),/*#__PURE__*/(0,jsx_runtime.jsx)("span",{className:"name",children:"Contents"})]});}
;// CONCATENATED MODULE: ./node_modules/reakit-utils/es/removeIndexFromArray.js
/**
 * Immutably removes an index from an array.
 *
 * @example
 * import { removeIndexFromArray } from "reakit-utils";
 *
 * removeIndexFromArray(["a", "b", "c"], 1); // ["a", "c"]
 *
 * @returns {Array} A new array without the item in the passed index.
 */
function removeIndexFromArray(array, index) {
  if (index === -1) return array;
  return [].concat(array.slice(0, index), array.slice(index + 1));
}


;// CONCATENATED MODULE: ./node_modules/reakit/es/Checkbox/Checkbox.js



















 // Automatically generated

var CHECKBOX_STATE_KEYS = ["state", "setState"];
var CHECKBOX_KEYS = [].concat(CHECKBOX_STATE_KEYS, ["value", "checked"]);

function getChecked(options) {
  if (typeof options.checked !== "undefined") {
    return options.checked;
  }

  if (typeof options.value === "undefined") {
    return !!options.state;
  }

  var state = Array.isArray(options.state) ? options.state : [];
  return state.indexOf(options.value) !== -1;
}

function fireChange(element, onChange) {
  var event = createEvent(element, "change");
  Object.defineProperties(event, {
    type: {
      value: "change"
    },
    target: {
      value: element
    },
    currentTarget: {
      value: element
    }
  });
  onChange === null || onChange === void 0 ? void 0 : onChange(event);
}

function useIndeterminateState(ref, options) {
  (0,react.useEffect)(function () {
    var element = ref.current;

    if (!element) {
       false ? 0 : void 0;
      return;
    }

    if (options.state === "indeterminate") {
      element.indeterminate = true;
    } else if (element.indeterminate) {
      element.indeterminate = false;
    }
  }, [options.state, ref]);
}

var useCheckbox = createHook({
  name: "Checkbox",
  compose: useClickable,
  keys: CHECKBOX_KEYS,
  useOptions: function useOptions(_ref, _ref2) {
    var value = _ref2.value,
        checked = _ref2.checked;

    var _ref$unstable_clickOn = _ref.unstable_clickOnEnter,
        unstable_clickOnEnter = _ref$unstable_clickOn === void 0 ? false : _ref$unstable_clickOn,
        options = _objectWithoutPropertiesLoose(_ref, ["unstable_clickOnEnter"]);

    return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({
      unstable_clickOnEnter: unstable_clickOnEnter,
      value: value,
      checked: getChecked(_rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({
        checked: checked
      }, options))
    }, options);
  },
  useProps: function useProps(options, _ref3) {
    var htmlRef = _ref3.ref,
        htmlOnChange = _ref3.onChange,
        htmlOnClick = _ref3.onClick,
        htmlProps = _objectWithoutPropertiesLoose(_ref3, ["ref", "onChange", "onClick"]);

    var ref = (0,react.useRef)(null);

    var _React$useState = (0,react.useState)(true),
        isNativeCheckbox = _React$useState[0],
        setIsNativeCheckbox = _React$useState[1];

    var onChangeRef = useLiveRef(htmlOnChange);
    var onClickRef = useLiveRef(htmlOnClick);
    (0,react.useEffect)(function () {
      var element = ref.current;

      if (!element) {
         false ? 0 : void 0;
        return;
      }

      if (element.tagName !== "INPUT" || element.type !== "checkbox") {
        setIsNativeCheckbox(false);
      }
    }, []);
    useIndeterminateState(ref, options);
    var onChange = (0,react.useCallback)(function (event) {
      var element = event.currentTarget;

      if (options.disabled) {
        event.stopPropagation();
        event.preventDefault();
        return;
      }

      if (onChangeRef.current) {
        // If component is NOT rendered as a native input, it will not have
        // the `checked` property. So we assign it for consistency.
        if (!isNativeCheckbox) {
          element.checked = !element.checked;
        }

        onChangeRef.current(event);
      }

      if (!options.setState) return;

      if (typeof options.value === "undefined") {
        options.setState(!options.checked);
      } else {
        var state = Array.isArray(options.state) ? options.state : [];
        var index = state.indexOf(options.value);

        if (index === -1) {
          options.setState([].concat(state, [options.value]));
        } else {
          options.setState(removeIndexFromArray(state, index));
        }
      }
    }, [options.disabled, isNativeCheckbox, options.setState, options.value, options.checked, options.state]);
    var onClick = (0,react.useCallback)(function (event) {
      var _onClickRef$current;

      (_onClickRef$current = onClickRef.current) === null || _onClickRef$current === void 0 ? void 0 : _onClickRef$current.call(onClickRef, event);
      if (event.defaultPrevented) return;
      if (isNativeCheckbox) return;
      fireChange(event.currentTarget, onChange);
    }, [isNativeCheckbox, onChange]);
    return _rollupPluginBabelHelpers_1f0bf8c2_objectSpread2({
      ref: useForkRef(ref, htmlRef),
      role: !isNativeCheckbox ? "checkbox" : undefined,
      type: isNativeCheckbox ? "checkbox" : undefined,
      value: isNativeCheckbox ? options.value : undefined,
      checked: options.checked,
      "aria-checked": options.state === "indeterminate" ? "mixed" : options.checked,
      onChange: onChange,
      onClick: onClick
    }, htmlProps);
  }
});
var Checkbox = createComponent({
  as: "input",
  memo: true,
  useHook: useCheckbox
});

;// CONCATENATED MODULE: ./src/components/caching-setting-select.tsx
function CachingSettingsSelect(){var domCaching=useAppSelector(domCachingSelector);var dispatch=useAppDispatch();return/*#__PURE__*/(0,jsx_runtime.jsxs)("label",{htmlFor:"dom-caching-checkbox",children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Checkbox,{title:"DOM Caching is an aggressive form of caching where elements are hidden instead of deleted when a page changes",checked:domCaching,id:"dom-caching-checkbox",onChange:function onChange(){dispatch(globalActions.setDomCaching(!domCaching));}}),"Enable DOM Caching"]});}
;// CONCATENATED MODULE: ./node_modules/react-redux-toastr/lib/css/react-redux-toastr.min.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var react_redux_toastr_min = ({});
;// CONCATENATED MODULE: ./src/styles/pretext.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var pretext = ({});
;// CONCATENATED MODULE: ./src/styles/pretext_add_on.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var pretext_add_on = ({});
;// CONCATENATED MODULE: ./src/styles/shell_default.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var shell_default = ({});
;// CONCATENATED MODULE: ./src/styles/banner_default.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var banner_default = ({});
;// CONCATENATED MODULE: ./src/styles/navbar_default.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var navbar_default = ({});
;// CONCATENATED MODULE: ./src/styles/toc_default.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var toc_default = ({});
;// CONCATENATED MODULE: ./src/styles/toc-chevron.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var toc_chevron = ({});
;// CONCATENATED MODULE: ./src/styles/style_default.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var style_default = ({});
;// CONCATENATED MODULE: ./src/styles/colors_blue_red.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var colors_blue_red = ({});
;// CONCATENATED MODULE: ./src/styles/setcolors.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var setcolors = ({});
;// CONCATENATED MODULE: ./src/styles/knowls.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var knowls = ({});
;// CONCATENATED MODULE: ./src/styles/permalink.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var permalink = ({});
;// CONCATENATED MODULE: ./src/App.tsx
//import "./styles/header.css";
function App(){var dispatch=useAppDispatch();var location=useLocation();var _React$useState=react.useState(""),_React$useState2=slicedToArray_slicedToArray(_React$useState,2),lastUrl=_React$useState2[0],setLastUrl=_React$useState2[1];var currentUrl=normalizeUrlWithHash(location.pathname+location.hash);var currentPageContents=useAppSelector(currentPageContentSelector);var _React$useState3=react.useState(false),_React$useState4=slicedToArray_slicedToArray(_React$useState3,2),tocExtracted=_React$useState4[0],setTocExtracted=_React$useState4[1];var tocVisible=useAppSelector(tocIsVisibleSelector);react.useLayoutEffect(function(){asyncToGenerator_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee(){return regenerator_default().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(lastUrl!==currentUrl)){_context.next=4;break;}setLastUrl(currentUrl);// By dispatching a page set every time the URL changes, we are able to keep in sync with
// the browser's forward/back button without needing a page reload
_context.next=4;return dispatch(navActions.setCurrentPageByUrl(currentUrl));case 4:_context.next=6;return dispatch(navActions.scrollViewportIfNeeded());case 6:case"end":return _context.stop();}}},_callee);}))();},[dispatch,currentUrl,lastUrl]);react.useEffect(function(){asyncToGenerator_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee2(){var resp,content,toc;return regenerator_default().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch("doc-manifest.xml");case 2:resp=_context2.sent;_context2.next=5;return resp.text();case 5:content=_context2.sent;toc=extractTocFromXml(content);_context2.next=9;return dispatch(navActions.setToc(toc));case 9:_context2.next=11;return dispatch(navActions.setCurrentPage(extractActiveTocItem()));case 11:setTocExtracted(true);case 12:case"end":return _context2.stop();}}},_callee2);}))();var mediaQuery=window.matchMedia("(max-width: 904px)");function mobileModeSwitch(e){var query=e;dispatch(globalActions.setMobileMode(query.matches));}dispatch(globalActions.setMobileMode(mediaQuery.matches));mediaQuery.addEventListener("change",mobileModeSwitch);return function(){mediaQuery.removeEventListener("change",mobileModeSwitch);};},[dispatch]);if(!tocExtracted){return null;}return/*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("header",{id:"ptx-masthead",children:/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"ptx-banner",children:/*#__PURE__*/(0,jsx_runtime.jsx)(Banner,{})})}),/*#__PURE__*/(0,jsx_runtime.jsxs)("nav",{id:"ptx-navbar",className:"navbar",children:[/*#__PURE__*/(0,jsx_runtime.jsx)(TocVisibilityToggle,{}),/*#__PURE__*/(0,jsx_runtime.jsx)(IndexButton,{}),/*#__PURE__*/(0,jsx_runtime.jsx)(CachingSettingsSelect,{}),/*#__PURE__*/(0,jsx_runtime.jsx)(NavButtons,{})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"ptx-page",children:[/*#__PURE__*/(0,jsx_runtime.jsx)("div",{id:"ptx-sidebar",className:// We use a special class `sidebar-hidden` instead of
// `hidden-content` because on a small screen, a "hidden"
// sidebar actually appears at the bottom of the screen.
classnames_default()({"sidebar-hidden":!tocVisible}),children:/*#__PURE__*/(0,jsx_runtime.jsx)("nav",{id:"ptx-toc",className:"ptx-toc",children:/*#__PURE__*/(0,jsx_runtime.jsx)(Toc,{})})}),/*#__PURE__*/(0,jsx_runtime.jsxs)("main",{className:"ptx-main",children:[/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"ptx-content",children:/*#__PURE__*/(0,jsx_runtime.jsx)(ContentPage,{content:currentPageContents})}),/*#__PURE__*/(0,jsx_runtime.jsx)(PageFooter,{})]})]}),/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"ptx-page-footer",children:"Window footer dummy content"}),/*#__PURE__*/(0,jsx_runtime.jsx)(lib/* default */.ZP,{timeOut:2000,newestOnTop:true,preventDuplicates:true,position:"top-center",transitionIn:"fadeIn",transitionOut:"fadeOut",closeOnToastrClick:true})]});}/* harmony default export */ var src_App = (App);
;// CONCATENATED MODULE: ./src/reportWebVitals.ts
var reportWebVitals=function reportWebVitals(onPerfEntry){if(onPerfEntry&&onPerfEntry instanceof Function){__webpack_require__.e(/* import() */ 787).then(__webpack_require__.bind(__webpack_require__, 787)).then(function(_ref){var getCLS=_ref.getCLS,getFID=_ref.getFID,getFCP=_ref.getFCP,getLCP=_ref.getLCP,getTTFB=_ref.getTTFB;getCLS(onPerfEntry);getFID(onPerfEntry);getFCP(onPerfEntry);getLCP(onPerfEntry);getTTFB(onPerfEntry);});}};/* harmony default export */ var src_reportWebVitals = (reportWebVitals);
;// CONCATENATED MODULE: ./src/app/store.ts
var store=configureStore({reducer:{knowl:knowlSlice.reducer,nav:navSlice.reducer,toc:tocSlice.reducer,global:globalSlice.reducer,// For popup notifications
toastr:lib/* reducer */.I6}});
;// CONCATENATED MODULE: ./src/app/router.tsx
/**
 * A version of BrowserRouter that accepts a custom history object.
 * https://github.com/remix-run/react-router/blob/df1f77a2cb95f8884576e9abaa8357a3077326cf/packages/react-router-dom/index.tsx#L135
 */function CustomBrowserRouter(_ref){var children=_ref.children,history=_ref.history;var _React$useState=react.useState({action:history.action,location:history.location}),_React$useState2=slicedToArray_slicedToArray(_React$useState,2),state=_React$useState2[0],setState=_React$useState2[1];react.useLayoutEffect(function(){return history.listen(setState);},[history]);return/*#__PURE__*/(0,jsx_runtime.jsx)(Router,{children:children,location:state.location,navigationType:state.action,navigator:history});}
;// CONCATENATED MODULE: ./src/index.tsx
// Must be called before the app renders.
extractInitInfo();// Various scripts and other tags that shouldn't be changed may
// be in the body, so we need to manually clean up and prepare a spot for the main app.
document.body.innerHTML+="<div id=\"root\"></div>";var elmsToRemove=document.body.querySelectorAll("body > header, body > nav, body > .ptx-page, body > .ptx-page-footer");for(var _i=0,_Array$from=Array.from(elmsToRemove);_i<_Array$from.length;_i++){var elm=_Array$from[_i];try{document.body.removeChild(elm);}catch(e){console.warn("Tried to remove",elm,"but couldn't");}}for(var _i2=0,_Array$from2=Array.from(document.querySelectorAll("link[href*=\"knowls_default.css\"],\n    link[href*=\"pretext.css\"],\n    link[href*=\"pretext_add_on.css\"],\n    link[href*=\"shell_min.css\"],\n    link[href*=\"banner_min.css\"],\n    link[href*=\"navbar_min.css\"],\n    link[href*=\"toc_min.css\"],\n    link[href*=\"colors_blue_red.css\"],\n    link[href*=\"setcolors.css\"],\n    link[href*=\"style_default.css\"]"));_i2<_Array$from2.length;_i2++){var _elm=_Array$from2[_i2];try{document.head.removeChild(_elm);}catch(e){console.warn("Tried to remove",_elm,"but couldn't");}}var renderTarget=document.getElementById("root");react_dom.render(/*#__PURE__*/(0,jsx_runtime.jsx)(react.StrictMode,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(react_redux_es.Provider,{store:store,children:/*#__PURE__*/(0,jsx_runtime.jsx)(CustomBrowserRouter,{history:hooks_history,children:/*#__PURE__*/(0,jsx_runtime.jsx)(src_App,{})})})}),renderTarget);// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
src_reportWebVitals();
}();
/******/ })()
;
//# sourceMappingURL=main.js.map